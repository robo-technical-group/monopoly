// meta={"simUrl":"https://trg-arcade.userpxt.io/v1.12.29/---simulator","cdnUrl":"https://pxt.azureedge.net","version":"0.0.3","target":"arcade","targetVersion":"1.12.29","repo":"robo-technical-group/monopoly"}
// total=2878795 new=13.05% cached=82.50% other=4.45%
(function (ectx) {
'use strict';
const runtime = ectx.runtime;
const oops = ectx.oops;
const doNothing = ectx.doNothing;
const pxsim = ectx.pxsim;
const globals = ectx.globals;
const maybeYield = ectx.maybeYield;
const setupDebugger = ectx.setupDebugger;
const isBreakFrame = ectx.isBreakFrame;
const breakpoint = ectx.breakpoint;
const trace = ectx.trace;
const checkStack = ectx.checkStack;
const leave = ectx.leave;
const checkResumeConsumed = ectx.checkResumeConsumed;
const setupResume = ectx.setupResume;
const setupLambda = ectx.setupLambda;
const checkSubtype = ectx.checkSubtype;
const failedCast = ectx.failedCast;
const buildResume = ectx.buildResume;
const mkVTable = ectx.mkVTable;
const bind = ectx.bind;
const leaveAccessor = ectx.leaveAccessor;
const __this = runtime;
const pxtrt = pxsim.pxtrt;
let yieldSteps = 1;
ectx.setupYield(function() { yieldSteps = 100; })
pxsim.setTitle("Monopoly");
pxsim.setConfigData({
 "37": 160,
 "38": 120
}, {
 "DISPLAY_WIDTH": 37,
 "DISPLAY_HEIGHT": 38
});
pxtrt.mapKeyNames = [
 "",
 "A",
 "AreDoubles",
 "AreRolling",
 "Avatar",
 "B",
 "Count",
 "CreateSprite",
 "CreateSprites",
 "Dice",
 "DrawCenter",
 "DrawHorizontal",
 "DrawLeft",
 "Name",
 "Orientation",
 "Redraw",
 "Roll",
 "SetBorder",
 "Skin",
 "Visible",
 "__draw",
 "__drawCore",
 "__preUpdate",
 "__update",
 "__visible",
 "_action",
 "_ax",
 "_ay",
 "_backColor",
 "_backImage",
 "_col",
 "_connected",
 "_controlledSprites",
 "_currOptScreen",
 "_currScreen",
 "_currSprite",
 "_cursor",
 "_data",
 "_destroyCore",
 "_dt",
 "_factory",
 "_footer",
 "_fx",
 "_fy",
 "_hasHeaders",
 "_headlines",
 "_height",
 "_hitbox",
 "_id",
 "_image",
 "_interval",
 "_isDone",
 "_kind",
 "_kindsOverlappedWith",
 "_lastUpdatedSpriteX",
 "_lastUpdatedSpriteY",
 "_lastX",
 "_lastY",
 "_layer",
 "_layers",
 "_map",
 "_midText",
 "_millis",
 "_movingSprites",
 "_movingSpritesSequential",
 "_next",
 "_nextSprite",
 "_obstacles",
 "_offsetX",
 "_offsetY",
 "_optionSetHasHeaders",
 "_optionSets",
 "_overlappers",
 "_owner",
 "_player",
 "_pressed",
 "_pressedElasped",
 "_prevSprite",
 "_prune",
 "_repeatCount",
 "_row",
 "_scale",
 "_selectedOptions",
 "_selectedOptionsColl",
 "_showNext",
 "_showPrevious",
 "_sprite",
 "_sprites",
 "_staticSprites",
 "_sx",
 "_sy",
 "_tabs",
 "_text",
 "_titles",
 "_update",
 "_vx",
 "_vy",
 "_width",
 "_x",
 "_y",
 "_z",
 "action",
 "activeCard",
 "add",
 "addAllMovingSprites",
 "addScreen",
 "addShape",
 "addSprite",
 "addStaticSprites",
 "alignX",
 "alignY",
 "allSprites",
 "analog",
 "anchor",
 "animations",
 "answerLength",
 "applyTo",
 "areRolling",
 "areaHeight",
 "areaWidth",
 "args",
 "avatar",
 "ax",
 "ay",
 "backImage",
 "background",
 "bank",
 "basicCard",
 "bg",
 "bgColor",
 "blink",
 "borderColor",
 "borderWidth",
 "bottom",
 "buckets",
 "build",
 "buildSelectedOptions",
 "button",
 "buttonEventHandlers",
 "buttons",
 "cachedTileView",
 "cachedVx",
 "cachedVy",
 "calcDimensionalHash",
 "callback",
 "camera",
 "canResolveClipping",
 "card",
 "cardSpacing",
 "cardWidth",
 "cardsPerRow",
 "cardsTop",
 "cellHeight",
 "cellWidth",
 "change",
 "changeInputIndex",
 "changeScreen",
 "charHeight",
 "charWidth",
 "chunkIndex",
 "chunkText",
 "chunks",
 "clear",
 "clearInterior",
 "clearObstacles",
 "collisionHandlers",
 "color",
 "colorBottomBackground",
 "colorCursor",
 "colorInput",
 "colorInputHighlighted",
 "colorInputText",
 "colorPrompt",
 "column",
 "columnCount",
 "columns",
 "commandIndex",
 "commandToArgCount",
 "condition",
 "confirm",
 "confirmButton",
 "confirmPressed",
 "connected",
 "constrain",
 "contains",
 "controlledSprites",
 "controllerConnectionState",
 "controllerId",
 "createBase",
 "createCursor",
 "createMovingSprite",
 "createParticle",
 "createdHandlers",
 "currGroup",
 "currOption",
 "currPlayer",
 "currSpace",
 "currentCommand",
 "cursor",
 "cursorColumn",
 "cursorCount",
 "cursorRow",
 "cursorRowHeight",
 "data",
 "defaultLifespan",
 "defaultRate",
 "delete",
 "deltaTime",
 "deltaTimeMillis",
 "deltaX",
 "deltaY",
 "destroy",
 "destroyHandler",
 "destroySprites",
 "destroyedHandlers",
 "dice",
 "dir",
 "dispose",
 "distance",
 "done",
 "doneText",
 "down",
 "draw",
 "drawBorder",
 "drawBottomBar",
 "drawCursorRow",
 "drawDebug",
 "drawInput",
 "drawInputarea",
 "drawKeyboard",
 "drawOffsetX",
 "drawOffsetY",
 "drawPartial",
 "drawParticle",
 "drawPromptText",
 "drawSay",
 "drawSelection",
 "drawSprite",
 "drawTabs",
 "drawText",
 "drawTextCore",
 "dx",
 "dy",
 "effect",
 "effectSetByUser",
 "eid",
 "elapsedTime",
 "enabled",
 "ensureControlPoint",
 "event",
 "eventContext",
 "factory",
 "fastFill",
 "fastRandom",
 "fg",
 "fgColor",
 "flags",
 "followingSprites",
 "font",
 "fontSize",
 "footer",
 "footer1",
 "footer2",
 "frame",
 "frameCallbacks",
 "frameCount",
 "frameInterval",
 "frameWorker",
 "frames",
 "framesInSample",
 "front",
 "frontImage",
 "fx",
 "fy",
 "galois",
 "gameForeverHandlers",
 "generator",
 "getObstacle",
 "getOrCreateHandlerForEvent",
 "getSelectionForScreen",
 "getText",
 "getTile",
 "getTileImage",
 "getTileIndex",
 "handler",
 "handlerState",
 "handlers",
 "hasNext",
 "hasPrev",
 "hash",
 "head",
 "header",
 "headerFont",
 "headerText",
 "headlines",
 "height",
 "hide",
 "icon",
 "iconImage",
 "id",
 "idleCallbacks",
 "image",
 "img",
 "imgs",
 "infoFont",
 "infoTop",
 "init",
 "innerLeft",
 "innerTop",
 "inputIndex",
 "inputs",
 "insertAABB",
 "insertAtKey",
 "isInFooter",
 "isInJail",
 "isObstacle",
 "isOnWall",
 "isOutOfScreen",
 "isOutsideMap",
 "isPressed",
 "isScaled",
 "isStatic",
 "isUpdated",
 "isValid",
 "isWall",
 "key",
 "kind",
 "lastControlX",
 "lastControlY",
 "lastFrame",
 "lastPerfDump",
 "lastX",
 "lastY",
 "layer",
 "layers",
 "left",
 "leftAnim",
 "leftImage",
 "length",
 "letters",
 "lfsr",
 "lifespan",
 "location",
 "loop",
 "loseEffect",
 "loseMessage",
 "loseSound",
 "loseSoundLooping",
 "map",
 "maxFontHeight",
 "maxLifespan",
 "maxNegativeVelocity",
 "maxOffset",
 "maxSingleStep",
 "maxSpeed",
 "maxStep",
 "maxSubOffset",
 "maxVelocity",
 "melody",
 "mergeAtKey",
 "message",
 "messageSetByUser",
 "millis",
 "minAngle",
 "minLifespan",
 "minSingleStep",
 "minStep",
 "mode",
 "move",
 "moveCursorDown",
 "moveCursorLeft",
 "moveCursorRight",
 "moveCursorUp",
 "moveHorizontal",
 "moveOutOfFooter",
 "moveSprite",
 "moveToFooter",
 "moveVertical",
 "movesSinceLastRotate",
 "multiplier",
 "name",
 "neighbors",
 "next",
 "nextPage",
 "nextTime",
 "nodeInterval",
 "offset",
 "offsetX",
 "offsetY",
 "onButtonEvent",
 "onEvent",
 "onUpdate",
 "once",
 "options",
 "order",
 "orientation",
 "outlineColor",
 "outlineWidth",
 "overlapHandlers",
 "overlapMap",
 "overlaps",
 "overlapsWith",
 "ox",
 "oy",
 "pFlags",
 "padding",
 "parent",
 "particleSources",
 "path",
 "period",
 "physicsEngine",
 "pickRandom",
 "player",
 "playerIndex",
 "position",
 "preferredDelay",
 "pressureLevel",
 "prevPage",
 "prevTimeMillis",
 "previousScene",
 "priority",
 "promptForName",
 "raiseButtonDown",
 "raiseButtonRepeat",
 "raiseButtonUp",
 "randomRange",
 "randomize",
 "readNextCommand",
 "readNextToken",
 "rebuild",
 "recalcSize",
 "refresh",
 "refreshSelections",
 "register",
 "registerFrameCallbacks",
 "registerFrameHandler",
 "registerHandler",
 "registerHandlers",
 "registerObstacle",
 "release",
 "remove",
 "removeSprite",
 "render",
 "renderable",
 "repeatDelay",
 "repeatInterval",
 "repeatX",
 "repeatY",
 "reset",
 "resetHitbox",
 "resetSprites",
 "resize",
 "resizeBuckets",
 "result",
 "right",
 "rightAnim",
 "rightImage",
 "rotate",
 "row",
 "rowCount",
 "rowHeight",
 "rows",
 "run",
 "runButtonEvents",
 "runCallbacks",
 "runCurrentCommand",
 "runningCallbacks",
 "s",
 "saveSelections",
 "sayEndTime",
 "sayRenderer",
 "scale",
 "scene",
 "sceneDefaultRate",
 "scoringType",
 "scoringTypeSetByUser",
 "screenEdgeCollisions",
 "scrollOffset",
 "scrollRow",
 "scrollTarget",
 "seed",
 "select",
 "selectedAvatar",
 "selectedCard",
 "selection",
 "setAcceleration",
 "setAnchor",
 "setBase",
 "setBorder",
 "setDirection",
 "setFactory",
 "setFlag",
 "setFont",
 "setHitbox",
 "setImage",
 "setKind",
 "setLocationChange",
 "setMaxFontHeight",
 "setOffset",
 "setPosition",
 "setPressed",
 "setRate",
 "setRelativeToCamera",
 "setSelection",
 "setSelectionForScreen",
 "setSpeed",
 "setStartLocation",
 "setState",
 "setStopLocation",
 "setSubtext",
 "setText",
 "setTheme",
 "shakeAmplitude",
 "shakeDuration",
 "shakeStartTime",
 "shiftButton",
 "shouldBeVisible",
 "show",
 "showScrollingSprite",
 "showSprite",
 "skin",
 "soundSetByUser",
 "source",
 "sourceFactory",
 "sources",
 "spacing",
 "speed",
 "spread",
 "sprite",
 "spriteCollisions",
 "spriteNextId",
 "sprites",
 "spritesByKind",
 "src",
 "start",
 "startRoll",
 "startX",
 "startY",
 "state",
 "statsSprite",
 "stopX",
 "stopY",
 "stopped",
 "strIndex",
 "subtext",
 "sx",
 "sy",
 "system",
 "text",
 "textAreaHeight",
 "textAreaWidth",
 "textColor",
 "theme",
 "tileIndex",
 "tileMap",
 "tileOverlapHandlers",
 "tileSet",
 "tilemapCollisions",
 "tilemapOverlaps",
 "tileset",
 "timeInSample",
 "timeOut",
 "timer",
 "times",
 "titles",
 "toString",
 "top",
 "turnsInJail",
 "unit",
 "unregister",
 "up",
 "update",
 "updateButtons",
 "updateCard",
 "updateCursor",
 "updateFont",
 "updateIfInvalid",
 "updateKeyboard",
 "updateParticle",
 "updateScrollTarget",
 "updateSelectedInput",
 "updateSprites",
 "upper",
 "user",
 "value",
 "values",
 "vid",
 "vx",
 "vy",
 "wallCollisionHandlers",
 "width",
 "winEffect",
 "winMessage",
 "winMessageMultiplayer",
 "winSound",
 "winSoundLooping",
 "x",
 "xOffset",
 "xRange",
 "xStep",
 "y",
 "yOffset",
 "yRange",
 "yStep",
 "z"
];
__this.setupPerfCounters([]);
const pxsim_Array__getAt = pxsim.Array_.getAt;
const pxsim_Array__length = pxsim.Array_.length;
const pxsim_Array__mk = pxsim.Array_.mk;
const pxsim_Array__push = pxsim.Array_.push;
const pxsim_Boolean__bang = pxsim.Boolean_.bang;
const pxsim_String__concat = pxsim.String_.concat;
const pxsim_String__stringConv = pxsim.String_.stringConv;
const pxsim_numops_toBool = pxsim.numops.toBool;
const pxsim_numops_toBoolDecr = pxsim.numops.toBoolDecr;
const pxsim_pxtcore_mkAction = pxsim.pxtcore.mkAction;
const pxsim_pxtcore_mkClassInstance = pxsim.pxtcore.mkClassInstance;
const pxsim_pxtrt_ldlocRef = pxsim.pxtrt.ldlocRef;
const pxsim_pxtrt_mapGetByString = pxsim.pxtrt.mapGetByString;
const pxsim_pxtrt_stclo = pxsim.pxtrt.stclo;
const pxsim_pxtrt_stlocRef = pxsim.pxtrt.stlocRef;
const pxsim_Boolean_ = pxsim.Boolean_;
const pxsim_pxtcore = pxsim.pxtcore;
const pxsim_String_ = pxsim.String_;
const pxsim_ImageMethods = pxsim.ImageMethods;
const pxsim_Array_ = pxsim.Array_;
const pxsim_pxtrt = pxsim.pxtrt;
const pxsim_numops = pxsim.numops;


function _main___P176059(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    globals._intervals___4702 = (undefined);
    globals._pollEventQueue___4711 = (undefined);
    globals.minPriority___375 = (1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, listeners_inline__P4714);
    globals.listeners___4715 = (s.tmp_0);
    globals.globalVolume___4768 = (null);
    globals.playToneID___4775 = (0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C1626_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P1629_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "~15 e3:3 r:1 d#:3 r:1 d:4 r:1 c#:8";
    s.callLocIdx = 0; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    globals.wawawawaa___1647 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C1626_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P1629_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "g4:1 c5 e g:2 e:1 g:3";
    s.callLocIdx = 1; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    globals.powerUp___1650 = (s.tmp_0);
    globals.brightness___1951 = (100);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 8);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex10338);
    globals.font8___1975 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex10340);
    globals.font12___1976 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex18920);
    globals.font5___1980 = (s.tmp_0);
    globals.__updated___4882 = (false);
    r0 = pxsim.control.runInParallel(control___screen_inline__P4885);
    r0 = pxsim_pxtcore.setPalette(_hex4896);
    s.tmp_1 = _screen_internal_getScreenWidth__P2036_mk(s);
    s.tmp_1.arg0 = 160;
    s.callLocIdx = 4; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = _screen_internal_getScreenHeight__P2037_mk(s);
    s.tmp_3.arg0 = 120;
    s.callLocIdx = 5; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.image.create(s.tmp_0, s.tmp_2);
    globals.screen___2032 = (r0);
    s.tmp_0 = control___screen_setupUpdate__P1994_mk(s);
    s.tmp_0.arg0 = _screen_internal_inline__P4905;
    s.callLocIdx = 6; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    globals.control_EventContext_onStats___398 = (_screen_internal_inline__P4910);
    globals.RUN_KEY___4915 = ("#run");
    globals.SCOPE_KEY___4916 = ("#scope");
    s.tmp_0 = settings_initScopes__P4927_mk(s);
    s.callLocIdx = 7; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2189_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2195_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 5;
    s.tmp_1.arg2 = 4;
    s.callLocIdx = 8; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    globals.A___2113 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2189_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2195_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 6;
    s.tmp_1.arg2 = 5;
    s.callLocIdx = 9; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    globals.B___2114 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2189_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2195_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1;
    s.tmp_1.arg2 = 47;
    s.callLocIdx = 10; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.left___2115 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2189_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2195_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = 49;
    s.callLocIdx = 11; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    globals.up___2116 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2189_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2195_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = 48;
    s.callLocIdx = 12; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    globals.right___2117 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2189_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2195_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 4;
    s.tmp_1.arg2 = 50;
    s.callLocIdx = 13; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    globals.down___2118 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2189_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2195_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 7;
    s.tmp_1.arg2 = 51;
    s.callLocIdx = 14; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    globals.menu___2119 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C2134_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Controller_constructor__P2138_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 15; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    globals.player2___2120 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C2134_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Controller_constructor__P2138_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 16; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    globals.player3___2121 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C2134_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Controller_constructor__P2138_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 4;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 17; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    globals.player4___2122 = (s.tmp_0);
    s.tmp_0 = controller__player1__P2128_mk(s);
    s.callLocIdx = 18; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    globals.player1___2123 = (r0);
    s.tmp_0 = game_addScenePopHandler__P3019_mk(s);
    s.tmp_0.arg0 = controller_inline__P4955;
    s.callLocIdx = 23; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.tmp_0 = game_addScenePushHandler__P3017_mk(s);
    s.tmp_0.arg0 = controller_inline__P4995;
    s.callLocIdx = 25; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(controller_AnyButton__C5019_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2195_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = -1;
    s.callLocIdx = 26; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    globals.anyButton___2170 = (s.tmp_0);
    globals._userEventsEnabled___5033 = (true);
    globals.defaultRepeatDelay___5035 = (500);
    globals.defaultRepeatInterval___5037 = (30);
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 27; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    globals.Player___2479 = (r0);
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 28; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    globals.Food___2481 = (r0);
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 29; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    globals.Enemy___2482 = (r0);
    s.tmp_0 = Fx8__P149_mk(s);
    s.tmp_0.arg0 = 0.1;
    s.callLocIdx = 30; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    globals.MIN_MOVE_GAP___2520 = (r0);
    globals.infoState___5102 = (undefined);
    s.tmp_0 = game_addScenePushHandler__P3017_mk(s);
    s.tmp_0.arg0 = info_inline__P5106;
    s.callLocIdx = 31; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.tmp_0 = game_addScenePopHandler__P3019_mk(s);
    s.tmp_0.arg0 = info_inline__P5121;
    s.callLocIdx = 35; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    globals.scene_Scene_initializers___2864 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5211);
    globals.img_trophy_sm___5212 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5214);
    globals.img_trophy_lg___5215 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5217);
    globals.img_sleepy_sim___5218 = (r0);
    globals.debug___2966 = (false);
    globals.stats___2967 = (false);
    globals.gameOverConfig___2997 = (gameOverConfig_inline__P5230);
    globals.font___5251 = (globals.font8___1975);
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 8);
    globals.CONTENT_WIDTH___5269 = (r0);
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 8);
    globals.CONTENT_HEIGHT___5272 = (r0);
    r0 = (globals.CONTENT_WIDTH___5269 / 12);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.CELL_WIDTH___5278 = (r0);
    globals.CELL_HEIGHT___5280 = (globals.CELL_WIDTH___5278);
    s.tmp_2 = r0 = globals.CELL_WIDTH___5278;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.font___5251;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 37; s.pc = 27; return s.tmp_4; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.LETTER_OFFSET_X___5284 = (r0);
    s.tmp_2 = r0 = globals.CELL_HEIGHT___5280;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = globals.font___5251;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 38; s.pc = 28; return s.tmp_4; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.LETTER_OFFSET_Y___5288 = (r0);
    r0 = (globals.CELL_WIDTH___5278 / 2);
    s.tmp_1 = r0;
    r0 = (4 + s.tmp_1);
    s.tmp_0 = r0;
    s.tmp_5 = r0 = globals.CONTENT_WIDTH___5269;
    r0 = (globals.CELL_WIDTH___5278 * 12);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    globals.ROW_LEFT___5296 = (r0);
    r0 = (8 + globals.CELL_HEIGHT___5280);
    globals.BOTTOM_BAR_HEIGHT___5304 = (r0);
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - globals.BOTTOM_BAR_HEIGHT___5304);
    globals.BOTTOM_BAR_TOP___5307 = (r0);
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = globals.font___5251;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 39; s.pc = 29; return s.tmp_2; }
    }
  case 29:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 3);
    s.tmp_0 = r0;
    r0 = (8 + s.tmp_0);
    globals.BOTTOM_BAR_BUTTON_WIDTH___5314 = (r0);
    s.tmp_1 = r0 = globals.BOTTOM_BAR_HEIGHT___5304;
    s.tmp_3 = if_charHeight_1_mk(s);
    s.tmp_3.arg0 = globals.font___5251;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 40; s.pc = 30; return s.tmp_3; }
    }
  case 30:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    globals.BOTTOM_BAR_TEXT_Y___5317 = (r0);
    s.tmp_1 = r0 = globals.BOTTOM_BAR_BUTTON_WIDTH___5314;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.font___5251;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 41; s.pc = 31; return s.tmp_4; }
    }
  case 31:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    globals.BOTTOM_BAR_SHIFT_X___5320 = (r0);
    s.tmp_1 = r0 = globals.BOTTOM_BAR_BUTTON_WIDTH___5314;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.font___5251;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 42; s.pc = 32; return s.tmp_4; }
    }
  case 32:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    globals.BOTTOM_BAR_CONFIRM_X___5323 = (r0);
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - globals.BOTTOM_BAR_BUTTON_WIDTH___5314);
    globals.CONFIRM_BUTTON_LEFT___5326 = (r0);
    r0 = (3 * globals.CELL_HEIGHT___5280);
    globals.ALPHABET_HEIGHT___5330 = (r0);
    r0 = (4 + globals.CONTENT_HEIGHT___5272);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - globals.ALPHABET_HEIGHT___5330);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - globals.BOTTOM_BAR_HEIGHT___5304);
    globals.ALPHABET_TOP___5336 = (r0);
    r0 = (2 * globals.CELL_HEIGHT___5280);
    globals.INPUT_HEIGHT___5342 = (r0);
    r0 = (globals.ALPHABET_TOP___5336 - globals.INPUT_HEIGHT___5342);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 10);
    globals.INPUT_TOP___5346 = (r0);
    r0 = (globals.INPUT_TOP___5346 - 4);
    globals.PROMPT_HEIGHT___5349 = (r0);
    globals.lowerShiftText___5350 = ("ABC");
    globals.upperShiftText___5351 = ("abc");
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, " ");
    r0 = pxsim_Array__push(s.tmp_0, ",");
    r0 = pxsim_Array__push(s.tmp_0, ".");
    r0 = pxsim_Array__push(s.tmp_0, "?");
    r0 = pxsim_Array__push(s.tmp_0, "!");
    r0 = pxsim_Array__push(s.tmp_0, ":");
    r0 = pxsim_Array__push(s.tmp_0, ";");
    r0 = pxsim_Array__push(s.tmp_0, "\"");
    r0 = pxsim_Array__push(s.tmp_0, "(");
    r0 = pxsim_Array__push(s.tmp_0, ")");
    globals.digitsUpper___5352 = (s.tmp_0);
    globals.confirmText___5353 = ("OK");
    s.tmp_0 = scene_systemMenu_initVolume__P5504_mk(s);
    s.callLocIdx = 43; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_initScreen__P5505_mk(s);
    s.callLocIdx = 44; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.scene_Scene_initializers___2864, scene_systemMenu_register__P3105);
    r0 = pxsim.image.ofBuffer(_hex5512);
    globals.CARD_NORMAL___3110 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5514);
    globals.CARD_SELECTED___3111 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5516);
    globals.CARD_ACTIVE___3112 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5518);
    globals.VOLUME_UP_ICON___3113 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5520);
    globals.BRIGHTNESS_DOWN_ICON___3114 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5522);
    globals.CLOSE_MENU_ICON___3115 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5524);
    globals.VOLUME_DOWN_ICON___3116 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5526);
    globals.SLEEP_ICON___3117 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5528);
    globals.CONSOLE_ICON___3118 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5530);
    globals.BRIGHTNESS_UP_ICON___3119 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5532);
    globals.STATS_ICON___3120 = (r0);
    globals.consoleColor___5535 = (1);
    globals.tabSize___5538 = (8);
    globals.consoleFont___5544 = (globals.font5___1980);
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_2 = r0;
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___5544;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 45; s.pc = 35; return s.tmp_5; }
    }
  case 35:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 / s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.floor(s.tmp_1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    globals.consoleLines___5549 = (r0);
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 8);
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___5544;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 46; s.pc = 36; return s.tmp_4; }
    }
  case 36:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 / s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.consoleColumns___5559 = (r0);
    s.tmp_0 = console_addListener__P383_mk(s);
    s.tmp_0.arg0 = game_consoleOverlay_listener__P5571;
    s.callLocIdx = 47; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = MAX_SOURCES_inline__P20691;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 49; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    globals.MAX_SOURCES___5573 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(particles_SprayFactory__C3190_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_SprayFactory_constructor__P3191_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 20;
    s.tmp_1.arg2 = 0;
    s.tmp_1.arg3 = 60;
    s.callLocIdx = 50; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    globals.defaultFactory___3170 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C3058_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P3060_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 51; s.pc = 40; return s.tmp_1;
  case 40:
    r0 = s.retval;
    globals.galois___5593 = (s.tmp_0);
    globals.angleSlice___5601 = (0.06283185307179587);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ScreenEffect__C3265_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ScreenEffect_constructor__P3266_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 10;
    s.tmp_1.arg2 = 40;
    s.tmp_1.arg3 = 4000;
    s.tmp_1.arg4 = confetti_inline__P20445;
    s.callLocIdx = 57; s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    globals.confetti___3273 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C3289_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P3290_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 100;
    s.tmp_1.arg2 = dissolve_inline__P14553;
    s.callLocIdx = 63; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    globals.dissolve___3294 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C3289_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P3290_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 125;
    s.tmp_1.arg2 = melt_inline__P20391;
    s.callLocIdx = 66; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    globals.melt___3295 = (s.tmp_0);
    globals.stateNamespace___5657 = ("__animation");
    r0 = pxsim.image.ofBuffer(_hex5829);
    globals.heroWalkFront1___3589 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5837);
    globals.heroWalkBack1___3593 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5877);
    globals.heroWalkSideLeft1___3613 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5879);
    globals.heroWalkSideLeft2___3614 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5881);
    globals.heroWalkSideLeft3___3615 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5883);
    globals.heroWalkSideLeft4___3616 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5885);
    globals.heroWalkSideRight4___3617 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5887);
    globals.heroWalkSideRight3___3618 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5889);
    globals.heroWalkSideRight2___3619 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5891);
    globals.heroWalkSideRight1___3620 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5915);
    globals.princess2Front___3632 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5923);
    globals.princess2Back___3636 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5931);
    globals.princess2Left1___3640 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5933);
    globals.princess2Left2___3641 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5935);
    globals.princess2Right1___3642 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5937);
    globals.princess2Right2___3643 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6019);
    globals.angelFish0___3686 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6021);
    globals.angelFish1___3687 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6023);
    globals.angelFish2___3688 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6025);
    globals.angelFish3___3689 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6041);
    globals.cat0___3697 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6043);
    globals.cat1___3698 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6045);
    globals.cat2___3699 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6121);
    globals.dog0___3737 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6123);
    globals.dog1___3738 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6125);
    globals.dog2___3739 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6189);
    globals.forestMonkey0___3771 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6191);
    globals.forestMonkey1___3772 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6193);
    globals.forestMonkey2___3773 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6195);
    globals.forestMonkey3___3774 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6197);
    globals.forestMonkey4___3775 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6843);
    globals.carRedLeft___4106 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6845);
    globals.carRedRight___4107 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6847);
    globals.carRedBack___4108 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6849);
    globals.carRedFront___4109 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6851);
    globals.carBlueLeft___4110 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6853);
    globals.carBlueRight___4111 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6855);
    globals.carBlueBack___4112 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6857);
    globals.carBlueFront___4113 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6867);
    globals.car20___4118 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6869);
    globals.car21___4119 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6871);
    globals.car22___4120 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6873);
    globals.car23___4121 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6875);
    globals.car30___4122 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6877);
    globals.car31___4123 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6879);
    globals.car32___4124 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6881);
    globals.car33___4125 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6883);
    globals.plane0___4126 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6885);
    globals.plane1___4127 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6887);
    globals.plane2___4128 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6889);
    globals.plane3___4129 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6891);
    globals.plane4___4130 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6893);
    globals.plane5___4131 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6991);
    globals.kaijuBabyWalk0___4184 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6993);
    globals.kaijuBabyWalk1___4185 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6995);
    globals.kaijuBabyWalk2___4186 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6997);
    globals.kaijuBabyWalk3___4187 = (r0);
    r0 = pxsim.image.ofBuffer(_hex6999);
    globals.kaijuBabyWalk4___4188 = (r0);
    r0 = pxsim.image.ofBuffer(_hex7001);
    globals.kaijuBabyWalk5___4189 = (r0);
    s.tmp_0 = game_setWaitAnyButton__P2999_mk(s);
    s.tmp_0.arg0 = controller_pauseUntilAnyButtonIsPressed__P2205;
    s.callLocIdx = 67; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.tmp_0 = game_eventContext__P3001_mk(s);
    s.callLocIdx = 68; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 69; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    globals.Text___4331 = (r0);
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 70; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    globals.InfoScreens___4346 = (r0);
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 71; s.pc = 48; return s.tmp_0;
  case 48:
    r0 = s.retval;
    globals.Moving___4347 = (r0);
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 72; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
    globals.Static___4348 = (r0);
    globals.DEFAULT_TEXT_DONE___4377 = ("Done");
    globals.TEXT_NEXT___4380 = ("Next >");
    globals.TEXT_PREVIOUS___4381 = ("< Prev");
    globals.font___7327 = (globals.font8___1975);
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 8);
    globals.CONTENT_WIDTH___7345 = (r0);
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 8);
    globals.CONTENT_HEIGHT___7348 = (r0);
    r0 = (globals.CONTENT_WIDTH___7345 / 12);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.CELL_WIDTH___7354 = (r0);
    globals.CELL_HEIGHT___7356 = (globals.CELL_WIDTH___7354);
    s.tmp_2 = r0 = globals.CELL_WIDTH___7354;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.font___7327;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 73; s.pc = 50; return s.tmp_4; }
    }
  case 50:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.LETTER_OFFSET_X___7360 = (r0);
    s.tmp_2 = r0 = globals.CELL_HEIGHT___7356;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = globals.font___7327;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 74; s.pc = 51; return s.tmp_4; }
    }
  case 51:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.LETTER_OFFSET_Y___7364 = (r0);
    r0 = (globals.CELL_WIDTH___7354 / 2);
    s.tmp_1 = r0;
    r0 = (4 + s.tmp_1);
    s.tmp_0 = r0;
    s.tmp_5 = r0 = globals.CONTENT_WIDTH___7345;
    r0 = (globals.CELL_WIDTH___7354 * 12);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    globals.ROW_LEFT___7372 = (r0);
    r0 = (8 + globals.CELL_HEIGHT___7356);
    globals.BOTTOM_BAR_HEIGHT___7380 = (r0);
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - globals.BOTTOM_BAR_HEIGHT___7380);
    globals.BOTTOM_BAR_TOP___7383 = (r0);
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = globals.font___7327;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 75; s.pc = 52; return s.tmp_2; }
    }
  case 52:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 3);
    s.tmp_0 = r0;
    r0 = (8 + s.tmp_0);
    globals.BOTTOM_BAR_BUTTON_WIDTH___7390 = (r0);
    s.tmp_1 = r0 = globals.BOTTOM_BAR_HEIGHT___7380;
    s.tmp_3 = if_charHeight_1_mk(s);
    s.tmp_3.arg0 = globals.font___7327;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 76; s.pc = 53; return s.tmp_3; }
    }
  case 53:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    globals.BOTTOM_BAR_TEXT_Y___7393 = (r0);
    s.tmp_1 = r0 = globals.BOTTOM_BAR_BUTTON_WIDTH___7390;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.font___7327;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 77; s.pc = 54; return s.tmp_4; }
    }
  case 54:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    globals.BOTTOM_BAR_SHIFT_X___7396 = (r0);
    s.tmp_1 = r0 = globals.BOTTOM_BAR_BUTTON_WIDTH___7390;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.font___7327;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 78; s.pc = 55; return s.tmp_4; }
    }
  case 55:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    globals.BOTTOM_BAR_CONFIRM_X___7399 = (r0);
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - globals.BOTTOM_BAR_BUTTON_WIDTH___7390);
    globals.CONFIRM_BUTTON_LEFT___7402 = (r0);
    r0 = (3 * globals.CELL_HEIGHT___7356);
    globals.ALPHABET_HEIGHT___7406 = (r0);
    r0 = (4 + globals.CONTENT_HEIGHT___7348);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - globals.ALPHABET_HEIGHT___7406);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - globals.BOTTOM_BAR_HEIGHT___7380);
    globals.ALPHABET_TOP___7412 = (r0);
    r0 = (2 * globals.CELL_HEIGHT___7356);
    globals.INPUT_HEIGHT___7418 = (r0);
    r0 = (globals.ALPHABET_TOP___7412 - globals.INPUT_HEIGHT___7418);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 10);
    globals.INPUT_TOP___7422 = (r0);
    r0 = (globals.INPUT_TOP___7422 - 4);
    globals.PROMPT_HEIGHT___7425 = (r0);
    globals.lowerShiftText___7426 = ("ABC");
    globals.upperShiftText___7427 = ("abc");
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, " ");
    r0 = pxsim_Array__push(s.tmp_0, ",");
    r0 = pxsim_Array__push(s.tmp_0, ".");
    r0 = pxsim_Array__push(s.tmp_0, "?");
    r0 = pxsim_Array__push(s.tmp_0, "!");
    r0 = pxsim_Array__push(s.tmp_0, ":");
    r0 = pxsim_Array__push(s.tmp_0, ";");
    r0 = pxsim_Array__push(s.tmp_0, "\"");
    r0 = pxsim_Array__push(s.tmp_0, "(");
    r0 = pxsim_Array__push(s.tmp_0, ")");
    globals.digitsUpper___7428 = (s.tmp_0);
    globals.confirmText___7429 = ("OK");
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, "Monopoly is a registered");
    r0 = pxsim_Array__push(s.tmp_0, "trademark of Hasbro");
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_0);
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, "MakeCode Arcade Port");
    r0 = pxsim_Array__push(s.tmp_2, "(C) 2023");
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = pxsim_Array__mk();
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_3, "(C) 2023");
    r0 = pxsim_Array__push(s.tmp_3, "Robo Technical Group");
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_3);
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_4, "Programmed in");
    r0 = pxsim_Array__push(s.tmp_4, "MakeCode Arcade");
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_4);
    r0 = pxsim_Array__mk();
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_5, "by");
    r0 = pxsim_Array__push(s.tmp_5, "AlexK");
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_5);
    globals.TEXT_HEADLINES___4563 = (s.tmp_1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, "Monopoly");
    globals.TEXT_TITLES___4564 = (s.tmp_0);
    globals.splashScreen___4565 = (null);
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player1___2123;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137708;
    s.callLocIdx = 132; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player1___2123;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137714;
    s.callLocIdx = 134; s.pc = 57; return s.tmp_0;
  case 57:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player1___2123;
    s.tmp_0.arg1 = 2;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137720;
    s.callLocIdx = 136; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player1___2123;
    s.tmp_0.arg1 = 4;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137726;
    s.callLocIdx = 138; s.pc = 59; return s.tmp_0;
  case 59:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player1___2123;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137732;
    s.callLocIdx = 140; s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player1___2123;
    s.tmp_0.arg1 = 3;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137738;
    s.callLocIdx = 142; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player2___2120;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137744;
    s.callLocIdx = 144; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player2___2120;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137750;
    s.callLocIdx = 146; s.pc = 63; return s.tmp_0;
  case 63:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player2___2120;
    s.tmp_0.arg1 = 2;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137756;
    s.callLocIdx = 148; s.pc = 64; return s.tmp_0;
  case 64:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player2___2120;
    s.tmp_0.arg1 = 4;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137762;
    s.callLocIdx = 150; s.pc = 65; return s.tmp_0;
  case 65:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player2___2120;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137768;
    s.callLocIdx = 152; s.pc = 66; return s.tmp_0;
  case 66:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player2___2120;
    s.tmp_0.arg1 = 3;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137774;
    s.callLocIdx = 154; s.pc = 67; return s.tmp_0;
  case 67:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player3___2121;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137780;
    s.callLocIdx = 156; s.pc = 68; return s.tmp_0;
  case 68:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player3___2121;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137786;
    s.callLocIdx = 158; s.pc = 69; return s.tmp_0;
  case 69:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player3___2121;
    s.tmp_0.arg1 = 2;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137792;
    s.callLocIdx = 160; s.pc = 70; return s.tmp_0;
  case 70:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player3___2121;
    s.tmp_0.arg1 = 4;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137798;
    s.callLocIdx = 162; s.pc = 71; return s.tmp_0;
  case 71:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player3___2121;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137804;
    s.callLocIdx = 164; s.pc = 72; return s.tmp_0;
  case 72:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player3___2121;
    s.tmp_0.arg1 = 3;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137810;
    s.callLocIdx = 166; s.pc = 73; return s.tmp_0;
  case 73:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player4___2122;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137816;
    s.callLocIdx = 168; s.pc = 74; return s.tmp_0;
  case 74:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player4___2122;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137822;
    s.callLocIdx = 170; s.pc = 75; return s.tmp_0;
  case 75:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player4___2122;
    s.tmp_0.arg1 = 2;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137828;
    s.callLocIdx = 172; s.pc = 76; return s.tmp_0;
  case 76:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player4___2122;
    s.tmp_0.arg1 = 4;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137834;
    s.callLocIdx = 174; s.pc = 77; return s.tmp_0;
  case 77:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player4___2122;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137840;
    s.callLocIdx = 176; s.pc = 78; return s.tmp_0;
  case 78:
    r0 = s.retval;
    s.tmp_0 = controller_Controller_onButtonEvent__P2153_mk(s);
    s.tmp_0.arg0 = globals.player4___2122;
    s.tmp_0.arg1 = 3;
    s.tmp_0.arg2 = 2049;
    s.tmp_0.arg3 = inline__P137846;
    s.callLocIdx = 178; s.pc = 79; return s.tmp_0;
  case 79:
    r0 = s.retval;
    s.tmp_0 = helpers__registerFactory__P3331_mk(s);
    s.tmp_0.arg0 = "image";
    s.tmp_0.arg1 = myImages_inline__P7961;
    s.callLocIdx = 180; s.pc = 80; return s.tmp_0;
  case 80:
    r0 = s.retval;
    s.tmp_0 = helpers__registerFactory__P3331_mk(s);
    s.tmp_0.arg0 = "animation";
    s.tmp_0.arg1 = myImages_inline__P7970;
    s.callLocIdx = 182; s.pc = 81; return s.tmp_0;
  case 81:
    r0 = s.retval;
    s.tmp_0 = helpers__registerFactory__P3331_mk(s);
    s.tmp_0.arg0 = "song";
    s.tmp_0.arg1 = myImages_inline__P8016;
    s.callLocIdx = 184; s.pc = 82; return s.tmp_0;
  case 82:
    r0 = s.retval;
    globals.TEXT_DONE___158128 = ("Start game!");
    globals.TEXT_HARDWARE_CONTROLLER___158130 = ("You must use a shared controller when playing this game on hardware.");
    globals.TEXT_ONE_PLAYER___158132 = ("This game does not have AI players yet. A one-player game will never end.");
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, "Game Options");
    globals.TEXT_SETTINGS_HEADLINES___158134 = (s.tmp_0);
    globals.TEXT_SETTINGS_PLAYERS_TAB___158136 = ("Players");
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, "1 player");
    r0 = pxsim_Array__push(s.tmp_0, "2 players");
    r0 = pxsim_Array__push(s.tmp_0, "3 players");
    r0 = pxsim_Array__push(s.tmp_0, "4 players");
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_0);
    globals.TEXT_SETTINGS_PLAYERS___158138 = (s.tmp_1);
    globals.TEXT_SETTINGS_MULTIPLAYER_TAB___158141 = ("Multiplayer");
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, "Shared controller");
    r0 = pxsim_Array__push(s.tmp_0, "Online/Multiple controllers");
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_0);
    globals.TEXT_SETTINGS_MULTIPLAYER___158143 = (s.tmp_1);
    globals.settingsScreens___158123 = (null);
    globals.controllers___158150 = (1);
    globals.gameMode___158120 = (2);
    globals.numPlayers___158155 = (2);
    r0 = pxsim_Array__mk();
    globals.players___158156 = (r0);
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 206; s.pc = 83; return s.tmp_0;
  case 83:
    r0 = s.retval;
    globals.Avatar___149752 = (r0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "name", "Castle warrior");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "frontImage", globals.heroWalkFront1___3589);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "backImage", globals.heroWalkBack1___3593);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "leftImage", globals.heroWalkSideLeft1___3613);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "rightImage", globals.heroWalkSideRight1___3620);
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_1, globals.heroWalkSideLeft1___3613);
    r0 = pxsim_Array__push(s.tmp_1, globals.heroWalkSideLeft2___3614);
    r0 = pxsim_Array__push(s.tmp_1, globals.heroWalkSideLeft3___3615);
    r0 = pxsim_Array__push(s.tmp_1, globals.heroWalkSideLeft4___3616);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "leftAnim", s.tmp_1);
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, globals.heroWalkSideRight1___3620);
    r0 = pxsim_Array__push(s.tmp_2, globals.heroWalkSideRight2___3619);
    r0 = pxsim_Array__push(s.tmp_2, globals.heroWalkSideRight3___3618);
    r0 = pxsim_Array__push(s.tmp_2, globals.heroWalkSideRight4___3617);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "rightAnim", s.tmp_2);
    r0 = pxsim_Array__mk();
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "name", "Castle princess");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "frontImage", globals.princess2Front___3632);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "backImage", globals.princess2Back___3636);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "leftImage", globals.princess2Left1___3640);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "rightImage", globals.princess2Right1___3642);
    r0 = pxsim_Array__mk();
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_5, globals.princess2Left1___3640);
    r0 = pxsim_Array__push(s.tmp_5, globals.princess2Left2___3641);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "leftAnim", s.tmp_5);
    r0 = pxsim_Array__mk();
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, globals.princess2Right1___3642);
    r0 = pxsim_Array__push(s.tmp_6, globals.princess2Right2___3643);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "rightAnim", s.tmp_6);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_4);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_7 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_7, "name", "Angel fish");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_7, "frontImage", globals.angelFish0___3686);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_7, "backImage", globals.angelFish0___3686);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_7, "leftImage", globals.angelFish0___3686);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_7, "rightImage", null);
    r0 = pxsim_Array__mk();
    s.tmp_8 = r0;
    r0 = pxsim_Array__push(s.tmp_8, globals.angelFish0___3686);
    r0 = pxsim_Array__push(s.tmp_8, globals.angelFish1___3687);
    r0 = pxsim_Array__push(s.tmp_8, globals.angelFish2___3688);
    r0 = pxsim_Array__push(s.tmp_8, globals.angelFish3___3689);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_7, "leftAnim", s.tmp_8);
    r0 = pxsim_Array__mk();
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_7, "rightAnim", s.tmp_9);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_7);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_10 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_10, "name", "Cat");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_10, "frontImage", globals.cat0___3697);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_10, "backImage", globals.cat0___3697);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_10, "leftImage", globals.cat0___3697);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_10, "rightImage", null);
    r0 = pxsim_Array__mk();
    s.tmp_11 = r0;
    r0 = pxsim_Array__push(s.tmp_11, globals.cat0___3697);
    r0 = pxsim_Array__push(s.tmp_11, globals.cat1___3698);
    r0 = pxsim_Array__push(s.tmp_11, globals.cat2___3699);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_10, "leftAnim", s.tmp_11);
    r0 = pxsim_Array__mk();
    s.tmp_12 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_10, "rightAnim", s.tmp_12);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_10);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_13 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_13, "name", "Dog");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_13, "frontImage", globals.dog0___3737);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_13, "backImage", globals.dog0___3737);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_13, "leftImage", globals.dog0___3737);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_13, "rightImage", null);
    r0 = pxsim_Array__mk();
    s.tmp_14 = r0;
    r0 = pxsim_Array__push(s.tmp_14, globals.dog0___3737);
    r0 = pxsim_Array__push(s.tmp_14, globals.dog1___3738);
    r0 = pxsim_Array__push(s.tmp_14, globals.dog2___3739);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_13, "leftAnim", s.tmp_14);
    r0 = pxsim_Array__mk();
    s.tmp_15 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_13, "rightAnim", s.tmp_15);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_13);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_16 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_16, "name", "Forest monkey");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_16, "frontImage", globals.forestMonkey0___3771);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_16, "backImage", globals.forestMonkey0___3771);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_16, "leftImage", globals.forestMonkey0___3771);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_16, "rightImage", null);
    r0 = pxsim_Array__mk();
    s.tmp_17 = r0;
    r0 = pxsim_Array__push(s.tmp_17, globals.forestMonkey0___3771);
    r0 = pxsim_Array__push(s.tmp_17, globals.forestMonkey1___3772);
    r0 = pxsim_Array__push(s.tmp_17, globals.forestMonkey2___3773);
    r0 = pxsim_Array__push(s.tmp_17, globals.forestMonkey3___3774);
    r0 = pxsim_Array__push(s.tmp_17, globals.forestMonkey4___3775);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_16, "leftAnim", s.tmp_17);
    r0 = pxsim_Array__mk();
    s.tmp_18 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_16, "rightAnim", s.tmp_18);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_16);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_19 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_19, "name", "Blue car");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_19, "frontImage", globals.carBlueFront___4113);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_19, "backImage", globals.carBlueBack___4112);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_19, "leftImage", globals.carBlueLeft___4110);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_19, "rightImage", globals.carBlueRight___4111);
    r0 = pxsim_Array__mk();
    s.tmp_20 = r0;
    r0 = pxsim_Array__push(s.tmp_20, globals.car20___4118);
    r0 = pxsim_Array__push(s.tmp_20, globals.car21___4119);
    r0 = pxsim_Array__push(s.tmp_20, globals.car22___4120);
    r0 = pxsim_Array__push(s.tmp_20, globals.car23___4121);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_19, "leftAnim", s.tmp_20);
    r0 = pxsim_Array__mk();
    s.tmp_21 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_19, "rightAnim", s.tmp_21);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_19);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_22 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_22, "name", "Red car");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_22, "frontImage", globals.carRedFront___4109);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_22, "backImage", globals.carRedBack___4108);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_22, "leftImage", globals.carRedLeft___4106);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_22, "rightImage", globals.carRedRight___4107);
    r0 = pxsim_Array__mk();
    s.tmp_23 = r0;
    r0 = pxsim_Array__push(s.tmp_23, globals.car30___4122);
    r0 = pxsim_Array__push(s.tmp_23, globals.car31___4123);
    r0 = pxsim_Array__push(s.tmp_23, globals.car32___4124);
    r0 = pxsim_Array__push(s.tmp_23, globals.car33___4125);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_22, "leftAnim", s.tmp_23);
    r0 = pxsim_Array__mk();
    s.tmp_24 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_22, "rightAnim", s.tmp_24);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_22);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_25 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_25, "name", "Airplane");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_25, "frontImage", globals.plane0___4126);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_25, "backImage", globals.plane0___4126);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_25, "leftImage", globals.plane0___4126);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_25, "rightImage", null);
    r0 = pxsim_Array__mk();
    s.tmp_26 = r0;
    r0 = pxsim_Array__push(s.tmp_26, globals.plane0___4126);
    r0 = pxsim_Array__push(s.tmp_26, globals.plane1___4127);
    r0 = pxsim_Array__push(s.tmp_26, globals.plane2___4128);
    r0 = pxsim_Array__push(s.tmp_26, globals.plane3___4129);
    r0 = pxsim_Array__push(s.tmp_26, globals.plane4___4130);
    r0 = pxsim_Array__push(s.tmp_26, globals.plane5___4131);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_25, "leftAnim", s.tmp_26);
    r0 = pxsim_Array__mk();
    s.tmp_27 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_25, "rightAnim", s.tmp_27);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_25);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_28 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_28, "name", "Baby kaiju");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_28, "frontImage", globals.kaijuBabyWalk0___4184);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_28, "backImage", globals.kaijuBabyWalk0___4184);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_28, "leftImage", globals.kaijuBabyWalk0___4184);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_28, "rightImage", null);
    r0 = pxsim_Array__mk();
    s.tmp_29 = r0;
    r0 = pxsim_Array__push(s.tmp_29, globals.kaijuBabyWalk0___4184);
    r0 = pxsim_Array__push(s.tmp_29, globals.kaijuBabyWalk1___4185);
    r0 = pxsim_Array__push(s.tmp_29, globals.kaijuBabyWalk2___4186);
    r0 = pxsim_Array__push(s.tmp_29, globals.kaijuBabyWalk3___4187);
    r0 = pxsim_Array__push(s.tmp_29, globals.kaijuBabyWalk4___4188);
    r0 = pxsim_Array__push(s.tmp_29, globals.kaijuBabyWalk5___4189);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_28, "leftAnim", s.tmp_29);
    r0 = pxsim_Array__mk();
    s.tmp_30 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_28, "rightAnim", s.tmp_30);
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_28);
    globals.AVATARS___149757 = (s.tmp_3);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "currPlayer", 0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "selectedAvatar", -1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "header", null);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "footer1", null);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "footer2", null);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "left", null);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "front", null);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "right", null);
    globals.selection___149739 = (s.tmp_0);
    globals.test___150167 = (null);
    globals.index___150169 = (0);
    globals.animate___150171 = (true);
    s.tmp_0 = SpriteKind_create__P2478_mk(s);
    s.callLocIdx = 348; s.pc = 84; return s.tmp_0;
  case 84:
    r0 = s.retval;
    globals.Dice___32647 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_2.arg0 = "d6white";
    s.callLocIdx = 349; s.pc = 85; return s.tmp_2;
  case 85:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_4 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_4.arg0 = "d6yellow";
    s.callLocIdx = 350; s.pc = 86; return s.tmp_4;
  case 86:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    s.tmp_6 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_6.arg0 = "d6orange";
    s.callLocIdx = 351; s.pc = 87; return s.tmp_6;
  case 87:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_5);
    globals.D6_IMAGES___32650 = (s.tmp_0);
    globals.diceTest___32587 = (null);
    r0 = pxsim_Array__mk();
    globals.firstRollStarted___173398 = (r0);
    globals.firstPlayer___173401 = (0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, "Robo");
    r0 = pxsim_Array__push(s.tmp_0, "Xander");
    r0 = pxsim_Array__push(s.tmp_0, "Lex");
    r0 = pxsim_Array__push(s.tmp_0, "Solar");
    globals.PLAYER_NAMES___173599 = (s.tmp_0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 0);
    r0 = pxsim_Array__push(s.tmp_0, 1);
    r0 = pxsim_Array__push(s.tmp_0, 2);
    r0 = pxsim_Array__push(s.tmp_0, 3);
    globals.PLAYER_AVATARS___173605 = (s.tmp_0);
    s.tmp_1 = control_ramSize__P346_mk(s);
    s.callLocIdx = 429; s.pc = 88; return s.tmp_1;
  case 88:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 < 1048576);
    globals.HARDWARE___175561 = (r0);
    s.tmp_0 = game_onUpdate__P3022_mk(s);
    s.tmp_0.arg0 = inline__P175642;
    s.callLocIdx = 447; s.pc = 89; return s.tmp_0;
  case 89:
    r0 = s.retval;
    s.tmp_0 = FirstRollTests_start__P173607_mk(s);
    s.tmp_0.arg0 = 4;
    s.callLocIdx = 450; s.pc = 90; return s.tmp_0;
  case 90:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_main___P176059.info = {"start":0,"length":0,"line":0,"column":0,"endLine":0,"endColumn":0,"fileName":"pxt_modules/arcade-text/main.ts","functionName":"<main>","argumentNames":[]}
_main___P176059.continuations = [  ]

function _main___P176059_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _main___P176059, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
} }

const _hex10338 = pxsim.BufferMethods.createBufferFromHex("")
const _hex10340 = pxsim.BufferMethods.createBufferFromHex("20000000000000000000000000000000000000000000000000002100000000000006fc0000000000000000000000000000000000220000001c00000000001c0000000000000000000000000000002300a000f807a000f807a00000000000000000000000000000002400000018022404460c8803000000000000000000000000000025003802c4017800200390040803000000000000000000000000260080037804a4041803800340040000000000000000000000002700000000001c00000000000000000000000000000000000000280000000000f8010606010800000000000000000000000000002900000001080606f801000000000000000000000000000000002a00040014000e001400040000000000000000000000000000002b0040004000f8034000400000000000000000000000000000002c000000000000090006000000000000000000000000000000002d000000800080008000000000000000000000000000000000002e000000000000060000000000000000000000000000000000002f00000c800360001c000300000000000000000000000000000030000000f80304040404f80300000000000000000000000000003100000004040404fc07000400040000000000000000000000003200000008060405c4043804000000000000000000000000000033000000080244044404b803000000000000000000000000000034000000800170010801fc070001000000000000000000000000350000023c0424042404c403000000000000000000000000000036000000f0034804440488030000000000000000000000000000370000000400c40734000c00000000000000000000000000000038000000b80344044404b803000000000000000000000000000039000000780284048802f00100000000000000000000000000003a000000000030060000000000000000000000000000000000003b000000000018090006000000000000000000000000000000003c004000a000a000a000100100000000000000000000000000003d002001200120012001200100000000000000000000000000003e0000001001a000a000a00040000000000000000000000000003f000000080084066400180000000000000000000000000000004000f0030c04c20822092409f80900000000000000000000000041000007f8008400f8000007000000000000000000000000000042000000fc0744044404b803000000000000000000000000000043000000f001080204040404080200000000000000000000000044000000fc0704040802f001000000000000000000000000000045000000fc07440444044404000000000000000000000000000046000000fc07440044004400000000000000000000000000000047000000f00108024404c803000000000000000000000000000048000000fc0740004000fc070000000000000000000000000000490000000404fc070404040400000000000000000000000000004a000000000200040004fc0300000000000000000000000000004b000000fc074000f0000c0304040000000000000000000000004c000000fc0700040004000400000000000000000000000000004d000000fc0738007000fc0700000000000000000000000000004e000000fc073800c003fc0700000000000000000000000000004f000000f80304040404f803000000000000000000000000000050000000fc07840084004400780000000000000000000000000051000000fc0102020206fc09000000000000000000000000000052000000fc074400c4013806000000000000000000000000000053000000180224044404880300000000000000000000000000005400000004000400fc070400040000000000000000000000000055000000fc0300040004fc03000000000000000000000000000056000c00f0030004f0030c00000000000000000000000000000057007c008007e001f0010007fc0000000000000000000000000058000404b8034000b80304040000000000000000000000000000590004003800c00730000c0000000000000000000000000000005a0004040407e4041c04040400000000000000000000000000005b0000000000ff0f0108010800000000000000000000000000005c0003001c0060008003000c00000000000000000000000000005d00000001080108ff0f000000000000000000000000000000005e004000380004003800400000000000000000000000000000005f00000800080008000800080000000000000000000000000000600000000000020004000000000000000000000000000000000061000000200390049004e007000000000000000000000000000062000000fc0710041004e003000000000000000000000000000063000000c001200210043004000200000000000000000000000064000000e00310041004fc07000000000000000000000000000065000000e00390049004e0040000000000000000000000000000660000001000f80714001400000000000000000000000000000067000000b806440944093c09040600000000000000000000000068000000fc0710001000e0070000000000000000000000000000690000000000f4070000000000000000000000000000000000006a00000800080008fd07000000000000000000000000000000006b000000fe078000e001100610040000000000000000000000006c0000000000fc030004000400000000000000000000000000006d00f00710001000e0071000e0070000000000000000000000006e000000f00710001000e00700000000000000000000000000006f000000e00310041004e003000000000000000000000000000070000000fc0f04010401f800000000000000000000000000000071000000f80004010401fc0f000000000000000000000000000072000000f00720001000100000000000000000000000000000007300000060029004900420030000000000000000000000000000740000001000fc0310041004000000000000000000000000000075000000f00300040004f007000000000000000000000000000076003000c0030004c003300000000000000000000000000000007700f0000007e003c0010007f000000000000000000000000000780010046003800060031004000000000000000000000000000079000c0870088007f0000c0000000000000000000000000000007a000000000410079004700410040000000000000000000000007b0000004000be070108010800000000000000000000000000007c0000000000ff0f0000000000000000000000000000000000007d00000001080108be07400000000000000000000000000000007e00800040004000800080004000000000000000000000000000")
const _hex18920 = pxsim.BufferMethods.createBufferFromHex("20000000000000002100001700000000220000030003000023000a1f0a1f0a0024000a17151d0a00250013090412190026000a15150a100027000003000000002800000e11000000290000110e0000002a00000a040a00002b0000040e0400002c000010080000002d000004040400002e000008000000002f0010080402010030000e11110e0000310000121f100000320019151512000033000911150b000034000c0a091f080035001715151509003600081416150800370011090503010038000a1515150a00390002150d0502003a00000a000000003b0000100a0000003c0000040a1100003d00000a0a0a00003e0000110a0400003f0002011505020040000e1115090e0041001e05051e000042001f15150a000043000e111111000044001f11110e000045001f151511000046001f050501000047000e1111150c0048001f04041f00004900111f110000004a000911110f01004b001f040a1100004c001f10101000004d001f0204021f004e001f0204081f004f000e11110e000050001f0505020000510006091916000052001f05050a10005300121515090000540001011f01010055000f10100f0000560007081008070057001f0804081f0058001b04041b0000590001021c0201005a001915131100005b00001f111100005c000102040810005d000011111f00005e000002010200005f00101010101000600000010200000061000c12121e100062001f141408000063000c121212000064000814141f000065000e15151200006600041e0501000067000215150f000068001f04041800006900001d000000006a000010100d00006b001f040a1000006c00000f101000006d001e0204021e006e001e02021c00006f000c12120c000070001e0a0a0400007100040a0a1e000072001c0202020000730010140a0200007400000f1414100075000e10101e1000760006081008060077001e1008101e007800120c0c12000079001214080402007a00121a161200007b0000041f1100007c00001f000000007d00111f040000007e00000404080800d3000c1213130c00f3000c12130d000004010e05051e100005010609191f080006010c121313120007010c121313000018010f0b1b19000019010e151d1a000041011f14121000004201100f1412000043011f0205081f0044011e03031c00005a0110140b0302005b0110140b0300007901121a171300007a01121a171300007b01121b171200007c01121b17120000")
const _hex4896 = pxsim.BufferMethods.createBufferFromHex("000000ffffffff2121ff93c4ff8135fff609249ca378dc52003fad87f2ff8e2ec4a4839f5c406ce5cdc491463d000000")
const _hex5211 = pxsim.BufferMethods.createBufferFromHex("870407000800000000000000404400005055040450555505505501011011000000000000")
const _hex5214 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000050050000000000000550000000005045444404000000455544444400040045555555550404004555555555450500455555555511050045555555150101004555111111000100501511110100000000000550000000000000500500000000000000000000000000000000000000")
const _hex5217 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000000000000000006666666666060060ffffff666f660060fffffff6ff660060fff1ff666f660060fff1ff6666660060fffff16666660060fffff16666660060fff1ff6666660060fff1ff66f6660060ffffff6666660060fffffff6666600006666666666060000000000000000000000000000000000")
const _hex5512 = pxsim.BufferMethods.createBufferFromHex("8704240024000000001111111111111111111111111111111100000010313333333333333333333333333333130100001113111111111111111111111111111131110000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000311111111111111111111111111111111113000031111111111111111111111111111111111300003111111111111111111111111111111111130000111311111111111111111111111111113111000010313333333333333333333333333333130100000011111111111111111111111111111111000000")
const _hex5514 = pxsim.BufferMethods.createBufferFromHex
const _hex5516 = pxsim.BufferMethods.createBufferFromHex
const _hex5518 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d00000000000000000000000070666607000000000000000000000000006776000000000000000000000000660700007066000000000000000000006766777766760000000000000000000060666666660600000000000000000066006766667600660000000000000000667600000000676600000000000000006766767777676676000000000000000060666666666666060000000000000000006766666666760000000000000000000000676666760000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5520 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bb000000000000000000000000b000404500b0000000000000000000005b0b000400540b0000000000000000b0550400000054b5000000000000000000440040bb0040040000000000000000000040d4ddbb0000000000000000000000004055ddbd000000000000000000004b005455d5dd0b400b000000000000005b045411d5dd0b540b000000000000004b005411d5dd0b400b0000000000000000004055ddbd00000000000000000000000040d4ddbb0000000000000000000000440040bb0040040000000000000000b0550400000054b50000000000000000005b04000400540b000000000000000000b000404500b0000000000000000000000000b0bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5522 = pxsim.BufferMethods.createBufferFromHex
const _hex5524 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d0000000000000000000000007066660700000000000000000000000000677600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5526 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0cbcc0c0000000000000000000000b0db55d5cd0c00000000000000000000db555555ddcd000000000000000000b055555555d59d0b0000000000000000db55555555d59db900000000000000005b55555555d5ddb900000000000000b05db5cccc5bdddd990b000000000000b055ccccccccdddd9d0b000000000000b0b5ccccccccdbdd9d0b000000000000b0c5ccccccccdcdd9d0b000000000000b0c5ccdccbccdcdd9d0c000000000000b0cdcc5b55ccdcdd9d0c00000000000000ccdc55b5ccdcddc90000000000000000cccc5b55ccdbddc90000000000000000c0ccdccbccdd9d0c000000000000000000ccccccdbddcd00000000000000000000c0dcddddcd0c0000000000000000000000c0cccc0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5528 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000b0bbbbbbbbcb00c0cd000000000000001bddddddddbd0c1ccd000000000000b011cbccccccbc0c1ccd000000000000b01d6c666666bc0cbccd000000000000b01d6c616661bc0c1ccd000000000000b01d6c161666bccc1bcd000000000000b01d6c666166bcccbbcd000000000000b01d6c666666bccc1bcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666661bcccbbcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666666bc0c1ccd000000000000b01dcbccccccbc0cbccd000000000000c0b1bbbbbbbbbb0cdccb000000000000c0bbbbbbbbbbcb00dc0c00000000000000cccccccccc0c00cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5530 = pxsim.BufferMethods.createBufferFromHex("87042000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004000000000000000000000000000054450000000000000000000000440b00bbbb00b0440000000000000040550b00000000b0550400000000000040b5000044bb00005b04000000000000b00b0044ddddbb00b00b0000000000000000405d55d5dd0b00000000000000000000d4555555ddbd0000000000000000000054555555d5bd0000000000000000b44055555555d5dd0b4b000000000040b54055555555d5dd0b5b040000000040b54055555555d5dd0b5b040000000000b44055115555d5dd0b4b000000000000000054115555d5bd00000000000000000000d4555555ddbd00000000000000000000405d55d5dd0b0000000000000000b00b0044ddddbb00b00b00000000000040b5000044bb00005b0400000000000040550b00000000b0550400000000000000440b00bbbb00b0440000000000000000000000544500000000000000000000000000004004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5532 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000000b055bb00bbbbbb000000000000000000b0b5bdbcbbbbddcb0000000000000000b0dbcb5b5555bbdd0c00000000000000b0cbdcbdbb5b55dbcd0000000000000000c0dddb11d15bb5bd0c00000000000000bbbd111111b155bb0c00000000000000db1b111111115bb5cb00000000000000db1bb11d1199b9d5cb00000000000000db1b11bb9199b955cb000000000000005b1b11b19b99995bcb000000000000005b1d1111bb99995ccb00000000000000b0b511bbbb99995ccb00000000000000b0d51d919999d95b0b00000000000000005bdb919999c9d50b0000000000000000b0d51b99d9bcb5000000000000000000005bd5bbbc550b00000000000000000000b05b5555bd000000000000000000000000b0bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5829 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000f00f00000000f0fffffee0440000ffefefee4f4d00f0ff2effe4feff00f0eff2bfd12e42ffffe2f2fedf2442ff2fe2f24edd24520f2fe2f24edd24520fffe2f2fedf2442fff0eff2bfd12e42fff0ff2effe4feff0000ffeeefee4f4d0000f0fffffee04400000000f00f0000000000000000000000")
const _hex5837 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000f00f00000000f0fffffee0440000ffefefee4f4d00f0fe2effeffeff00f0fef222effe42ffeffe2ef2eefe42ffef2ff2eeeefe420fef2ff2eeeefe420feffe2ef2eefe42fff0fef222effe42fff0fe2effeefeff0000ffefefee4f4d0000f0fffffee04400000000f00f0000000000000000000000")
const _hex5877 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000ffff0000000000ff2eef0f000000f0e2e2effeffff002fe2f24edd2e520fffe2f24edd24520fefeff2fedf2442ffeffefebfd1e4feffeffe2eef44deedffefee2f4feddeed0ff0ee2f4fe44ffe00f0efefefee0f000000fffffffe000000000000ff0f00000000000000000000000000000000000000")
const _hex5879 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000f0ff0f00000000f0eff2fe00f00f002f2efeeefffffff0222eefd4ed52fff02f2eefd44d52fff0fe2eefffedfe0ff0eeefff1bdeed0ff0eeeff24edeed0ff0eefef2d44efeff00effef244feffff00fffefeee0ef00f00f0ffffef0f0000000000f0ff00000000000000000000000000000000000000")
const _hex5881 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000ffff0000000000ff2eef0f000000f0e2e2effeffff002fe2f24edd2e520fffe2f24edd24520fefeff2fedf2442ffeffefebfd1e4feffeffe2eef44deedffefee2f4feddeed0ff0ee2f4fe44ffe00f0efefefee0f000000fffffffe000000000000ff0f00000000000000000000000000000000000000")
const _hex5883 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000f0ff0f00000000f0eff2fe00f00f002f2efeeefffffff0222eefd4ed52fff02f2eefd44d52fff0fe2eefff4d420ff0eeefff1b4d420ff0eeeff24ee4fe0ff0eefef2d4deedff00effef244deedff00fffefeee4efe0f00f0ffffef0f0000000000f0ff00000000000000000000000000000000000000")
const _hex5885 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000000000000000000000f0ff00000000f0ffffef0f000000fffefeee4efe0f00effef244deedfff0eefef2d4deedfff0eeeff24ee4fe0ff0eeefff1b4d420ff0fe2eefff4d420ff02f2eefd44d52fff0222eefd4ed52ff002f2efeeeffffff00f0eff2fe00f00f0000f0ff0f0000000000000000000000")
const _hex5887 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000000000000000000000ff0f00000000fffffffe000000f0efefefee0f0000f0ee2f4fe44ffe00efee2f4feddeed0feffe2eef44deedffeffefebfd1e4feffefeff2fedf2442ffffe2f24edd24520f2fe2f24edd2e520ff0e2e2effeffff0000ff2eef0f0000000000ffff000000000000000000000000")
const _hex5889 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000000000000000000000f0ff00000000f0ffffef0f000000fffefeee0ef00f00effef244fefffff0eefef2d44efefff0eeeff24edeed0ff0eeefff1bdeed0ff0fe2eefffedfe0ff02f2eefd44d52fff0222eefd4ed52ff002f2efeeeffffff00f0eff2fe00f00f0000f0ff0f0000000000000000000000")
const _hex5891 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000000000000000000000ff0f00000000fffffffe000000f0efefefee0f0000f0ee2f4fe44ffe00efee2f4feddeed0feffe2eef44deedffeffefebfd1e4feffefeff2fedf2442ffffe2f24edd24520f2fe2f24edd2e520ff0e2e2effeffff0000ff2eef0f0000000000ffff000000000000000000000000")
const _hex5915 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000f00f00000000f0fffffb000000f03fb3bbebee0000bf33b3bbeff40ff03ee3fffeffbc0f5fe4b3bf41bfddf14f4533fe4fdebdfd5445e3ee44deddb15445e3ee44debdbd4f4533fe4fdeddf15fe4b3bf41bfbdfdf03ee3fffeffbc0f00bf33b3bbeff40f00f03fb3bbebee000000f0fffffb000000000000f00f0000")
const _hex5923 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000f00f00000000f0ffcffb000000f03fbbbbcbee0000bf33b3bbcbf40ff03e3333bbbbbc0f5f333333bbbbdff14f333333bbbbbffd54333333bbbbdfb154333333bbbbbfbd4f333333bbbbdff15f333333bbbbbffdf03e3333bbbbbc0f00bf33b3bbcbf40f00f03fbbbbcbee000000f0ffcffb000000000000f00f0000")
const _hex5931 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000f0ff00000000f0ff3f330f00f00f4fe533e3feffbf0f5445e3ee44deddf15445e3ee44debdfd4f4533fe4fdeddb15fe4b3bf41efbebdff3ee3fffe4fe4f1bf3333b3bb4fe4fdf03333b3bbfbbe0ff03b33b3bbbbff0f00bf33b3bbbb0f0000f0fffffffb000000000000f00f00000000000000000000")
const _hex5933 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000f0ff0000000000ff3f330f00f00ff0543e33eeffdffb405534ee4ed4ddfd405534ee4ed4ddf1f05434e3ffd4bdbdf0453efb1be4beb1f0ef33feef4fe4fdf03b3333bb4be4fd003f3333bbbbbffb00bf3333bbbbbf0f00f03b33bbbbff000000ffffbffb000000000000ff0f00000000000000000000")
const _hex5935 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000000000000000000000f00f000000f0fffffffb000000bf33b3bbbb0f00f03b33b3bbbbff0ff03333b3bbfbbe0fbf3333b3bb4fe4fdff3ee3fffe4fe4f15fe4b3bf41efbebd4f4533fe4fdeddb15445e3ee44debdfd5445e3ee44deddf14fe533e3feffbf0ff0ff3f330f00f00f0000f0ff000000000000000000000000")
const _hex5937 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000000000000000000000ff0f00000000ffffbffb000000f03b33bbbbff0000bf3333bbbbbf0f003f3333bbbbbffbf03b3333bb4be4fdf0ef33feef4fe4fdf0453efb1be4beb1f05434e3ffd4bdbd405534ee4ed4ddf1405534ee4ed4ddfdf0543e33eeffdffb00ff3f330f00f00f0000f0ff000000000000000000000000")
const _hex6019 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000000000ff000000000000c0fd0000000000c0ccfd00000000c0ccdcfd000000cc1cd1ddf10000c0bb111111110f005cbb11111c110fc055bb1b1111110fc055bbbbbb11b1f5c0551b111111bbf5c055bb11b1bb5bf5c055b51111115bf5c05cc5cc5bfb5ff5005cc5005bbbf0ff00c00c005c550c0000000000cccc0c00")
const _hex6021 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000f00f000000000000dc0f0000000000c0dc0f00000000ccccddf1000000cc11dd1df10000c01b111111110f005c1b11c111110f005cbb1b1111110fc055bbbbbb11b1f5c0551b1111b1bbf5c055bb11b1bbbbf5c055b51111115bf5c055c5cc5bfb5ff5005cc5005b0bf0ff00c00cc055c50000000000c0cccc0000")
const _hex6023 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000fc00000000000000dc0f0000000000c0dc0f00000000ccccddf1000000cc11dd1d110f0000bc111111110f00c0b511c11111f100c0b51b111111510fc0b5bbbb1b115b0f5cb5111111bb5b0f5cb51b11bbbb550f5c551b1111b1550f5c55ccbcb5ffff0fcc550cbbb5000000c0ccc055c50000000000c0cccc000000")
const _hex6025 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000ff000000000000c0fd000000000000ccfd00000000c0ccdc1d0f0000c01cd1dd110f0000bc11111111f100c0b511111c11f100c0b5bb111111f1005cb5bbbb1b115b0f5cb5111111bb5b0f5cb51b11bbbb5b0f5c551b1111b1550f5c55ccbcb5ff550fc0550cb0b500ff0f00cc005c550c0000000000cccc0c0000")
const _hex6041 = pxsim.BufferMethods.createBufferFromHex("87040e000e000000cecceffe0f000000de3bdbddfbffff00debdd3df2ddbfd00c0ddddfd2ddd0f0000dfdddd2bdd0f0000bfdddd2bddff00c0ddddfd2dddfd00debdd3df2dbd0f00de3bdbddb2dd0f00cecceffebfdbfd0000000000f0fbff00000000fbfffd0000000000dfddfb0000000000fbff0f0000")
const _hex6043 = pxsim.BufferMethods.createBufferFromHex("87040e000e000000e0ccfceeff000000e0bdb3ddbdff0f00e0dd3bfdddd2fd0000dcdddddfd2fb0000f0ddddbdd2fd0000f0dbddbdd2ff0000dcdddddfd20f00e0dd3bfdddd20f00e0bdb3dd2dddfd00e0ccfceebffbff00000000b0fffd0000000000f0ddfb0000000000b0ff0f00000000000000000000")
const _hex6045 = pxsim.BufferMethods.createBufferFromHex("87040e000e000000e0ccfceeff000000e0bdb3ddbdff0000e0dd3bfdddd20f0000dcdddddfd2fd0000f0ddddbdd2fb0000f0dbddbdd2fd0000dcdddddfd2ff00e0dd3bfdddd2fd00e0bdb3dd2dddff00e0ccfceebffb000000000000f0fb0000000000b0fffd0000000000f0ddfb0000000000b0ff0f0000")
const _hex6121 = pxsim.BufferMethods.createBufferFromHex("870410000e00000000440e00000000004055e500000000005455e4fe0f00000054455455f4ffff005445555f6554f500e055555565550f00005e55456f550f00005e55456f55ff00e05555556555f5005445555f65450f005445545546550f005455e4fe4f54f5004055e500f0f4ff0000440e005ff50000000000f0550f0000000000f0ff000000")
const _hex6123 = pxsim.BufferMethods.createBufferFromHex("870410000e0000000040e400000000000054550e00000000405545ee0f0000004055445545ffff00405554f55556f500005e55555556f40000e05555f456f50000e05555f456ff00005e555555560f00405554f555560f00405544556554f500405545eefff4ff000054550ef0f400000040e4005ff5000000000000ff0f00000000000000000000")
const _hex6125 = pxsim.BufferMethods.createBufferFromHex("870410000e0000000040e400000000000054550e00000000405545ee0f0000004055445545ff0000405554f555560f00005e55555556f50000e05555f456f40000e05555f456f500005e55555556ff00405554f55556f500405544556554ff00405545eeff4fff000054550ef0550f000040e4005ff5000000000000ff0f00000000000000000000")
const _hex6189 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000c0cc0000000000c0dccd0f00000000dfedcdfd000000f0fdefcdfdf0ff0fefddddcdfdefdefdefdddddcfdfebffdeffddfddfdfefffcefdeddddeeeedefdefeeeeeeeefebffdf0eeeeeeefeefefb00ffbdfbefeefefb00f0ddcdf0eeeefd0000cf0c00effeff000000f0ffff0f00000000efeefe0000000000ffff0f0000")
const _hex6191 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000c0cc00f0ff0000c0dccdffdffd0000dfedcdfddffb00f0fdefcdfdffff00efddddcdfddffd00efdddddcfddefb00effddfddfefeff00efdeddedeeeefe00efeeeeeeeefeff00f0eeeeeeefeefe0f00ffdfbbefeefefc0000dfddfceefefd0000f0cc00efeefd00000000ffffffff000000f0eefe0000000000f0ff0f0000")
const _hex6193 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000c0cc0000f00f00c0dcdd0f00dffd00dfdddefcf0defdf0ddffdefcf0bffcefddddddfcefdffdefddddcdfdfedefdefddffddfeeecefdefdeddedeeeeffffefeeeeeeeefeff00f0eeeeeeefeeff0000dfbbffefeefe0f00dfdd0cf0eefefc00f0cc0000effefd000000ffffffbffd0000f0eeee0ff00f0000f0ffff000000")
const _hex6195 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000c0cc0000000000c0dcdd0f00000000dfddedfd00f00ff0ddfdeffd00dffdefddddddfdffdefdefdddddddcfebffcefdefddfedeedffdefeeddddeeeedefdefeeeeeeeeeecefdf0eeeeeeefeefcfff0bdfbffefeefd0ff0ddcd00f0befd0000cf0c0000ff0f000000f0ffffff0f000000f0eeee0f0000000000ffff000000")
const _hex6197 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000c0cc0000000000c0dccd0f00f00f00dfedcdfd00bffdf0fdefcdfdf0defdefddddcdfdeffeffefdddddcfdefdffdeffddfddfefebefdefdeddedeeeefeffefeeeeeeeeeebffdf0eeeeeeeffebefd00ffbdfbefeefefb00f0ddcdf0eeeefe0000cf0c00ffffff000000000000f0ff0000000000efeeff0000000000ffff0f")
const _hex6843 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000d02222ed0e0000002d22d2ed0e0000002222d2e2ee000020442422eefe0f00c2cc2beeeeff0f20ccbceef2eeff0f2022e2bee2efff0f2022e4bbe2fefe002022e4bbe2feee002022e4bbf2ffee002022e4eeeeeefe002022e4bbe2eeff0f2044e4bbe2eeff0f00c22cbee2eeff0f0020cce2eeeeff00")
const _hex6845 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000000000000000002222eeee0e000020cce2eeeeff0000c22cbee2eeff0f2044e4bbe2eeff0f2022e4bbe2eeff0f2022e4eeeeeefe002022e4bbf2ffee002022e4bbe2feee002022e4bbe2fefe002022e2bee2efff0f20ccbceef2eeff0f00c2cc2beeeeff0f0020442422eefe0f00002222d2e2ee0000002d22d2ed0e00")
const _hex6847 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000000000000000000000000000000000e0ffffeeeeff0f0022222222e2eeffe0cc22c2ecee2dfe2e424424ceebde0e2e222242bcebee0e2c222242bcebee0e2c222222bcebee0e2e222222bcebee0e2e222222ceebde0ee0cc2cc2ecee2dfe0022222222e2eeff00e0ffffeeeeff0f0000000000000000")
const _hex6849 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000e0ffeffe0f00000022e222ee2e0f00c2cccc2c4bdde220424424b24cd22d20242222cb4c222220242222cb4c222220222222cb4c222220222222cb4c222220222222b24cd22d00c2cccc2c4bdde2000022e222ee2e0f0000e0ffeffeff000000000000000000")
const _hex6851 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000d066668d080000006d66d68d080000006666d6868800006099696688f80f00c6cc6b8888ff0f60ccbc88f688ff0f606686b8868fff0f606689bb86f8f800606689bb86f88800606689bbf6ff8800606689888888f800606689bb8688ff0f609989bb8688ff0f00c66cb88688ff0f0060cc868888ff00")
const _hex6853 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000000000000000006666888808000060cc868888ff0000c66cb88688ff0f609989bb8688ff0f606689bb8688ff0f606689888888f800606689bbf6ff8800606689bb86f88800606689bb86f8f800606686b8868fff0f60ccbc88f688ff0f00c6cc6b8888ff0f006099696688f80f00006666d686880000006d66d68d0800")
const _hex6855 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000080ffff8888ff0f00666666668688ff80cc66c68c886df868969969c88bd80868666696bc8b88086c666696bc8b88086c666666bc8b880868666666bc8b880868666666c88bd80880cc6cc68c886df800666666668688ff0080ffff8888ff0f0000000000000000")
const _hex6857 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000000000000000000000000000000000000000000000000080ff8ff80f00000066866688680f00c6cccc6c9bdd8660969969b69cd66d60696666cb9c666660696666cb9c666660666666cb9c666660666666cb9c666660666666b69cd66d00c6cccc6c9bdd86000066866688680f000080ff8ff8ff000000000000000000")
const _hex6867 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000888888880000008066663888080000686686338808000068668683880f008899998988f8bb809899998b88f8bc80767786b886f8fc68667787bb86880f68667687bb86880868666687bb868808686666878888880f68666687bb86f8bb80767786b886f8bc00b899998b88f8fc00809b99b988880f0000888888888800")
const _hex6869 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000888888880000008066663888080000686686338808000068668683880f008899998988f8cf809899998b88f8bf80767786b886f8bb68767787bb86880f68767787bb86880868667787bb868808686676878888880f68666687bb86f8cf80767786b886f8bf00b899998b88f8bb00809b99b988880f0000888888888800")
const _hex6871 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000888888880000008066663888080000686686338808000068668683880f008899998988f8fc809899998b88f8fb80767786b886f8fb68667687bb86880f68666687bb86880868666687bb868808687667878888880f68767787bb86f8fc80767786b886f8fb00b899998b88f8fb00809b99b988880f0000888888888800")
const _hex6873 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000888888880000008066663888080000686686338808000068668683880f008899998988f8cb809899998b88f8fb80767786b886f8fc68667687bb86880f68666687bb86880868666687bb868808686666878888880f68666687bb86f8cb80767786b886f8fb00b899998b88f8fc00809b99b988880f0000888888888800")
const _hex6875 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000eeeeeeee000000e022223eee0e00002e22e233ee0e00002e22e2e3ee0f00ee9999e9eefebbe09e9999ebeefebce04244e2bee2fefc2e2244e4bbe2ee0f2e2242e4bbe2ee0e2e2222e4bbe2ee0e2e2222e4eeeeee0f2e2222e4bbe2febbe04244e2bee2febc00be9999ebeefefc00e09b99b9eeee0f0000eeeeeeeeee00")
const _hex6877 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000eeeeeeee000000e022223eee0e00002e22e233ee0e00002e22e2e3ee0f00ee9999e9eefecfe09e9999ebeefebfe04244e2bee2febb2e4244e4bbe2ee0f2e4244e4bbe2ee0e2e2244e4bbe2ee0e2e2242e4eeeeee0f2e2222e4bbe2fecfe04244e2bee2febf00be9999ebeefebb00e09b99b9eeee0f0000eeeeeeeeee00")
const _hex6879 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000eeeeeeee000000e022223eee0e00002e22e233ee0e00002e22e2e3ee0f00ee9999e9eefefce09e9999ebeefefbe04244e2bee2fefb2e2242e4bbe2ee0f2e2222e4bbe2ee0e2e2222e4bbe2ee0e2e4224e4eeeeee0f2e4244e4bbe2fefce04244e2bee2fefb00be9999ebeefefb00e09b99b9eeee0f0000eeeeeeeeee00")
const _hex6881 = pxsim.BufferMethods.createBufferFromHex("8704100010000000000000eeeeeeee000000e022223eee0e00002e22e233ee0e00002e22e2e3ee0f00ee9999e9eefecbe09e9999ebeefefbe04244e2bee2fefc2e2242e4bbe2ee0f2e2222e4bbe2ee0e2e2222e4bbe2ee0e2e2222e4eeeeee0f2e2222e4bbe2fecbe04244e2bee2fefb00be9999ebeefefc00e09b99b9eeee0f0000eeeeeeeeee00")
const _hex6883 = pxsim.BufferMethods.createBufferFromHex("8704180010000000000000c00f0000000000002cf20000000000c022220f000000009c2b220f0000ffc099b922f20000ffcf9b1922f200002f2fb41122f200002f4c241122f20000cf4c229122f20000cf4c229b22f2ff00f02c222222f2c20f002f222222fcccfc002f222242ff2ff2002f22224cf4ffff00c022c22244ffff00c022c22242fcff00c02cc22222f20f00cc2cc22c22f200c04c24c2fc22f200cc4422cc0f2ff2004c24f2c20fc0fc00fcffcf220f0000000000002c0f000000000000f00f000000")
const _hex6885 = pxsim.BufferMethods.createBufferFromHex("8704180010000000000000c00f0000000000002cf20000000000c022220f000000009c2b220f0000ffc0992922f20000ffcf9bb922f200002f2f941122f200002f4cb41122f20000cf4c229122f20000cf4c229922f2ff00f02c222222f2c20f002f222222fcccfc002f222242ff2ff2002f22224cf4ffff00c022c24244ffff00c022c22244fcff00c02cc22242f20f00cc2cc22c22f200c04c24c2fc22f200cc4422cc0f2ff2004c24f2c20fc0fc00fcffcf220f0000000000002c0f000000000000f00f000000")
const _hex6887 = pxsim.BufferMethods.createBufferFromHex("8704180010000000000000c00f0000000000002cf20000000000c022220f0000ff009c2b220f0000ffcf992b22f200002fcf992122f200002f2f1b2122f20000cf4c122122f20000cf4c122922f20000f04cb22922f2ff00f02c222222f2c20f002f222222cccc0f002f22c224ff220f002f222c44ffff0f00c0222c42fcff0f00c0222c42f4ff0f00c02ccc22c4ff00004c2ccc22c20000c04422cc2cc200004c2422fc2cc200004c222ff2cc0c0000fcff2cf2000000000000c0f200000000000000ff00000000")
const _hex6889 = pxsim.BufferMethods.createBufferFromHex("8704180010000000000000c00f0000000000002cf20000000000c022220f0000ff009c2b220f0000ffcf99b922f200002fcf9b1922f200002f2fb41122f20000cf4c241122f20000cf4c229122f20000ff4c229b22f2ff00f02c222222f2c20f002f222222fcccfc002f222242ff2ff2002f22224cf4ffff00c022c22244ffff00c022c22242fcff00c02cc22222f20f00cc2cc22c22f200c04c24c2fc22f200cc4422cc0f2ff2004c24f2c20fc0fc00fcffcf220f0000000000002c0f000000000000f00f000000")
const _hex6891 = pxsim.BufferMethods.createBufferFromHex("8704180010000000000000c00f0000000000002cf20000000000c022220f000000009c2b220f0000ffc099b922f20000ffcf9b1922f200002f2f421921f200002f2c441221f20000cf2c241229f20000cf2c24b229f2ff00f02c222222f2c20f002f222222fccccc002f222222f4ff22002f2222c244ffff00c022222c42f4ff00c02c222c22c4ff00c02c222c22220f00c02c22cc22220f00c044c2fc2f220f004c24c2fcff220fc044f22ffcc0cc0ff0ffcf2cf2000000000000ccf2000000000000f0ff000000")
const _hex6893 = pxsim.BufferMethods.createBufferFromHex("8704180010000000000000c00f0000000000002cf20000000000c022220f000000009c2b220f0000ffc099b922f20000ffcf9b1922f200002f2f421122f20000cf22441221f20000cf2c241229f20000cf2c24b229f2ff00f02c222222f2c20f002f222222fccccc002f222222f4ff22002f2222c244ffff00c022222c42f4ff00c02c222c22c4ff00c02c222c22220f00c02c22cc22220f00c044c2fc2f220f004c24c2fcff220fc044f22ffcc0cc0ff0ffcf2cf2000000000000ccf2000000000000f0ff000000")
const _hex6991 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000cccc0c00000000c055c5b5c00c00005c55b553bc0ccc005c55b553bbccbcc055551553cbccbcc05555b5555cccbcc055f1555555ccccc055ff5555b5dddb005c555555bb5d55005c555555dd5d5500c05555ddddbdbb00005c55ddddddcc0000c0dcdddddd0c000000c0ccccdd0c0000000000dccd000000000000c00c00")
const _hex6993 = pxsim.BufferMethods.createBufferFromHex("870410001000000000c0cccc00000000005cc5550ccc0000c055b533c5cb0000c055b533b5cb00005c551533b5cc0ccc5c55b555c5c5ccbc5cf155555bc5dcbc5cff555555db5bbc5c555555b5db55ccc0555555d5ddb50c005c55d5ddddbb0c00c055d5ddddcd000000ccddddddcd00000000ccccdccd000000000000dc0c000000000000cc0000")
const _hex6995 = pxsim.BufferMethods.createBufferFromHex("870410001000000000c0cccc00000000005cc5550ccc0000c055b553c5cb0000c055b553b5cb00005c551553b5cccccc5c55b555c5c5dcbc5cf155555bc55bbc5cff555555db55bc5c555555b5dbb5ccc0555555d5ddbb0c005c55d5ddddcd0c00c055d5ddddcd000000ccddddddcd00000000ccccdc0c000000000000dc0c000000000000cc0000")
const _hex6997 = pxsim.BufferMethods.createBufferFromHex("870410001000000000c0cccc00000000005cc5550ccc0000c055b553c5cb0000c055b553b5cb0c005c551553b5cccc0c5c55b555c5c5b5cc5cf155555bb555bc5cff555555bb5bbc5c555555b5dbb5bcc0555555d5ddb5cc005c55d5ddddcd0000c055d5ddddcd000000ccddddddcd00000000ccccdccd000000000000cccd000000000000c0cc00")
const _hex6999 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000cccc0c00000000c055ccb5c00c00005c553b53bc0c00005c553b53bbccccc05555b153cbcccbc05555bb555cccccc055f1555555ccdcc055ff5555b5dd5b005c555555bb5d55005c555555dd5db500c05555ddddbdcb00005c55dddddd0c0000c0dcdddddd0c000000c0ccccdd0c0000000000c0cd000000000000c0cc00")
const _hex7001 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000cccc0c00000000c055c5b5c00c00005c55b553bc0ccc005c55b553bbcccbc055551553cbcccbc05555b5555cccccc055f1555555ccccc055ff5555b5dddc005c555555bb5d55005c555555dd5d5500c05555ddddbdcb00005c55dddddd0c0000c0dcdddddd0c000000c0cccccd000000000000c0cd000000000000c00c00")




function control___screen_inline__P4885(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

  case 1:
    r0 = pxsim_numops_toBoolDecr(true);
    if (!r0) { step = 4; continue; }
    globals.__updated___4882 = (false);
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 200;
    s.callLocIdx = 2; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.__updated___4882);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = control___screen_update__P1993_mk(s);
    s.callLocIdx = 3; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    globals.__updated___4882 = (true);
  case 2:
  case 3:
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_inline__P4885.info = {"start":396,"length":211,"line":17,"column":26,"endLine":26,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"inline","argumentNames":[]}

function control___screen_inline__P4885_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_inline__P4885, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function _screen_internal_inline__P4905(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore.updateScreen(globals.screen___2032);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_inline__P4905.info = {"start":1122,"length":26,"line":32,"column":33,"endLine":32,"endColumn":59,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"inline","argumentNames":[]}

function _screen_internal_inline__P4905_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_inline__P4905, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function _screen_internal_inline__P4910(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore.updateStats(s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_inline__P4910.info = {"start":1185,"length":56,"line":33,"column":35,"endLine":35,"endColumn":5,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"inline","argumentNames":["msg"]}

function _screen_internal_inline__P4910_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_inline__P4910, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_inline__P4955(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.stateWhenPushed___4956 = undefined;
    s.i___4962 = undefined;
    s.p___4968 = undefined;
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 19; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = r0.fields["controllerConnectionState"];
    s.stateWhenPushed___4956 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.stateWhenPushed___4956);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 11; continue; }
  case 1:
  case 2:
    s.i___4962 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___4962;
    r0 = pxsim_Array__length(s.stateWhenPushed___4956);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(globals._players___4953, s.i___4962);
    s.p___4968 = (r0);
    s.tmp_0 = r0 = s.p___4968;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = pxsim_Array__getAt(s.stateWhenPushed___4956, s.i___4962);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    s.tmp_11 = controller_Controller_connected__P2155_mk(s);
    s.tmp_11.arg0 = s.p___4968;
    s.callLocIdx = 20; s.pc = 13; return s.tmp_11;
  case 13:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_9);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    s.tmp_7 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_1 != s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    if (!r0) { step = 8; continue; }
    s.tmp_14 = controller_Controller_connected__P2155_mk(s);
    s.tmp_14.arg0 = s.p___4968;
    s.callLocIdx = 22; s.pc = 14; return s.tmp_14;
  case 14:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_13);
    if (!r0) { step = 6; continue; }
    r0 = 1;
    { step = 7; continue; }
  case 6:
    r0 = 2;
  case 7:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    s.tmp_17 = controller_Controller_id__P2141_mk(s);
    s.tmp_17.arg0 = s.p___4968;
    s.callLocIdx = 21; s.pc = 15; return s.tmp_17;
  case 15:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_16, s.tmp_15);
  case 8:
  case 9:
    r0 = (s.i___4962 + 1);
    s.i___4962 = (r0);
    { step = 3; continue; }
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_inline__P4955.info = {"start":344,"length":582,"line":15,"column":28,"endLine":30,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":[]}

function controller_inline__P4955_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_inline__P4955, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  stateWhenPushed___4956: undefined,
  i___4962: undefined,
  p___4968: undefined,
} }





function controller_inline__P4995(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___5000 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["controllerConnectionState"] = (s.tmp_1);
    s.i___5000 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___5000;
    r0 = pxsim_Array__length(globals._players___4953);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(globals._players___4953, s.i___5000);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    r0 = s.arg0.fields["controllerConnectionState"];
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.i___5000;
    s.tmp_7 = controller_Controller_connected__P2155_mk(s);
    r0 = pxsim_Array__getAt(globals._players___4953, s.i___5000);
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 24; s.pc = 5; return s.tmp_7;
  case 5:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_4, s.tmp_5, s.tmp_6);
  case 2:
  case 3:
    r0 = (s.i___5000 + 1);
    s.i___5000 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_inline__P4995.info = {"start":957,"length":254,"line":31,"column":29,"endLine":38,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["oldScene"]}

function controller_inline__P4995_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_inline__P4995, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  i___5000: undefined,
  arg0: undefined,
} }





function info_inline__P5106(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals.infoState___5102);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(globals.infoStateStack___5104);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals.infoStateStack___5104 = (r0);
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "state", globals.infoState___5102);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "scene", s.arg0);
    r0 = pxsim_Array__push(globals.infoStateStack___5104, s.tmp_0);
    globals.infoState___5102 = (undefined);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_inline__P5106.info = {"start":2571,"length":259,"line":93,"column":29,"endLine":102,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["oldScene"]}

function info_inline__P5106_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_inline__P5106, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function info_inline__P5121(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___5122 = undefined;
    s.nextState___5131 = undefined;
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 32; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___5122 = (r0);
    globals.infoState___5102 = (undefined);
    s.tmp_0 = r0 = globals.infoStateStack___5104;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals.infoStateStack___5104);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array_.pop(globals.infoStateStack___5104);
    s.nextState___5131 = (r0);
    s.tmp_2 = if_scene_1_mk(s);
    s.tmp_2.arg0 = s.nextState___5131;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "scene");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["scene"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["scene"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 33; s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.scene___5122);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = if_state_1_mk(s);
    s.tmp_3.arg0 = s.nextState___5131;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "state");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["state"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["state"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 34; s.pc = 9; return s.tmp_3; }
    }
  case 9:
    r0 = s.retval;
    globals.infoState___5102 = (r0);
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__push(globals.infoStateStack___5104, s.nextState___5131);
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_inline__P5121.info = {"start":2862,"length":376,"line":104,"column":28,"endLine":115,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":[]}

function info_inline__P5121_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_inline__P5121, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___5122: undefined,
  nextState___5131: undefined,
} }





function gameOverConfig_inline__P5230(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals._gameOverConfig___5229);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(game_GameOverConfig__C2972_VT);
    s.tmp_2 = r0;
    s.tmp_3 = game_GameOverConfig_constructor__P2987_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.callLocIdx = 36; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    globals._gameOverConfig___5229 = (s.tmp_2);
  case 1:
  case 2:
    r0 = globals._gameOverConfig___5229;
    return leave(s, r0)
  default: oops()
} } }
gameOverConfig_inline__P5230.info = {"start":3714,"length":115,"line":107,"column":34,"endLine":110,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":[]}

function gameOverConfig_inline__P5230_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: gameOverConfig_inline__P5230, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function inline__P137708(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressA__P137518_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 131; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137708.info = {"start":5850,"length":15,"line":213,"column":4,"endLine":213,"endColumn":19,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137708_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137708, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137714(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressB__P137551_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 133; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137714.info = {"start":5956,"length":15,"line":216,"column":4,"endLine":216,"endColumn":19,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137714_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137714, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137720(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressUp__P137674_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 135; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137720.info = {"start":6063,"length":16,"line":219,"column":4,"endLine":219,"endColumn":20,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137720_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137720, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137726(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressDown__P137574_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 137; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137726.info = {"start":6173,"length":18,"line":222,"column":4,"endLine":222,"endColumn":22,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137726_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137726, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137732(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressLeft__P137602_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 139; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137732.info = {"start":6285,"length":18,"line":225,"column":4,"endLine":225,"endColumn":22,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137732_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137732, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137738(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressRight__P137640_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 141; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137738.info = {"start":6398,"length":19,"line":228,"column":4,"endLine":228,"endColumn":23,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137738_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137738, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137744(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressA__P137518_mk(s);
    s.tmp_0.arg0 = 2;
    s.callLocIdx = 143; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137744.info = {"start":6528,"length":15,"line":234,"column":4,"endLine":234,"endColumn":19,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137744_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137744, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137750(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressB__P137551_mk(s);
    s.tmp_0.arg0 = 2;
    s.callLocIdx = 145; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137750.info = {"start":6634,"length":15,"line":237,"column":4,"endLine":237,"endColumn":19,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137750_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137750, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137756(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressUp__P137674_mk(s);
    s.tmp_0.arg0 = 2;
    s.callLocIdx = 147; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137756.info = {"start":6741,"length":16,"line":240,"column":4,"endLine":240,"endColumn":20,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137756_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137756, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137762(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressDown__P137574_mk(s);
    s.tmp_0.arg0 = 2;
    s.callLocIdx = 149; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137762.info = {"start":6851,"length":18,"line":243,"column":4,"endLine":243,"endColumn":22,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137762_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137762, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137768(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressLeft__P137602_mk(s);
    s.tmp_0.arg0 = 2;
    s.callLocIdx = 151; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137768.info = {"start":6963,"length":18,"line":246,"column":4,"endLine":246,"endColumn":22,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137768_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137768, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137774(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressRight__P137640_mk(s);
    s.tmp_0.arg0 = 2;
    s.callLocIdx = 153; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137774.info = {"start":7076,"length":19,"line":249,"column":4,"endLine":249,"endColumn":23,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137774_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137774, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137780(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressA__P137518_mk(s);
    s.tmp_0.arg0 = 3;
    s.callLocIdx = 155; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137780.info = {"start":7206,"length":15,"line":255,"column":4,"endLine":255,"endColumn":19,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137780_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137780, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137786(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressB__P137551_mk(s);
    s.tmp_0.arg0 = 3;
    s.callLocIdx = 157; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137786.info = {"start":7312,"length":15,"line":258,"column":4,"endLine":258,"endColumn":19,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137786_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137786, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137792(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressUp__P137674_mk(s);
    s.tmp_0.arg0 = 3;
    s.callLocIdx = 159; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137792.info = {"start":7419,"length":16,"line":261,"column":4,"endLine":261,"endColumn":20,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137792_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137792, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137798(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressDown__P137574_mk(s);
    s.tmp_0.arg0 = 3;
    s.callLocIdx = 161; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137798.info = {"start":7529,"length":18,"line":264,"column":4,"endLine":264,"endColumn":22,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137798_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137798, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137804(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressLeft__P137602_mk(s);
    s.tmp_0.arg0 = 3;
    s.callLocIdx = 163; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137804.info = {"start":7641,"length":18,"line":267,"column":4,"endLine":267,"endColumn":22,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137804_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137804, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137810(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressRight__P137640_mk(s);
    s.tmp_0.arg0 = 3;
    s.callLocIdx = 165; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137810.info = {"start":7754,"length":19,"line":270,"column":4,"endLine":270,"endColumn":23,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137810_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137810, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137816(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressA__P137518_mk(s);
    s.tmp_0.arg0 = 4;
    s.callLocIdx = 167; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137816.info = {"start":7884,"length":15,"line":276,"column":4,"endLine":276,"endColumn":19,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137816_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137816, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137822(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressB__P137551_mk(s);
    s.tmp_0.arg0 = 4;
    s.callLocIdx = 169; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137822.info = {"start":7990,"length":15,"line":279,"column":4,"endLine":279,"endColumn":19,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137822_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137822, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137828(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressUp__P137674_mk(s);
    s.tmp_0.arg0 = 4;
    s.callLocIdx = 171; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137828.info = {"start":8097,"length":16,"line":282,"column":4,"endLine":282,"endColumn":20,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137828_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137828, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137834(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressDown__P137574_mk(s);
    s.tmp_0.arg0 = 4;
    s.callLocIdx = 173; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137834.info = {"start":8207,"length":18,"line":285,"column":4,"endLine":285,"endColumn":22,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137834_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137834, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137840(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressLeft__P137602_mk(s);
    s.tmp_0.arg0 = 4;
    s.callLocIdx = 175; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137840.info = {"start":8319,"length":18,"line":288,"column":4,"endLine":288,"endColumn":22,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137840_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137840, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P137846(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = pressRight__P137640_mk(s);
    s.tmp_0.arg0 = 4;
    s.callLocIdx = 177; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P137846.info = {"start":8432,"length":19,"line":291,"column":4,"endLine":291,"endColumn":23,"fileName":"controller.ts","functionName":"inline","argumentNames":[]}

function inline__P137846_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P137846, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function myImages_inline__P7961(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = helpers_stringTrim__P123_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 179; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("image1", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq("bg", s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = pxsim.image.ofBuffer(_hex7967);
    { step = 4; continue; }
  case 3:
    r0 = null;
  case 4:
    return leave(s, r0)
  default: oops()
} } }
myImages_inline__P7961.info = {"start":97,"length":19488,"line":3,"column":38,"endLine":130,"endColumn":5,"fileName":"images.g.ts","functionName":"inline","argumentNames":["name"]}

function myImages_inline__P7961_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: myImages_inline__P7961, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }

const _hex7967 = pxsim.BufferMethods.createBufferFromHex("




function myImages_inline__P7970(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = helpers_stringTrim__P123_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 181; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("d6white", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq("anim1", s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq("d6yellow", s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq("anim2", s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq("d6orange", s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq("anim3", s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 1:
  case 2:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim.image.ofBuffer(_hex7977);
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.tmp_3);
    r0 = pxsim.image.ofBuffer(_hex7979);
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.tmp_4);
    r0 = pxsim.image.ofBuffer(_hex7981);
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.tmp_5);
    r0 = pxsim.image.ofBuffer(_hex7983);
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.tmp_6);
    r0 = pxsim.image.ofBuffer(_hex7985);
    s.tmp_7 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.tmp_7);
    r0 = pxsim.image.ofBuffer(_hex7987);
    s.tmp_8 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.tmp_8);
    r0 = s.tmp_2;
    { step = 8; continue; }
  case 3:
  case 4:
    r0 = pxsim_Array__mk();
    s.tmp_9 = r0;
    r0 = pxsim.image.ofBuffer(_hex7990);
    s.tmp_10 = r0;
    r0 = pxsim_Array__push(s.tmp_9, s.tmp_10);
    r0 = pxsim.image.ofBuffer(_hex7992);
    s.tmp_11 = r0;
    r0 = pxsim_Array__push(s.tmp_9, s.tmp_11);
    r0 = pxsim.image.ofBuffer(_hex7994);
    s.tmp_12 = r0;
    r0 = pxsim_Array__push(s.tmp_9, s.tmp_12);
    r0 = pxsim.image.ofBuffer(_hex7996);
    s.tmp_13 = r0;
    r0 = pxsim_Array__push(s.tmp_9, s.tmp_13);
    r0 = pxsim.image.ofBuffer(_hex7998);
    s.tmp_14 = r0;
    r0 = pxsim_Array__push(s.tmp_9, s.tmp_14);
    r0 = pxsim.image.ofBuffer(_hex8000);
    s.tmp_15 = r0;
    r0 = pxsim_Array__push(s.tmp_9, s.tmp_15);
    r0 = s.tmp_9;
    { step = 8; continue; }
  case 5:
  case 6:
    r0 = pxsim_Array__mk();
    s.tmp_16 = r0;
    r0 = pxsim.image.ofBuffer(_hex8003);
    s.tmp_17 = r0;
    r0 = pxsim_Array__push(s.tmp_16, s.tmp_17);
    r0 = pxsim.image.ofBuffer(_hex8005);
    s.tmp_18 = r0;
    r0 = pxsim_Array__push(s.tmp_16, s.tmp_18);
    r0 = pxsim.image.ofBuffer(_hex8007);
    s.tmp_19 = r0;
    r0 = pxsim_Array__push(s.tmp_16, s.tmp_19);
    r0 = pxsim.image.ofBuffer(_hex8009);
    s.tmp_20 = r0;
    r0 = pxsim_Array__push(s.tmp_16, s.tmp_20);
    r0 = pxsim.image.ofBuffer(_hex8011);
    s.tmp_21 = r0;
    r0 = pxsim_Array__push(s.tmp_16, s.tmp_21);
    r0 = pxsim.image.ofBuffer(_hex8013);
    s.tmp_22 = r0;
    r0 = pxsim_Array__push(s.tmp_16, s.tmp_22);
    r0 = s.tmp_16;
    { step = 8; continue; }
  case 7:
    r0 = null;
  case 8:
    return leave(s, r0)
  default: oops()
} } }
myImages_inline__P7970.info = {"start":19630,"length":4990,"line":132,"column":42,"endLine":358,"endColumn":5,"fileName":"images.g.ts","functionName":"inline","argumentNames":["name"]}

function myImages_inline__P7970_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: myImages_inline__P7970, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  arg0: undefined,
} }

const _hex7977 = pxsim.BufferMethods.createBufferFromHex("87040b000b00000011111111110100001111111111010000111111111101000011111111110100001111ff1f110100001111cf1f110100001111ff1f110100001111111111010000111111111101000011111111110100001111111111010000")
const _hex7979 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000001111111111010000f1ff111111010000f1fc111111010000f1ff111111010000111111111101000011111111110100001111111111010000111111f1ff010000111111f1fc010000111111f1ff0100001111111111010000")
const _hex7981 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000001111111111010000f1ff111111010000f1fc111111010000f1ff1111110100001111ff1f110100001111cf1f110100001111ff1f11010000111111f1ff010000111111f1fc010000111111f1ff0100001111111111010000")
const _hex7983 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000001111111111010000f1ff11f1ff010000f1fc11f1fc010000f1ff11f1ff010000111111111101000011111111110100001111111111010000f1ff11f1ff010000f1fc11f1fc010000f1ff11f1ff0100001111111111010000")
const _hex7985 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000001111111111010000f1ff11f1ff010000f1fc11f1fc010000f1ff11f1ff0100001111ff1f110100001111cf1f110100001111ff1f11010000f1ff11f1ff010000f1fc11f1fc010000f1ff11f1ff0100001111111111010000")
const _hex7987 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000001111111111010000f1ffffffff010000f1fccffffc010000f1ffffffff010000111111111101000011111111110100001111111111010000f1ffffffff010000f1fccffffc010000f1ffffffff0100001111111111010000")
const _hex7990 = pxsim.BufferMethods.createBufferFromHex("87040b000b00000055555555550500005555555555050000555555555505000055555555550500005555ff5f550500005555cf5f550500005555ff5f550500005555555555050000555555555505000055555555550500005555555555050000")
const _hex7992 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000005555555555050000f5ff555555050000f5fc555555050000f5ff555555050000555555555505000055555555550500005555555555050000555555f5ff050000555555f5fc050000555555f5ff0500005555555555050000")
const _hex7994 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000005555555555050000f5ff555555050000f5fc555555050000f5ff5555550500005555ff5f550500005555cf5f550500005555ff5f55050000555555f5ff050000555555f5fc050000555555f5ff0500005555555555050000")
const _hex7996 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000005555555555050000f5ff55f5ff050000f5fc55f5fc050000f5ff55f5ff050000555555555505000055555555550500005555555555050000f5ff55f5ff050000f5fc55f5fc050000f5ff55f5ff0500005555555555050000")
const _hex7998 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000005555555555050000f5ff55f5ff050000f5fc55f5fc050000f5ff55f5ff0500005555ff5f550500005555cf5f550500005555ff5f55050000f5ff55f5ff050000f5fc55f5fc050000f5ff55f5ff0500005555555555050000")
const _hex8000 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000005555555555050000f5ffffffff050000f5fccffffc050000f5ffffffff050000555555555505000055555555550500005555555555050000f5ffffffff050000f5fccffffc050000f5ffffffff0500005555555555050000")
const _hex8003 = pxsim.BufferMethods.createBufferFromHex("87040b000b00000044444444440400004444444444040000444444444404000044444444440400004444ff4f440400004444cf4f440400004444ff4f440400004444444444040000444444444404000044444444440400004444444444040000")
const _hex8005 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000004444444444040000f4ff444444040000f4fc444444040000f4ff444444040000444444444404000044444444440400004444444444040000444444f4ff040000444444f4fc040000444444f4ff0400004444444444040000")
const _hex8007 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000004444444444040000f4ff444444040000f4fc444444040000f4ff4444440400004444ff4f440400004444cf4f440400004444ff4f44040000444444f4ff040000444444f4fc040000444444f4ff0400004444444444040000")
const _hex8009 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000004444444444040000f4ff44f4ff040000f4fc44f4fc040000f4ff44f4ff040000444444444404000044444444440400004444444444040000f4ff44f4ff040000f4fc44f4fc040000f4ff44f4ff0400004444444444040000")
const _hex8011 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000004444444444040000f4ff44f4ff040000f4fc44f4fc040000f4ff44f4ff0400004444ff4f440400004444cf4f440400004444ff4f44040000f4ff44f4ff040000f4fc44f4fc040000f4ff44f4ff0400004444444444040000")
const _hex8013 = pxsim.BufferMethods.createBufferFromHex("87040b000b0000004444444444040000f4ffffffff040000f4fccffffc040000f4ffffffff040000444444444404000044444444440400004444444444040000f4ffffffff040000f4fccffffc040000f4ffffffff0400004444444444040000")




function myImages_inline__P8016(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = helpers_stringTrim__P123_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 183; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = null;
    return leave(s, r0)
  default: oops()
} } }
myImages_inline__P8016.info = {"start":24660,"length":105,"line":360,"column":37,"endLine":365,"endColumn":5,"fileName":"images.g.ts","functionName":"inline","argumentNames":["name"]}

function myImages_inline__P8016_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: myImages_inline__P8016, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P175642(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = r0 = globals.gameMode___158120;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 16; continue; }
  case 1:
    s.tmp_3 = game_runtime__P3024_mk(s);
    s.callLocIdx = 430; s.pc = 17; return s.tmp_3;
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = RotatingScreens_nextTime__P4441_mk(s);
    s.tmp_5.arg0 = globals.splashScreen___4565;
    s.callLocIdx = 431; s.pc = 18; return s.tmp_5;
  case 18:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 >= s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_6 = RotatingScreens_rotate__P4456_mk(s);
    s.tmp_6.arg0 = globals.splashScreen___4565;
    s.callLocIdx = 432; s.pc = 19; return s.tmp_6;
  case 19:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 16; continue; }
  case 4:
    s.tmp_2 = game_runtime__P3024_mk(s);
    s.callLocIdx = 433; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = RotatingScreens_nextTime__P4441_mk(s);
    s.tmp_4.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 434; s.pc = 21; return s.tmp_4;
  case 21:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 >= s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_5 = RotatingScreens_rotate__P4456_mk(s);
    s.tmp_5.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 435; s.pc = 22; return s.tmp_5;
  case 22:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 16; continue; }
  case 7:
    s.tmp_0 = FirstRoll_moveDice__P173495_mk(s);
    s.callLocIdx = 436; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.tmp_1 = FirstRoll_findFirstPlayer__P173402_mk(s);
    s.callLocIdx = 437; s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_2 = game_splash__P2964_mk(s);
    s.tmp_6 = r0 = globals.players___158156;
    r0 = (globals.firstPlayer___173401 - 1);
    s.tmp_7 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.tmp_5.fields["name"];
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 26);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 26:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, ": You're first!");
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 439; s.pc = 25; return s.tmp_2;
  case 25:
    r0 = s.retval;
    s.tmp_0 = startGame__P175677_mk(s);
    s.callLocIdx = 440; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
  case 8:
  case 9:
  case 10:
    { step = 16; continue; }
  case 11:
    r0 = globals.diceTest___32587.fields["areRolling"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_1 = Dice_move__P32629_mk(s);
    s.tmp_1.arg0 = globals.diceTest___32587;
    s.callLocIdx = 442; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    r0 = globals.diceTest___32587.fields["areRolling"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.tmp_3 = game_splash__P2964_mk(s);
    s.tmp_10 = Dice_Roll__P32626_mk(s);
    s.tmp_10.arg0 = globals.diceTest___32587;
    s.callLocIdx = 444; s.pc = 30; return s.tmp_10;
  case 30:
    r0 = s.retval;
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 31);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 31:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat("Roll: ", s.tmp_8);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 32);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 32:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, " Doubles: ");
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_13 = Dice_AreDoubles__P32622_mk(s);
    s.tmp_13.arg0 = globals.diceTest___32587;
    s.callLocIdx = 445; s.pc = 34; return s.tmp_13;
  case 34:
    r0 = s.retval;
    s.tmp_12 = r0;
    if ((s.tmp_12) && (s.tmp_12).vtable) {
    setupResume(s, 35);
    pxsim_String__stringConv(s.tmp_12);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_12) + ""; }
  case 35:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_11);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = undefined;
    s.callLocIdx = 446; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
  case 12:
  case 13:
  case 14:
  case 15:
  case 16:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P175642.info = {"start":268,"length":1277,"line":19,"column":14,"endLine":55,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P175642_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P175642, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
} }





function FirstRollTests_start__P173607(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___173612 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    globals.numPlayers___158155 = (s.arg0);
    s.tmp_0 = GameSettings_initPlayers__P158220_mk(s);
    s.callLocIdx = 425; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.i___173612 = (0);
  case 1:
    r0 = (s.i___173612 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Player_Name__P143758_mk(s);
    r0 = pxsim_Array__getAt(globals.players___158156, s.i___173612);
    s.tmp_1.arg0 = r0;
    r0 = pxsim_Array__getAt(globals.PLAYER_NAMES___173599, s.i___173612);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 426; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = Player_Avatar__P143736_mk(s);
    r0 = pxsim_Array__getAt(globals.players___158156, s.i___173612);
    s.tmp_0.arg0 = r0;
    r0 = pxsim_Array__getAt(globals.PLAYER_AVATARS___173605, s.i___173612);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 427; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = (s.i___173612 + 1);
    s.i___173612 = (r0);
    { step = 1; continue; }
  case 2:
    s.tmp_0 = FirstRoll_setup__P173346_mk(s);
    s.callLocIdx = 428; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
FirstRollTests_start__P173607.info = {"start":3326,"length":348,"line":103,"column":4,"endLine":111,"endColumn":5,"fileName":"firstroll.ts","functionName":"start","argumentNames":["numPlayers"]}

function FirstRollTests_start__P173607_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: FirstRollTests_start__P173607, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  i___173612: undefined,
  arg0: undefined,
} }





function FirstRoll_setup__P173346(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.header___173509 = undefined;
    s.footer___173515 = undefined;
    s.deltaX___173521 = undefined;
    s.x___173527 = undefined;
    s.y___173532 = undefined;
    s.i___173533 = undefined;
    s.p___173538 = undefined;
    globals.gameMode___158120 = (2);
    s.tmp_0 = scene_setBackgroundColor__P2882_mk(s);
    s.tmp_0.arg0 = 12;
    s.callLocIdx = 406; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = textsprite_create__P4343_mk(s);
    s.tmp_0.arg0 = "Determine first player";
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 5;
    s.callLocIdx = 407; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.header___173509 = (r0);
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_0.arg0 = s.header___173509;
    s.tmp_0.arg1 = 80;
    s.tmp_0.arg2 = 5;
    s.callLocIdx = 408; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = textsprite_create__P4343_mk(s);
    s.tmp_0.arg0 = "Players: Press A to roll!";
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 1;
    s.callLocIdx = 409; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.footer___173515 = (r0);
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_0.arg0 = s.footer___173515;
    s.tmp_0.arg1 = 80;
    s.tmp_0.arg2 = 115;
    s.callLocIdx = 410; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = (160 / globals.numPlayers___158155);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.deltaX___173521 = (r0);
    r0 = (s.deltaX___173521 / 2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.x___173527 = (r0);
    s.y___173532 = (100);
    s.i___173533 = (0);
  case 1:
    r0 = (s.i___173533 < globals.numPlayers___158155);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(globals.players___158156, s.i___173533);
    s.p___173538 = (r0);
    s.tmp_0 = Player_moveSprite__P143761_mk(s);
    s.tmp_0.arg0 = s.p___173538;
    s.tmp_0.arg1 = s.x___173527;
    s.tmp_0.arg2 = s.y___173532;
    s.callLocIdx = 411; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.tmp_0 = Player_showSprite__P143763_mk(s);
    s.tmp_0.arg0 = s.p___173538;
    s.callLocIdx = 412; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = Dice_Orientation__P32593_mk(s);
    r0 = s.p___173538.fields["dice"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 414; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.tmp_0 = Dice_setStartLocation__P32594_mk(s);
    r0 = s.p___173538.fields["dice"];
    s.tmp_0.arg0 = r0;
    r0 = (s.x___173527 - 7);
    s.tmp_0.arg1 = r0;
    r0 = (s.y___173532 - 20);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 416; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.tmp_0 = Dice_setStopLocation__P32595_mk(s);
    r0 = s.p___173538.fields["dice"];
    s.tmp_0.arg0 = r0;
    r0 = (s.x___173527 - 7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 16;
    s.callLocIdx = 418; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_0 = Dice_setLocationChange__P32596_mk(s);
    r0 = s.p___173538.fields["dice"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = -5;
    s.callLocIdx = 420; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.tmp_0 = Dice_show__P32597_mk(s);
    r0 = s.p___173538.fields["dice"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 422; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = (s.x___173527 + s.deltaX___173521);
    s.x___173527 = (r0);
    r0 = pxsim_Array__push(globals.firstRollStarted___173398, false);
    r0 = (s.i___173533 + 1);
    s.i___173533 = (r0);
    { step = 1; continue; }
  case 2:
    globals.gameMode___158120 = (5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
FirstRoll_setup__P173346.info = {"start":1787,"length":1125,"line":64,"column":4,"endLine":89,"endColumn":5,"fileName":"firstroll.ts","functionName":"setup","argumentNames":[]}

function FirstRoll_setup__P173346_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: FirstRoll_setup__P173346, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  header___173509: undefined,
  footer___173515: undefined,
  deltaX___173521: undefined,
  x___173527: undefined,
  y___173532: undefined,
  i___173533: undefined,
  p___173538: undefined,
} }





function Dice_show__P32597(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___32939 = undefined;
    s.unnamed20278___U1 = undefined;
    s.unnamed20279___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    s.tmp_0 = Dice_resetSprites__P32631_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 370; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.s___32939 = (undefined);
    r0 = s.arg0.fields["sprites"];
    s.unnamed20278___U1 = (r0);
    s.unnamed20279___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20279___U2;
    r0 = pxsim_Array__length(s.unnamed20278___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20278___U1, s.unnamed20279___U2);
    s.s___32939 = (r0);
    s.tmp_2 = Sprite_setFlag__P2418_mk(s);
    s.tmp_2.arg0 = s.s___32939;
    s.tmp_2.arg1 = 128;
    s.tmp_2.arg2 = false;
    s.callLocIdx = 371; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    r0 = (s.unnamed20279___U2 + 1);
    s.unnamed20279___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed20278___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_show__P32597.info = {"start":4308,"length":154,"line":167,"column":4,"endLine":172,"endColumn":5,"fileName":"dice.ts","functionName":"show","argumentNames":["this"]}

function Dice_show__P32597_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_show__P32597, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  s___32939: undefined,
  unnamed20278___U1: undefined,
  unnamed20279___U2: undefined,
  arg0: undefined,
} }





function Sprite_setFlag__P2418(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1152]) return breakpoint(s, 3, 1152, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1153]) return breakpoint(s, 4, 1153, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1154]) return breakpoint(s, 5, 1154, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["flags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | s.arg1);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setFlag__P2418.info = {"start":20205,"length":130,"line":676,"column":4,"endLine":679,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setFlag","argumentNames":["this","flag","on"]}

function Sprite_setFlag__P2418_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setFlag__P2418, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Dice_resetSprites__P32631(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___32968 = undefined;
    s.y___32971 = undefined;
    s.s___32975 = undefined;
    s.unnamed20280___U3 = undefined;
    s.unnamed20281___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = s.arg0.fields["startX"];
    s.x___32968 = (r0);
    r0 = s.arg0.fields["startY"];
    s.y___32971 = (r0);
    s.s___32975 = (undefined);
    r0 = s.arg0.fields["sprites"];
    s.unnamed20280___U3 = (r0);
    s.unnamed20281___U4 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20281___U4;
    r0 = pxsim_Array__length(s.unnamed20280___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20280___U3, s.unnamed20281___U4);
    s.s___32975 = (r0);
    s.tmp_2 = Sprite_setPosition__P2408_mk(s);
    s.tmp_2.arg0 = s.s___32975;
    s.tmp_2.arg1 = s.x___32968;
    s.tmp_2.arg2 = s.y___32971;
    s.callLocIdx = 375; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = s.arg0.fields["orientation"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 2:
    s.tmp_1 = r0 = s.x___32968;
    s.tmp_6 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_6.arg0 = "d6white";
    s.callLocIdx = 376; s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, 0);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.x___32968 = (r0);
    { step = 4; continue; }
  case 3:
    s.tmp_0 = r0 = s.y___32971;
    s.tmp_5 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_5.arg0 = "d6white";
    s.callLocIdx = 377; s.pc = 8; return s.tmp_5;
  case 8:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, 0);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.y___32971 = (r0);
  case 4:
    r0 = (s.unnamed20281___U4 + 1);
    s.unnamed20281___U4 = (r0);
    { step = 1; continue; }
  case 5:
    s.unnamed20280___U3 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_resetSprites__P32631.info = {"start":4808,"length":539,"line":190,"column":4,"endLine":205,"endColumn":5,"fileName":"dice.ts","functionName":"resetSprites","argumentNames":["this"]}

function Dice_resetSprites__P32631_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_resetSprites__P32631, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  x___32968: undefined,
  y___32971: undefined,
  s___32975: undefined,
  unnamed20280___U3: undefined,
  unnamed20281___U4: undefined,
  arg0: undefined,
} }





function Dice_setLocationChange__P32596(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = (s.arg0).fields["areRolling"] = (false);
    r0 = (s.arg0).fields["deltaX"] = (s.arg1);
    r0 = (s.arg0).fields["deltaY"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_setLocationChange__P32596.info = {"start":3889,"length":138,"line":149,"column":4,"endLine":153,"endColumn":5,"fileName":"dice.ts","functionName":"setLocationChange","argumentNames":["this","vx","vy"]}

function Dice_setLocationChange__P32596_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_setLocationChange__P32596, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Dice_setStopLocation__P32595(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = (s.arg0).fields["areRolling"] = (false);
    r0 = (s.arg0).fields["stopX"] = (s.arg1);
    r0 = (s.arg0).fields["stopY"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_setStopLocation__P32595.info = {"start":4172,"length":130,"line":161,"column":4,"endLine":165,"endColumn":5,"fileName":"dice.ts","functionName":"setStopLocation","argumentNames":["this","x","y"]}

function Dice_setStopLocation__P32595_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_setStopLocation__P32595, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Dice_setStartLocation__P32594(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = (s.arg0).fields["areRolling"] = (false);
    r0 = (s.arg0).fields["startX"] = (s.arg1);
    r0 = (s.arg0).fields["startY"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_setStartLocation__P32594.info = {"start":4033,"length":133,"line":155,"column":4,"endLine":159,"endColumn":5,"fileName":"dice.ts","functionName":"setStartLocation","argumentNames":["this","x","y"]}

function Dice_setStartLocation__P32594_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_setStartLocation__P32594, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Player_Dice__P143757(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    r0 = s.arg0.fields["dice"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Player_Dice__P143757.info = {"start":1575,"length":56,"line":71,"column":4,"endLine":73,"endColumn":5,"fileName":"players.ts","functionName":"Dice","argumentNames":["this"]}
Player_Dice__P143757.isGetter = true;

function Player_Dice__P143757_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_Dice__P143757, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Dice_Orientation__P32593(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = s.arg0.fields["values"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.arg1 = (1);
  case 3:
  case 4:
    r0 = (s.arg0).fields["orientation"] = (s.arg1);
    s.tmp_0 = Dice_resetSprites__P32631_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 359; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_Orientation__P32593.info = {"start":2097,"length":235,"line":81,"column":4,"endLine":87,"endColumn":5,"fileName":"dice.ts","functionName":"Orientation","argumentNames":["this","value"]}

function Dice_Orientation__P32593_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_Orientation__P32593, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Dice_Count__P32624(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = s.arg0.fields["values"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Dice_Count__P32624.info = {"start":1568,"length":68,"line":61,"column":4,"endLine":63,"endColumn":5,"fileName":"dice.ts","functionName":"Count","argumentNames":["this"]}
Dice_Count__P32624.isGetter = true;

function Dice_Count__P32624_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_Count__P32624, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Dice_Orientation__P32592(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = s.arg0.fields["orientation"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Dice_Orientation__P32592.info = {"start":2010,"length":81,"line":77,"column":4,"endLine":79,"endColumn":5,"fileName":"dice.ts","functionName":"Orientation","argumentNames":["this"]}
Dice_Orientation__P32592.isGetter = true;

function Dice_Orientation__P32592_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_Orientation__P32592, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Player_showSprite__P143763(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 128;
    s.tmp_0.arg2 = false;
    s.callLocIdx = 347; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Player_showSprite__P143763.info = {"start":2395,"length":90,"line":107,"column":4,"endLine":109,"endColumn":5,"fileName":"players.ts","functionName":"showSprite","argumentNames":["this"]}

function Player_showSprite__P143763_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_showSprite__P143763, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Player_moveSprite__P143761(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 344; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Player_moveSprite__P143761.info = {"start":1972,"length":91,"line":94,"column":4,"endLine":96,"endColumn":5,"fileName":"players.ts","functionName":"moveSprite","argumentNames":["this","x","y"]}

function Player_moveSprite__P143761_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_moveSprite__P143761, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_setPosition__P2408(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___15105 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1129]) return breakpoint(s, 1, 1129, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 380; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___15105 = (r0);
    s.lastBrkId = 1130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1130]) return breakpoint(s, 3, 1130, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2510_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___15105;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_1 = Fx8__P149_mk(s);
    s.tmp_2 = r0 = s.arg1;
    s.tmp_4 = Sprite_x__P2353_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 381; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 382; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_5 = Fx8__P149_mk(s);
    s.tmp_6 = r0 = s.arg2;
    s.tmp_8 = Sprite_y__P2355_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 383; s.pc = 8; return s.tmp_8;
  case 8:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 - s.tmp_7);
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 384; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2510_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setPosition__P2408.info = {"start":13931,"length":220,"line":496,"column":4,"endLine":503,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setPosition","argumentNames":["this","x","y"]}

function Sprite_setPosition__P2408_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setPosition__P2408, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  physics___15105: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function PhysicsEngine_moveSprite__P2514(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2510_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_moveSprite__P2514.info = {"start":230,"length":43,"line":13,"column":4,"endLine":13,"endColumn":47,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function PhysicsEngine_moveSprite__P2514_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_moveSprite__P2514, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_y__P2355(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1045]) return breakpoint(s, 1, 1045, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    s.tmp_1 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["_y"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = Fx_div__P162_mk(s);
    r0 = s.arg0.fields["_height"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 512;
    s.callLocIdx = 316; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 317; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 318; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_y__P2355.info = {"start":2893,"length":100,"line":121,"column":4,"endLine":123,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this"]}
Sprite_y__P2355.isGetter = true;

function Sprite_y__P2355_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P2355, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_toFloat__P173(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[237]) return breakpoint(s, 1, 237, r0);
  case 1:
    r0 = (s.arg0 / 256);
    return leave(s, r0)
  default: oops()
} } }
Fx_toFloat__P173.info = {"start":2470,"length":81,"line":77,"column":4,"endLine":79,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toFloat","argumentNames":["v"]}

function Fx_toFloat__P173_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toFloat__P173, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Fx_div__P162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[222]) return breakpoint(s, 1, 222, r0);
  case 1:
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_div__P162.info = {"start":1145,"length":129,"line":35,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"div","argumentNames":["a","b"]}

function Fx_div__P162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_div__P162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_add__P157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[217]) return breakpoint(s, 1, 217, r0);
  case 1:
    r0 = (s.arg0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_add__P157.info = {"start":511,"length":118,"line":20,"column":4,"endLine":22,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"add","argumentNames":["a","b"]}

function Fx_add__P157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_add__P157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_x__P2353(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1043]) return breakpoint(s, 1, 1043, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    s.tmp_1 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = Fx_div__P162_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 512;
    s.callLocIdx = 311; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 312; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 313; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_x__P2353.info = {"start":2537,"length":99,"line":110,"column":4,"endLine":112,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this"]}
Sprite_x__P2353.isGetter = true;

function Sprite_x__P2353_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P2353, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function textsprite_create__P4343(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sprite___15122 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3265]) return breakpoint(s, 1, 3265, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(TextSprite__C4332_VT);
    s.tmp_0 = r0;
    s.tmp_1 = TextSprite_constructor__P4333_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.tmp_1.arg4 = 8;
    s.tmp_1.arg5 = 0;
    s.tmp_1.arg6 = 0;
    s.tmp_1.arg7 = 0;
    s.tmp_1.arg8 = 0;
    s.tmp_1.arg9 = 0;
    s.tmp_1.arg10 = null;
    s.callLocIdx = 1537; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.sprite___15122 = (s.tmp_0);
    s.lastBrkId = 3266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3266]) return breakpoint(s, 3, 3266, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2510_v0_2_mk(s);
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1538; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.sprite___15122;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2510_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.addSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3267]) return breakpoint(s, 6, 3267, r0);
  case 6:
    r0 = s.sprite___15122;
    return leave(s, r0)
  default: oops()
} } }
textsprite_create__P4343.info = {"start":5013,"length":274,"line":138,"column":4,"endLine":146,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"create","argumentNames":["text","bg","fg"]}

function textsprite_create__P4343_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: textsprite_create__P4343, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sprite___15122: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function TextSprite_constructor__P4333(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.arg10 = (s.lambdaArgs[10]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSprite__C4332_VT)) failedCast(r0);
    r0 = (s.arg0).fields["text"] = (s.arg1);
    r0 = (s.arg0).fields["bg"] = (s.arg2);
    r0 = (s.arg0).fields["fg"] = (s.arg3);
    r0 = (s.arg0).fields["maxFontHeight"] = (s.arg4);
    r0 = (s.arg0).fields["borderWidth"] = (s.arg5);
    r0 = (s.arg0).fields["borderColor"] = (s.arg6);
    r0 = (s.arg0).fields["padding"] = (s.arg7);
    r0 = (s.arg0).fields["outlineWidth"] = (s.arg8);
    r0 = (s.arg0).fields["outlineColor"] = (s.arg9);
    r0 = (s.arg0).fields["icon"] = (s.arg10);
    s.lastBrkId = 3217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3217]) return breakpoint(s, 1, 3217, r0);
  case 1:
    s.tmp_0 = Sprite_constructor__P2387_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.image.create(0, 0);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1511; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3218]) return breakpoint(s, 3, 3218, r0);
  case 3:
    s.tmp_0 = Sprite_setKind__P2407_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.Text___4331;
    s.callLocIdx = 1512; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3219]) return breakpoint(s, 5, 3219, r0);
  case 5:
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1513; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3220]) return breakpoint(s, 7, 3220, r0);
  case 7:
    s.tmp_0 = TextSprite_update__P4334_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1514; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSprite_constructor__P4333.info = {"start":171,"length":501,"line":8,"column":4,"endLine":24,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"inline","argumentNames":["this","text","bg","fg","maxFontHeight","borderWidth","borderColor","padding","outlineWidth","outlineColor","icon"]}

function TextSprite_constructor__P4333_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSprite_constructor__P4333, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
  arg10: undefined,
} }





function TextSprite_update__P4334(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.borderAndPadding___9726 = undefined;
    s.iconWidth___9736 = undefined;
    s.iconHeight___9750 = undefined;
    s.font___9757 = undefined;
    s.width___9765 = undefined;
    s.height___9778 = undefined;
    s.img___9788 = undefined;
    s.iconHeightOffset___9819 = undefined;
    s.textHeightOffset___9831 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSprite__C4332_VT)) failedCast(r0);
    s.lastBrkId = 3221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3221]) return breakpoint(s, 9, 3221, r0);
  case 9:
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["padding"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["outlineWidth"];
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.borderAndPadding___9726 = (r0);
    s.lastBrkId = 3222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3222]) return breakpoint(s, 10, 3222, r0);
  case 10:
    r0 = s.arg0.fields["icon"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["icon"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["padding"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["outlineWidth"];
    s.tmp_5 = r0;
    r0 = (s.tmp_1 + s.tmp_5);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.iconWidth___9736 = (s.tmp_6);
    s.lastBrkId = 3223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3223]) return breakpoint(s, 11, 3223, r0);
  case 11:
    r0 = s.arg0.fields["icon"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["icon"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_1);
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.iconHeight___9750 = (s.tmp_2);
    s.lastBrkId = 3224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3224]) return breakpoint(s, 12, 3224, r0);
  case 12:
    s.tmp_0 = textsprite_getFontForTextAndHeight__P4342_mk(s);
    r0 = s.arg0.fields["text"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxFontHeight"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1515; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.font___9757 = (r0);
    s.lastBrkId = 3225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3225]) return breakpoint(s, 14, 3225, r0);
  case 14:
    s.tmp_1 = r0 = s.iconWidth___9736;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = s.font___9757;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1516; s.pc = 15; return s.tmp_4; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["text"];
    s.tmp_6 = r0;
    r0 = pxsim_String_.length(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (2 * s.borderAndPadding___9726);
    s.tmp_7 = r0;
    r0 = (s.tmp_0 + s.tmp_7);
    s.width___9765 = (r0);
    s.lastBrkId = 3226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3226]) return breakpoint(s, 16, 3226, r0);
  case 16:
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = s.iconHeight___9750;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___9757;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1517; s.pc = 18; return s.tmp_2; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1518; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (2 * s.borderAndPadding___9726);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.height___9778 = (r0);
    s.lastBrkId = 3227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3227]) return breakpoint(s, 19, 3227, r0);
  case 19:
    r0 = pxsim.image.create(s.width___9765, s.height___9778);
    s.img___9788 = (r0);
    s.lastBrkId = 3228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3228]) return breakpoint(s, 20, 3228, r0);
  case 20:
    r0 = s.arg0.fields["borderColor"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.fill(s.img___9788, s.tmp_0);
    s.lastBrkId = 3229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3229]) return breakpoint(s, 21, 3229, r0);
  case 21:
    s.tmp_0 = helpers_imageFillRect__P1956_mk(s);
    s.tmp_0.arg0 = s.img___9788;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_0.arg2 = r0;
    s.tmp_1 = r0 = s.width___9765;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg3 = r0;
    s.tmp_4 = r0 = s.height___9778;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["bg"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1519; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 3230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3230]) return breakpoint(s, 23, 3230, r0);
  case 23:
    r0 = s.arg0.fields["icon"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3231]) return breakpoint(s, 24, 3231, r0);
  case 24:
    r0 = (s.height___9778 - s.iconHeight___9750);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.iconHeightOffset___9819 = (r0);
    s.lastBrkId = 3232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3232]) return breakpoint(s, 25, 3232, r0);
  case 25:
    s.tmp_0 = textsprite_renderScaledImage__P4341_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.img___9788;
    s.tmp_0.arg2 = s.borderAndPadding___9726;
    s.tmp_0.arg3 = s.iconHeightOffset___9819;
    s.tmp_0.arg4 = 0;
    s.callLocIdx = 1520; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 3233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3233]) return breakpoint(s, 27, 3233, r0);
  case 27:
    s.tmp_1 = r0 = s.height___9778;
    s.tmp_3 = if_charHeight_1_mk(s);
    s.tmp_3.arg0 = s.font___9757;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1521; s.pc = 28; return s.tmp_3; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    s.textHeightOffset___9831 = (r0);
    s.lastBrkId = 3234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3234]) return breakpoint(s, 29, 3234, r0);
  case 29:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = s.img___9788;
    r0 = s.arg0.fields["text"];
    s.tmp_0.arg1 = r0;
    r0 = (s.iconWidth___9736 + s.borderAndPadding___9726);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.textHeightOffset___9831;
    r0 = s.arg0.fields["fg"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___9757;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1522; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 3235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3235]) return breakpoint(s, 31, 3235, r0);
  case 31:
    r0 = s.arg0.fields["outlineWidth"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3236]) return breakpoint(s, 32, 3236, r0);
  case 32:
    s.tmp_2 = textsprite_outlineOtherColor__P4344_mk(s);
    s.tmp_2.arg0 = s.img___9788;
    r0 = s.arg0.fields["fg"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["outlineWidth"];
    s.tmp_2.arg2 = r0;
    r0 = s.arg0.fields["outlineColor"];
    s.tmp_2.arg3 = r0;
    s.callLocIdx = 1523; s.pc = 33; return s.tmp_2;
  case 33:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 3237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3237]) return breakpoint(s, 34, 3237, r0);
  case 34:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.img___9788;
    s.callLocIdx = 1524; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSprite_update__P4334.info = {"start":678,"length":1260,"line":26,"column":4,"endLine":45,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"update","argumentNames":["this"]}

function TextSprite_update__P4334_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSprite_update__P4334, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  borderAndPadding___9726: undefined,
  iconWidth___9736: undefined,
  iconHeight___9750: undefined,
  font___9757: undefined,
  width___9765: undefined,
  height___9778: undefined,
  img___9788: undefined,
  iconHeightOffset___9819: undefined,
  textHeightOffset___9831: undefined,
  arg0: undefined,
} }





function textsprite_outlineOtherColor__P4344(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.toOutlineX___9869 = undefined;
    s.toOutlineY___9871 = undefined;
    s.x___9873 = undefined;
    s.y___9879 = undefined;
    s.sx___9885 = undefined;
    s.sy___9890 = undefined;
    s.i___9969 = undefined;
    s.x___9975 = undefined;
    s.y___9979 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3268]) return breakpoint(s, 24, 3268, r0);
  case 24:
    r0 = pxsim_Array__mk();
    s.toOutlineX___9869 = (r0);
    s.lastBrkId = 3269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3269]) return breakpoint(s, 25, 3269, r0);
  case 25:
    r0 = pxsim_Array__mk();
    s.toOutlineY___9871 = (r0);
    s.lastBrkId = 3270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3270]) return breakpoint(s, 26, 3270, r0);
  case 26:
    s.x___9873 = (0);
    s.lastBrkId = 3271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3271]) return breakpoint(s, 27, 3271, r0);
  case 27:
  case 1:
    s.lastBrkId = 3272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3272]) return breakpoint(s, 28, 3272, r0);
  case 28:
    s.tmp_1 = r0 = s.x___9873;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 3273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3273]) return breakpoint(s, 29, 3273, r0);
  case 29:
    s.y___9879 = (0);
    s.lastBrkId = 3274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3274]) return breakpoint(s, 30, 3274, r0);
  case 30:
  case 2:
    s.lastBrkId = 3275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3275]) return breakpoint(s, 31, 3275, r0);
  case 31:
    s.tmp_1 = r0 = s.y___9879;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 3276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3276]) return breakpoint(s, 32, 3276, r0);
  case 32:
    s.sx___9885 = (0);
    s.lastBrkId = 3277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3277]) return breakpoint(s, 33, 3277, r0);
  case 33:
  case 3:
    s.lastBrkId = 3278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3278]) return breakpoint(s, 34, 3278, r0);
  case 34:
    r0 = (s.sx___9885 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 3279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3279]) return breakpoint(s, 35, 3279, r0);
  case 35:
    s.sy___9890 = (0);
    s.lastBrkId = 3280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3280]) return breakpoint(s, 36, 3280, r0);
  case 36:
  case 4:
    s.lastBrkId = 3281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3281]) return breakpoint(s, 37, 3281, r0);
  case 37:
    r0 = (s.sy___9890 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 3282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3282]) return breakpoint(s, 38, 3282, r0);
  case 38:
    r0 = (s.sx___9885 + s.sy___9890);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3283]) return breakpoint(s, 39, 3283, r0);
  case 39:
    { step = 17; continue; }
  case 5:
  case 6:
    s.lastBrkId = 3284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3284]) return breakpoint(s, 40, 3284, r0);
  case 40:
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.x___9873, s.y___9879);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 === s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3285]) return breakpoint(s, 41, 3285, r0);
  case 41:
    { step = 17; continue; }
  case 7:
  case 8:
    s.lastBrkId = 3286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3286]) return breakpoint(s, 42, 3286, r0);
  case 42:
    s.tmp_7 = r0 = s.arg0;
    r0 = (s.x___9873 + s.sx___9885);
    s.tmp_8 = r0;
    r0 = (s.y___9879 + s.sy___9890);
    s.tmp_9 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_7, s.tmp_8, s.tmp_9);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 === s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_5;
    { step = 10; continue; }
  case 9:
    s.tmp_11 = r0 = s.arg0;
    r0 = (s.x___9873 - s.sx___9885);
    s.tmp_12 = r0;
    r0 = (s.y___9879 + s.sy___9890);
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_11, s.tmp_12, s.tmp_13);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 === s.arg1);
  case 10:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBool(s.tmp_14);
    if (!r0) { step = 11; continue; }
    r0 = s.tmp_14;
    { step = 12; continue; }
  case 11:
    s.tmp_16 = r0 = s.arg0;
    r0 = (s.x___9873 + s.sx___9885);
    s.tmp_17 = r0;
    r0 = (s.y___9879 - s.sy___9890);
    s.tmp_18 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_16, s.tmp_17, s.tmp_18);
    s.tmp_15 = r0;
    r0 = (s.tmp_15 === s.arg1);
  case 12:
    // jmp value (already in r0)
    s.tmp_19 = r0;
    r0 = pxsim_numops_toBool(s.tmp_19);
    if (!r0) { step = 13; continue; }
    r0 = s.tmp_19;
    { step = 14; continue; }
  case 13:
    s.tmp_21 = r0 = s.arg0;
    r0 = (s.x___9873 - s.sx___9885);
    s.tmp_22 = r0;
    r0 = (s.y___9879 - s.sy___9890);
    s.tmp_23 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_21, s.tmp_22, s.tmp_23);
    s.tmp_20 = r0;
    r0 = (s.tmp_20 === s.arg1);
  case 14:
    // jmp value (already in r0)
    s.tmp_24 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_24);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 3287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3287]) return breakpoint(s, 43, 3287, r0);
  case 43:
    r0 = pxsim_Array__push(s.toOutlineX___9869, s.x___9873);
    s.lastBrkId = 3288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3288]) return breakpoint(s, 44, 3288, r0);
  case 44:
    r0 = pxsim_Array__push(s.toOutlineY___9871, s.y___9879);
  case 15:
  case 16:
  case 17:
    s.lastBrkId = 3289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3289]) return breakpoint(s, 45, 3289, r0);
  case 45:
    r0 = (s.sy___9890 + 1);
    s.sy___9890 = (r0);
    { step = 4; continue; }
  case 18:
    s.lastBrkId = 3290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3290]) return breakpoint(s, 46, 3290, r0);
  case 46:
    r0 = (s.sx___9885 + 1);
    s.sx___9885 = (r0);
    { step = 3; continue; }
  case 19:
    s.lastBrkId = 3291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3291]) return breakpoint(s, 47, 3291, r0);
  case 47:
    r0 = (s.y___9879 + 1);
    s.y___9879 = (r0);
    { step = 2; continue; }
  case 20:
    s.lastBrkId = 3292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3292]) return breakpoint(s, 48, 3292, r0);
  case 48:
    r0 = (s.x___9873 + 1);
    s.x___9873 = (r0);
    { step = 1; continue; }
  case 21:
    s.lastBrkId = 3293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3293]) return breakpoint(s, 49, 3293, r0);
  case 49:
    s.i___9969 = (0);
    s.lastBrkId = 3294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3294]) return breakpoint(s, 50, 3294, r0);
  case 50:
  case 22:
    s.lastBrkId = 3295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3295]) return breakpoint(s, 51, 3295, r0);
  case 51:
    s.tmp_1 = r0 = s.i___9969;
    r0 = pxsim_Array__length(s.toOutlineX___9869);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 3296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3296]) return breakpoint(s, 52, 3296, r0);
  case 52:
    r0 = pxsim_Array__getAt(s.toOutlineX___9869, s.i___9969);
    s.x___9975 = (r0);
    s.lastBrkId = 3297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3297]) return breakpoint(s, 53, 3297, r0);
  case 53:
    r0 = pxsim_Array__getAt(s.toOutlineY___9871, s.i___9969);
    s.y___9979 = (r0);
    s.lastBrkId = 3298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3298]) return breakpoint(s, 54, 3298, r0);
  case 54:
    r0 = pxsim_ImageMethods.setPixel(s.arg0, s.x___9975, s.y___9979, s.arg3);
    s.lastBrkId = 3299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3299]) return breakpoint(s, 55, 3299, r0);
  case 55:
    r0 = (s.i___9969 + 1);
    s.i___9969 = (r0);
    { step = 22; continue; }
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
textsprite_outlineOtherColor__P4344.info = {"start":5293,"length":1299,"line":148,"column":4,"endLine":176,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"outlineOtherColor","argumentNames":["img","targetColor","outlineWidth","outlineColor"]}

function textsprite_outlineOtherColor__P4344_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: textsprite_outlineOtherColor__P4344, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  toOutlineX___9869: undefined,
  toOutlineY___9871: undefined,
  x___9873: undefined,
  y___9879: undefined,
  sx___9885: undefined,
  sy___9890: undefined,
  i___9969: undefined,
  x___9975: undefined,
  y___9979: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function textsprite_getFontForTextAndHeight__P4342(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.baseFont___10418 = undefined;
    s.hasUnicode___10422 = undefined;
    s.availableFonts___10426 = undefined;
    s.remainders___10434 = undefined;
    s.fontIdx___10444 = undefined;
    s.font___10459 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3258]) return breakpoint(s, 3, 3258, r0);
  case 3:
    s.tmp_0 = image_getFontForText__P1977_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1530; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.baseFont___10418 = (r0);
    s.lastBrkId = 3259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3259]) return breakpoint(s, 5, 3259, r0);
  case 5:
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = s.baseFont___10418;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1531; s.pc = 6; return s.tmp_1; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 === 12);
    s.hasUnicode___10422 = (r0);
    s.lastBrkId = 3260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3260]) return breakpoint(s, 7, 3260, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.hasUnicode___10422);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.baseFont___10418);
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_1, globals.font8___1975);
    r0 = pxsim_Array__push(s.tmp_1, globals.font5___1980);
    r0 = s.tmp_1;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.availableFonts___10426 = (s.tmp_2);
    s.lastBrkId = 3261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3261]) return breakpoint(s, 8, 3261, r0);
  case 8:
    r0 = pxsim_pxtcore_mkAction(1, remainders_inline__P10436);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayMap__P106_mk(s);
    s.tmp_1.arg0 = s.availableFonts___10426;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1533; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.remainders___10434 = (r0);
    s.lastBrkId = 3262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3262]) return breakpoint(s, 10, 3262, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(1, fontIdx_inline__P10448);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.remainders___10434);
    s.tmp_1 = helpers_arrayReduce__P112_mk(s);
    s.tmp_1.arg0 = s.remainders___10434;
    s.tmp_1.arg1 = s.tmp_0;
    s.tmp_1.arg2 = 99;
    s.callLocIdx = 1534; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.fontIdx___10444 = (r0);
    s.lastBrkId = 3263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3263]) return breakpoint(s, 12, 3263, r0);
  case 12:
    r0 = pxsim_Array__getAt(s.availableFonts___10426, s.fontIdx___10444);
    s.font___10459 = (r0);
    s.lastBrkId = 3264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3264]) return breakpoint(s, 13, 3264, r0);
  case 13:
    s.tmp_0 = image_scaledFont__P1979_mk(s);
    s.tmp_0.arg0 = s.font___10459;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = if_charHeight_1_mk(s);
    s.tmp_3.arg0 = s.font___10459;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1535; s.pc = 15; return s.tmp_3; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1536; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
textsprite_getFontForTextAndHeight__P4342.info = {"start":4027,"length":663,"line":116,"column":4,"endLine":126,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"getFontForTextAndHeight","argumentNames":["text","maxHeight"]}

function textsprite_getFontForTextAndHeight__P4342_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: textsprite_getFontForTextAndHeight__P4342, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  baseFont___10418: undefined,
  hasUnicode___10422: undefined,
  availableFonts___10426: undefined,
  remainders___10434: undefined,
  fontIdx___10444: undefined,
  font___10459: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function remainders_inline__P10436(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.caps[0];
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1532; s.pc = 1; return s.tmp_2; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 % s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
remainders_inline__P10436.info = {"start":4455,"length":29,"line":122,"column":46,"endLine":122,"endColumn":75,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"inline","argumentNames":["s"]}

function remainders_inline__P10436_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: remainders_inline__P10436, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function fontIdx_inline__P10448(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__getAt(s.caps[0], s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg2;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
fontIdx_inline__P10448.info = {"start":4528,"length":39,"line":123,"column":42,"endLine":123,"endColumn":81,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"inline","argumentNames":["p","n","i"]}

function fontIdx_inline__P10448_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: fontIdx_inline__P10448, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function image_scaledFont__P1979(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[589]) return breakpoint(s, 6, 589, r0);
  case 6:
    r0 = (s.arg1 | 0);
    s.arg1 = (r0);
    s.lastBrkId = 590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[590]) return breakpoint(s, 7, 590, r0);
  case 7:
    r0 = (s.arg1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[591]) return breakpoint(s, 8, 591, r0);
  case 8:
    r0 = s.arg0;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[592]) return breakpoint(s, 9, 592, r0);
  case 9:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 92; s.pc = 10; return s.tmp_4; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charWidth", s.tmp_2);
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.arg0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 93; s.pc = 11; return s.tmp_7; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charHeight", s.tmp_5);
    s.tmp_9 = if_data_1_mk(s);
    s.tmp_9.arg0 = s.arg0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "data");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["data"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["data"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 94; s.pc = 12; return s.tmp_9; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "data", s.tmp_8);
    s.tmp_11 = if_multiplier_1_mk(s);
    s.tmp_11.arg0 = s.arg0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "multiplier");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["multiplier"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["multiplier"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 95; s.pc = 13; return s.tmp_11; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 3; continue; }
    s.tmp_12 = r0 = s.arg1;
    s.tmp_14 = if_multiplier_1_mk(s);
    s.tmp_14.arg0 = s.arg0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "multiplier");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["multiplier"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["multiplier"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 96; s.pc = 14; return s.tmp_14; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 * s.tmp_13);
    { step = 4; continue; }
  case 3:
    r0 = s.arg1;
  case 4:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "multiplier", s.tmp_15);
    r0 = s.tmp_1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_scaledFont__P1979.info = {"start":12096,"length":331,"line":150,"column":4,"endLine":160,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"scaledFont","argumentNames":["f","size"]}

function image_scaledFont__P1979_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_scaledFont__P1979, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function image_getFontForText__P1977(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___10321 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[581]) return breakpoint(s, 6, 581, r0);
  case 6:
    s.i___10321 = (0);
    s.lastBrkId = 582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[582]) return breakpoint(s, 7, 582, r0);
  case 7:
  case 1:
    s.lastBrkId = 583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[583]) return breakpoint(s, 8, 583, r0);
  case 8:
    s.tmp_1 = r0 = s.i___10321;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[584]) return breakpoint(s, 9, 584, r0);
  case 9:
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___10321);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 > 8192);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[585]) return breakpoint(s, 10, 585, r0);
  case 10:
    r0 = globals.font12___1976;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[586]) return breakpoint(s, 11, 586, r0);
  case 11:
    r0 = (s.i___10321 + 1);
    s.i___10321 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[587]) return breakpoint(s, 12, 587, r0);
  case 12:
    r0 = globals.font8___1975;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_getFontForText__P1977.info = {"start":11713,"length":259,"line":136,"column":4,"endLine":143,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"getFontForText","argumentNames":["text"]}

function image_getFontForText__P1977_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_getFontForText__P1977, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___10321: undefined,
  arg0: undefined,
} }





function helpers_arrayReduce__P112(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___10497 = undefined;
    s.i___10500 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 91;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[91]) return breakpoint(s, 3, 91, r0);
  case 3:
    r0 = pxsim_Array__length(s.arg0);
    s.len___10497 = (r0);
    s.lastBrkId = 92;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[92]) return breakpoint(s, 4, 92, r0);
  case 4:
    s.i___10500 = (0);
    s.lastBrkId = 93;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[93]) return breakpoint(s, 5, 93, r0);
  case 5:
  case 1:
    s.lastBrkId = 94;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[94]) return breakpoint(s, 6, 94, r0);
  case 6:
    r0 = (s.i___10500 < s.len___10497);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 95;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[95]) return breakpoint(s, 7, 95, r0);
  case 7:
    s.tmp_1 = lambda_4_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.arg2;
    r0 = pxsim_Array__getAt(s.arg0, s.i___10500);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = s.i___10500;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 7; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.arg2 = (r0);
    s.lastBrkId = 96;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[96]) return breakpoint(s, 9, 96, r0);
  case 9:
    r0 = (s.i___10500 + 1);
    s.i___10500 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 97;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[97]) return breakpoint(s, 10, 97, r0);
  case 10:
    r0 = s.arg2;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayReduce__P112.info = {"start":8316,"length":317,"line":280,"column":4,"endLine":286,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayReduce","argumentNames":["arr","callbackfn","initialValue"]}

function helpers_arrayReduce__P112_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayReduce__P112, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___10497: undefined,
  i___10500: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayMap__P106(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___10517 = undefined;
    s.len___10519 = undefined;
    s.i___10522 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 59;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[59]) return breakpoint(s, 3, 59, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.res___10517 = (r0);
    s.lastBrkId = 60;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[60]) return breakpoint(s, 4, 60, r0);
  case 4:
    r0 = pxsim_Array__length(s.arg0);
    s.len___10519 = (r0);
    s.lastBrkId = 61;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[61]) return breakpoint(s, 5, 61, r0);
  case 5:
    s.i___10522 = (0);
    s.lastBrkId = 62;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[62]) return breakpoint(s, 6, 62, r0);
  case 6:
  case 1:
    s.lastBrkId = 63;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[63]) return breakpoint(s, 7, 63, r0);
  case 7:
    r0 = (s.i___10522 < s.len___10519);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 64;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[64]) return breakpoint(s, 8, 64, r0);
  case 8:
    s.tmp_1 = r0 = s.res___10517;
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___10522);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.i___10522;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 3; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 65;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[65]) return breakpoint(s, 10, 65, r0);
  case 10:
    r0 = (s.i___10522 + 1);
    s.i___10522 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 66;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[66]) return breakpoint(s, 11, 66, r0);
  case 11:
    r0 = s.res___10517;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayMap__P106.info = {"start":6528,"length":299,"line":229,"column":4,"endLine":236,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayMap","argumentNames":["arr","callbackfn"]}

function helpers_arrayMap__P106_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayMap__P106, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  res___10517: undefined,
  len___10519: undefined,
  i___10522: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function textsprite_renderScaledImage__P4341(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___10346 = undefined;
    s.tile___10348 = undefined;
    s.i___10350 = undefined;
    s.j___10356 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3246]) return breakpoint(s, 7, 3246, r0);
  case 7:
    s.scale___10346 = (s.arg4);
    s.lastBrkId = 3247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3247]) return breakpoint(s, 8, 3247, r0);
  case 8:
    s.tile___10348 = (s.arg0);
    s.lastBrkId = 3248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3248]) return breakpoint(s, 9, 3248, r0);
  case 9:
    s.i___10350 = (0);
    s.lastBrkId = 3249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3249]) return breakpoint(s, 10, 3249, r0);
  case 10:
  case 1:
    s.lastBrkId = 3250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3250]) return breakpoint(s, 11, 3250, r0);
  case 11:
    s.tmp_1 = r0 = s.i___10350;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3251]) return breakpoint(s, 12, 3251, r0);
  case 12:
    s.j___10356 = (0);
    s.lastBrkId = 3252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3252]) return breakpoint(s, 13, 3252, r0);
  case 13:
  case 2:
    s.lastBrkId = 3253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3253]) return breakpoint(s, 14, 3253, r0);
  case 14:
    s.tmp_1 = r0 = s.j___10356;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3254]) return breakpoint(s, 15, 3254, r0);
  case 15:
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.i___10350, s.j___10356);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 != 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3255]) return breakpoint(s, 16, 3255, r0);
  case 16:
    s.tmp_5 = r0 = s.arg1;
    s.tmp_7 = r0 = s.arg2;
    r0 = (s.i___10350 >> s.scale___10346);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_6 = r0;
    s.tmp_10 = r0 = s.arg3;
    r0 = (s.j___10356 >> s.scale___10346);
    s.tmp_11 = r0;
    r0 = (s.tmp_10 + s.tmp_11);
    s.tmp_9 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.i___10350, s.j___10356);
    s.tmp_12 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_5, s.tmp_6, s.tmp_9, s.tmp_12);
  case 3:
  case 4:
    s.lastBrkId = 3256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3256]) return breakpoint(s, 17, 3256, r0);
  case 17:
    s.tmp_0 = r0 = s.j___10356;
    r0 = (1 << s.scale___10346);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.j___10356 = (r0);
    { step = 2; continue; }
  case 5:
    s.lastBrkId = 3257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3257]) return breakpoint(s, 18, 3257, r0);
  case 18:
    s.tmp_0 = r0 = s.i___10350;
    r0 = (1 << s.scale___10346);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.i___10350 = (r0);
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
textsprite_renderScaledImage__P4341.info = {"start":3500,"length":521,"line":104,"column":4,"endLine":114,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"renderScaledImage","argumentNames":["source","destination","x","y","downScalePowerOfTwo"]}

function textsprite_renderScaledImage__P4341_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: textsprite_renderScaledImage__P4341, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  scale___10346: undefined,
  tile___10348: undefined,
  i___10350: undefined,
  j___10356: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function Sprite_setImage__P2390(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1086]) return breakpoint(s, 6, 1086, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = (s.arg1 === s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1087]) return breakpoint(s, 7, 1087, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1088]) return breakpoint(s, 8, 1088, r0);
  case 8:
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    s.lastBrkId = 1089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1089]) return breakpoint(s, 9, 1089, r0);
  case 9:
    s.tmp_0 = Sprite__C2340_v5_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2340_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.recalcSize;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setImage__P2390.info = {"start":9299,"length":131,"line":332,"column":4,"endLine":336,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setImage","argumentNames":["this","img"]}

function Sprite_setImage__P2390_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setImage__P2390, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_recalcSize__P5045(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1098]) return breakpoint(s, 1, 1098, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_sx__P2369_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 352; s.pc = 3; return s.tmp_6;
  case 3:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 353; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.lastBrkId = 1099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1099]) return breakpoint(s, 4, 1099, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_sy__P2371_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 354; s.pc = 6; return s.tmp_6;
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 355; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    s.lastBrkId = 1100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1100]) return breakpoint(s, 7, 1100, r0);
  case 7:
    s.tmp_0 = Sprite_resetHitbox__P2392_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 356; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_recalcSize__P5045.info = {"start":9982,"length":178,"line":363,"column":4,"endLine":367,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"recalcSize","argumentNames":["this"]}

function Sprite_recalcSize__P5045_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_recalcSize__P5045, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function Sprite_resetHitbox__P2392(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1091]) return breakpoint(s, 1, 1091, r0);
  case 1:
    r0 = (s.arg0).fields["_hitbox"] = (null);
    s.lastBrkId = 1092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1092]) return breakpoint(s, 2, 1092, r0);
  case 2:
    s.tmp_0 = Sprite__C2340_v4_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2340_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.setHitbox;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_resetHitbox__P2392.info = {"start":9580,"length":76,"line":342,"column":4,"endLine":345,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"resetHitbox","argumentNames":["this"]}

function Sprite_resetHitbox__P2392_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_resetHitbox__P2392, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_setHitbox__P2393(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1093]) return breakpoint(s, 3, 1093, r0);
  case 3:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1094]) return breakpoint(s, 4, 1094, r0);
  case 4:
    s.tmp_1 = game_Hitbox_updateIfInvalid__P2222_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 350; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1095]) return breakpoint(s, 6, 1095, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = game_calculateHitBox__P2224_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 351; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_hitbox"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setHitbox__P2393.info = {"start":9662,"length":173,"line":347,"column":4,"endLine":353,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setHitbox","argumentNames":["this"]}

function Sprite_setHitbox__P2393_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setHitbox__P2393, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_calculateHitBox__P2224(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14025 = undefined;
    s.minX___14028 = undefined;
    s.minY___14032 = undefined;
    s.maxX___14036 = undefined;
    s.maxY___14038 = undefined;
    s.c___14040 = undefined;
    s.fxc___14041 = undefined;
    s.r___14048 = undefined;
    s.fxr___14049 = undefined;
    s.width___14113 = undefined;
    s.height___14121 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1004]) return breakpoint(s, 12, 1004, r0);
  case 12:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = game_Hitbox_isValid__P2220_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 282; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1005]) return breakpoint(s, 14, 1005, r0);
  case 14:
    r0 = s.arg0.fields["_hitbox"];
    { step = 11; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1006]) return breakpoint(s, 15, 1006, r0);
  case 15:
    s.tmp_3 = Sprite_image__P2389_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 283; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    s.i___14025 = (r0);
    s.lastBrkId = 1007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1007]) return breakpoint(s, 17, 1007, r0);
  case 17:
    s.tmp_0 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.width(s.i___14025);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 284; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.minX___14028 = (r0);
    s.lastBrkId = 1008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1008]) return breakpoint(s, 19, 1008, r0);
  case 19:
    s.tmp_0 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.height(s.i___14025);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 285; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.minY___14032 = (r0);
    s.lastBrkId = 1009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1009]) return breakpoint(s, 21, 1009, r0);
  case 21:
    s.maxX___14036 = (0);
    s.lastBrkId = 1010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1010]) return breakpoint(s, 22, 1010, r0);
  case 22:
    s.maxY___14038 = (0);
    s.lastBrkId = 1011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1011]) return breakpoint(s, 23, 1011, r0);
  case 23:
    s.c___14040 = (0);
    s.lastBrkId = 1012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1012]) return breakpoint(s, 24, 1012, r0);
  case 24:
    s.fxc___14041 = (0);
    s.lastBrkId = 1013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1013]) return breakpoint(s, 25, 1013, r0);
  case 25:
  case 5:
    s.lastBrkId = 1014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1014]) return breakpoint(s, 26, 1014, r0);
  case 26:
    s.tmp_1 = r0 = s.c___14040;
    r0 = pxsim_ImageMethods.width(s.i___14025);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1015]) return breakpoint(s, 27, 1015, r0);
  case 27:
    s.r___14048 = (0);
    s.lastBrkId = 1016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1016]) return breakpoint(s, 28, 1016, r0);
  case 28:
    s.fxr___14049 = (0);
    s.lastBrkId = 1017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1017]) return breakpoint(s, 29, 1017, r0);
  case 29:
  case 6:
    s.lastBrkId = 1018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1018]) return breakpoint(s, 30, 1018, r0);
  case 30:
    s.tmp_1 = r0 = s.r___14048;
    r0 = pxsim_ImageMethods.height(s.i___14025);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1019]) return breakpoint(s, 31, 1019, r0);
  case 31:
    r0 = pxsim_ImageMethods.getPixel(s.i___14025, s.c___14040, s.r___14048);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1020]) return breakpoint(s, 32, 1020, r0);
  case 32:
    s.tmp_4 = Fx_min__P166_mk(s);
    s.tmp_4.arg0 = s.minX___14028;
    s.tmp_4.arg1 = s.fxc___14041;
    s.callLocIdx = 286; s.pc = 33; return s.tmp_4;
  case 33:
    r0 = s.retval;
    s.minX___14028 = (r0);
    s.lastBrkId = 1021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1021]) return breakpoint(s, 34, 1021, r0);
  case 34:
    s.tmp_0 = Fx_min__P166_mk(s);
    s.tmp_0.arg0 = s.minY___14032;
    s.tmp_0.arg1 = s.fxr___14049;
    s.callLocIdx = 287; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.minY___14032 = (r0);
    s.lastBrkId = 1022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1022]) return breakpoint(s, 36, 1022, r0);
  case 36:
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_0.arg0 = s.maxX___14036;
    s.tmp_0.arg1 = s.fxc___14041;
    s.callLocIdx = 288; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    s.maxX___14036 = (r0);
    s.lastBrkId = 1023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1023]) return breakpoint(s, 38, 1023, r0);
  case 38:
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_0.arg0 = s.maxY___14038;
    s.tmp_0.arg1 = s.fxr___14049;
    s.callLocIdx = 289; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.maxY___14038 = (r0);
  case 7:
  case 8:
    s.lastBrkId = 1024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1024]) return breakpoint(s, 40, 1024, r0);
  case 40:
    r0 = (s.r___14048 + 1);
    s.r___14048 = (r0);
    s.tmp_1 = Fx_add__P157_mk(s);
    s.tmp_1.arg0 = s.fxr___14049;
    s.tmp_1.arg1 = 256;
    s.callLocIdx = 290; s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.fxr___14049 = (r0);
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 9:
    s.lastBrkId = 1025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1025]) return breakpoint(s, 42, 1025, r0);
  case 42:
    r0 = (s.c___14040 + 1);
    s.c___14040 = (r0);
    s.tmp_1 = Fx_add__P157_mk(s);
    s.tmp_1.arg0 = s.fxc___14041;
    s.tmp_1.arg1 = 256;
    s.callLocIdx = 291; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.fxc___14041 = (r0);
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 10:
    s.lastBrkId = 1026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1026]) return breakpoint(s, 44, 1026, r0);
  case 44:
    s.tmp_0 = Fx_mul__P160_mk(s);
    s.tmp_0.arg0 = s.minX___14028;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 292; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    s.minX___14028 = (r0);
    s.lastBrkId = 1027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1027]) return breakpoint(s, 46, 1027, r0);
  case 46:
    s.tmp_0 = Fx_mul__P160_mk(s);
    s.tmp_0.arg0 = s.minY___14032;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 293; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    s.minY___14032 = (r0);
    s.lastBrkId = 1028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1028]) return breakpoint(s, 48, 1028, r0);
  case 48:
    s.tmp_0 = Fx_mul__P160_mk(s);
    s.tmp_0.arg0 = s.maxX___14036;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 294; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
    s.maxX___14036 = (r0);
    s.lastBrkId = 1029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1029]) return breakpoint(s, 50, 1029, r0);
  case 50:
    s.tmp_0 = Fx_mul__P160_mk(s);
    s.tmp_0.arg0 = s.maxY___14038;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 295; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
    s.maxY___14038 = (r0);
    s.lastBrkId = 1030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1030]) return breakpoint(s, 52, 1030, r0);
  case 52:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = Fx_sub__P159_mk(s);
    s.tmp_1.arg0 = s.maxX___14036;
    s.tmp_1.arg1 = s.minX___14028;
    s.callLocIdx = 296; s.pc = 54; return s.tmp_1;
  case 54:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 297; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
    s.width___14113 = (r0);
    s.lastBrkId = 1031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1031]) return breakpoint(s, 55, 1031, r0);
  case 55:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = Fx_sub__P159_mk(s);
    s.tmp_1.arg0 = s.maxY___14038;
    s.tmp_1.arg1 = s.minY___14032;
    s.callLocIdx = 298; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 299; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.height___14121 = (r0);
    s.lastBrkId = 1032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1032]) return breakpoint(s, 58, 1032, r0);
  case 58:
    r0 = pxsim_pxtcore_mkClassInstance(game_Hitbox__C2208_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_Hitbox_constructor__P2215_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.width___14113;
    s.tmp_1.arg3 = s.height___14121;
    s.tmp_2 = Fx_floor__P168_mk(s);
    s.tmp_2.arg0 = s.minX___14028;
    s.callLocIdx = 300; s.pc = 60; return s.tmp_2;
  case 60:
    r0 = s.retval;
    s.tmp_1.arg4 = r0;
    s.tmp_3 = Fx_floor__P168_mk(s);
    s.tmp_3.arg0 = s.minY___14032;
    s.callLocIdx = 301; s.pc = 61; return s.tmp_3;
  case 61:
    r0 = s.retval;
    s.tmp_1.arg5 = r0;
    s.callLocIdx = 302; s.pc = 59; return s.tmp_1;
  case 59:
    r0 = s.retval;
    r0 = s.tmp_0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
game_calculateHitBox__P2224.info = {"start":3223,"length":1086,"line":103,"column":4,"endLine":132,"endColumn":5,"fileName":"pxt_modules/game/hitbox.ts","functionName":"calculateHitBox","argumentNames":["s"]}

function game_calculateHitBox__P2224_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_calculateHitBox__P2224, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___14025: undefined,
  minX___14028: undefined,
  minY___14032: undefined,
  maxX___14036: undefined,
  maxY___14038: undefined,
  c___14040: undefined,
  fxc___14041: undefined,
  r___14048: undefined,
  fxr___14049: undefined,
  width___14113: undefined,
  height___14121: undefined,
  arg0: undefined,
} }





function Sprite_image__P2389(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1085]) return breakpoint(s, 1, 1085, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_image__P2389.info = {"start":9023,"length":54,"line":322,"column":4,"endLine":324,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"image","argumentNames":["this"]}
Sprite_image__P2389.isGetter = true;

function Sprite_image__P2389_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_image__P2389, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_Hitbox_isValid__P2220(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[963]) return breakpoint(s, 1, 963, r0);
  case 1:
    r0 = s.arg0.fields["hash"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_calcDimensionalHash__P2391_mk(s);
    r0 = s.arg0.fields["parent"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 235; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_isValid__P2220.info = {"start":935,"length":89,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"isValid","argumentNames":["this"]}

function game_Hitbox_isValid__P2220_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_isValid__P2220, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite_calcDimensionalHash__P2391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1090]) return breakpoint(s, 1, 1090, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.revision(s.tmp_2);
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toIntShifted__P156_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 8;
    s.callLocIdx = 348; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0 = r0;
    s.tmp_6 = Fx_toIntShifted__P156_mk(s);
    r0 = s.arg0.fields["_height"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 16;
    s.callLocIdx = 349; s.pc = 3; return s.tmp_6;
  case 3:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_0 + s.tmp_5);
    return leave(s, r0)
  default: oops()
} } }
Sprite_calcDimensionalHash__P2391.info = {"start":9436,"length":138,"line":338,"column":4,"endLine":340,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"calcDimensionalHash","argumentNames":["this"]}

function Sprite_calcDimensionalHash__P2391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_calcDimensionalHash__P2391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function Fx_toIntShifted__P156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[216]) return breakpoint(s, 1, 216, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 >> s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
Fx_toIntShifted__P156.info = {"start":404,"length":102,"line":17,"column":4,"endLine":19,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toIntShifted","argumentNames":["a","n"]}

function Fx_toIntShifted__P156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toIntShifted__P156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_constructor__P2215(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[953]) return breakpoint(s, 1, 953, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_calcDimensionalHash__P2391_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 226; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["hash"] = (s.tmp_1);
    s.lastBrkId = 954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[954]) return breakpoint(s, 3, 954, r0);
  case 3:
    r0 = (s.arg0).fields["parent"] = (s.arg1);
    s.lastBrkId = 955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[955]) return breakpoint(s, 4, 955, r0);
  case 4:
    r0 = (s.arg0).fields["width"] = (s.arg2);
    s.lastBrkId = 956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[956]) return breakpoint(s, 5, 956, r0);
  case 5:
    r0 = (s.arg0).fields["height"] = (s.arg3);
    s.lastBrkId = 957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[957]) return breakpoint(s, 6, 957, r0);
  case 6:
    r0 = (s.arg0).fields["ox"] = (s.arg4);
    s.lastBrkId = 958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[958]) return breakpoint(s, 7, 958, r0);
  case 7:
    r0 = (s.arg0).fields["oy"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_constructor__P2215.info = {"start":173,"length":288,"line":9,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"inline","argumentNames":["this","parent","width","height","ox","oy"]}

function game_Hitbox_constructor__P2215_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_constructor__P2215, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function Fx_floor__P168(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[234]) return breakpoint(s, 1, 234, r0);
  case 1:
    r0 = (s.arg0 & -256);
    return leave(s, r0)
  default: oops()
} } }
Fx_floor__P168.info = {"start":1919,"length":103,"line":62,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"floor","argumentNames":["v"]}

function Fx_floor__P168_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_floor__P168, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Fx_max__P167(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[231]) return breakpoint(s, 4, 231, r0);
  case 4:
    r0 = (s.arg0 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[232]) return breakpoint(s, 5, 232, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[233]) return breakpoint(s, 6, 233, r0);
  case 6:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_max__P167.info = {"start":1797,"length":117,"line":56,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"max","argumentNames":["a","b"]}

function Fx_max__P167_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_max__P167, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_min__P166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[228]) return breakpoint(s, 4, 228, r0);
  case 4:
    r0 = (s.arg0 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[229]) return breakpoint(s, 5, 229, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[230]) return breakpoint(s, 6, 230, r0);
  case 6:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_min__P166.info = {"start":1675,"length":117,"line":50,"column":4,"endLine":55,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"min","argumentNames":["a","b"]}

function Fx_min__P166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_min__P166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_mul__P160(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[220]) return breakpoint(s, 1, 220, r0);
  case 1:
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_mul__P160.info = {"start":872,"length":133,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"mul","argumentNames":["a","b"]}

function Fx_mul__P160_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_mul__P160, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_sub__P159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[219]) return breakpoint(s, 1, 219, r0);
  case 1:
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_sub__P159.info = {"start":749,"length":118,"line":26,"column":4,"endLine":28,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"sub","argumentNames":["a","b"]}

function Fx_sub__P159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_sub__P159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_updateIfInvalid__P2222(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.newHitBox___14222 = undefined;
    s.oMinX___14227 = undefined;
    s.oMinY___14230 = undefined;
    s.oMaxX___14233 = undefined;
    s.oMaxY___14239 = undefined;
    s.nMinX___14245 = undefined;
    s.nMinY___14248 = undefined;
    s.nMaxX___14251 = undefined;
    s.nMaxY___14257 = undefined;
    s.xDiff___14263 = undefined;
    s.yDiff___14274 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[965]) return breakpoint(s, 8, 965, r0);
  case 8:
    s.tmp_1 = game_Hitbox_isValid__P2220_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 240; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[966]) return breakpoint(s, 10, 966, r0);
  case 10:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[967]) return breakpoint(s, 11, 967, r0);
  case 11:
    s.tmp_2 = game_calculateHitBox__P2224_mk(s);
    r0 = s.arg0.fields["parent"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 241; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.newHitBox___14222 = (r0);
    s.lastBrkId = 968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[968]) return breakpoint(s, 13, 968, r0);
  case 13:
    r0 = s.arg0.fields["ox"];
    s.oMinX___14227 = (r0);
    s.lastBrkId = 969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[969]) return breakpoint(s, 14, 969, r0);
  case 14:
    r0 = s.arg0.fields["oy"];
    s.oMinY___14230 = (r0);
    s.lastBrkId = 970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[970]) return breakpoint(s, 15, 970, r0);
  case 15:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_0.arg0 = s.oMinX___14227;
    r0 = s.arg0.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 242; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.oMaxX___14233 = (r0);
    s.lastBrkId = 971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[971]) return breakpoint(s, 17, 971, r0);
  case 17:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_0.arg0 = s.oMinY___14230;
    r0 = s.arg0.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 243; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.oMaxY___14239 = (r0);
    s.lastBrkId = 972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[972]) return breakpoint(s, 19, 972, r0);
  case 19:
    r0 = s.newHitBox___14222.fields["ox"];
    s.nMinX___14245 = (r0);
    s.lastBrkId = 973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[973]) return breakpoint(s, 20, 973, r0);
  case 20:
    r0 = s.newHitBox___14222.fields["oy"];
    s.nMinY___14248 = (r0);
    s.lastBrkId = 974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[974]) return breakpoint(s, 21, 974, r0);
  case 21:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_0.arg0 = s.nMinX___14245;
    r0 = s.newHitBox___14222.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 244; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.nMaxX___14251 = (r0);
    s.lastBrkId = 975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[975]) return breakpoint(s, 23, 975, r0);
  case 23:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_0.arg0 = s.nMinY___14248;
    r0 = s.newHitBox___14222.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 245; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.nMaxY___14257 = (r0);
    s.lastBrkId = 976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[976]) return breakpoint(s, 25, 976, r0);
  case 25:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = Fx_abs__P165_mk(s);
    s.tmp_2 = Fx_sub__P159_mk(s);
    s.tmp_2.arg0 = s.oMinX___14227;
    s.tmp_2.arg1 = s.nMinX___14245;
    s.callLocIdx = 246; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 247; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Fx_abs__P165_mk(s);
    s.tmp_4 = Fx_sub__P159_mk(s);
    s.tmp_4.arg0 = s.oMaxX___14233;
    s.tmp_4.arg1 = s.nMaxX___14251;
    s.callLocIdx = 248; s.pc = 30; return s.tmp_4;
  case 30:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 249; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 250; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.xDiff___14263 = (r0);
    s.lastBrkId = 977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[977]) return breakpoint(s, 31, 977, r0);
  case 31:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = Fx_abs__P165_mk(s);
    s.tmp_2 = Fx_sub__P159_mk(s);
    s.tmp_2.arg0 = s.oMinY___14230;
    s.tmp_2.arg1 = s.nMinY___14248;
    s.callLocIdx = 251; s.pc = 34; return s.tmp_2;
  case 34:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 252; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Fx_abs__P165_mk(s);
    s.tmp_4 = Fx_sub__P159_mk(s);
    s.tmp_4.arg0 = s.oMaxY___14239;
    s.tmp_4.arg1 = s.nMaxY___14257;
    s.callLocIdx = 253; s.pc = 36; return s.tmp_4;
  case 36:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 254; s.pc = 35; return s.tmp_3;
  case 35:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 255; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.yDiff___14274 = (r0);
    s.lastBrkId = 978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[978]) return breakpoint(s, 37, 978, r0);
  case 37:
    r0 = (s.xDiff___14263 > 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[979]) return breakpoint(s, 38, 979, r0);
  case 38:
    r0 = (s.arg0).fields["ox"] = (s.nMinX___14245);
    s.lastBrkId = 980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[980]) return breakpoint(s, 39, 980, r0);
  case 39:
    r0 = s.newHitBox___14222.fields["width"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["width"] = (s.tmp_0);
  case 3:
  case 4:
    s.lastBrkId = 981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[981]) return breakpoint(s, 40, 981, r0);
  case 40:
    r0 = (s.yDiff___14274 > 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[982]) return breakpoint(s, 41, 982, r0);
  case 41:
    r0 = (s.arg0).fields["oy"] = (s.nMinY___14248);
    s.lastBrkId = 983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[983]) return breakpoint(s, 42, 983, r0);
  case 42:
    r0 = s.newHitBox___14222.fields["height"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["height"] = (s.tmp_0);
  case 5:
  case 6:
    s.lastBrkId = 984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[984]) return breakpoint(s, 43, 984, r0);
  case 43:
    r0 = s.newHitBox___14222.fields["hash"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["hash"] = (s.tmp_0);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_updateIfInvalid__P2222.info = {"start":1188,"length":1317,"line":48,"column":8,"endLine":85,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"updateIfInvalid","argumentNames":["this"]}

function game_Hitbox_updateIfInvalid__P2222_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_updateIfInvalid__P2222, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  newHitBox___14222: undefined,
  oMinX___14227: undefined,
  oMinY___14230: undefined,
  oMaxX___14233: undefined,
  oMaxY___14239: undefined,
  nMinX___14245: undefined,
  nMinY___14248: undefined,
  nMaxX___14251: undefined,
  nMaxY___14257: undefined,
  xDiff___14263: undefined,
  yDiff___14274: undefined,
  arg0: undefined,
} }





function Fx_abs__P165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[225]) return breakpoint(s, 4, 225, r0);
  case 4:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[226]) return breakpoint(s, 5, 226, r0);
  case 5:
    r0 = (0 - s.arg0);
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[227]) return breakpoint(s, 6, 227, r0);
  case 6:
    r0 = s.arg0;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_abs__P165.info = {"start":1506,"length":164,"line":44,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"abs","argumentNames":["a"]}

function Fx_abs__P165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_abs__P165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_sy__P2371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1060]) return breakpoint(s, 1, 1060, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 336; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_sy__P2371.info = {"start":5719,"length":61,"line":209,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sy","argumentNames":["this"]}
Sprite_sy__P2371.isGetter = true;

function Sprite_sy__P2371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sy__P2371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_sx__P2369(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1059]) return breakpoint(s, 1, 1059, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 335; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_sx__P2369.info = {"start":5287,"length":61,"line":196,"column":4,"endLine":198,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sx","argumentNames":["this"]}
Sprite_sx__P2369.isGetter = true;

function Sprite_sx__P2369_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sx__P2369, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_imagePrint__P1990(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x0___10012 = undefined;
    s.cp___10014 = undefined;
    s.mult___10015 = undefined;
    s.dataW___10020 = undefined;
    s.dataH___10026 = undefined;
    s.byteHeight___10032 = undefined;
    s.charSize___10038 = undefined;
    s.dataSize___10042 = undefined;
    s.fontdata___10046 = undefined;
    s.lastchar___10049 = undefined;
    s.imgBuf___10056 = undefined;
    s.xOffset___10080 = undefined;
    s.yOffset___10081 = undefined;
    s.ch___10096 = undefined;
    s.l___10115 = undefined;
    s.r___10116 = undefined;
    s.off___10118 = undefined;
    s.guess___10119 = undefined;
    s.m___10138 = undefined;
    s.v___10147 = undefined;
    s.i___10203 = undefined;
    s.j___10208 = undefined;
    s.mask___10209 = undefined;
    s.c___10210 = undefined;
    s.n___10227 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[599]) return breakpoint(s, 39, 599, r0);
  case 39:
    r0 = (s.arg2 | 0);
    s.arg2 = (r0);
    s.lastBrkId = 600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[600]) return breakpoint(s, 40, 600, r0);
  case 40:
    r0 = (s.arg3 | 0);
    s.arg3 = (r0);
    s.lastBrkId = 601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[601]) return breakpoint(s, 41, 601, r0);
  case 41:
    r0 = pxsim_numops_toBoolDecr(s.arg5);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[602]) return breakpoint(s, 42, 602, r0);
  case 42:
    s.tmp_2 = image_getFontForText__P1977_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 100; s.pc = 43; return s.tmp_2;
  case 43:
    r0 = s.retval;
    s.arg5 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[603]) return breakpoint(s, 44, 603, r0);
  case 44:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[604]) return breakpoint(s, 45, 604, r0);
  case 45:
    s.arg4 = (1);
  case 3:
  case 4:
    s.lastBrkId = 605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[605]) return breakpoint(s, 46, 605, r0);
  case 46:
    s.x0___10012 = (s.arg2);
    s.lastBrkId = 606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[606]) return breakpoint(s, 47, 606, r0);
  case 47:
    s.cp___10014 = (0);
    s.lastBrkId = 607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[607]) return breakpoint(s, 48, 607, r0);
  case 48:
    s.tmp_1 = if_multiplier_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "multiplier");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["multiplier"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["multiplier"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 101; s.pc = 49; return s.tmp_1; }
    }
  case 49:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = if_multiplier_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "multiplier");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["multiplier"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["multiplier"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 102; s.pc = 50; return s.tmp_2; }
    }
  case 50:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    r0 = 1;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.mult___10015 = (s.tmp_3);
    s.lastBrkId = 608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[608]) return breakpoint(s, 51, 608, r0);
  case 51:
    s.tmp_1 = if_charWidth_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charWidth");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charWidth"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charWidth"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 103; s.pc = 52; return s.tmp_1; }
    }
  case 52:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___10015);
    s.dataW___10020 = (r0);
    s.lastBrkId = 609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[609]) return breakpoint(s, 53, 609, r0);
  case 53:
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 104; s.pc = 54; return s.tmp_1; }
    }
  case 54:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___10015);
    s.dataH___10026 = (r0);
    s.lastBrkId = 610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[610]) return breakpoint(s, 55, 610, r0);
  case 55:
    r0 = (s.dataH___10026 + 7);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 3);
    s.byteHeight___10032 = (r0);
    s.lastBrkId = 611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[611]) return breakpoint(s, 56, 611, r0);
  case 56:
    r0 = (s.byteHeight___10032 * s.dataW___10020);
    s.charSize___10038 = (r0);
    s.lastBrkId = 612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[612]) return breakpoint(s, 57, 612, r0);
  case 57:
    r0 = (2 + s.charSize___10038);
    s.dataSize___10042 = (r0);
    s.lastBrkId = 613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[613]) return breakpoint(s, 58, 613, r0);
  case 58:
    s.tmp_0 = if_data_1_mk(s);
    s.tmp_0.arg0 = s.arg5;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "data");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["data"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["data"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 105; s.pc = 59; return s.tmp_0; }
    }
  case 59:
    r0 = s.retval;
    s.fontdata___10046 = (r0);
    s.lastBrkId = 614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[614]) return breakpoint(s, 60, 614, r0);
  case 60:
    r0 = pxsim.BufferMethods.length(s.fontdata___10046);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, s.dataSize___10042);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.lastchar___10049 = (r0);
    s.lastBrkId = 615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[615]) return breakpoint(s, 61, 615, r0);
  case 61:
    r0 = (s.mult___10015 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[616]) return breakpoint(s, 62, 616, r0);
  case 62:
    r0 = (8 + s.charSize___10038);
    s.tmp_1 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_1);
    s.imgBuf___10056 = (r0);
    s.lastBrkId = 617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[617]) return breakpoint(s, 63, 617, r0);
  case 63:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___10056, 0, 135);
    s.lastBrkId = 618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[618]) return breakpoint(s, 64, 618, r0);
  case 64:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___10056, 1, 1);
    s.lastBrkId = 619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[619]) return breakpoint(s, 65, 619, r0);
  case 65:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___10056, 2, s.dataW___10020);
    s.lastBrkId = 620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[620]) return breakpoint(s, 66, 620, r0);
  case 66:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___10056, 4, s.dataH___10026);
  case 7:
  case 8:
    s.lastBrkId = 621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[621]) return breakpoint(s, 67, 621, r0);
  case 67:
  case 9:
    s.lastBrkId = 622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[622]) return breakpoint(s, 68, 622, r0);
  case 68:
    s.tmp_1 = r0 = s.cp___10014;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 38; continue; }
    s.lastBrkId = 623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[623]) return breakpoint(s, 69, 623, r0);
  case 69:
    s.xOffset___10080 = (0);
    s.lastBrkId = 624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[624]) return breakpoint(s, 70, 624, r0);
  case 70:
    s.yOffset___10081 = (0);
    s.lastBrkId = 625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[625]) return breakpoint(s, 71, 625, r0);
  case 71:
    s.tmp_0 = r0 = s.arg6;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.cp___10014;
    r0 = pxsim_Array__length(s.arg6);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[626]) return breakpoint(s, 72, 626, r0);
  case 72:
    s.tmp_4 = if_xOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___10014);
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "xOffset");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["xOffset"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["xOffset"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 106; s.pc = 73; return s.tmp_4; }
    }
  case 73:
    r0 = s.retval;
    s.xOffset___10080 = (r0);
    s.lastBrkId = 627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[627]) return breakpoint(s, 74, 627, r0);
  case 74:
    s.tmp_0 = if_yOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___10014);
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "yOffset");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["yOffset"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["yOffset"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 107; s.pc = 75; return s.tmp_0; }
    }
  case 75:
    r0 = s.retval;
    s.yOffset___10081 = (r0);
  case 12:
  case 13:
    s.lastBrkId = 628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[628]) return breakpoint(s, 76, 628, r0);
  case 76:
    s.tmp_0 = r0 = s.cp___10014;
    r0 = (s.tmp_0 + 1);
    s.cp___10014 = (r0);
    r0 = pxsim_String_.charCodeAt(s.arg1, s.tmp_0);
    s.ch___10096 = (r0);
    s.lastBrkId = 629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[629]) return breakpoint(s, 77, 629, r0);
  case 77:
    r0 = (s.ch___10096 == 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[630]) return breakpoint(s, 78, 630, r0);
  case 78:
    s.tmp_1 = r0 = s.arg3;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = s.arg5;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 108; s.pc = 79; return s.tmp_4; }
    }
  case 79:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.arg3 = (r0);
    s.lastBrkId = 631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[631]) return breakpoint(s, 80, 631, r0);
  case 80:
    s.arg2 = (s.x0___10012);
  case 14:
  case 15:
    s.lastBrkId = 632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[632]) return breakpoint(s, 81, 632, r0);
  case 81:
    r0 = (s.ch___10096 < 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[633]) return breakpoint(s, 82, 633, r0);
  case 82:
    { step = 9; continue; }
  case 16:
  case 17:
    s.lastBrkId = 634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[634]) return breakpoint(s, 83, 634, r0);
  case 83:
    s.l___10115 = (0);
    s.lastBrkId = 635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[635]) return breakpoint(s, 84, 635, r0);
  case 84:
    s.r___10116 = (s.lastchar___10049);
    s.lastBrkId = 636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[636]) return breakpoint(s, 85, 636, r0);
  case 85:
    s.off___10118 = (0);
    s.lastBrkId = 637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[637]) return breakpoint(s, 86, 637, r0);
  case 86:
    r0 = (s.ch___10096 - 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.dataSize___10042);
    s.guess___10119 = (r0);
    s.lastBrkId = 638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[638]) return breakpoint(s, 87, 638, r0);
  case 87:
    r0 = pxsim.BufferMethods.getNumber(s.fontdata___10046, 4, s.guess___10119);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.ch___10096);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[639]) return breakpoint(s, 88, 639, r0);
  case 88:
    s.off___10118 = (s.guess___10119);
    { step = 25; continue; }
  case 18:
    s.lastBrkId = 640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[640]) return breakpoint(s, 89, 640, r0);
  case 89:
  case 19:
    s.lastBrkId = 641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[641]) return breakpoint(s, 90, 641, r0);
  case 90:
    r0 = (s.l___10115 <= s.r___10116);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[642]) return breakpoint(s, 91, 642, r0);
  case 91:
    s.tmp_1 = r0 = s.l___10115;
    r0 = (s.r___10116 - s.l___10115);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.m___10138 = (r0);
    s.lastBrkId = 643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[643]) return breakpoint(s, 92, 643, r0);
  case 92:
    s.tmp_0 = r0 = s.fontdata___10046;
    r0 = (s.m___10138 * s.dataSize___10042);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_0, 4, s.tmp_1);
    s.v___10147 = (r0);
    s.lastBrkId = 644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[644]) return breakpoint(s, 93, 644, r0);
  case 93:
    r0 = (s.v___10147 == s.ch___10096);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[645]) return breakpoint(s, 94, 645, r0);
  case 94:
    r0 = (s.m___10138 * s.dataSize___10042);
    s.off___10118 = (r0);
    s.lastBrkId = 646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[646]) return breakpoint(s, 95, 646, r0);
  case 95:
    { step = 24; continue; }
  case 20:
  case 21:
    s.lastBrkId = 647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[647]) return breakpoint(s, 96, 647, r0);
  case 96:
    r0 = (s.v___10147 < s.ch___10096);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[648]) return breakpoint(s, 97, 648, r0);
  case 97:
    r0 = (s.m___10138 + 1);
    s.l___10115 = (r0);
    { step = 23; continue; }
  case 22:
    s.lastBrkId = 649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[649]) return breakpoint(s, 98, 649, r0);
  case 98:
    r0 = (s.m___10138 - 1);
    s.r___10116 = (r0);
  case 23:
    { step = 19; continue; }
  case 24:
  case 25:
    s.lastBrkId = 650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[650]) return breakpoint(s, 99, 650, r0);
  case 99:
    r0 = (s.mult___10015 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 26; continue; }
    s.lastBrkId = 651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[651]) return breakpoint(s, 100, 651, r0);
  case 100:
    s.tmp_1 = r0 = s.imgBuf___10056;
    s.tmp_3 = r0 = s.fontdata___10046;
    r0 = (s.off___10118 + 2);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_3, s.tmp_4, s.charSize___10038);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_1, 8, s.tmp_2);
    s.lastBrkId = 652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[652]) return breakpoint(s, 101, 652, r0);
  case 101:
    s.tmp_0 = helpers_imageDrawIcon__P1955_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.imgBuf___10056;
    r0 = (s.arg2 + s.xOffset___10080);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg3 + s.yOffset___10081);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg4;
    s.callLocIdx = 109; s.pc = 102; return s.tmp_0;
  case 102:
    r0 = s.retval;
    s.lastBrkId = 653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[653]) return breakpoint(s, 103, 653, r0);
  case 103:
    s.tmp_0 = r0 = s.arg2;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 110; s.pc = 104; return s.tmp_2; }
    }
  case 104:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg2 = (r0);
    { step = 37; continue; }
  case 26:
    s.lastBrkId = 654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[654]) return breakpoint(s, 105, 654, r0);
  case 105:
    r0 = (s.off___10118 + 2);
    s.off___10118 = (r0);
    s.lastBrkId = 655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[655]) return breakpoint(s, 106, 655, r0);
  case 106:
    s.i___10203 = (0);
    s.lastBrkId = 656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[656]) return breakpoint(s, 107, 656, r0);
  case 107:
  case 27:
    s.lastBrkId = 657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[657]) return breakpoint(s, 108, 657, r0);
  case 108:
    r0 = (s.i___10203 < s.dataW___10020);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 36; continue; }
    s.lastBrkId = 658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[658]) return breakpoint(s, 109, 658, r0);
  case 109:
    s.j___10208 = (0);
    s.lastBrkId = 659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[659]) return breakpoint(s, 110, 659, r0);
  case 110:
    s.mask___10209 = (1);
    s.lastBrkId = 660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[660]) return breakpoint(s, 111, 660, r0);
  case 111:
    s.tmp_0 = r0 = s.off___10118;
    r0 = (s.tmp_0 + 1);
    s.off___10118 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___10046, s.tmp_0);
    s.c___10210 = (r0);
    s.lastBrkId = 661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[661]) return breakpoint(s, 112, 661, r0);
  case 112:
  case 28:
    s.lastBrkId = 662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[662]) return breakpoint(s, 113, 662, r0);
  case 113:
    r0 = (s.j___10208 < s.dataH___10026);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 35; continue; }
    s.lastBrkId = 663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[663]) return breakpoint(s, 114, 663, r0);
  case 114:
    r0 = (s.mask___10209 == 256);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 29; continue; }
    s.lastBrkId = 664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[664]) return breakpoint(s, 115, 664, r0);
  case 115:
    s.tmp_2 = r0 = s.off___10118;
    r0 = (s.tmp_2 + 1);
    s.off___10118 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___10046, s.tmp_2);
    s.c___10210 = (r0);
    s.lastBrkId = 665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[665]) return breakpoint(s, 116, 665, r0);
  case 116:
    s.mask___10209 = (1);
  case 29:
  case 30:
    s.lastBrkId = 666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[666]) return breakpoint(s, 117, 666, r0);
  case 117:
    s.n___10227 = (0);
    s.lastBrkId = 667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[667]) return breakpoint(s, 118, 667, r0);
  case 118:
  case 31:
    s.lastBrkId = 668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[668]) return breakpoint(s, 119, 668, r0);
  case 119:
    r0 = (s.c___10210 & s.mask___10209);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 32; continue; }
    s.lastBrkId = 669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[669]) return breakpoint(s, 120, 669, r0);
  case 120:
    r0 = (s.n___10227 + 1);
    s.n___10227 = (r0);
    s.lastBrkId = 670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[670]) return breakpoint(s, 121, 670, r0);
  case 121:
    r0 = (s.mask___10209 << 1);
    s.mask___10209 = (r0);
    { step = 31; continue; }
  case 32:
    s.lastBrkId = 671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[671]) return breakpoint(s, 122, 671, r0);
  case 122:
    r0 = pxsim_numops_toBoolDecr(s.n___10227);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[672]) return breakpoint(s, 123, 672, r0);
  case 123:
    s.tmp_0 = helpers_imageFillRect__P1956_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.xOffset___10080 * s.mult___10015);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.tmp_3 = r0 = s.arg3;
    r0 = (s.j___10208 + s.yOffset___10081);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * s.mult___10015);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.mult___10015;
    r0 = (s.mult___10015 * s.n___10227);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg4;
    s.callLocIdx = 111; s.pc = 124; return s.tmp_0;
  case 124:
    r0 = s.retval;
    s.lastBrkId = 673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[673]) return breakpoint(s, 125, 673, r0);
  case 125:
    r0 = (s.j___10208 + s.n___10227);
    s.j___10208 = (r0);
    { step = 34; continue; }
  case 33:
    s.lastBrkId = 674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[674]) return breakpoint(s, 126, 674, r0);
  case 126:
    r0 = (s.mask___10209 << 1);
    s.mask___10209 = (r0);
    s.lastBrkId = 675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[675]) return breakpoint(s, 127, 675, r0);
  case 127:
    r0 = (s.j___10208 + 1);
    s.j___10208 = (r0);
  case 34:
    { step = 28; continue; }
  case 35:
    s.lastBrkId = 676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[676]) return breakpoint(s, 128, 676, r0);
  case 128:
    r0 = (s.arg2 + s.mult___10015);
    s.arg2 = (r0);
    s.lastBrkId = 677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[677]) return breakpoint(s, 129, 677, r0);
  case 129:
    r0 = (s.i___10203 + 1);
    s.i___10203 = (r0);
    { step = 27; continue; }
  case 36:
  case 37:
    { step = 9; continue; }
  case 38:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrint__P1990.info = {"start":15326,"length":3300,"line":213,"column":4,"endLine":306,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"imagePrint","argumentNames":["img","text","x","y","color","font","offsets"]}

function helpers_imagePrint__P1990_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrint__P1990, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  x0___10012: undefined,
  cp___10014: undefined,
  mult___10015: undefined,
  dataW___10020: undefined,
  dataH___10026: undefined,
  byteHeight___10032: undefined,
  charSize___10038: undefined,
  dataSize___10042: undefined,
  fontdata___10046: undefined,
  lastchar___10049: undefined,
  imgBuf___10056: undefined,
  xOffset___10080: undefined,
  yOffset___10081: undefined,
  ch___10096: undefined,
  l___10115: undefined,
  r___10116: undefined,
  off___10118: undefined,
  guess___10119: undefined,
  m___10138: undefined,
  v___10147: undefined,
  i___10203: undefined,
  j___10208: undefined,
  mask___10209: undefined,
  c___10210: undefined,
  n___10227: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function helpers_imageDrawIcon__P1955(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[564]) return breakpoint(s, 1, 564, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = helpers_pack__P4874_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg3;
    s.callLocIdx = 81; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods._drawIcon(s.tmp_0, s.tmp_1, s.tmp_2, s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawIcon__P1955.info = {"start":5304,"length":145,"line":173,"column":4,"endLine":175,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawIcon","argumentNames":["img","icon","x","y","c"]}

function helpers_imageDrawIcon__P1955_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawIcon__P1955, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function helpers_pack__P4874(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[551]) return breakpoint(s, 1, 551, r0);
  case 1:
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = -30000;
    s.tmp_2.arg1 = 30000;
    r0 = (s.arg0 | 0);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 79; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 65535);
    s.tmp_0 = r0;
    s.tmp_5 = Math_clamp__P127_mk(s);
    s.tmp_5.arg0 = -30000;
    s.tmp_5.arg1 = 30000;
    r0 = (s.arg1 | 0);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 80; s.pc = 3; return s.tmp_5;
  case 3:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 16);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 | s.tmp_3);
    return leave(s, r0)
  default: oops()
} } }
helpers_pack__P4874.info = {"start":4278,"length":145,"line":148,"column":4,"endLine":150,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"pack","argumentNames":["x","y"]}

function helpers_pack__P4874_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_pack__P4874, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_clamp__P127(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[201]) return breakpoint(s, 1, 201, r0);
  case 1:
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 17; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 18; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
Math_clamp__P127.info = {"start":15643,"length":130,"line":528,"column":4,"endLine":530,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"clamp","argumentNames":["min","max","value"]}

function Math_clamp__P127_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_clamp__P127, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_min__P131(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[211]) return breakpoint(s, 4, 211, r0);
  case 4:
    r0 = (s.arg0 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[212]) return breakpoint(s, 5, 212, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[213]) return breakpoint(s, 6, 213, r0);
  case 6:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_min__P131.info = {"start":16854,"length":105,"line":568,"column":4,"endLine":571,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"min","argumentNames":["a","b"]}

function Math_min__P131_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_min__P131, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageFillRect__P1956(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[565]) return breakpoint(s, 1, 565, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P4874_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 82; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P4874_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 83; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._fillRect(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageFillRect__P1956.info = {"start":5454,"length":159,"line":176,"column":4,"endLine":178,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageFillRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageFillRect__P1956_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageFillRect__P1956, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function Math_max__P130(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[208]) return breakpoint(s, 4, 208, r0);
  case 4:
    r0 = (s.arg0 >= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[209]) return breakpoint(s, 5, 209, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[210]) return breakpoint(s, 6, 210, r0);
  case 6:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_max__P130.info = {"start":16614,"length":105,"line":558,"column":4,"endLine":561,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"max","argumentNames":["a","b"]}

function Math_max__P130_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_max__P130, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setKind__P2407(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.spritesByKind___14868 = undefined;
    s.overlapMap___14897 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1115]) return breakpoint(s, 16, 1115, r0);
  case 16:
    r0 = (s.arg1 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1116]) return breakpoint(s, 17, 1116, r0);
  case 17:
    { step = 15; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1117]) return breakpoint(s, 18, 1117, r0);
  case 18:
    s.tmp_3 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 375; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    r0 = r0.fields["spritesByKind"];
    s.spritesByKind___14868 = (r0);
    s.lastBrkId = 1118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1118]) return breakpoint(s, 20, 1118, r0);
  case 20:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["_kind"];
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___14868, s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1119]) return breakpoint(s, 21, 1119, r0);
  case 21:
    s.tmp_4 = sprites_SpriteSet_remove__P2469_mk(s);
    r0 = s.arg0.fields["_kind"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___14868, s.tmp_5);
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.arg0;
    s.callLocIdx = 376; s.pc = 22; return s.tmp_4;
  case 22:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1120]) return breakpoint(s, 23, 1120, r0);
  case 23:
    r0 = (s.arg1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1121]) return breakpoint(s, 24, 1121, r0);
  case 24:
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___14868, s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1122]) return breakpoint(s, 25, 1122, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteSet__C2462_VT);
    s.tmp_4 = r0;
    s.tmp_5 = sprites_SpriteSet_constructor__P2464_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    s.callLocIdx = 377; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mapSetGeneric(s.spritesByKind___14868, s.arg1, s.tmp_4);
  case 9:
  case 10:
    s.lastBrkId = 1123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1123]) return breakpoint(s, 27, 1123, r0);
  case 27:
    s.tmp_0 = sprites_SpriteSet_add__P2467_mk(s);
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___14868, s.arg1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 378; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
  case 11:
  case 12:
    s.lastBrkId = 1124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1124]) return breakpoint(s, 29, 1124, r0);
  case 29:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 379; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    r0 = r0.fields["overlapMap"];
    s.overlapMap___14897 = (r0);
    s.lastBrkId = 1125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1125]) return breakpoint(s, 31, 1125, r0);
  case 31:
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___14897, s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1126]) return breakpoint(s, 32, 1126, r0);
  case 32:
    s.tmp_3 = r0 = s.overlapMap___14897;
    s.tmp_4 = r0 = s.arg1;
    r0 = pxsim_Array__mk();
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, s.tmp_4, s.tmp_5);
  case 13:
  case 14:
    s.lastBrkId = 1127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1127]) return breakpoint(s, 33, 1127, r0);
  case 33:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___14897, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_kindsOverlappedWith"] = (s.tmp_1);
    s.lastBrkId = 1128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1128]) return breakpoint(s, 34, 1128, r0);
  case 34:
    r0 = (s.arg0).fields["_kind"] = (s.arg1);
  case 15:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setKind__P2407.info = {"start":12841,"length":663,"line":464,"column":4,"endLine":484,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setKind","argumentNames":["this","value"]}

function Sprite_setKind__P2407_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setKind__P2407, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  spritesByKind___14868: undefined,
  overlapMap___14897: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_remove__P2469(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14504 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2462_VT)) failedCast(r0);
    s.lastBrkId = 1310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1310]) return breakpoint(s, 4, 1310, r0);
  case 4:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_0, s.arg1, undefined);
    s.i___14504 = (r0);
    s.lastBrkId = 1311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1311]) return breakpoint(s, 5, 1311, r0);
  case 5:
    r0 = (s.i___14504 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1312]) return breakpoint(s, 6, 1312, r0);
  case 6:
    s.tmp_1 = helpers_arraySplice__P100_mk(s);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___14504;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 530; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1313]) return breakpoint(s, 8, 1313, r0);
  case 8:
    r0 = true;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1314]) return breakpoint(s, 9, 1314, r0);
  case 9:
    r0 = false;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_remove__P2469.info = {"start":1827,"length":235,"line":66,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"remove","argumentNames":["this","sprite"]}

function sprites_SpriteSet_remove__P2469_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_remove__P2469, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  i___14504: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySplice__P100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___10977 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2]) return breakpoint(s, 6, 2, r0);
  case 6:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3]) return breakpoint(s, 7, 3, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 4;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4]) return breakpoint(s, 8, 4, r0);
  case 8:
    s.i___10977 = (0);
    s.lastBrkId = 5;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[5]) return breakpoint(s, 9, 5, r0);
  case 9:
  case 3:
    s.lastBrkId = 6;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[6]) return breakpoint(s, 10, 6, r0);
  case 10:
    r0 = (s.i___10977 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 7;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[7]) return breakpoint(s, 11, 7, r0);
  case 11:
    r0 = pxsim_Array_.removeAt(s.arg0, s.arg1);
    s.lastBrkId = 8;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[8]) return breakpoint(s, 12, 8, r0);
  case 12:
    r0 = (s.i___10977 + 1);
    s.i___10977 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySplice__P100.info = {"start":3642,"length":213,"line":137,"column":4,"endLine":144,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySplice","argumentNames":["arr","start","len"]}

function helpers_arraySplice__P100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySplice__P100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  i___10977: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_SpriteSet_add__P2467(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2462_VT)) failedCast(r0);
    s.lastBrkId = 1304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1304]) return breakpoint(s, 6, 1304, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1305]) return breakpoint(s, 7, 1305, r0);
  case 7:
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1306]) return breakpoint(s, 8, 1306, r0);
  case 8:
    s.tmp_3 = sprites_SpriteSet_contains__P2470_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 529; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1307]) return breakpoint(s, 10, 1307, r0);
  case 10:
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1308]) return breakpoint(s, 11, 1308, r0);
  case 11:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.arg1);
    s.lastBrkId = 1309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1309]) return breakpoint(s, 12, 1309, r0);
  case 12:
    r0 = true;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_add__P2467.info = {"start":1041,"length":263,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"add","argumentNames":["this","sprite"]}

function sprites_SpriteSet_add__P2467_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_add__P2467, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_contains__P2470(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2462_VT)) failedCast(r0);
    s.lastBrkId = 1315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1315]) return breakpoint(s, 1, 1315, r0);
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_1, s.arg1, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > -1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_contains__P2470.info = {"start":2172,"length":100,"line":79,"column":8,"endLine":81,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"contains","argumentNames":["this","sprite"]}

function sprites_SpriteSet_contains__P2470_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_contains__P2470, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_constructor__P2464(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2462_VT)) failedCast(r0);
    s.lastBrkId = 1301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1301]) return breakpoint(s, 1, 1301, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_constructor__P2464.info = {"start":485,"length":57,"line":19,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteSet_constructor__P2464_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_constructor__P2464, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_constructor__P2387(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1065]) return breakpoint(s, 1, 1065, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_constructor__P2096_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 337; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1066]) return breakpoint(s, 3, 1066, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 338; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1067]) return breakpoint(s, 5, 1067, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 339; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1068]) return breakpoint(s, 7, 1068, r0);
  case 7:
    r0 = s.arg0.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1069]) return breakpoint(s, 8, 1069, r0);
  case 8:
    r0 = s.arg0.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1070]) return breakpoint(s, 9, 1070, r0);
  case 9:
    s.tmp_0 = Sprite_vx__P2358_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 340; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1071]) return breakpoint(s, 11, 1071, r0);
  case 11:
    s.tmp_0 = Sprite_vy__P2360_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 341; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 1072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1072]) return breakpoint(s, 13, 1072, r0);
  case 13:
    s.tmp_0 = Sprite_ax__P2362_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 342; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 1073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1073]) return breakpoint(s, 15, 1073, r0);
  case 15:
    s.tmp_0 = Sprite_ay__P2364_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 343; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 1074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1074]) return breakpoint(s, 17, 1074, r0);
  case 17:
    s.tmp_0 = Sprite_fx__P2366_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 344; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1075]) return breakpoint(s, 19, 1075, r0);
  case 19:
    s.tmp_0 = Sprite_fy__P2368_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 345; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1076]) return breakpoint(s, 21, 1076, r0);
  case 21:
    r0 = (s.arg0).fields["_sx"] = (256);
    s.lastBrkId = 1077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1077]) return breakpoint(s, 22, 1077, r0);
  case 22:
    r0 = (s.arg0).fields["_sy"] = (256);
    s.lastBrkId = 1078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1078]) return breakpoint(s, 23, 1078, r0);
  case 23:
    r0 = (s.arg0).fields["flags"] = (0);
    s.lastBrkId = 1079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1079]) return breakpoint(s, 24, 1079, r0);
  case 24:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 346; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 1080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1080]) return breakpoint(s, 26, 1080, r0);
  case 26:
    s.tmp_0 = Sprite_setKind__P2407_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 347; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 1081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1081]) return breakpoint(s, 28, 1081, r0);
  case 28:
    r0 = (s.arg0).fields["layer"] = (1);
    s.lastBrkId = 1082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1082]) return breakpoint(s, 29, 1082, r0);
  case 29:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 1083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1083]) return breakpoint(s, 30, 1083, r0);
  case 30:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_overlappers"] = (s.tmp_1);
    s.lastBrkId = 1084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1084]) return breakpoint(s, 31, 1084, r0);
  case 31:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_constructor__P2387.info = {"start":7406,"length":678,"line":278,"column":4,"endLine":300,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["this","img"]}

function Sprite_constructor__P2387_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_constructor__P2387, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P2368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1058]) return breakpoint(s, 1, 1058, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 333; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 334; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fy__P2368.info = {"start":5109,"length":64,"line":191,"column":4,"endLine":193,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this","v"]}

function Sprite_fy__P2368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P2368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P2367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1057]) return breakpoint(s, 1, 1057, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_fy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 332; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fy__P2367.info = {"start":4947,"length":60,"line":186,"column":4,"endLine":188,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this"]}
Sprite_fy__P2367.isGetter = true;

function Sprite_fy__P2367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P2367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_fx__P2366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1056]) return breakpoint(s, 1, 1056, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 330; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 331; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fx__P2366.info = {"start":4766,"length":64,"line":181,"column":4,"endLine":183,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this","v"]}

function Sprite_fx__P2366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P2366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fx__P2365(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1055]) return breakpoint(s, 1, 1055, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_fx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 329; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fx__P2365.info = {"start":4604,"length":60,"line":176,"column":4,"endLine":178,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this"]}
Sprite_fx__P2365.isGetter = true;

function Sprite_fx__P2365_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P2365, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ay__P2364(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1054]) return breakpoint(s, 1, 1054, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 328; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ay__P2364.info = {"start":4435,"length":51,"line":170,"column":4,"endLine":172,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this","v"]}

function Sprite_ay__P2364_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P2364, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ay__P2363(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1053]) return breakpoint(s, 1, 1053, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_ay"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 327; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ay__P2363.info = {"start":4269,"length":60,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this"]}
Sprite_ay__P2363.isGetter = true;

function Sprite_ay__P2363_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P2363, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ax__P2362(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1052]) return breakpoint(s, 1, 1052, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 326; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ax"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ax__P2362.info = {"start":4096,"length":51,"line":159,"column":4,"endLine":161,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this","v"]}

function Sprite_ax__P2362_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P2362, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ax__P2361(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1051]) return breakpoint(s, 1, 1051, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_ax"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 325; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ax__P2361.info = {"start":3930,"length":60,"line":154,"column":4,"endLine":156,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this"]}
Sprite_ax__P2361.isGetter = true;

function Sprite_ax__P2361_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P2361, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_vy__P2360(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1050]) return breakpoint(s, 1, 1050, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 324; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vy__P2360.info = {"start":3757,"length":51,"line":148,"column":4,"endLine":150,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this","v"]}

function Sprite_vy__P2360_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P2360, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vy__P2359(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1049]) return breakpoint(s, 1, 1049, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_vy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 323; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vy__P2359.info = {"start":3595,"length":60,"line":143,"column":4,"endLine":145,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this"]}
Sprite_vy__P2359.isGetter = true;

function Sprite_vy__P2359_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P2359, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_vx__P2358(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1048]) return breakpoint(s, 1, 1048, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 322; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vx__P2358.info = {"start":3426,"length":51,"line":137,"column":4,"endLine":139,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this","v"]}

function Sprite_vx__P2358_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P2358, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vx__P2357(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1047]) return breakpoint(s, 1, 1047, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_vx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 321; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vx__P2357.info = {"start":3264,"length":60,"line":132,"column":4,"endLine":134,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this"]}
Sprite_vx__P2357.isGetter = true;

function Sprite_vx__P2357_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P2357, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_BaseSprite_constructor__P2096(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2094_VT)) failedCast(r0);
    s.lastBrkId = 732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[732]) return breakpoint(s, 1, 732, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_z__P2099_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 132; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[733]) return breakpoint(s, 3, 733, r0);
  case 3:
    s.tmp_0 = scene_Scene_addSprite__P2869_mk(s);
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 133; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 134; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_constructor__P2096.info = {"start":344,"length":170,"line":15,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"inline","argumentNames":["this","z"]}

function sprites_BaseSprite_constructor__P2096_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_constructor__P2096, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Scene_addSprite__P2869(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2842_VT)) failedCast(r0);
    s.lastBrkId = 1966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1966]) return breakpoint(s, 1, 1966, r0);
  case 1:
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 1967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1967]) return breakpoint(s, 2, 1967, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["spriteNextId"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spriteNextId"] = (s.tmp_1);
    s.tmp_3 = if_id_2_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.tmp_3.arg1 = s.tmp_2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "id", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/id"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["id"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 948; s.pc = 3; return s.tmp_3; }
    }
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_addSprite__P2869.info = {"start":7218,"length":128,"line":200,"column":8,"endLine":203,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function scene_Scene_addSprite__P2869_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_addSprite__P2869, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P2099(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2094_VT)) failedCast(r0);
    s.lastBrkId = 736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[736]) return breakpoint(s, 3, 736, r0);
  case 3:
    r0 = s.arg0.fields["_z"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[737]) return breakpoint(s, 4, 737, r0);
  case 4:
    r0 = (s.arg0).fields["_z"] = (s.arg1);
    s.lastBrkId = 738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[738]) return breakpoint(s, 5, 738, r0);
  case 5:
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 135; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_2);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P2099.info = {"start":656,"length":174,"line":30,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this","v"]}

function sprites_BaseSprite_z__P2099_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P2099, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P2098(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2094_VT)) failedCast(r0);
    s.lastBrkId = 735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[735]) return breakpoint(s, 1, 735, r0);
  case 1:
    r0 = s.arg0.fields["_z"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P2098.info = {"start":591,"length":55,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this"]}
sprites_BaseSprite_z__P2098.isGetter = true;

function sprites_BaseSprite_z__P2098_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P2098, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function PhysicsEngine_addSprite__P2512(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2510_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_addSprite__P2512.info = {"start":124,"length":29,"line":8,"column":4,"endLine":8,"endColumn":33,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_addSprite__P2512_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_addSprite__P2512, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_setBackgroundColor__P2882(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14799 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1986]) return breakpoint(s, 1, 1986, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 957; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___14799 = (r0);
    s.lastBrkId = 1987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1987]) return breakpoint(s, 3, 1987, r0);
  case 3:
    r0 = s.scene___14799.fields["background"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_setBackgroundColor__P2882.info = {"start":1231,"length":140,"line":53,"column":4,"endLine":56,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"setBackgroundColor","argumentNames":["color"]}

function scene_setBackgroundColor__P2882_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_setBackgroundColor__P2882, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___14799: undefined,
  arg0: undefined,
} }





function Player_Avatar__P143736(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    r0 = (s.arg1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_Array__length(globals.AVATARS___149757);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = (s.arg0).fields["avatar"] = (s.arg1);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2275_mk(s);
    s.tmp_3 = if_frontImage_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, s.arg1);
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "frontImage");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["frontImage"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["frontImage"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 341; s.pc = 6; return s.tmp_3; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = globals.Player___2479;
    s.callLocIdx = 342; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["sprite"] = (s.tmp_1);
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 128;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 343; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg0).fields["avatar"] = (-1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Player_Avatar__P143736.info = {"start":1094,"length":341,"line":53,"column":4,"endLine":61,"endColumn":5,"fileName":"players.ts","functionName":"Avatar","argumentNames":["this","value"]}

function Player_Avatar__P143736_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_Avatar__P143736, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_create__P2275(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14826 = undefined;
    s.sprite___14829 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1033]) return breakpoint(s, 1, 1033, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 303; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___14826 = (r0);
    s.lastBrkId = 1034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1034]) return breakpoint(s, 3, 1034, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(Sprite__C2340_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Sprite_constructor__P2387_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 304; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.sprite___14829 = (s.tmp_0);
    s.lastBrkId = 1035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1035]) return breakpoint(s, 5, 1035, r0);
  case 5:
    s.tmp_0 = Sprite_setKind__P2407_mk(s);
    s.tmp_0.arg0 = s.sprite___14829;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 305; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 1036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1036]) return breakpoint(s, 7, 1036, r0);
  case 7:
    s.tmp_0 = PhysicsEngine__C2510_v0_2_mk(s);
    r0 = s.scene___14826.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.sprite___14829;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2510_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.addSprite;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1037]) return breakpoint(s, 9, 1037, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P14844);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtcore_mkAction(1, sprites_create_inline__P14850);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.sprite___14829);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    r0 = s.scene___14826.fields["createdHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 306; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 308; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1038]) return breakpoint(s, 12, 1038, r0);
  case 12:
    r0 = s.sprite___14829;
    return leave(s, r0)
  default: oops()
} } }
sprites_create__P2275.info = {"start":890,"length":400,"line":35,"column":4,"endLine":47,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"create","argumentNames":["img","kind"]}

function sprites_create__P2275_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create__P2275, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___14826: undefined,
  sprite___14829: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function forEach_inline__P14844(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P14844.info = {"start":1195,"length":19,"line":43,"column":20,"endLine":43,"endColumn":39,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P14844_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P14844, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_create_inline__P14850(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 307; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 307; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 307; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 307; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_create_inline__P14850.info = {"start":1237,"length":22,"line":44,"column":21,"endLine":44,"endColumn":43,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function sprites_create_inline__P14850_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create_inline__P14850, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_arrayFilter__P110(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___13179 = undefined;
    s.len___13181 = undefined;
    s.i___13184 = undefined;
    s.v___13189 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 81;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[81]) return breakpoint(s, 5, 81, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.res___13179 = (r0);
    s.lastBrkId = 82;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[82]) return breakpoint(s, 6, 82, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___13181 = (r0);
    s.lastBrkId = 83;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[83]) return breakpoint(s, 7, 83, r0);
  case 7:
    s.i___13184 = (0);
    s.lastBrkId = 84;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[84]) return breakpoint(s, 8, 84, r0);
  case 8:
  case 1:
    s.lastBrkId = 85;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[85]) return breakpoint(s, 9, 85, r0);
  case 9:
    r0 = (s.i___13184 < s.len___13181);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 86;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[86]) return breakpoint(s, 10, 86, r0);
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___13184);
    s.v___13189 = (r0);
    s.lastBrkId = 87;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[87]) return breakpoint(s, 11, 87, r0);
  case 11:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___13189;
    s.tmp_1.arg1 = s.i___13184;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 6; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 88;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[88]) return breakpoint(s, 13, 88, r0);
  case 13:
    r0 = pxsim_Array__push(s.res___13179, s.v___13189);
  case 2:
  case 3:
    s.lastBrkId = 89;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[89]) return breakpoint(s, 14, 89, r0);
  case 14:
    r0 = (s.i___13184 + 1);
    s.i___13184 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 90;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[90]) return breakpoint(s, 15, 90, r0);
  case 15:
    r0 = s.res___13179;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFilter__P110.info = {"start":7695,"length":317,"line":261,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFilter","argumentNames":["arr","callbackfn"]}

function helpers_arrayFilter__P110_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFilter__P110, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  res___13179: undefined,
  len___13181: undefined,
  i___13184: undefined,
  v___13189: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayForEach__P109(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___11118 = undefined;
    s.i___11121 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 75;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[75]) return breakpoint(s, 3, 75, r0);
  case 3:
    r0 = pxsim_Array__length(s.arg0);
    s.len___11118 = (r0);
    s.lastBrkId = 76;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[76]) return breakpoint(s, 4, 76, r0);
  case 4:
    s.i___11121 = (0);
    s.lastBrkId = 77;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[77]) return breakpoint(s, 5, 77, r0);
  case 5:
  case 1:
    s.lastBrkId = 78;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[78]) return breakpoint(s, 6, 78, r0);
  case 6:
    r0 = (s.i___11121 < s.len___11118);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 79;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[79]) return breakpoint(s, 7, 79, r0);
  case 7:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___11121);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___11121;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 5; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 80;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[80]) return breakpoint(s, 9, 80, r0);
  case 9:
    r0 = (s.i___11121 + 1);
    s.i___11121 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayForEach__P109.info = {"start":7439,"length":250,"line":254,"column":4,"endLine":259,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayForEach","argumentNames":["arr","callbackfn"]}

function helpers_arrayForEach__P109_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayForEach__P109, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___11118: undefined,
  i___11121: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Player_Avatar__P143735(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    r0 = s.arg0.fields["avatar"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Player_Avatar__P143735.info = {"start":1026,"length":62,"line":49,"column":4,"endLine":51,"endColumn":5,"fileName":"players.ts","functionName":"Avatar","argumentNames":["this"]}
Player_Avatar__P143735.isGetter = true;

function Player_Avatar__P143735_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_Avatar__P143735, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Player_Name__P143758(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    r0 = (s.arg0).fields["name"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Player_Name__P143758.info = {"start":1701,"length":64,"line":79,"column":4,"endLine":81,"endColumn":5,"fileName":"players.ts","functionName":"Name","argumentNames":["this","value"]}

function Player_Name__P143758_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_Name__P143758, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function GameSettings_initPlayers__P158220(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___158223 = undefined;
    r0 = pxsim_Array__mk();
    globals.players___158156 = (r0);
    s.i___158223 = (0);
  case 1:
    r0 = (s.i___158223 < globals.numPlayers___158155);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(Player__C143754_VT);
    s.tmp_1 = r0;
    s.tmp_2 = Player_constructor__P143764_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    r0 = (s.i___158223 + 1);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 198; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.players___158156, s.tmp_1);
    r0 = (s.i___158223 + 1);
    s.i___158223 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GameSettings_initPlayers__P158220.info = {"start":2660,"length":167,"line":74,"column":4,"endLine":79,"endColumn":5,"fileName":"settings.ts","functionName":"initPlayers","argumentNames":[]}

function GameSettings_initPlayers__P158220_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GameSettings_initPlayers__P158220, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  i___158223: undefined,
} }





function Player_constructor__P143764(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    r0 = (s.arg0).fields["avatar"] = (-1);
    r0 = (s.arg0).fields["bank"] = (-1);
    r0 = (s.arg0).fields["currSpace"] = (-1);
    r0 = pxsim_pxtcore_mkClassInstance(Dice__C32621_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Dice_constructor__P32633_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = 0;
    s.tmp_1.arg3 = 5;
    s.tmp_1.arg4 = 5;
    s.tmp_1.arg5 = 154;
    s.tmp_1.arg6 = 5;
    s.tmp_1.arg7 = 5;
    s.tmp_1.arg8 = 0;
    s.callLocIdx = 340; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["dice"] = (s.tmp_0);
    r0 = (s.arg0).fields["controllerId"] = (s.arg1);
    r0 = (s.arg0).fields["isInJail"] = (false);
    r0 = (s.arg0).fields["location"] = (-1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["name"] = (s.tmp_1);
    r0 = (s.arg0).fields["sprite"] = (null);
    r0 = (s.arg0).fields["statsSprite"] = (null);
    r0 = (s.arg0).fields["turnsInJail"] = (-1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Player_constructor__P143764.info = {"start":616,"length":363,"line":32,"column":4,"endLine":44,"endColumn":5,"fileName":"players.ts","functionName":"inline","argumentNames":["this","controllerId"]}

function Player_constructor__P143764_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_constructor__P143764, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Dice_constructor__P32633(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = (s.arg0).fields["areRolling"] = (false);
    r0 = (s.arg0).fields["deltaX"] = (s.arg7);
    r0 = (s.arg0).fields["deltaY"] = (s.arg8);
    r0 = (s.arg0).fields["movesSinceLastRotate"] = (0);
    r0 = (s.arg0).fields["skin"] = (0);
    r0 = (s.arg0).fields["startX"] = (s.arg3);
    r0 = (s.arg0).fields["startY"] = (s.arg4);
    r0 = (s.arg0).fields["stopX"] = (s.arg5);
    r0 = (s.arg0).fields["stopY"] = (s.arg6);
    s.tmp_0 = Dice_Count__P32625_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 1;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 352; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 353; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Dice_Orientation__P32593_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 354; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_constructor__P32633.info = {"start":706,"length":569,"line":30,"column":4,"endLine":44,"endColumn":5,"fileName":"dice.ts","functionName":"inline","argumentNames":["this","count","orientation","startX","startY","stopX","stopY","vx","vy"]}

function Dice_constructor__P32633_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_constructor__P32633, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
} }





function Dice_Count__P32625(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___32737 = undefined;
    s.s___32742 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["sprites"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["values"] = (s.tmp_1);
    s.i___32737 = (0);
  case 1:
    r0 = (s.i___32737 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = sprites_create__P2275_mk(s);
    r0 = pxsim.image.ofBuffer(_hex32745);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = globals.Dice___32647;
    s.callLocIdx = 355; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.s___32742 = (r0);
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_0.arg0 = s.s___32742;
    s.tmp_0.arg1 = 128;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 356; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.s___32742);
    r0 = s.arg0.fields["values"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 1);
    r0 = (s.i___32737 + 1);
    s.i___32737 = (r0);
    { step = 1; continue; }
  case 2:
    s.tmp_0 = Dice_updateSprites__P32632_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 357; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_Count__P32625.info = {"start":1642,"length":362,"line":65,"column":4,"endLine":75,"endColumn":5,"fileName":"dice.ts","functionName":"Count","argumentNames":["this","value"]}

function Dice_Count__P32625_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_Count__P32625, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  i___32737: undefined,
  s___32742: undefined,
  arg0: undefined,
  arg1: undefined,
} }

const _hex32745 = pxsim.BufferMethods.createBufferFromHex("870401000100000000000000")




function Dice_updateSprites__P32632(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___33004 = undefined;
    s.s___33011 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    s.i___33004 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___33004;
    r0 = s.arg0.fields["values"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.arg0.fields["sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.i___33004);
    s.s___33011 = (r0);
    r0 = s.arg0.fields["skin"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 2:
    s.tmp_1 = Sprite_setImage__P2390_mk(s);
    s.tmp_1.arg0 = s.s___33011;
    s.tmp_3 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_3.arg0 = "d6white";
    s.callLocIdx = 378; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["values"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.i___33004);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 379; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    { step = 6; continue; }
  case 3:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = s.s___33011;
    s.tmp_2 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_2.arg0 = "d6yellow";
    s.callLocIdx = 380; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["values"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___33004);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 381; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    { step = 6; continue; }
  case 4:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = s.s___33011;
    s.tmp_2 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_2.arg0 = "d6orange";
    s.callLocIdx = 382; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["values"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___33004);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 383; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = s.s___33011;
    s.tmp_2 = helpers_getAnimationByName__P3336_mk(s);
    s.tmp_2.arg0 = "d6white";
    s.callLocIdx = 384; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["values"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___33004);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 385; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 6:
    r0 = (s.i___33004 + 1);
    s.i___33004 = (r0);
    { step = 1; continue; }
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_updateSprites__P32632.info = {"start":5353,"length":760,"line":207,"column":4,"endLine":228,"endColumn":5,"fileName":"dice.ts","functionName":"updateSprites","argumentNames":["this"]}

function Dice_updateSprites__P32632_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_updateSprites__P32632, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  i___33004: undefined,
  s___33011: undefined,
  arg0: undefined,
} }





function Dice_AreDoubles__P32622(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = s.arg0.fields["values"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = false;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["values"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, 0);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["values"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 == s.tmp_5);
  case 3:
    return leaveAccessor(s, r0)
  default: oops()
} } }
Dice_AreDoubles__P32622.info = {"start":1323,"length":162,"line":50,"column":4,"endLine":55,"endColumn":5,"fileName":"dice.ts","functionName":"AreDoubles","argumentNames":["this"]}
Dice_AreDoubles__P32622.isGetter = true;

function Dice_AreDoubles__P32622_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_AreDoubles__P32622, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function Dice_Roll__P32626(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.toReturn___32781 = undefined;
    s.v___32783 = undefined;
    s.unnamed20274___U2 = undefined;
    s.unnamed20275___U3 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    s.toReturn___32781 = (0);
    s.v___32783 = (undefined);
    r0 = s.arg0.fields["values"];
    s.unnamed20274___U2 = (r0);
    s.unnamed20275___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20275___U3;
    r0 = pxsim_Array__length(s.unnamed20274___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20274___U2, s.unnamed20275___U3);
    s.v___32783 = (r0);
    r0 = (s.toReturn___32781 + s.v___32783);
    s.toReturn___32781 = (r0);
    r0 = (s.unnamed20275___U3 + 1);
    s.unnamed20275___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed20274___U2 = (undefined);
    r0 = s.toReturn___32781;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Dice_Roll__P32626.info = {"start":2338,"length":155,"line":89,"column":4,"endLine":95,"endColumn":5,"fileName":"dice.ts","functionName":"Roll","argumentNames":["this"]}
Dice_Roll__P32626.isGetter = true;

function Dice_Roll__P32626_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_Roll__P32626, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  toReturn___32781: undefined,
  v___32783: undefined,
  unnamed20274___U2: undefined,
  unnamed20275___U3: undefined,
  arg0: undefined,
} }





function Dice_move__P32629(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.randomize___32818 = undefined;
    s.stop___32819 = undefined;
    s.i___32820 = undefined;
    s.s___32827 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    s.randomize___32818 = (false);
    s.stop___32819 = (false);
    s.i___32820 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___32820;
    r0 = s.arg0.fields["sprites"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = s.arg0.fields["sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.i___32820);
    s.s___32827 = (r0);
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_1 = r0 = s.s___32827;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Sprite_x__P2353_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 361; s.pc = 28; return s.tmp_3;
  case 28:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["deltaX"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 362; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_1 = r0 = s.s___32827;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Sprite_y__P2355_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 363; s.pc = 30; return s.tmp_3;
  case 30:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["deltaY"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 364; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["movesSinceLastRotate"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["movesSinceLastRotate"] = (s.tmp_1);
    r0 = s.arg0.fields["movesSinceLastRotate"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.randomize___32818 = (true);
  case 2:
  case 3:
    r0 = s.arg0.fields["deltaX"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    s.tmp_3 = Sprite_x__P2353_mk(s);
    s.tmp_3.arg0 = s.s___32827;
    s.callLocIdx = 365; s.pc = 31; return s.tmp_3;
  case 31:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["stopX"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 >= s.tmp_4);
  case 5:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 6; continue; }
    r0 = s.tmp_5;
    { step = 9; continue; }
  case 6:
    r0 = s.arg0.fields["deltaX"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 < 0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_6;
    { step = 8; continue; }
  case 7:
    s.tmp_9 = Sprite_x__P2353_mk(s);
    s.tmp_9.arg0 = s.s___32827;
    s.callLocIdx = 366; s.pc = 32; return s.tmp_9;
  case 32:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = s.arg0.fields["stopX"];
    s.tmp_10 = r0;
    r0 = (s.tmp_8 <= s.tmp_10);
  case 8:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = s.tmp_11;
  case 9:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBool(s.tmp_12);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_12;
    { step = 17; continue; }
  case 10:
    r0 = s.arg0.fields["deltaY"];
    s.tmp_14 = r0;
    r0 = (s.tmp_14 >= 0);
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBool(s.tmp_13);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_13;
    { step = 12; continue; }
  case 11:
    s.tmp_16 = Sprite_y__P2355_mk(s);
    s.tmp_16.arg0 = s.s___32827;
    s.callLocIdx = 367; s.pc = 33; return s.tmp_16;
  case 33:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = s.arg0.fields["stopY"];
    s.tmp_17 = r0;
    r0 = (s.tmp_15 >= s.tmp_17);
  case 12:
    // jmp value (already in r0)
    s.tmp_18 = r0;
    r0 = pxsim_numops_toBool(s.tmp_18);
    if (!r0) { step = 13; continue; }
    r0 = s.tmp_18;
    { step = 16; continue; }
  case 13:
    r0 = s.arg0.fields["deltaY"];
    s.tmp_20 = r0;
    r0 = (s.tmp_20 < 0);
    s.tmp_19 = r0;
    r0 = pxsim_numops_toBool(s.tmp_19);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_19;
    { step = 15; continue; }
  case 14:
    s.tmp_22 = Sprite_y__P2355_mk(s);
    s.tmp_22.arg0 = s.s___32827;
    s.callLocIdx = 368; s.pc = 34; return s.tmp_22;
  case 34:
    r0 = s.retval;
    s.tmp_21 = r0;
    r0 = s.arg0.fields["stopY"];
    s.tmp_23 = r0;
    r0 = (s.tmp_21 <= s.tmp_23);
  case 15:
    // jmp value (already in r0)
    s.tmp_24 = r0;
    r0 = s.tmp_24;
  case 16:
    // jmp value (already in r0)
    s.tmp_25 = r0;
    r0 = s.tmp_25;
  case 17:
    // jmp value (already in r0)
    s.tmp_26 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_26);
    if (!r0) { step = 18; continue; }
    s.stop___32819 = (true);
  case 18:
  case 19:
    r0 = (s.i___32820 + 1);
    s.i___32820 = (r0);
    { step = 1; continue; }
  case 20:
    s.tmp_0 = r0 = s.randomize___32818;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 21; continue; }
    r0 = s.tmp_0;
    { step = 22; continue; }
  case 21:
    r0 = s.stop___32819;
  case 22:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 25; continue; }
    s.tmp_2 = Dice_randomize__P32630_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 369; s.pc = 35; return s.tmp_2;
  case 35:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.stop___32819);
    if (!r0) { step = 23; continue; }
    r0 = (s.arg0).fields["areRolling"] = (false);
  case 23:
  case 24:
  case 25:
  case 26:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_move__P32629.info = {"start":2935,"length":948,"line":118,"column":4,"endLine":147,"endColumn":5,"fileName":"dice.ts","functionName":"move","argumentNames":["this"]}

function Dice_move__P32629_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_move__P32629, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  randomize___32818: undefined,
  stop___32819: undefined,
  i___32820: undefined,
  s___32827: undefined,
  arg0: undefined,
} }





function Dice_randomize__P32630(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___32951 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    s.i___32951 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___32951;
    r0 = s.arg0.fields["values"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = s.arg0.fields["values"];
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.i___32951;
    r0 = pxsim.Math_.randomRange(1, 6);
    s.tmp_6 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_4, s.tmp_5, s.tmp_6);
    r0 = (s.i___32951 + 1);
    s.i___32951 = (r0);
    { step = 1; continue; }
  case 2:
    s.tmp_0 = Dice_updateSprites__P32632_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 374; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_randomize__P32630.info = {"start":4624,"length":178,"line":183,"column":4,"endLine":188,"endColumn":5,"fileName":"dice.ts","functionName":"randomize","argumentNames":["this"]}

function Dice_randomize__P32630_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_randomize__P32630, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  i___32951: undefined,
  arg0: undefined,
} }





function Sprite_y__P2356(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1046]) return breakpoint(s, 1, 1046, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_4 = Sprite_height__P2397_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 319; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 320; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_y__P2356.info = {"start":3081,"length":65,"line":126,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this","v"]}

function Sprite_y__P2356_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P2356, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_top__P2403(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___9688 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1110]) return breakpoint(s, 1, 1110, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 368; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___9688 = (r0);
    s.lastBrkId = 1111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1111]) return breakpoint(s, 3, 1111, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2510_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___9688;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = 0;
    s.tmp_1 = Fx_sub__P159_mk(s);
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 369; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_y"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 370; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2510_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_top__P2403.info = {"start":11687,"length":256,"line":421,"column":4,"endLine":431,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this","value"]}

function Sprite_top__P2403_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P2403, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  physics___9688: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_top__P2402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1109]) return breakpoint(s, 1, 1109, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_y"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 367; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_top__P2402.info = {"start":11544,"length":53,"line":416,"column":4,"endLine":418,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this"]}
Sprite_top__P2402.isGetter = true;

function Sprite_top__P2402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P2402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_height__P2397(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1103]) return breakpoint(s, 1, 1103, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_height"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 358; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_height__P2397.info = {"start":10541,"length":61,"line":380,"column":4,"endLine":382,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"height","argumentNames":["this"]}
Sprite_height__P2397.isGetter = true;

function Sprite_height__P2397_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_height__P2397, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_x__P2354(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1044]) return breakpoint(s, 1, 1044, r0);
  case 1:
    s.tmp_0 = Sprite_left__P2399_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_4 = Sprite_width__P2396_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 314; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 315; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_x__P2354.info = {"start":2724,"length":65,"line":115,"column":4,"endLine":117,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this","v"]}

function Sprite_x__P2354_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P2354, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P2399(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___13880 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1105]) return breakpoint(s, 1, 1105, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 360; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___13880 = (r0);
    s.lastBrkId = 1106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1106]) return breakpoint(s, 3, 1106, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2510_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___13880;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_1 = Fx_sub__P159_mk(s);
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 361; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_x"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 362; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2510_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_left__P2399.info = {"start":10853,"length":257,"line":391,"column":4,"endLine":401,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this","value"]}

function Sprite_left__P2399_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P2399, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  physics___13880: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P2398(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1104]) return breakpoint(s, 1, 1104, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_x"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 359; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_left__P2398.info = {"start":10709,"length":53,"line":386,"column":4,"endLine":388,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this"]}
Sprite_left__P2398.isGetter = true;

function Sprite_left__P2398_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P2398, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_width__P2396(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1102]) return breakpoint(s, 1, 1102, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 357; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_width__P2396.info = {"start":10374,"length":59,"line":375,"column":4,"endLine":377,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"width","argumentNames":["this"]}
Sprite_width__P2396.isGetter = true;

function Sprite_width__P2396_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_width__P2396, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Dice_AreRolling__P32623(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = s.arg0.fields["areRolling"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Dice_AreRolling__P32623.info = {"start":1491,"length":71,"line":57,"column":4,"endLine":59,"endColumn":5,"fileName":"dice.ts","functionName":"AreRolling","argumentNames":["this"]}
Dice_AreRolling__P32623.isGetter = true;

function Dice_AreRolling__P32623_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_AreRolling__P32623, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function startGame__P175677(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    globals.gameMode___158120 = (2);
    s.tmp_0 = scene_setBackgroundImage__P2884_mk(s);
    s.tmp_1 = helpers_getImageByName__P3335_mk(s);
    s.tmp_1.arg0 = "bg";
    s.callLocIdx = 448; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 449; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    globals.gameMode___158120 = (1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
startGame__P175677.info = {"start":1595,"length":165,"line":60,"column":0,"endLine":64,"endColumn":1,"fileName":"main.ts","functionName":"startGame","argumentNames":[]}

function startGame__P175677_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: startGame__P175677, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function helpers_getImageByName__P3335(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2898]) return breakpoint(s, 1, 2898, r0);
  case 1:
    s.tmp_0 = helpers__getFactoryInstance__P3332_mk(s);
    s.tmp_0.arg0 = "image";
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1423; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_getImageByName__P3335.info = {"start":2881,"length":103,"line":87,"column":4,"endLine":89,"endColumn":5,"fileName":"pxt_modules/game/assetTemplates.ts","functionName":"getImageByName","argumentNames":["name"]}

function helpers_getImageByName__P3335_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_getImageByName__P3335, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers__getFactoryInstance__P3332(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.factory___9492 = undefined;
    s.unnamed12688___U1 = undefined;
    s.unnamed12689___U2 = undefined;
    s.data___9499 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2889]) return breakpoint(s, 10, 2889, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(globals.factories___5656);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2890]) return breakpoint(s, 11, 2890, r0);
  case 11:
    s.factory___9492 = (undefined);
    s.unnamed12688___U1 = (globals.factories___5656);
    s.unnamed12689___U2 = (0);
    s.lastBrkId = 2891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2891]) return breakpoint(s, 12, 2891, r0);
  case 12:
  case 1:
    s.tmp_0 = r0 = s.unnamed12689___U2;
    r0 = pxsim_Array__length(s.unnamed12688___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12688___U1, s.unnamed12689___U2);
    s.factory___9492 = (r0);
    s.lastBrkId = 2892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2892]) return breakpoint(s, 13, 2892, r0);
  case 13:
    s.lastBrkId = 2893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2893]) return breakpoint(s, 14, 2893, r0);
  case 14:
    s.tmp_4 = if_kind_1_mk(s);
    s.tmp_4.arg0 = s.factory___9492;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "kind");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["kind"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["kind"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1421; s.pc = 15; return s.tmp_4; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2894]) return breakpoint(s, 16, 2894, r0);
  case 16:
    s.tmp_5 = if_factory_2_mk(s);
    s.tmp_5.arg0 = s.factory___9492;
    s.tmp_5.arg1 = s.arg1;
    if (!s.tmp_5.arg0.vtable.iface) {
      setupLambda(s.tmp_5, pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "factory"), 2);
      s.callLocIdx = 1422; s.pc = 17; return s.tmp_5;
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["factory"];
      if (s.tmp_5.fn == null) { setupLambda(s.tmp_5, s.tmp_5.arg0.fields["factory"], 2); s.callLocIdx = 1422; s.pc = 17; return s.tmp_5; }
      else if (s.tmp_5.fn.isGetter) { s.tmp_5.stage2Call = true; s.callLocIdx = 1422; s.pc = 17; return s.tmp_5;; }
     else { s.callLocIdx = 1422; s.pc = 17; return s.tmp_5; }
    }
  case 17:
    r0 = s.retval;
    s.data___9499 = (r0);
    s.lastBrkId = 2895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2895]) return breakpoint(s, 18, 2895, r0);
  case 18:
    r0 = pxsim_numops_toBoolDecr(s.data___9499);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2896]) return breakpoint(s, 19, 2896, r0);
  case 19:
    r0 = s.data___9499;
    { step = 9; continue; }
  case 2:
  case 3:
  case 4:
  case 5:
    r0 = (s.unnamed12689___U2 + 1);
    s.unnamed12689___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed12688___U1 = (undefined);
  case 7:
  case 8:
    s.lastBrkId = 2897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2897]) return breakpoint(s, 20, 2897, r0);
  case 20:
    r0 = null;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
helpers__getFactoryInstance__P3332.info = {"start":2226,"length":348,"line":66,"column":4,"endLine":76,"endColumn":5,"fileName":"pxt_modules/game/assetTemplates.ts","functionName":"_getFactoryInstance","argumentNames":["kind","name"]}

function helpers__getFactoryInstance__P3332_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers__getFactoryInstance__P3332, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  factory___9492: undefined,
  unnamed12688___U1: undefined,
  unnamed12689___U2: undefined,
  data___9499: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function assets_image__P3326(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2884]) return breakpoint(s, 1, 2884, r0);
  case 1:
    r0 = null;
    return leave(s, r0)
  default: oops()
} } }
assets_image__P3326.info = {"start":931,"length":71,"line":26,"column":4,"endLine":26,"endColumn":75,"fileName":"pxt_modules/game/assetTemplates.ts","functionName":"image","argumentNames":["lits","args"]}

function assets_image__P3326_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: assets_image__P3326, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_setBackgroundImage__P2884(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___9511 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1988]) return breakpoint(s, 1, 1988, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 958; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___9511 = (r0);
    s.lastBrkId = 1989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1989]) return breakpoint(s, 3, 1989, r0);
  case 3:
    s.tmp_0 = scene_Background_image__P2675_mk(s);
    r0 = s.scene___9511.fields["background"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 959; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_setBackgroundImage__P2884.info = {"start":1962,"length":135,"line":78,"column":4,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"setBackgroundImage","argumentNames":["img"]}

function scene_setBackgroundImage__P2884_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_setBackgroundImage__P2884, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___9511: undefined,
  arg0: undefined,
} }





function scene_Background_image__P2675(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2668_VT)) failedCast(r0);
    s.lastBrkId = 1675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1675]) return breakpoint(s, 1, 1675, r0);
  case 1:
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_image__P2675.info = {"start":1003,"length":68,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"image","argumentNames":["this","image"]}

function scene_Background_image__P2675_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_image__P2675, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_image__P2674(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2668_VT)) failedCast(r0);
    s.lastBrkId = 1672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1672]) return breakpoint(s, 3, 1672, r0);
  case 3:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1673]) return breakpoint(s, 4, 1673, r0);
  case 4:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_6 = r0;
    r0 = pxsim.image.create(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_image"] = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1674]) return breakpoint(s, 5, 1674, r0);
  case 5:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Background_image__P2674.info = {"start":811,"length":174,"line":33,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"image","argumentNames":["this"]}
scene_Background_image__P2674.isGetter = true;

function scene_Background_image__P2674_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_image__P2674, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function Player_Name__P143750(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    r0 = s.arg0.fields["name"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Player_Name__P143750.info = {"start":1637,"length":58,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"players.ts","functionName":"Name","argumentNames":["this"]}
Player_Name__P143750.isGetter = true;

function Player_Name__P143750_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_Name__P143750, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_splash__P2964(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dialog___11042 = undefined;
    s.s___11055 = undefined;
    s.pressed___11062 = undefined;
    s.done___11063 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2224]) return breakpoint(s, 7, 2224, r0);
  case 7:
    s.tmp_0 = console_inspect__P382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 20;
    s.callLocIdx = 1052; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.arg0 = (r0);
    s.lastBrkId = 2225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2225]) return breakpoint(s, 9, 2225, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = console_inspect__P382_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 20;
    s.callLocIdx = 1053; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg1 = (s.tmp_1);
    s.lastBrkId = 2226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2226]) return breakpoint(s, 11, 2226, r0);
  case 11:
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 1054; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2227]) return breakpoint(s, 13, 2227, r0);
  case 13:
    s.tmp_0 = game_pushScene__P3002_mk(s);
    s.callLocIdx = 1055; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 2228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2228]) return breakpoint(s, 15, 2228, r0);
  case 15:
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1056; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_2);
    s.lastBrkId = 2229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2229]) return breakpoint(s, 17, 2229, r0);
  case 17:
    r0 = pxsim_pxtcore_mkClassInstance(game_SplashDialog__C2931_VT);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    r0 = 42;
    { step = 4; continue; }
  case 3:
    r0 = 35;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = game_SplashDialog_constructor__P2938_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.tmp_1;
    s.callLocIdx = 1057; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.dialog___11042 = (s.tmp_0);
    s.lastBrkId = 2230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2230]) return breakpoint(s, 19, 2230, r0);
  case 19:
    s.tmp_0 = game_SplashDialog__C2931_v1_2_mk(s);
    s.tmp_0.arg0 = s.dialog___11042;
    s.tmp_0.arg1 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, game_SplashDialog__C2931_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.setText;
    s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 2231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2231]) return breakpoint(s, 21, 2231, r0);
  case 21:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2232]) return breakpoint(s, 22, 2232, r0);
  case 22:
    s.tmp_0 = game_SplashDialog_setSubtext__P2940_mk(s);
    s.tmp_0.arg0 = s.dialog___11042;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1058; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 2233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2233]) return breakpoint(s, 24, 2233, r0);
  case 24:
    s.tmp_0 = sprites_create__P2275_mk(s);
    r0 = s.dialog___11042.fields["image"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 1059; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.s___11055 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.pressed___11062 = (r0);
    s.lastBrkId = 2234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2234]) return breakpoint(s, 26, 2234, r0);
  case 26:
    r0 = pxsim_pxtrt_stlocRef(s.pressed___11062, true);
    r0 = pxsim_pxtrt.mklocRef();
    s.done___11063 = (r0);
    s.lastBrkId = 2235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2235]) return breakpoint(s, 27, 2235, r0);
  case 27:
    r0 = pxsim_pxtrt_stlocRef(s.done___11063, false);
    s.lastBrkId = 2236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2236]) return breakpoint(s, 28, 2236, r0);
  case 28:
    r0 = pxsim_pxtcore_mkAction(3, game_splash_inline__P11065);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.dialog___11042);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.pressed___11062);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.done___11063);
    s.tmp_1 = game_onUpdate__P3022_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1062; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    s.lastBrkId = 2246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2246]) return breakpoint(s, 30, 2246, r0);
  case 30:
    r0 = pxsim_pxtcore_mkAction(1, game_splash_inline__P11088);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.done___11063);
    s.tmp_1 = pauseUntil__P367_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1063; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 2247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2247]) return breakpoint(s, 32, 2247, r0);
  case 32:
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1064; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_splash__P2964.info = {"start":30591,"length":1082,"line":865,"column":4,"endLine":896,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"splash","argumentNames":["title","subtitle"]}

function game_splash__P2964_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_splash__P2964, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  dialog___11042: undefined,
  s___11055: undefined,
  pressed___11062: undefined,
  done___11063: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_splash_inline__P11065(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currentState___11068 = undefined;
    s.lastBrkId = 2237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2237]) return breakpoint(s, 9, 2237, r0);
  case 9:
    s.tmp_0 = game_BaseDialog__C2902_v0_1_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    if (!checkSubtype(s.tmp_0.arg0, game_BaseDialog__C2902_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.update;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2238]) return breakpoint(s, 11, 2238, r0);
  case 11:
    s.tmp_0 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_0.arg0 = globals.A___2113;
    if (!checkSubtype(s.tmp_0.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.isPressed;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.currentState___11068 = (r0);
    s.lastBrkId = 2239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2239]) return breakpoint(s, 13, 2239, r0);
  case 13:
    s.tmp_0 = r0 = s.currentState___11068;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2240]) return breakpoint(s, 14, 2240, r0);
  case 14:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], true);
    s.lastBrkId = 2241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2241]) return breakpoint(s, 15, 2241, r0);
  case 15:
    s.tmp_0 = scene_setBackgroundImage__P2884_mk(s);
    s.tmp_0.arg0 = null;
    s.callLocIdx = 1060; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 2242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2242]) return breakpoint(s, 17, 2242, r0);
  case 17:
    s.tmp_0 = game_popScene__P3003_mk(s);
    s.callLocIdx = 1061; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2243]) return breakpoint(s, 19, 2243, r0);
  case 19:
    r0 = pxsim_pxtrt_stlocRef(s.caps[2], true);
    { step = 8; continue; }
  case 3:
    s.lastBrkId = 2244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2244]) return breakpoint(s, 20, 2244, r0);
  case 20:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.currentState___11068);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2245]) return breakpoint(s, 21, 2245, r0);
  case 21:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], false);
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_splash_inline__P11065.info = {"start":31175,"length":410,"line":880,"column":22,"endLine":892,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":[]}

function game_splash_inline__P11065_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_splash_inline__P11065, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currentState___11068: undefined,
} }





function game_splash_inline__P11088(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
game_splash_inline__P11088.info = {"start":31607,"length":10,"line":894,"column":19,"endLine":894,"endColumn":29,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":[]}

function game_splash_inline__P11088_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_splash_inline__P11088, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_popScene__P3003(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___11091 = undefined;
    s.lastBrkId = 2333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2333]) return breakpoint(s, 11, 2333, r0);
  case 11:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1096; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.oldScene___11091 = (r0);
    s.lastBrkId = 2334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2334]) return breakpoint(s, 13, 2334, r0);
  case 13:
    s.tmp_0 = r0 = globals._sceneStack___5238;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals._sceneStack___5238);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2335]) return breakpoint(s, 14, 2335, r0);
  case 14:
    r0 = pxsim_Array_.pop(globals._sceneStack___5238);
    globals._scene___5237 = (r0);
    s.lastBrkId = 2336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2336]) return breakpoint(s, 15, 2336, r0);
  case 15:
    s.tmp_0 = control_popEventContext__P410_mk(s);
    s.callLocIdx = 1097; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2337]) return breakpoint(s, 17, 2337, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(globals._scene___5237);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2338]) return breakpoint(s, 18, 2338, r0);
  case 18:
    s.tmp_0 = control_popEventContext__P410_mk(s);
    s.callLocIdx = 1098; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 2339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2339]) return breakpoint(s, 20, 2339, r0);
  case 20:
    globals._scene___5237 = (undefined);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 2340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2340]) return breakpoint(s, 21, 2340, r0);
  case 21:
    r0 = pxsim_numops_toBoolDecr(globals._scene___5237);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2341]) return breakpoint(s, 22, 2341, r0);
  case 22:
    s.tmp_0 = particles_enableAll__P3182_mk(s);
    s.callLocIdx = 1099; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 2342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2342]) return breakpoint(s, 24, 2342, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___5240);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 2343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2343]) return breakpoint(s, 25, 2343, r0);
  case 25:
    r0 = pxsim_pxtcore_mkAction(1, game_popScene_inline__P11112);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___11091);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals._scenePopHandlers___5240;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1101; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene__P3003.info = {"start":5133,"length":548,"line":161,"column":4,"endLine":179,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"popScene","argumentNames":[]}

function game_popScene__P3003_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene__P3003, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___11091: undefined,
} }





function game_popScene_inline__P11112(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1100; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene_inline__P11112.info = {"start":5645,"length":18,"line":177,"column":38,"endLine":177,"endColumn":56,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function game_popScene_inline__P11112_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene_inline__P11112, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_enableAll__P3182(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___11133 = undefined;
    s.lastBrkId = 2748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2748]) return breakpoint(s, 3, 2748, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P5587_mk(s);
    s.callLocIdx = 1340; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___11133 = (r0);
    s.lastBrkId = 2749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2749]) return breakpoint(s, 5, 2749, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___11133);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2750]) return breakpoint(s, 6, 2750, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___11133;
    s.tmp_0.arg1 = particles_enableAll_inline__P11139;
    s.callLocIdx = 1342; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2751]) return breakpoint(s, 8, 2751, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P5583_mk(s);
    s.callLocIdx = 1343; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll__P3182.info = {"start":12649,"length":193,"line":413,"column":4,"endLine":419,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"enableAll","argumentNames":[]}

function particles_enableAll__P3182_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll__P3182, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___11133: undefined,
} }





function particles_enableAll_inline__P11139(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P3163_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1341; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll_inline__P11139.info = {"start":12773,"length":21,"line":416,"column":28,"endLine":416,"endColumn":49,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_enableAll_inline__P11139_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll_inline__P11139, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_particleSources__P5587(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___11307 = undefined;
    s.lastBrkId = 2752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2752]) return breakpoint(s, 1, 2752, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1344; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["particleSources"];
    s.sources___11307 = (r0);
    s.lastBrkId = 2753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2753]) return breakpoint(s, 3, 2753, r0);
  case 3:
    r0 = s.sources___11307;
    return leave(s, r0)
  default: oops()
} } }
particles_particleSources__P5587.info = {"start":12848,"length":119,"line":421,"column":4,"endLine":424,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"particleSources","argumentNames":[]}

function particles_particleSources__P5587_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_particleSources__P5587, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___11307: undefined,
} }





function particles_pruneParticles__P5583(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___11144 = undefined;
    s.lastBrkId = 2736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2736]) return breakpoint(s, 3, 2736, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P5587_mk(s);
    s.callLocIdx = 1327; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___11144 = (r0);
    s.lastBrkId = 2737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2737]) return breakpoint(s, 5, 2737, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___11144);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2738]) return breakpoint(s, 6, 2738, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1 = helpers_arraySlice__P115_mk(s);
    s.tmp_1.arg0 = s.sources___11144;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_Array__length(s.sources___11144);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 1328; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = particles_pruneParticles_inline__P11153;
    s.callLocIdx = 1330; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles__P5583.info = {"start":9864,"length":156,"line":327,"column":4,"endLine":330,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"pruneParticles","argumentNames":[]}

function particles_pruneParticles__P5583_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles__P5583, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sources___11144: undefined,
} }





function particles_pruneParticles_inline__P11153(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource__prune__P3158_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1329; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles_inline__P11153.info = {"start":9997,"length":15,"line":329,"column":62,"endLine":329,"endColumn":77,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_pruneParticles_inline__P11153_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles_inline__P11153, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ParticleSource__prune__P3158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___11183 = undefined;
    s.sources___11191 = undefined;
    s.current___11205 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2674]) return breakpoint(s, 21, 2674, r0);
  case 21:
  case 1:
    s.lastBrkId = 2675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2675]) return breakpoint(s, 22, 2675, r0);
  case 22:
    r0 = s.arg0.fields["head"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2676]) return breakpoint(s, 23, 2676, r0);
  case 23:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["next"];
    s.tmp_3 = r0;
    r0 = (s.arg0).fields["head"] = (s.tmp_3);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 2677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2677]) return breakpoint(s, 24, 2677, r0);
  case 24:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["head"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 2678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2678]) return breakpoint(s, 25, 2678, r0);
  case 25:
    s.tmp_5 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1302; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    s.scene___11183 = (r0);
    s.lastBrkId = 2679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2679]) return breakpoint(s, 27, 2679, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.scene___11183);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2680]) return breakpoint(s, 28, 2680, r0);
  case 28:
    r0 = s.scene___11183.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
  case 7:
  case 8:
    s.lastBrkId = 2681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2681]) return breakpoint(s, 29, 2681, r0);
  case 29:
    s.tmp_0 = particles_particleSources__P5587_mk(s);
    s.callLocIdx = 1303; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.sources___11191 = (r0);
    s.lastBrkId = 2682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2682]) return breakpoint(s, 31, 2682, r0);
  case 31:
    s.tmp_0 = r0 = s.sources___11191;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_Array__length(s.sources___11191);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 2683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2683]) return breakpoint(s, 32, 2683, r0);
  case 32:
    r0 = pxsim_Array_.removeElement(s.sources___11191, s.arg0);
  case 11:
  case 12:
    s.lastBrkId = 2684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2684]) return breakpoint(s, 33, 2684, r0);
  case 33:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == undefined);
  case 13:
  case 14:
    s.lastBrkId = 2685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2685]) return breakpoint(s, 34, 2685, r0);
  case 34:
    r0 = s.arg0.fields["head"];
    s.current___11205 = (r0);
    s.lastBrkId = 2686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2686]) return breakpoint(s, 35, 2686, r0);
  case 35:
  case 15:
    s.lastBrkId = 2687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2687]) return breakpoint(s, 36, 2687, r0);
  case 36:
    s.tmp_0 = r0 = s.current___11205;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    r0 = s.current___11205.fields["next"];
  case 17:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 2688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2688]) return breakpoint(s, 37, 2688, r0);
  case 37:
    r0 = s.current___11205.fields["next"];
    r0 = r0.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 <= 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 2689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2689]) return breakpoint(s, 38, 2689, r0);
  case 38:
    r0 = s.current___11205.fields["next"];
    r0 = r0.fields["next"];
    s.tmp_4 = r0;
    r0 = (s.current___11205).fields["next"] = (s.tmp_4);
    { step = 19; continue; }
  case 18:
    s.lastBrkId = 2690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2690]) return breakpoint(s, 39, 2690, r0);
  case 39:
    r0 = s.current___11205.fields["next"];
    s.current___11205 = (r0);
  case 19:
    { step = 15; continue; }
  case 20:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__prune__P3158.info = {"start":5104,"length":830,"line":166,"column":8,"endLine":189,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_prune","argumentNames":["this"]}

function particles_ParticleSource__prune__P3158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__prune__P3158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___11183: undefined,
  sources___11191: undefined,
  current___11205: undefined,
  arg0: undefined,
} }





function helpers_arraySlice__P115(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___11228 = undefined;
    s.len___11230 = undefined;
    s.i___11264 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[108]) return breakpoint(s, 16, 108, r0);
  case 16:
    r0 = pxsim_Array__mk();
    s.res___11228 = (r0);
    s.lastBrkId = 109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[109]) return breakpoint(s, 17, 109, r0);
  case 17:
    r0 = pxsim_Array__length(s.arg0);
    s.len___11230 = (r0);
    s.lastBrkId = 110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[110]) return breakpoint(s, 18, 110, r0);
  case 18:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[111]) return breakpoint(s, 19, 111, r0);
  case 19:
    s.arg1 = (0);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[112]) return breakpoint(s, 20, 112, r0);
  case 20:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[113]) return breakpoint(s, 21, 113, r0);
  case 21:
    s.tmp_1 = Math_max__P130_mk(s);
    r0 = (s.len___11230 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 8; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.arg1 = (r0);
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[114]) return breakpoint(s, 23, 114, r0);
  case 23:
    r0 = (s.arg1 > s.len___11230);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[115]) return breakpoint(s, 24, 115, r0);
  case 24:
    r0 = s.res___11228;
    { step = 15; continue; }
  case 5:
  case 6:
    s.lastBrkId = 116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[116]) return breakpoint(s, 25, 116, r0);
  case 25:
    r0 = (s.arg2 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[117]) return breakpoint(s, 26, 117, r0);
  case 26:
    s.arg2 = (s.len___11230);
    { step = 10; continue; }
  case 7:
    s.lastBrkId = 118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[118]) return breakpoint(s, 27, 118, r0);
  case 27:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[119]) return breakpoint(s, 28, 119, r0);
  case 28:
    r0 = (s.len___11230 + s.arg2);
    s.arg2 = (r0);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[120]) return breakpoint(s, 29, 120, r0);
  case 29:
    r0 = (s.arg2 > s.len___11230);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[121]) return breakpoint(s, 30, 121, r0);
  case 30:
    s.arg2 = (s.len___11230);
  case 11:
  case 12:
    s.lastBrkId = 122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[122]) return breakpoint(s, 31, 122, r0);
  case 31:
    s.i___11264 = (s.arg1);
    s.lastBrkId = 123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[123]) return breakpoint(s, 32, 123, r0);
  case 32:
  case 13:
    s.lastBrkId = 124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[124]) return breakpoint(s, 33, 124, r0);
  case 33:
    r0 = (s.i___11264 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[125]) return breakpoint(s, 34, 125, r0);
  case 34:
    s.tmp_1 = r0 = s.res___11228;
    r0 = pxsim_Array__getAt(s.arg0, s.i___11264);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[126]) return breakpoint(s, 35, 126, r0);
  case 35:
    r0 = (s.i___11264 + 1);
    s.i___11264 = (r0);
    { step = 13; continue; }
  case 14:
    s.lastBrkId = 127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[127]) return breakpoint(s, 36, 127, r0);
  case 36:
    r0 = s.res___11228;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySlice__P115.info = {"start":9027,"length":690,"line":303,"column":4,"endLine":328,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySlice","argumentNames":["arr","start","end"]}

function helpers_arraySlice__P115_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySlice__P115, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  res___11228: undefined,
  len___11230: undefined,
  i___11264: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_ParticleSource_enabled__P3163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2697]) return breakpoint(s, 5, 2697, r0);
  case 5:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = particles_ParticleSource_enabled__P3162_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1306; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2698]) return breakpoint(s, 7, 2698, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 1);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 ^ 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["pFlags"] = (s.tmp_6);
    s.lastBrkId = 2699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2699]) return breakpoint(s, 8, 2699, r0);
  case 8:
    r0 = (s.arg0).fields["timer"] = (0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P3163.info = {"start":6816,"length":214,"line":223,"column":8,"endLine":228,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this","v"]}

function particles_ParticleSource_enabled__P3163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P3163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_enabled__P3162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2696]) return breakpoint(s, 1, 2696, r0);
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P3162.info = {"start":6622,"length":76,"line":216,"column":8,"endLine":218,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this"]}
particles_ParticleSource_enabled__P3162.isGetter = true;

function particles_ParticleSource_enabled__P3162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P3162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function control_popEventContext__P410(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___11314 = undefined;
    s.context___11322 = undefined;
    s.lastBrkId = 478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[478]) return breakpoint(s, 8, 478, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4737);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[479]) return breakpoint(s, 9, 479, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[480]) return breakpoint(s, 10, 480, r0);
  case 10:
    r0 = pxsim_Array_.pop(globals.eventContexts___4737);
    s.ctx___11314 = (r0);
    s.lastBrkId = 481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[481]) return breakpoint(s, 11, 481, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.ctx___11314);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[482]) return breakpoint(s, 12, 482, r0);
  case 12:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[483]) return breakpoint(s, 13, 483, r0);
  case 13:
    s.tmp_2 = control_EventContext_unregister__P402_mk(s);
    s.tmp_2.arg0 = s.ctx___11314;
    s.callLocIdx = 59; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[484]) return breakpoint(s, 15, 484, r0);
  case 15:
    s.tmp_0 = r0 = globals.eventContexts___4737;
    r0 = pxsim_Array__length(globals.eventContexts___4737);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.context___11322 = (r0);
    s.lastBrkId = 485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[485]) return breakpoint(s, 16, 485, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.context___11322);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[486]) return breakpoint(s, 17, 486, r0);
  case 17:
    s.tmp_0 = control_EventContext_register__P401_mk(s);
    s.tmp_0.arg0 = s.context___11322;
    s.callLocIdx = 60; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[487]) return breakpoint(s, 19, 487, r0);
  case 19:
    globals.eventContexts___4737 = (undefined);
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_popEventContext__P410.info = {"start":7755,"length":413,"line":236,"column":4,"endLine":250,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"popEventContext","argumentNames":[]}

function control_popEventContext__P410_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_popEventContext__P410, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ctx___11314: undefined,
  context___11322: undefined,
} }





function control_EventContext_unregister__P402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___11343 = undefined;
    s.unnamed12654___U1 = undefined;
    s.unnamed12655___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[439]) return breakpoint(s, 3, 439, r0);
  case 3:
    s.h___11343 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed12654___U1 = (r0);
    s.unnamed12655___U2 = (0);
    s.lastBrkId = 440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[440]) return breakpoint(s, 4, 440, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed12655___U2;
    r0 = pxsim_Array__length(s.unnamed12654___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12654___U1, s.unnamed12655___U2);
    s.h___11343 = (r0);
    s.lastBrkId = 441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[441]) return breakpoint(s, 5, 441, r0);
  case 5:
    s.lastBrkId = 442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[442]) return breakpoint(s, 6, 442, r0);
  case 6:
    s.tmp_2 = control_EventHandler_unregister__P4731_mk(s);
    s.tmp_2.arg0 = s.h___11343;
    s.callLocIdx = 52; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = (s.unnamed12655___U2 + 1);
    s.unnamed12655___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12654___U1 = (undefined);
    s.lastBrkId = 443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[443]) return breakpoint(s, 8, 443, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["frameWorker"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["frameWorker"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_unregister__P402.info = {"start":4721,"length":131,"line":141,"column":8,"endLine":145,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventContext_unregister__P402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_unregister__P402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___11343: undefined,
  unnamed12654___U1: undefined,
  unnamed12655___U2: undefined,
  arg0: undefined,
} }





function control_EventHandler_unregister__P4731(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4729_VT)) failedCast(r0);
    s.lastBrkId = 381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[381]) return breakpoint(s, 1, 381, r0);
  case 1:
    r0 = s.arg0.fields["src"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_0, s.tmp_1, control_doNothing__P4733, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_unregister__P4731.info = {"start":1136,"length":106,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventHandler_unregister__P4731_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_unregister__P4731, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function control_doNothing__P4733(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_doNothing__P4733.info = {"start":1254,"length":24,"line":41,"column":4,"endLine":41,"endColumn":28,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"doNothing","argumentNames":[]}

function control_doNothing__P4733_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_doNothing__P4733, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function control_EventContext_register__P401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___11335 = undefined;
    s.unnamed12652___U1 = undefined;
    s.unnamed12653___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[434]) return breakpoint(s, 3, 434, r0);
  case 3:
    s.h___11335 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed12652___U1 = (r0);
    s.unnamed12653___U2 = (0);
    s.lastBrkId = 435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[435]) return breakpoint(s, 4, 435, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed12653___U2;
    r0 = pxsim_Array__length(s.unnamed12652___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12652___U1, s.unnamed12653___U2);
    s.h___11335 = (r0);
    s.lastBrkId = 436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[436]) return breakpoint(s, 5, 436, r0);
  case 5:
    s.lastBrkId = 437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[437]) return breakpoint(s, 6, 437, r0);
  case 6:
    s.tmp_2 = control_EventHandler_register__P4730_mk(s);
    s.tmp_2.arg0 = s.h___11335;
    s.callLocIdx = 50; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = (s.unnamed12653___U2 + 1);
    s.unnamed12653___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12652___U1 = (undefined);
    s.lastBrkId = 438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[438]) return breakpoint(s, 8, 438, r0);
  case 8:
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P4735_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 51; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_register__P401.info = {"start":4573,"length":138,"line":135,"column":8,"endLine":139,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventContext_register__P401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_register__P401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___11335: undefined,
  unnamed12652___U1: undefined,
  unnamed12653___U2: undefined,
  arg0: undefined,
} }





function control_EventContext_registerFrameCallbacks__P4735(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.worker___10608 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[418]) return breakpoint(s, 4, 418, r0);
  case 4:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[419]) return breakpoint(s, 5, 419, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[420]) return breakpoint(s, 6, 420, r0);
  case 6:
    r0 = s.arg0.fields["frameWorker"];
    s.worker___10608 = (r0);
    s.lastBrkId = 421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[421]) return breakpoint(s, 7, 421, r0);
  case 7:
    r0 = pxsim_pxtcore_mkAction(2, control_EventContext_registerFrameCallbacks_inline__P10614);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.worker___10608);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks__P4735.info = {"start":3668,"length":895,"line":109,"column":8,"endLine":133,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameCallbacks","argumentNames":["this"]}

function control_EventContext_registerFrameCallbacks__P4735_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks__P4735, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  worker___10608: undefined,
  arg0: undefined,
} }





function control_EventContext_registerFrameCallbacks_inline__P10614(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___10644 = undefined;
    s.lastBrkId = 422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[422]) return breakpoint(s, 5, 422, r0);
  case 5:
    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[423]) return breakpoint(s, 6, 423, r0);
  case 6:
    r0 = pxsim_pxtcore_mkAction(1, control_EventContext_registerFrameCallbacks_inline__P10620);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.caps[0]);
    s.tmp_2 = pauseUntil__P367_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 47; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[424]) return breakpoint(s, 8, 424, r0);
  case 8:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (true);
    s.lastBrkId = 425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[425]) return breakpoint(s, 9, 425, r0);
  case 9:
    r0 = (s.caps[0]).fields["framesInSample"] = (0);
    s.lastBrkId = 426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[426]) return breakpoint(s, 10, 426, r0);
  case 10:
    r0 = (s.caps[0]).fields["timeInSample"] = (0);
    s.lastBrkId = 427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[427]) return breakpoint(s, 11, 427, r0);
  case 11:
    r0 = (s.caps[0]).fields["deltaTimeMillis"] = (0);
    s.lastBrkId = 428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[428]) return breakpoint(s, 12, 428, r0);
  case 12:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim.control.millis();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["prevTimeMillis"] = (s.tmp_1);
    s.lastBrkId = 429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[429]) return breakpoint(s, 13, 429, r0);
  case 13:
  case 3:
    s.lastBrkId = 430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[430]) return breakpoint(s, 14, 430, r0);
  case 14:
    r0 = s.caps[0].fields["frameWorker"];
    s.tmp_1 = r0;
    r0 = (s.caps[1] == s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[431]) return breakpoint(s, 15, 431, r0);
  case 15:
    s.tmp_2 = control_EventContext_runCallbacks__P4734_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 48; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.delay___10644 = (r0);
    s.lastBrkId = 432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[432]) return breakpoint(s, 17, 432, r0);
  case 17:
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = s.delay___10644;
    s.callLocIdx = 49; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 3; continue; }
  case 4:
    s.lastBrkId = 433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[433]) return breakpoint(s, 19, 433, r0);
  case 19:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks_inline__P10614.info = {"start":3829,"length":723,"line":113,"column":34,"endLine":132,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventContext_registerFrameCallbacks_inline__P10614_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks_inline__P10614, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  delay___10644: undefined,
} }





function control_EventContext_registerFrameCallbacks_inline__P10620(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks_inline__P10620.info = {"start":4060,"length":28,"line":117,"column":31,"endLine":117,"endColumn":59,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventContext_registerFrameCallbacks_inline__P10620_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks_inline__P10620, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function control_EventContext_runCallbacks__P4734(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.loopStart___10653 = undefined;
    s.f___10666 = undefined;
    s.unnamed12650___U2 = undefined;
    s.unnamed12651___U3 = undefined;
    s.now___10671 = undefined;
    s.runtime___10674 = undefined;
    s.realTimeInSample___10693 = undefined;
    s.fps___10702 = undefined;
    s.delay___10771 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[391]) return breakpoint(s, 11, 391, r0);
  case 11:
    s.lastBrkId = 392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[392]) return breakpoint(s, 12, 392, r0);
  case 12:
    r0 = pxsim.control.millis();
    s.loopStart___10653 = (r0);
    s.lastBrkId = 393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[393]) return breakpoint(s, 13, 393, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["prevTimeMillis"];
    s.tmp_2 = r0;
    r0 = (s.loopStart___10653 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["deltaTimeMillis"] = (s.tmp_1);
    s.lastBrkId = 394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[394]) return breakpoint(s, 14, 394, r0);
  case 14:
    r0 = (s.arg0).fields["prevTimeMillis"] = (s.loopStart___10653);
    s.lastBrkId = 395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[395]) return breakpoint(s, 15, 395, r0);
  case 15:
    s.f___10666 = (undefined);
    r0 = s.arg0.fields["frameCallbacks"];
    s.unnamed12650___U2 = (r0);
    s.unnamed12651___U3 = (0);
    s.lastBrkId = 396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[396]) return breakpoint(s, 16, 396, r0);
  case 16:
  case 1:
    s.tmp_0 = r0 = s.unnamed12651___U3;
    r0 = pxsim_Array__length(s.unnamed12650___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12650___U2, s.unnamed12651___U3);
    s.f___10666 = (r0);
    s.lastBrkId = 397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[397]) return breakpoint(s, 17, 397, r0);
  case 17:
    s.lastBrkId = 398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[398]) return breakpoint(s, 18, 398, r0);
  case 18:
    s.tmp_2 = if_handler_1_mk(s);
    s.tmp_2.arg0 = s.f___10666;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "handler"), 1);
      s.callLocIdx = 45; s.pc = 19; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["handler"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["handler"], 1); s.callLocIdx = 45; s.pc = 19; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 45; s.pc = 19; return s.tmp_2;; }
     else { s.callLocIdx = 45; s.pc = 19; return s.tmp_2; }
    }
  case 19:
    r0 = s.retval;
    r0 = (s.unnamed12651___U3 + 1);
    s.unnamed12651___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12650___U2 = (undefined);
    s.lastBrkId = 399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[399]) return breakpoint(s, 20, 399, r0);
  case 20:
    r0 = pxsim.control.millis();
    s.now___10671 = (r0);
    s.lastBrkId = 400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[400]) return breakpoint(s, 21, 400, r0);
  case 21:
    r0 = (s.now___10671 - s.loopStart___10653);
    s.runtime___10674 = (r0);
    s.lastBrkId = 401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[401]) return breakpoint(s, 22, 401, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timeInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.runtime___10674);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timeInSample"] = (s.tmp_1);
    s.lastBrkId = 402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[402]) return breakpoint(s, 23, 402, r0);
  case 23:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["framesInSample"] = (s.tmp_1);
    s.lastBrkId = 403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[403]) return breakpoint(s, 24, 403, r0);
  case 24:
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 30);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[404]) return breakpoint(s, 25, 404, r0);
  case 25:
    r0 = s.arg0.fields["lastPerfDump"];
    s.tmp_4 = r0;
    r0 = (s.now___10671 - s.tmp_4);
    s.realTimeInSample___10693 = (r0);
    s.lastBrkId = 405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[405]) return breakpoint(s, 26, 405, r0);
  case 26:
    r0 = (s.arg0).fields["lastPerfDump"] = (s.now___10671);
    s.lastBrkId = 406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[406]) return breakpoint(s, 27, 406, r0);
  case 27:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 1000);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 / s.tmp_1);
    s.fps___10702 = (r0);
    s.lastBrkId = 407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[407]) return breakpoint(s, 28, 407, r0);
  case 28:
    r0 = pxsim.Math_.round(s.fps___10702);
    s.tmp_1 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 29);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 29:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat("fps:", s.tmp_0);
    globals.control_EventContext_lastStats___397 = (r0);
    s.lastBrkId = 408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[408]) return breakpoint(s, 30, 408, r0);
  case 30:
    r0 = (s.fps___10702 < 99);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[409]) return breakpoint(s, 31, 409, r0);
  case 31:
    if ((globals.control_EventContext_lastStats___397) && (globals.control_EventContext_lastStats___397).vtable) {
    setupResume(s, 32);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___397);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___397) + ""; }
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.fps___10702 * 10);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.round(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 % 10);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(".", s.tmp_4);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 34);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 34:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    globals.control_EventContext_lastStats___397 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[410]) return breakpoint(s, 35, 410, r0);
  case 35:
    r0 = pxsim.control.profilingEnabled();
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[411]) return breakpoint(s, 36, 411, r0);
  case 36:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_9 = r0;
    r0 = (s.fps___10702 * 100);
    s.tmp_12 = r0;
    r0 = (s.tmp_12 | 0);
    s.tmp_11 = r0;
    if ((s.tmp_11) && (s.tmp_11).vtable) {
    setupResume(s, 37);
    pxsim_String__stringConv(s.tmp_11);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_11) + ""; }
  case 37:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, "/100 fps - ");
    s.tmp_7 = r0;
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_14 = r0;
    if ((s.tmp_14) && (s.tmp_14).vtable) {
    setupResume(s, 38);
    pxsim_String__stringConv(s.tmp_14);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_14) + ""; }
  case 38:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_13);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, " frames (");
    s.tmp_5 = r0;
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_16 = r0;
    if ((s.tmp_16) && (s.tmp_16).vtable) {
    setupResume(s, 39);
    pxsim_String__stringConv(s.tmp_16);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_16) + ""; }
  case 39:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_15);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, "ms/");
    s.tmp_3 = r0;
    if ((s.realTimeInSample___10693) && (s.realTimeInSample___10693).vtable) {
    setupResume(s, 40);
    pxsim_String__stringConv(s.realTimeInSample___10693);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.realTimeInSample___10693) + ""; }
  case 40:
    r0 = s.retval;
    s.tmp_17 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_17);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "ms)");
    s.tmp_1 = r0;
    r0 = pxsim.control.dmesg(s.tmp_1);
    s.lastBrkId = 412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[412]) return breakpoint(s, 41, 412, r0);
  case 41:
    r0 = pxsim.control.gc();
    s.lastBrkId = 413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[413]) return breakpoint(s, 42, 413, r0);
  case 42:
    r0 = pxsim_pxtcore.dumpPerfCounters();
  case 7:
  case 8:
    s.lastBrkId = 414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[414]) return breakpoint(s, 43, 414, r0);
  case 43:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    s.lastBrkId = 415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[415]) return breakpoint(s, 44, 415, r0);
  case 44:
    r0 = (s.arg0).fields["framesInSample"] = (0);
  case 9:
  case 10:
    s.lastBrkId = 416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[416]) return breakpoint(s, 45, 416, r0);
  case 45:
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 1;
    r0 = (20 - s.runtime___10674);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 46; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    s.delay___10771 = (r0);
    s.lastBrkId = 417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[417]) return breakpoint(s, 47, 417, r0);
  case 47:
    r0 = s.delay___10771;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_runCallbacks__P4734.info = {"start":2220,"length":1395,"line":75,"column":8,"endLine":106,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"runCallbacks","argumentNames":["this"]}

function control_EventContext_runCallbacks__P4734_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_runCallbacks__P4734, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  loopStart___10653: undefined,
  f___10666: undefined,
  unnamed12650___U2: undefined,
  unnamed12651___U3: undefined,
  now___10671: undefined,
  runtime___10674: undefined,
  realTimeInSample___10693: undefined,
  fps___10702: undefined,
  delay___10771: undefined,
  arg0: undefined,
} }





function control_EventHandler_register__P4730(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4729_VT)) failedCast(r0);
    s.lastBrkId = 378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[378]) return breakpoint(s, 1, 378, r0);
  case 1:
    r0 = pxsim_pxtcore_mkAction(1, control_EventHandler_register_inline__P10903);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["src"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_1, s.tmp_2, s.tmp_0, s.tmp_3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register__P4730.info = {"start":961,"length":165,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventHandler_register__P4730_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register__P4730, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function control_EventHandler_register_inline__P10903(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[379]) return breakpoint(s, 3, 379, r0);
  case 3:
    r0 = s.caps[0].fields["handler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[380]) return breakpoint(s, 4, 380, r0);
  case 4:
    s.tmp_1 = if_handler_1_mk(s);
    s.tmp_1.arg0 = s.caps[0];
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "handler"), 1);
      s.callLocIdx = 44; s.pc = 5; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["handler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["handler"], 1); s.callLocIdx = 44; s.pc = 5; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 44; s.pc = 5; return s.tmp_1;; }
     else { s.callLocIdx = 44; s.pc = 5; return s.tmp_1; }
    }
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register_inline__P10903.info = {"start":1032,"length":71,"line":31,"column":58,"endLine":33,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventHandler_register_inline__P10903_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register_inline__P10903, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function game_pushScene__P3002(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___11885 = undefined;
    s.lastBrkId = 2324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2324]) return breakpoint(s, 5, 2324, r0);
  case 5:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1090; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.oldScene___11885 = (r0);
    s.lastBrkId = 2325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2325]) return breakpoint(s, 7, 2325, r0);
  case 7:
    s.tmp_0 = particles_clearAll__P3180_mk(s);
    s.callLocIdx = 1091; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2326]) return breakpoint(s, 9, 2326, r0);
  case 9:
    s.tmp_0 = particles_disableAll__P3181_mk(s);
    s.callLocIdx = 1092; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2327]) return breakpoint(s, 11, 2327, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(globals._sceneStack___5238);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2328]) return breakpoint(s, 12, 2328, r0);
  case 12:
    r0 = pxsim_Array__mk();
    globals._sceneStack___5238 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2329]) return breakpoint(s, 13, 2329, r0);
  case 13:
    r0 = pxsim_Array__push(globals._sceneStack___5238, globals._scene___5237);
    s.lastBrkId = 2330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2330]) return breakpoint(s, 14, 2330, r0);
  case 14:
    s.tmp_0 = game_init__P5245_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1093; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2331]) return breakpoint(s, 16, 2331, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___5239);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2332]) return breakpoint(s, 17, 2332, r0);
  case 17:
    r0 = pxsim_pxtcore_mkAction(1, game_pushScene_inline__P11902);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___11885);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals._scenePushHandlers___5239;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1095; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene__P3002.info = {"start":4760,"length":367,"line":148,"column":4,"endLine":159,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"pushScene","argumentNames":[]}

function game_pushScene__P3002_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene__P3002, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___11885: undefined,
} }





function game_pushScene_inline__P11902(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1094; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene_inline__P11902.info = {"start":5091,"length":18,"line":157,"column":39,"endLine":157,"endColumn":57,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function game_pushScene_inline__P11902_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene_inline__P11902, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_init__P5245(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2321]) return breakpoint(s, 5, 2321, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scene___5237);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2322]) return breakpoint(s, 6, 2322, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Scene__C2842_VT);
    s.tmp_3 = r0;
    s.tmp_4 = scene_Scene_constructor__P2865_mk(s);
    s.tmp_4.arg0 = s.tmp_3;
    s.tmp_5 = control_pushEventContext__P409_mk(s);
    s.callLocIdx = 1087; s.pc = 8; return s.tmp_5;
  case 8:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.tmp_4.arg2 = globals._scene___5237;
    s.callLocIdx = 1088; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    globals._scene___5237 = (s.tmp_3);
  case 3:
  case 4:
    s.lastBrkId = 2323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2323]) return breakpoint(s, 9, 2323, r0);
  case 9:
    s.tmp_0 = scene_Scene_init__P2866_mk(s);
    s.tmp_0.arg0 = globals._scene___5237;
    s.callLocIdx = 1089; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_init__P5245.info = {"start":4560,"length":194,"line":141,"column":4,"endLine":146,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"init","argumentNames":["forceNewScene"]}

function game_init__P5245_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_init__P5245, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function scene_Scene_init__P2866(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2842_VT)) failedCast(r0);
    s.lastBrkId = 1930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1930]) return breakpoint(s, 4, 1930, r0);
  case 4:
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1931]) return breakpoint(s, 5, 1931, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1932]) return breakpoint(s, 6, 1932, r0);
  case 6:
    s.tmp_1 = power_poke__P1929_mk(s);
    s.callLocIdx = 926; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1933]) return breakpoint(s, 8, 1933, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["allSprites"] = (s.tmp_1);
    s.lastBrkId = 1934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1934]) return breakpoint(s, 9, 1934, r0);
  case 9:
    r0 = (s.arg0).fields["spriteNextId"] = (0);
    s.lastBrkId = 1935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1935]) return breakpoint(s, 10, 1935, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11932);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 8;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 929; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 1939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1939]) return breakpoint(s, 12, 1939, r0);
  case 12:
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 13;
    s.tmp_0.arg2 = controller__moveSprites__P2133;
    s.callLocIdx = 930; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 1940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1940]) return breakpoint(s, 14, 1940, r0);
  case 14:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11955);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 15;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 932; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 1943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1943]) return breakpoint(s, 16, 1943, r0);
  case 16:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11968);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 55;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 936; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 1950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1950]) return breakpoint(s, 18, 1950, r0);
  case 18:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11989);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 90;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 938; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 1953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1953]) return breakpoint(s, 20, 1953, r0);
  case 20:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11997);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 150;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 942; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 1960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1960]) return breakpoint(s, 22, 1960, r0);
  case 22:
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 200;
    s.tmp_0.arg2 = control___screen_update__P1993;
    s.callLocIdx = 943; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.lastBrkId = 1961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1961]) return breakpoint(s, 24, 1961, r0);
  case 24:
    s.tmp_0 = multiplayer_initServer__P3387_mk(s);
    s.callLocIdx = 944; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 1962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1962]) return breakpoint(s, 26, 1962, r0);
  case 26:
    s.tmp_0 = multiplayer_initPlayerConnectionListeners__P3388_mk(s);
    s.callLocIdx = 945; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 1963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1963]) return breakpoint(s, 28, 1963, r0);
  case 28:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P12028);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals.scene_Scene_initializers___2864;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 947; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init__P2866.info = {"start":4432,"length":2572,"line":127,"column":8,"endLine":187,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"init","argumentNames":["this"]}

function scene_Scene_init__P2866_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init__P2866, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_Scene_init_inline__P11932(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1936]) return breakpoint(s, 1, 1936, r0);
  case 1:
    s.tmp_0 = r0 = s.caps[0];
    r0 = s.tmp_0.fields["_millis"];
    s.tmp_2 = r0;
    r0 = s.caps[0].fields["eventContext"];
    r0 = r0.fields["deltaTimeMillis"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_millis"] = (s.tmp_1);
    s.lastBrkId = 1937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1937]) return breakpoint(s, 2, 1937, r0);
  case 2:
    s.lastBrkId = 1938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1938]) return breakpoint(s, 3, 1938, r0);
  case 3:
    s.tmp_0 = controller___update__P2165_mk(s);
    s.tmp_1 = control_EventContext_deltaTime__P400_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 927; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 928; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11932.info = {"start":4722,"length":217,"line":134,"column":72,"endLine":138,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11932_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11932, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_Scene_init_inline__P11955(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1941]) return breakpoint(s, 1, 1941, r0);
  case 1:
    s.lastBrkId = 1942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1942]) return breakpoint(s, 2, 1942, r0);
  case 2:
    s.tmp_0 = PhysicsEngine__C2510_v4_2_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = control_EventContext_deltaTime__P400_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 931; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2510_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.move;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11955.info = {"start":5234,"length":159,"line":143,"column":69,"endLine":146,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11955_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11955, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_Scene_init_inline__P11968(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dt___11969 = undefined;
    s.s___11977 = undefined;
    s.unnamed12682___U2 = undefined;
    s.unnamed12683___U3 = undefined;
    s.lastBrkId = 1944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1944]) return breakpoint(s, 3, 1944, r0);
  case 3:
    s.tmp_0 = control_EventContext_deltaTime__P400_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 933; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.dt___11969 = (r0);
    s.lastBrkId = 1945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1945]) return breakpoint(s, 5, 1945, r0);
  case 5:
    s.tmp_0 = scene_Camera_update__P2797_mk(s);
    r0 = s.caps[0].fields["camera"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 934; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 1946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1946]) return breakpoint(s, 7, 1946, r0);
  case 7:
    s.s___11977 = (undefined);
    r0 = s.caps[0].fields["allSprites"];
    s.unnamed12682___U2 = (r0);
    s.unnamed12683___U3 = (0);
    s.lastBrkId = 1947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1947]) return breakpoint(s, 8, 1947, r0);
  case 8:
  case 1:
    s.tmp_0 = r0 = s.unnamed12683___U3;
    r0 = pxsim_Array__length(s.unnamed12682___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12682___U2, s.unnamed12683___U3);
    s.s___11977 = (r0);
    s.lastBrkId = 1948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1948]) return breakpoint(s, 9, 1948, r0);
  case 9:
    s.lastBrkId = 1949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1949]) return breakpoint(s, 10, 1949, r0);
  case 10:
    s.tmp_2 = if___update_3_mk(s);
    s.tmp_2.arg0 = s.s___11977;
    r0 = s.caps[0].fields["camera"];
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.dt___11969;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__update"), 3);
      s.callLocIdx = 935; s.pc = 11; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__update"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__update"], 3); s.callLocIdx = 935; s.pc = 11; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 935; s.pc = 11; return s.tmp_2;; }
     else { s.callLocIdx = 935; s.pc = 11; return s.tmp_2; }
    }
  case 11:
    r0 = s.retval;
    r0 = (s.unnamed12683___U3 + 1);
    s.unnamed12683___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12682___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11968.info = {"start":5582,"length":214,"line":152,"column":79,"endLine":158,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11968_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11968, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dt___11969: undefined,
  s___11977: undefined,
  unnamed12682___U2: undefined,
  unnamed12683___U3: undefined,
} }





function scene_Scene_init_inline__P11989(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1951]) return breakpoint(s, 1, 1951, r0);
  case 1:
    s.lastBrkId = 1952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1952]) return breakpoint(s, 2, 1952, r0);
  case 2:
    s.tmp_0 = scene_Scene_render__P2871_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 937; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11989.info = {"start":5937,"length":109,"line":163,"column":76,"endLine":166,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11989_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11989, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_Scene_init_inline__P11997(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1954]) return breakpoint(s, 7, 1954, r0);
  case 7:
    s.tmp_0 = r0 = globals.stats___2967;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___398;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1955]) return breakpoint(s, 8, 1955, r0);
  case 8:
    s.tmp_2 = lambda_2_mk(s);
    s.tmp_2.argL = globals.control_EventContext_onStats___398;
    if ((globals.control_EventContext_lastStats___397) && (globals.control_EventContext_lastStats___397).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___397);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___397) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.caps[0].fields["allSprites"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__length(s.tmp_8);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(" sprites:", s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 939; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1956]) return breakpoint(s, 13, 1956, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2966);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1957]) return breakpoint(s, 14, 1957, r0);
  case 14:
    s.tmp_0 = PhysicsEngine__C2510_v3_1_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2510_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1958]) return breakpoint(s, 16, 1958, r0);
  case 16:
    s.tmp_0 = game_consoleOverlay_draw__P3126_mk(s);
    s.callLocIdx = 940; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 1959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1959]) return breakpoint(s, 18, 1959, r0);
  case 18:
    s.tmp_0 = power_checkDeepSleep__P1930_mk(s);
    s.callLocIdx = 941; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11997.info = {"start":6163,"length":504,"line":168,"column":80,"endLine":180,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11997_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11997, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
} }





function scene_Scene_init_inline__P12028(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 946; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P12028.info = {"start":6980,"length":12,"line":186,"column":39,"endLine":186,"endColumn":51,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["f"]}

function scene_Scene_init_inline__P12028_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P12028, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function multiplayer_initPlayerConnectionListeners__P3388(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___12031 = undefined;
    s.lastBrkId = 3137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3137]) return breakpoint(s, 3, 3137, r0);
  case 3:
    s.p___12031 = (1);
    s.lastBrkId = 3138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3138]) return breakpoint(s, 4, 3138, r0);
  case 4:
  case 1:
    s.lastBrkId = 3139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3139]) return breakpoint(s, 5, 3139, r0);
  case 5:
    r0 = (s.p___12031 <= 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3140]) return breakpoint(s, 6, 3140, r0);
  case 6:
    s.tmp_1 = multiplayer_registerPlayerConnectionListeners__P5693_mk(s);
    s.tmp_1.arg0 = s.p___12031;
    s.callLocIdx = 1502; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 3141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3141]) return breakpoint(s, 8, 3141, r0);
  case 8:
    r0 = (s.p___12031 + 1);
    s.p___12031 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_initPlayerConnectionListeners__P3388.info = {"start":1324,"length":154,"line":39,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"initPlayerConnectionListeners","argumentNames":[]}

function multiplayer_initPlayerConnectionListeners__P3388_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_initPlayerConnectionListeners__P3388, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  p___12031: undefined,
} }





function multiplayer_registerPlayerConnectionListeners__P5693(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3142]) return breakpoint(s, 1, 3142, r0);
  case 1:
    r0 = pxsim_pxtcore_mkAction(1, multiplayer_registerPlayerConnectionListeners_inline__P12043);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_onEvent__P391_mk(s);
    s.tmp_1.arg0 = 3241;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 16;
    s.callLocIdx = 1504; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3143]) return breakpoint(s, 3, 3143, r0);
  case 3:
    r0 = pxsim_pxtcore_mkAction(1, multiplayer_registerPlayerConnectionListeners_inline__P12049);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_onEvent__P391_mk(s);
    s.tmp_1.arg0 = 3242;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 16;
    s.callLocIdx = 1506; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_registerPlayerConnectionListeners__P5693.info = {"start":1484,"length":415,"line":45,"column":4,"endLine":56,"endColumn":5,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"registerPlayerConnectionListeners","argumentNames":["playerNumber"]}

function multiplayer_registerPlayerConnectionListeners__P5693_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_registerPlayerConnectionListeners__P5693, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function multiplayer_registerPlayerConnectionListeners_inline__P12043(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = multiplayer_receiveConnectionChangedEvent__P5694_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1503; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_registerPlayerConnectionListeners_inline__P12043.info = {"start":1656,"length":55,"line":49,"column":12,"endLine":49,"endColumn":67,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"inline","argumentNames":[]}

function multiplayer_registerPlayerConnectionListeners_inline__P12043_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_registerPlayerConnectionListeners_inline__P12043, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function multiplayer_registerPlayerConnectionListeners_inline__P12049(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = multiplayer_receiveConnectionChangedEvent__P5694_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1505; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_registerPlayerConnectionListeners_inline__P12049.info = {"start":1826,"length":56,"line":54,"column":12,"endLine":54,"endColumn":68,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"inline","argumentNames":[]}

function multiplayer_registerPlayerConnectionListeners_inline__P12049_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_registerPlayerConnectionListeners_inline__P12049, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function multiplayer_receiveConnectionChangedEvent__P5694(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.c___12054 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3144]) return breakpoint(s, 8, 3144, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 1:
    s.lastBrkId = 3145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3145]) return breakpoint(s, 9, 3145, r0);
  case 9:
    s.c___12054 = (globals.player1___2123);
    s.lastBrkId = 3146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3146]) return breakpoint(s, 10, 3146, r0);
  case 10:
    { step = 5; continue; }
  case 2:
    s.lastBrkId = 3147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3147]) return breakpoint(s, 11, 3147, r0);
  case 11:
    s.c___12054 = (globals.player2___2120);
    s.lastBrkId = 3148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3148]) return breakpoint(s, 12, 3148, r0);
  case 12:
    { step = 5; continue; }
  case 3:
    s.lastBrkId = 3149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3149]) return breakpoint(s, 13, 3149, r0);
  case 13:
    s.c___12054 = (globals.player3___2121);
    s.lastBrkId = 3150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3150]) return breakpoint(s, 14, 3150, r0);
  case 14:
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 3151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3151]) return breakpoint(s, 15, 3151, r0);
  case 15:
    s.c___12054 = (globals.player4___2122);
    s.lastBrkId = 3152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3152]) return breakpoint(s, 16, 3152, r0);
  case 16:
  case 5:
    s.lastBrkId = 3153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3153]) return breakpoint(s, 17, 3153, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.c___12054);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3154]) return breakpoint(s, 18, 3154, r0);
  case 18:
    s.tmp_0 = controller_Controller_connected__P2156_mk(s);
    s.tmp_0.arg0 = s.c___12054;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1507; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_receiveConnectionChangedEvent__P5694.info = {"start":1905,"length":552,"line":58,"column":4,"endLine":76,"endColumn":5,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"receiveConnectionChangedEvent","argumentNames":["playerNumber","connected"]}

function multiplayer_receiveConnectionChangedEvent__P5694_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_receiveConnectionChangedEvent__P5694, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  c___12054: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_connected__P2156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[812]) return breakpoint(s, 5, 812, r0);
  case 5:
    r0 = s.arg0.fields["_connected"];
    s.tmp_1 = r0;
    r0 = (s.arg1 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[813]) return breakpoint(s, 6, 813, r0);
  case 6:
    r0 = (s.arg0).fields["_connected"] = (s.arg1);
    s.lastBrkId = 814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[814]) return breakpoint(s, 7, 814, r0);
  case 7:
    r0 = s.arg0.fields["_connected"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 2;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_3 = controller_Controller_id__P2141_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 172; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_2, s.tmp_1);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_connected__P2156.info = {"start":7796,"length":261,"line":254,"column":8,"endLine":259,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this","value"]}

function controller_Controller_connected__P2156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P2156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control_onEvent__P391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___10836 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[374]) return breakpoint(s, 3, 374, r0);
  case 3:
    s.tmp_0 = control_eventContext__P408_mk(s);
    s.callLocIdx = 42; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.ctx___10836 = (r0);
    s.lastBrkId = 375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[375]) return breakpoint(s, 5, 375, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.ctx___10836);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[376]) return breakpoint(s, 6, 376, r0);
  case 6:
    r0 = pxsim.control.internalOnEvent(s.arg0, s.arg1, s.arg2, s.arg3);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[377]) return breakpoint(s, 7, 377, r0);
  case 7:
    s.tmp_0 = control_EventContext_registerHandler__P405_mk(s);
    s.tmp_0.arg0 = s.ctx___10836;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.callLocIdx = 43; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_onEvent__P391.info = {"start":336,"length":325,"line":9,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"onEvent","argumentNames":["src","value","handler","flags"]}

function control_onEvent__P391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_onEvent__P391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___10836: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_eventContext__P408(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[469]) return breakpoint(s, 3, 469, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4737);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = globals.eventContexts___4737;
    r0 = pxsim_Array__length(globals.eventContexts___4737);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
control_eventContext__P408.info = {"start":7094,"length":136,"line":213,"column":4,"endLine":215,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"eventContext","argumentNames":[]}

function control_eventContext__P408_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_eventContext__P408, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function control_EventContext_registerHandler__P405(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___10859 = undefined;
    s.unnamed12656___U1 = undefined;
    s.unnamed12657___U2 = undefined;
    s.hn___10882 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[459]) return breakpoint(s, 8, 459, r0);
  case 8:
    s.h___10859 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed12656___U1 = (r0);
    s.unnamed12657___U2 = (0);
    s.lastBrkId = 460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[460]) return breakpoint(s, 9, 460, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed12657___U2;
    r0 = pxsim_Array__length(s.unnamed12656___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12656___U1, s.unnamed12657___U2);
    s.h___10859 = (r0);
    s.lastBrkId = 461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[461]) return breakpoint(s, 10, 461, r0);
  case 10:
    s.lastBrkId = 462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[462]) return breakpoint(s, 11, 462, r0);
  case 11:
    r0 = s.h___10859.fields["src"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = s.h___10859.fields["value"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == s.arg2);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[463]) return breakpoint(s, 12, 463, r0);
  case 12:
    r0 = (s.h___10859).fields["flags"] = (s.arg4);
    s.lastBrkId = 464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[464]) return breakpoint(s, 13, 464, r0);
  case 13:
    r0 = (s.h___10859).fields["handler"] = (s.arg3);
    s.lastBrkId = 465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[465]) return breakpoint(s, 14, 465, r0);
  case 14:
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed12657___U2 + 1);
    s.unnamed12657___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed12656___U1 = (undefined);
    s.lastBrkId = 466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[466]) return breakpoint(s, 15, 466, r0);
  case 15:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventHandler__C4729_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventHandler_constructor__P4732_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg3;
    s.tmp_1.arg4 = s.arg4;
    s.callLocIdx = 54; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.hn___10882 = (s.tmp_0);
    s.lastBrkId = 467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[467]) return breakpoint(s, 17, 467, r0);
  case 17:
    r0 = s.arg0.fields["handlers"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.hn___10882);
    s.lastBrkId = 468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[468]) return breakpoint(s, 18, 468, r0);
  case 18:
    s.tmp_0 = control_EventHandler_register__P4730_mk(s);
    s.tmp_0.arg0 = s.hn___10882;
    s.callLocIdx = 55; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerHandler__P405.info = {"start":5760,"length":525,"line":173,"column":8,"endLine":186,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerHandler","argumentNames":["this","src","value","handler","flags"]}

function control_EventContext_registerHandler__P405_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerHandler__P405, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  h___10859: undefined,
  unnamed12656___U1: undefined,
  unnamed12657___U2: undefined,
  hn___10882: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_constructor__P4732(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4729_VT)) failedCast(r0);
    r0 = (s.arg0).fields["src"] = (s.arg1);
    r0 = (s.arg0).fields["value"] = (s.arg2);
    r0 = (s.arg0).fields["handler"] = (s.arg3);
    r0 = (s.arg0).fields["flags"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_constructor__P4732.info = {"start":786,"length":165,"line":23,"column":8,"endLine":28,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this","src","value","handler","flags"]}

function control_EventHandler_constructor__P4732_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_constructor__P4732, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function multiplayer_initServer__P3387(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3133]) return breakpoint(s, 3, 3133, r0);
  case 3:
    r0 = pxsim.multiplayer.getOrigin();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === "server");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3134]) return breakpoint(s, 4, 3134, r0);
  case 4:
    s.tmp_2 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_3 = game_eventContext__P3001_mk(s);
    s.callLocIdx = 1500; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 210;
    s.tmp_2.arg2 = multiplayer_initServer_inline__P12092;
    s.callLocIdx = 1501; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_initServer__P3387.info = {"start":1011,"length":307,"line":29,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"initServer","argumentNames":[]}

function multiplayer_initServer__P3387_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_initServer__P3387, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function multiplayer_initServer_inline__P12092(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3135]) return breakpoint(s, 3, 3135, r0);
  case 3:
    r0 = pxsim.multiplayer.getOrigin();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === "server");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3136]) return breakpoint(s, 4, 3136, r0);
  case 4:
    r0 = pxsim.multiplayer.postImage(globals.screen___2032);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_initServer_inline__P12092.info = {"start":1175,"length":126,"line":31,"column":93,"endLine":35,"endColumn":13,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"inline","argumentNames":[]}

function multiplayer_initServer_inline__P12092_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_initServer_inline__P12092, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function game_consoleOverlay_draw__P3126(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.height___12145 = undefined;
    s.top___12150 = undefined;
    s.i___12156 = undefined;
    s.t___12169 = undefined;
    s.tOff___12176 = undefined;
    s.tab___12178 = undefined;
    s.unnamed12686___U6 = undefined;
    s.unnamed12687___U7 = undefined;
    s.padding___12180 = undefined;
    s.lastBrkId = 2592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2592]) return breakpoint(s, 14, 2592, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___5536);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = scene_systemMenu_isVisible__P3107_mk(s);
    s.callLocIdx = 1274; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2593]) return breakpoint(s, 16, 2593, r0);
  case 16:
    { step = 13; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2594]) return breakpoint(s, 17, 2594, r0);
  case 17:
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___5544;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1275; s.pc = 18; return s.tmp_5; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.height___12145 = (r0);
    s.lastBrkId = 2595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2595]) return breakpoint(s, 19, 2595, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2967);
    if (!r0) { step = 5; continue; }
    r0 = s.height___12145;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (2 + s.tmp_0);
    s.top___12150 = (r0);
    s.lastBrkId = 2596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2596]) return breakpoint(s, 20, 2596, r0);
  case 20:
    s.i___12156 = (0);
    s.lastBrkId = 2597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2597]) return breakpoint(s, 21, 2597, r0);
  case 21:
  case 7:
    s.lastBrkId = 2598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2598]) return breakpoint(s, 22, 2598, r0);
  case 22:
    s.tmp_1 = r0 = s.i___12156;
    r0 = pxsim_Array__length(globals.consoleStrings___5536);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 2599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2599]) return breakpoint(s, 23, 2599, r0);
  case 23:
    r0 = pxsim_Array__getAt(globals.consoleStrings___5536, s.i___12156);
    s.tmp_5 = r0;
    r0 = pxsim_String_.indexOf(s.tmp_5, "\t", undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >= 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2600]) return breakpoint(s, 24, 2600, r0);
  case 24:
    s.tmp_6 = helpers_stringSplit__P122_mk(s);
    r0 = pxsim_Array__getAt(globals.consoleStrings___5536, s.i___12156);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = "\t";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1276; s.pc = 25; return s.tmp_6;
  case 25:
    r0 = s.retval;
    s.t___12169 = (r0);
    s.lastBrkId = 2601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2601]) return breakpoint(s, 26, 2601, r0);
  case 26:
    s.tOff___12176 = (0);
    s.lastBrkId = 2602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2602]) return breakpoint(s, 27, 2602, r0);
  case 27:
    s.tab___12178 = (undefined);
    s.unnamed12686___U6 = (s.t___12169);
    s.unnamed12687___U7 = (0);
    s.lastBrkId = 2603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2603]) return breakpoint(s, 28, 2603, r0);
  case 28:
  case 8:
    s.tmp_0 = r0 = s.unnamed12687___U7;
    r0 = pxsim_Array__length(s.unnamed12686___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12686___U6, s.unnamed12687___U7);
    s.tab___12178 = (r0);
    s.lastBrkId = 2604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2604]) return breakpoint(s, 29, 2604, r0);
  case 29:
    s.lastBrkId = 2605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2605]) return breakpoint(s, 30, 2605, r0);
  case 30:
    s.tmp_2 = r0 = globals.tabSize___5538;
    s.tmp_5 = r0 = s.tOff___12176;
    r0 = pxsim_String_.length(s.tab___12178);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 % globals.tabSize___5538);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.padding___12180 = (r0);
    s.lastBrkId = 2606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2606]) return breakpoint(s, 31, 2606, r0);
  case 31:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_0.arg1 = s.tab___12178;
    s.tmp_2 = r0 = s.tOff___12176;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___5544;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1277; s.pc = 33; return s.tmp_4; }
    }
  case 33:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (4 + s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.tmp_5 = r0 = s.top___12150;
    r0 = (s.i___12156 * s.height___12145);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___5535;
    s.tmp_0.arg5 = globals.consoleFont___5544;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1278; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.lastBrkId = 2607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2607]) return breakpoint(s, 34, 2607, r0);
  case 34:
    s.tmp_0 = r0 = s.tOff___12176;
    r0 = pxsim_String_.length(s.tab___12178);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.padding___12180);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.tOff___12176 = (r0);
    r0 = (s.unnamed12687___U7 + 1);
    s.unnamed12687___U7 = (r0);
    { step = 8; continue; }
  case 9:
    s.unnamed12686___U6 = (undefined);
    { step = 11; continue; }
  case 10:
    s.lastBrkId = 2608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2608]) return breakpoint(s, 35, 2608, r0);
  case 35:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    r0 = pxsim_Array__getAt(globals.consoleStrings___5536, s.i___12156);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 4;
    s.tmp_1 = r0 = s.top___12150;
    r0 = (s.i___12156 * s.height___12145);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___5535;
    s.tmp_0.arg5 = globals.consoleFont___5544;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1279; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
  case 11:
    s.lastBrkId = 2609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2609]) return breakpoint(s, 37, 2609, r0);
  case 37:
    r0 = (s.i___12156 + 1);
    s.i___12156 = (r0);
    { step = 7; continue; }
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_draw__P3126.info = {"start":1364,"length":859,"line":44,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"draw","argumentNames":[]}

function game_consoleOverlay_draw__P3126_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_draw__P3126, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  height___12145: undefined,
  top___12150: undefined,
  i___12156: undefined,
  t___12169: undefined,
  tOff___12176: undefined,
  tab___12178: undefined,
  unnamed12686___U6: undefined,
  unnamed12687___U7: undefined,
  padding___12180: undefined,
} }





function scene_systemMenu_isVisible__P3107(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2550]) return breakpoint(s, 1, 2550, r0);
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.instance___5490);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_isVisible__P3107.info = {"start":13170,"length":62,"line":395,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"isVisible","argumentNames":[]}

function scene_systemMenu_isVisible__P3107_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_isVisible__P3107, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function helpers_stringSplit__P122(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___12234 = undefined;
    s.lim___12236 = undefined;
    s.s___12252 = undefined;
    s.p___12255 = undefined;
    s.R___12256 = undefined;
    s.z___12270 = undefined;
    s.T___12283 = undefined;
    s.q___12284 = undefined;
    s.e___12290 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[140]) return breakpoint(s, 22, 140, r0);
  case 22:
    r0 = pxsim_Array__mk();
    s.A___12234 = (r0);
    s.lastBrkId = 141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[141]) return breakpoint(s, 23, 141, r0);
  case 23:
    s.lim___12236 = (0);
    s.lastBrkId = 142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[142]) return breakpoint(s, 24, 142, r0);
  case 24:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[143]) return breakpoint(s, 25, 143, r0);
  case 25:
    r0 = (536870912 - 1);
    s.lim___12236 = (r0);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[144]) return breakpoint(s, 26, 144, r0);
  case 26:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[145]) return breakpoint(s, 27, 145, r0);
  case 27:
    s.lim___12236 = (0);
    { step = 3; continue; }
  case 2:
    s.lastBrkId = 146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[146]) return breakpoint(s, 28, 146, r0);
  case 28:
    r0 = (s.arg2 | 0);
    s.lim___12236 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[147]) return breakpoint(s, 29, 147, r0);
  case 29:
    r0 = pxsim_String_.length(s.arg0);
    s.s___12252 = (r0);
    s.lastBrkId = 148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[148]) return breakpoint(s, 30, 148, r0);
  case 30:
    s.p___12255 = (0);
    s.lastBrkId = 149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[149]) return breakpoint(s, 31, 149, r0);
  case 31:
    s.R___12256 = (s.arg1);
    s.lastBrkId = 150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[150]) return breakpoint(s, 32, 150, r0);
  case 32:
    r0 = (s.lim___12236 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[151]) return breakpoint(s, 33, 151, r0);
  case 33:
    r0 = s.A___12234;
    { step = 21; continue; }
  case 5:
  case 6:
    s.lastBrkId = 152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[152]) return breakpoint(s, 34, 152, r0);
  case 34:
    r0 = (s.arg1 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[153]) return breakpoint(s, 35, 153, r0);
  case 35:
    r0 = pxsim_Array_.setAt(s.A___12234, 0, s.arg0);
    s.lastBrkId = 154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[154]) return breakpoint(s, 36, 154, r0);
  case 36:
    r0 = s.A___12234;
    { step = 21; continue; }
  case 7:
  case 8:
    s.lastBrkId = 155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[155]) return breakpoint(s, 37, 155, r0);
  case 37:
    r0 = (s.s___12252 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[156]) return breakpoint(s, 38, 156, r0);
  case 38:
    s.tmp_1 = helpers_splitMatch__P4660_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = s.R___12256;
    s.callLocIdx = 10; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.z___12270 = (r0);
    s.lastBrkId = 157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[157]) return breakpoint(s, 40, 157, r0);
  case 40:
    r0 = (s.z___12270 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[158]) return breakpoint(s, 41, 158, r0);
  case 41:
    r0 = s.A___12234;
    { step = 21; continue; }
  case 9:
  case 10:
    s.lastBrkId = 159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[159]) return breakpoint(s, 42, 159, r0);
  case 42:
    r0 = pxsim_Array_.setAt(s.A___12234, 0, s.arg0);
    s.lastBrkId = 160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[160]) return breakpoint(s, 43, 160, r0);
  case 43:
    r0 = s.A___12234;
    { step = 21; continue; }
  case 11:
  case 12:
    s.lastBrkId = 161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[161]) return breakpoint(s, 44, 161, r0);
  case 44:
    s.q___12284 = (s.p___12255);
    s.lastBrkId = 162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[162]) return breakpoint(s, 45, 162, r0);
  case 45:
  case 13:
    s.lastBrkId = 163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[163]) return breakpoint(s, 46, 163, r0);
  case 46:
    r0 = (s.q___12284 != s.s___12252);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[164]) return breakpoint(s, 47, 164, r0);
  case 47:
    s.tmp_1 = helpers_splitMatch__P4660_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.q___12284;
    s.tmp_1.arg2 = s.R___12256;
    s.callLocIdx = 11; s.pc = 48; return s.tmp_1;
  case 48:
    r0 = s.retval;
    s.e___12290 = (r0);
    s.lastBrkId = 165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[165]) return breakpoint(s, 49, 165, r0);
  case 49:
    r0 = (s.e___12290 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[166]) return breakpoint(s, 50, 166, r0);
  case 50:
    r0 = (s.q___12284 + 1);
    s.q___12284 = (r0);
    { step = 19; continue; }
  case 14:
    s.lastBrkId = 167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[167]) return breakpoint(s, 51, 167, r0);
  case 51:
    r0 = (s.e___12290 == s.p___12255);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[168]) return breakpoint(s, 52, 168, r0);
  case 52:
    r0 = (s.q___12284 + 1);
    s.q___12284 = (r0);
    { step = 18; continue; }
  case 15:
    s.lastBrkId = 169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[169]) return breakpoint(s, 53, 169, r0);
  case 53:
    s.tmp_0 = helpers_stringSlice__P119_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___12255;
    s.tmp_0.arg2 = s.q___12284;
    s.callLocIdx = 12; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.T___12283 = (r0);
    s.lastBrkId = 170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[170]) return breakpoint(s, 55, 170, r0);
  case 55:
    r0 = pxsim_Array__push(s.A___12234, s.T___12283);
    s.lastBrkId = 171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[171]) return breakpoint(s, 56, 171, r0);
  case 56:
    r0 = pxsim_Array__length(s.A___12234);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.lim___12236);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[172]) return breakpoint(s, 57, 172, r0);
  case 57:
    r0 = s.A___12234;
    { step = 21; continue; }
  case 16:
  case 17:
    s.lastBrkId = 173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[173]) return breakpoint(s, 58, 173, r0);
  case 58:
    s.p___12255 = (s.e___12290);
    s.lastBrkId = 174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[174]) return breakpoint(s, 59, 174, r0);
  case 59:
    s.q___12284 = (s.p___12255);
  case 18:
  case 19:
    { step = 13; continue; }
  case 20:
    s.lastBrkId = 175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[175]) return breakpoint(s, 60, 175, r0);
  case 60:
    s.tmp_0 = helpers_stringSlice__P119_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___12255;
    s.tmp_0.arg2 = s.q___12284;
    s.callLocIdx = 13; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.T___12283 = (r0);
    s.lastBrkId = 176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[176]) return breakpoint(s, 62, 176, r0);
  case 62:
    r0 = pxsim_Array__push(s.A___12234, s.T___12283);
    s.lastBrkId = 177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[177]) return breakpoint(s, 63, 177, r0);
  case 63:
    r0 = s.A___12234;
  case 21:
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSplit__P122.info = {"start":12919,"length":1319,"line":434,"column":4,"endLine":478,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSplit","argumentNames":["S","separator","limit"]}

function helpers_stringSplit__P122_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSplit__P122, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  A___12234: undefined,
  lim___12236: undefined,
  s___12252: undefined,
  p___12255: undefined,
  R___12256: undefined,
  z___12270: undefined,
  T___12283: undefined,
  q___12284: undefined,
  e___12290: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_splitMatch__P4660(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___12370 = undefined;
    s.s___12373 = undefined;
    s.i___12383 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[178]) return breakpoint(s, 8, 178, r0);
  case 8:
    r0 = pxsim_String_.length(s.arg2);
    s.r___12370 = (r0);
    s.lastBrkId = 179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[179]) return breakpoint(s, 9, 179, r0);
  case 9:
    r0 = pxsim_String_.length(s.arg0);
    s.s___12373 = (r0);
    s.lastBrkId = 180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[180]) return breakpoint(s, 10, 180, r0);
  case 10:
    r0 = (s.arg1 + s.r___12370);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.s___12373);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[181]) return breakpoint(s, 11, 181, r0);
  case 11:
    r0 = -1;
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[182]) return breakpoint(s, 12, 182, r0);
  case 12:
    s.i___12383 = (0);
    s.lastBrkId = 183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[183]) return breakpoint(s, 13, 183, r0);
  case 13:
  case 3:
    s.lastBrkId = 184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[184]) return breakpoint(s, 14, 184, r0);
  case 14:
    r0 = (s.i___12383 < s.r___12370);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[185]) return breakpoint(s, 15, 185, r0);
  case 15:
    s.tmp_3 = r0 = s.arg0;
    r0 = (s.arg1 + s.i___12383);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String_.charAt(s.arg2, s.i___12383);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 != s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[186]) return breakpoint(s, 16, 186, r0);
  case 16:
    r0 = -1;
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[187]) return breakpoint(s, 17, 187, r0);
  case 17:
    r0 = (s.i___12383 + 1);
    s.i___12383 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[188]) return breakpoint(s, 18, 188, r0);
  case 18:
    r0 = (s.arg1 + s.r___12370);
  case 7:
    return leave(s, r0)
  default: oops()
} } }
helpers_splitMatch__P4660.info = {"start":14244,"length":289,"line":480,"column":4,"endLine":489,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"splitMatch","argumentNames":["S","q","R"]}

function helpers_splitMatch__P4660_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_splitMatch__P4660, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___12370: undefined,
  s___12373: undefined,
  i___12383: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_stringSlice__P119(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___12335 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[130]) return breakpoint(s, 9, 130, r0);
  case 9:
    r0 = pxsim_String_.length(s.arg0);
    s.len___12335 = (r0);
    s.lastBrkId = 131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[131]) return breakpoint(s, 10, 131, r0);
  case 10:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[132]) return breakpoint(s, 11, 132, r0);
  case 11:
    s.tmp_1 = Math_max__P130_mk(s);
    r0 = (s.len___12335 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 9; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[133]) return breakpoint(s, 13, 133, r0);
  case 13:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[134]) return breakpoint(s, 14, 134, r0);
  case 14:
    s.arg2 = (s.len___12335);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[135]) return breakpoint(s, 15, 135, r0);
  case 15:
    r0 = (s.arg2 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[136]) return breakpoint(s, 16, 136, r0);
  case 16:
    s.arg2 = (0);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[137]) return breakpoint(s, 17, 137, r0);
  case 17:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[138]) return breakpoint(s, 18, 138, r0);
  case 18:
    r0 = (s.len___12335 + s.arg2);
    s.arg2 = (r0);
  case 7:
  case 8:
    s.lastBrkId = 139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[139]) return breakpoint(s, 19, 139, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = (s.arg2 - s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.substr(s.tmp_0, s.tmp_1, s.tmp_2);
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSlice__P119.info = {"start":11496,"length":440,"line":384,"column":4,"endLine":402,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSlice","argumentNames":["s","start","end"]}

function helpers_stringSlice__P119_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSlice__P119, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___12335: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Scene_render__P2871(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___12467 = undefined;
    s.unnamed12684___U1 = undefined;
    s.unnamed12685___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2842_VT)) failedCast(r0);
    s.lastBrkId = 1968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1968]) return breakpoint(s, 12, 1968, r0);
  case 12:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1969]) return breakpoint(s, 13, 1969, r0);
  case 13:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1970]) return breakpoint(s, 14, 1970, r0);
  case 14:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    s.lastBrkId = 1971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1971]) return breakpoint(s, 15, 1971, r0);
  case 15:
    s.lastBrkId = 1972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1972]) return breakpoint(s, 16, 1972, r0);
  case 16:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["previousScene"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1973]) return breakpoint(s, 17, 1973, r0);
  case 17:
    s.tmp_3 = scene_Scene_render__P2871_mk(s);
    r0 = s.arg0.fields["previousScene"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 949; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 1974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1974]) return breakpoint(s, 19, 1974, r0);
  case 19:
    s.tmp_0 = scene_Background_draw__P2677_mk(s);
    r0 = s.arg0.fields["background"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 950; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
  case 6:
    s.lastBrkId = 1975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1975]) return breakpoint(s, 21, 1975, r0);
  case 21:
    s.lastBrkId = 1976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1976]) return breakpoint(s, 22, 1976, r0);
  case 22:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1977]) return breakpoint(s, 23, 1977, r0);
  case 23:
    s.tmp_2 = helpers_arraySort__P105_mk(s);
    r0 = s.arg0.fields["allSprites"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = scene_Scene_render_inline__P12444;
    s.callLocIdx = 955; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 1979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1979]) return breakpoint(s, 25, 1979, r0);
  case 25:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 7:
  case 8:
    s.lastBrkId = 1980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1980]) return breakpoint(s, 26, 1980, r0);
  case 26:
    s.lastBrkId = 1981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1981]) return breakpoint(s, 27, 1981, r0);
  case 27:
    s.s___12467 = (undefined);
    r0 = s.arg0.fields["allSprites"];
    s.unnamed12684___U1 = (r0);
    s.unnamed12685___U2 = (0);
    s.lastBrkId = 1982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1982]) return breakpoint(s, 28, 1982, r0);
  case 28:
  case 9:
    s.tmp_0 = r0 = s.unnamed12685___U2;
    r0 = pxsim_Array__length(s.unnamed12684___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12684___U1, s.unnamed12685___U2);
    s.s___12467 = (r0);
    s.lastBrkId = 1983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1983]) return breakpoint(s, 29, 1983, r0);
  case 29:
    s.lastBrkId = 1984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1984]) return breakpoint(s, 30, 1984, r0);
  case 30:
    s.tmp_2 = if___draw_2_mk(s);
    s.tmp_2.arg0 = s.s___12467;
    r0 = s.arg0.fields["camera"];
    s.tmp_2.arg1 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__draw"), 2);
      s.callLocIdx = 956; s.pc = 31; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__draw"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__draw"], 2); s.callLocIdx = 956; s.pc = 31; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 956; s.pc = 31; return s.tmp_2;; }
     else { s.callLocIdx = 956; s.pc = 31; return s.tmp_2; }
    }
  case 31:
    r0 = s.retval;
    r0 = (s.unnamed12685___U2 + 1);
    s.unnamed12685___U2 = (r0);
    { step = 9; continue; }
  case 10:
    s.unnamed12684___U1 = (undefined);
    s.lastBrkId = 1985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1985]) return breakpoint(s, 32, 1985, r0);
  case 32:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render__P2871.info = {"start":8203,"length":917,"line":228,"column":8,"endLine":252,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"render","argumentNames":["this"]}

function scene_Scene_render__P2871_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render__P2871, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  s___12467: undefined,
  unnamed12684___U1: undefined,
  unnamed12685___U2: undefined,
  arg0: undefined,
} }





function scene_Scene_render_inline__P12444(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1978]) return breakpoint(s, 3, 1978, r0);
  case 3:
    s.tmp_2 = if_z_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "z");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["z"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["z"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 951; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = if_z_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "z");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["z"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["z"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 952; s.pc = 5; return s.tmp_4; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = if_id_1_mk(s);
    s.tmp_6.arg0 = s.arg0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "id");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["id"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["id"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 953; s.pc = 6; return s.tmp_6; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = if_id_1_mk(s);
    s.tmp_8.arg0 = s.arg1;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "id");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["id"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["id"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 954; s.pc = 7; return s.tmp_8; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 - s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render_inline__P12444.info = {"start":8781,"length":52,"line":242,"column":37,"endLine":242,"endColumn":89,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["a","b"]}

function scene_Scene_render_inline__P12444_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render_inline__P12444, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_draw__P2677(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2668_VT)) failedCast(r0);
    s.lastBrkId = 1676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1676]) return breakpoint(s, 5, 1676, r0);
  case 5:
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.fill(globals.screen___2032, s.tmp_0);
    s.lastBrkId = 1677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1677]) return breakpoint(s, 6, 1677, r0);
  case 6:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1678]) return breakpoint(s, 7, 1678, r0);
  case 7:
    r0 = s.arg0.fields["_image"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___2032, s.tmp_1, 0, 0);
  case 1:
  case 2:
    s.lastBrkId = 1679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1679]) return breakpoint(s, 8, 1679, r0);
  case 8:
    r0 = s.arg0.fields["_layers"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1680]) return breakpoint(s, 9, 1680, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, scene_Background_draw_inline__P12615);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["_layers"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 808; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw__P2677.info = {"start":1166,"length":545,"line":48,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this"]}

function scene_Background_draw__P2677_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw__P2677, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Background_draw_inline__P12615(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___12617 = undefined;
    s.oy___12628 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1681]) return breakpoint(s, 1, 1681, r0);
  case 1:
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetX"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.ox___12617 = (r0);
    s.lastBrkId = 1682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1682]) return breakpoint(s, 2, 1682, r0);
  case 2:
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetY"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.oy___12628 = (r0);
    s.lastBrkId = 1683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1683]) return breakpoint(s, 3, 1683, r0);
  case 3:
    s.tmp_0 = scene_BackgroundLayer_draw__P2686_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ox___12617;
    s.tmp_0.arg2 = s.oy___12628;
    s.callLocIdx = 807; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw_inline__P12615.info = {"start":1373,"length":312,"line":53,"column":37,"endLine":58,"endColumn":17,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["layer"]}

function scene_Background_draw_inline__P12615_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw_inline__P12615, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ox___12617: undefined,
  oy___12628: undefined,
  arg0: undefined,
} }





function scene_BackgroundLayer_draw__P2686(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___12646 = undefined;
    s.h___12649 = undefined;
    s.pw___12652 = undefined;
    s.ph___12656 = undefined;
    s.rx___12665 = undefined;
    s.ry___12668 = undefined;
    s.y___12737 = undefined;
    s.py___12738 = undefined;
    s.dh___12747 = undefined;
    s.x___12755 = undefined;
    s.rxl___12756 = undefined;
    s.px___12762 = undefined;
    s.dw___12766 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C2678_VT)) failedCast(r0);
    s.lastBrkId = 1702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1702]) return breakpoint(s, 24, 1702, r0);
  case 24:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.w___12646 = (r0);
    s.lastBrkId = 1703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1703]) return breakpoint(s, 25, 1703, r0);
  case 25:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.h___12649 = (r0);
    s.lastBrkId = 1704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1704]) return breakpoint(s, 26, 1704, r0);
  case 26:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    s.pw___12652 = (r0);
    s.lastBrkId = 1705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1705]) return breakpoint(s, 27, 1705, r0);
  case 27:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    s.ph___12656 = (r0);
    s.lastBrkId = 1706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1706]) return breakpoint(s, 28, 1706, r0);
  case 28:
    r0 = pxsim_numops_toBoolDecr(s.pw___12652);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.ph___12656);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1707]) return breakpoint(s, 29, 1707, r0);
  case 29:
    { step = 23; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1708]) return breakpoint(s, 30, 1708, r0);
  case 30:
    r0 = (0 - s.arg1);
    s.rx___12665 = (r0);
    s.lastBrkId = 1709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1709]) return breakpoint(s, 31, 1709, r0);
  case 31:
    r0 = (0 - s.arg2);
    s.ry___12668 = (r0);
    s.lastBrkId = 1710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1710]) return breakpoint(s, 32, 1710, r0);
  case 32:
    r0 = s.arg0.fields["alignX"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 5:
    s.lastBrkId = 1711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1711]) return breakpoint(s, 33, 1711, r0);
  case 33:
    s.tmp_1 = r0 = s.rx___12665;
    r0 = (s.w___12646 + s.pw___12652);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.rx___12665 = (r0);
    s.lastBrkId = 1712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1712]) return breakpoint(s, 34, 1712, r0);
  case 34:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 1713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1713]) return breakpoint(s, 35, 1713, r0);
  case 35:
    s.tmp_0 = r0 = s.rx___12665;
    r0 = (s.w___12646 + s.pw___12652);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.rx___12665 = (r0);
    s.lastBrkId = 1714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1714]) return breakpoint(s, 36, 1714, r0);
  case 36:
  case 7:
    s.lastBrkId = 1715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1715]) return breakpoint(s, 37, 1715, r0);
  case 37:
    r0 = s.arg0.fields["alignY"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 8:
    s.lastBrkId = 1716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1716]) return breakpoint(s, 38, 1716, r0);
  case 38:
    s.tmp_1 = r0 = s.ry___12668;
    r0 = (s.h___12649 + s.ph___12656);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.ry___12668 = (r0);
    s.lastBrkId = 1717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1717]) return breakpoint(s, 39, 1717, r0);
  case 39:
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 1718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1718]) return breakpoint(s, 40, 1718, r0);
  case 40:
    s.tmp_0 = r0 = s.ry___12668;
    r0 = (s.h___12649 + s.ph___12656);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.ry___12668 = (r0);
    s.lastBrkId = 1719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1719]) return breakpoint(s, 41, 1719, r0);
  case 41:
  case 10:
    s.lastBrkId = 1720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1720]) return breakpoint(s, 42, 1720, r0);
  case 42:
    r0 = (s.rx___12665 % s.w___12646);
    s.rx___12665 = (r0);
    s.lastBrkId = 1721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1721]) return breakpoint(s, 43, 1721, r0);
  case 43:
    r0 = (s.rx___12665 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1722]) return breakpoint(s, 44, 1722, r0);
  case 44:
    r0 = (s.rx___12665 + s.w___12646);
    s.rx___12665 = (r0);
  case 11:
  case 12:
    s.lastBrkId = 1723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1723]) return breakpoint(s, 45, 1723, r0);
  case 45:
    r0 = (s.ry___12668 % s.h___12649);
    s.ry___12668 = (r0);
    s.lastBrkId = 1724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1724]) return breakpoint(s, 46, 1724, r0);
  case 46:
    r0 = (s.ry___12668 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1725]) return breakpoint(s, 47, 1725, r0);
  case 47:
    r0 = (s.ry___12668 + s.h___12649);
    s.ry___12668 = (r0);
  case 13:
  case 14:
    s.lastBrkId = 1726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1726]) return breakpoint(s, 48, 1726, r0);
  case 48:
    r0 = pxsim.Math_.floor(s.rx___12665);
    s.rx___12665 = (r0);
    s.lastBrkId = 1727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1727]) return breakpoint(s, 49, 1727, r0);
  case 49:
    r0 = pxsim.Math_.floor(s.ry___12668);
    s.ry___12668 = (r0);
    s.lastBrkId = 1728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1728]) return breakpoint(s, 50, 1728, r0);
  case 50:
    s.y___12737 = (0);
    s.lastBrkId = 1729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1729]) return breakpoint(s, 51, 1729, r0);
  case 51:
    s.py___12738 = (0);
    s.lastBrkId = 1730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1730]) return breakpoint(s, 52, 1730, r0);
  case 52:
  case 15:
    s.lastBrkId = 1731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1731]) return breakpoint(s, 53, 1731, r0);
  case 53:
    r0 = (s.y___12737 < s.h___12649);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 1732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1732]) return breakpoint(s, 54, 1732, r0);
  case 54:
    r0 = (s.y___12737 % s.ph___12656);
    s.py___12738 = (r0);
    s.lastBrkId = 1733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1733]) return breakpoint(s, 55, 1733, r0);
  case 55:
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = (s.ph___12656 - s.py___12738);
    s.tmp_0.arg0 = r0;
    r0 = (s.h___12649 - s.ry___12668);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 810; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.dh___12747 = (r0);
    s.lastBrkId = 1734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1734]) return breakpoint(s, 57, 1734, r0);
  case 57:
    s.x___12755 = (0);
    s.lastBrkId = 1735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1735]) return breakpoint(s, 58, 1735, r0);
  case 58:
    s.rxl___12756 = (s.rx___12665);
    s.lastBrkId = 1736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1736]) return breakpoint(s, 59, 1736, r0);
  case 59:
  case 16:
    s.lastBrkId = 1737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1737]) return breakpoint(s, 60, 1737, r0);
  case 60:
    r0 = (s.x___12755 < s.w___12646);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 1738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1738]) return breakpoint(s, 61, 1738, r0);
  case 61:
    r0 = (s.x___12755 % s.pw___12652);
    s.px___12762 = (r0);
    s.lastBrkId = 1739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1739]) return breakpoint(s, 62, 1739, r0);
  case 62:
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = (s.pw___12652 - s.px___12762);
    s.tmp_0.arg0 = r0;
    r0 = (s.w___12646 - s.rxl___12756);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 811; s.pc = 63; return s.tmp_0;
  case 63:
    r0 = s.retval;
    s.dw___12766 = (r0);
    s.lastBrkId = 1740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1740]) return breakpoint(s, 64, 1740, r0);
  case 64:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.drawImage(globals.screen___2032, s.tmp_0, s.rxl___12756, s.ry___12668);
    s.lastBrkId = 1741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1741]) return breakpoint(s, 65, 1741, r0);
  case 65:
    r0 = (s.rxl___12756 + s.dw___12766);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.w___12646);
    s.rxl___12756 = (r0);
    s.lastBrkId = 1742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1742]) return breakpoint(s, 66, 1742, r0);
  case 66:
    r0 = s.arg0.fields["repeatX"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = s.dw___12766;
    { step = 18; continue; }
  case 17:
    r0 = s.w___12646;
  case 18:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.x___12755 + s.tmp_1);
    s.x___12755 = (r0);
    { step = 16; continue; }
  case 19:
    s.lastBrkId = 1743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1743]) return breakpoint(s, 67, 1743, r0);
  case 67:
    r0 = (s.ry___12668 + s.dh___12747);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.h___12649);
    s.ry___12668 = (r0);
    s.lastBrkId = 1744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1744]) return breakpoint(s, 68, 1744, r0);
  case 68:
    r0 = s.arg0.fields["repeatY"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = s.dh___12747;
    { step = 21; continue; }
  case 20:
    r0 = s.h___12649;
  case 21:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.y___12737 + s.tmp_1);
    s.y___12737 = (r0);
    { step = 15; continue; }
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_draw__P2686.info = {"start":3063,"length":1537,"line":99,"column":8,"endLine":144,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this","offsetX","offsetY"]}

function scene_BackgroundLayer_draw__P2686_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_draw__P2686, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  w___12646: undefined,
  h___12649: undefined,
  pw___12652: undefined,
  ph___12656: undefined,
  rx___12665: undefined,
  ry___12668: undefined,
  y___12737: undefined,
  py___12738: undefined,
  dh___12747: undefined,
  x___12755: undefined,
  rxl___12756: undefined,
  px___12762: undefined,
  dw___12766: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arraySort__P105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 39;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[39]) return breakpoint(s, 5, 39, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 40;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[40]) return breakpoint(s, 6, 40, r0);
  case 6:
    s.arg1 = (helpers_arraySort_inline__P12489);
  case 3:
  case 4:
    s.lastBrkId = 58;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[58]) return breakpoint(s, 7, 58, r0);
  case 7:
    s.tmp_0 = helpers_sortHelper__P4658_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 2; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort__P105.info = {"start":5663,"length":859,"line":207,"column":4,"endLine":227,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySort","argumentNames":["arr","callbackfn"]}

function helpers_arraySort__P105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort__P105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySort_inline__P12489(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.aIsUndef___12492 = undefined;
    s.bIsUndef___12496 = undefined;
    s.aIsNull___12507 = undefined;
    s.bIsNull___12511 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 41;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[41]) return breakpoint(s, 18, 41, r0);
  case 18:
    r0 = (s.arg0 === undefined);
    s.aIsUndef___12492 = (r0);
    s.lastBrkId = 42;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[42]) return breakpoint(s, 19, 42, r0);
  case 19:
    r0 = (s.arg1 === undefined);
    s.bIsUndef___12496 = (r0);
    s.lastBrkId = 43;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[43]) return breakpoint(s, 20, 43, r0);
  case 20:
    s.tmp_0 = r0 = s.aIsUndef___12492;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.bIsUndef___12496;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 44;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[44]) return breakpoint(s, 21, 44, r0);
  case 21:
    r0 = 0;
    { step = 17; continue; }
    { step = 8; continue; }
  case 3:
    s.lastBrkId = 45;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[45]) return breakpoint(s, 22, 45, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.aIsUndef___12492);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 46;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[46]) return breakpoint(s, 23, 46, r0);
  case 23:
    r0 = 1;
    { step = 17; continue; }
    { step = 7; continue; }
  case 4:
    s.lastBrkId = 47;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[47]) return breakpoint(s, 24, 47, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(s.bIsUndef___12496);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 48;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[48]) return breakpoint(s, 25, 48, r0);
  case 25:
    r0 = -1;
    { step = 17; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 49;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[49]) return breakpoint(s, 26, 49, r0);
  case 26:
    r0 = (s.arg0 === null);
    s.aIsNull___12507 = (r0);
    s.lastBrkId = 50;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[50]) return breakpoint(s, 27, 50, r0);
  case 27:
    r0 = (s.arg1 === null);
    s.bIsNull___12511 = (r0);
    s.lastBrkId = 51;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[51]) return breakpoint(s, 28, 51, r0);
  case 28:
    s.tmp_0 = r0 = s.aIsNull___12507;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = s.bIsNull___12511;
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 52;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[52]) return breakpoint(s, 29, 52, r0);
  case 29:
    r0 = 0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 11:
    s.lastBrkId = 53;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[53]) return breakpoint(s, 30, 53, r0);
  case 30:
    r0 = pxsim_numops_toBoolDecr(s.aIsNull___12507);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 54;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[54]) return breakpoint(s, 31, 54, r0);
  case 31:
    r0 = 1;
    { step = 17; continue; }
    { step = 15; continue; }
  case 12:
    s.lastBrkId = 55;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[55]) return breakpoint(s, 32, 55, r0);
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.bIsNull___12511);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 56;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[56]) return breakpoint(s, 33, 56, r0);
  case 33:
    r0 = -1;
    { step = 17; continue; }
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 57;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[57]) return breakpoint(s, 34, 57, r0);
  case 34:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 35);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 35:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_7);
    s.tmp_5 = r0;
    r0 = pxsim_String_.compare(s.tmp_2, s.tmp_5);
  case 17:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort_inline__P12489.info = {"start":5826,"length":636,"line":209,"column":25,"endLine":224,"endColumn":13,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"inline","argumentNames":["a","b"]}

function helpers_arraySort_inline__P12489_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort_inline__P12489, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  aIsUndef___12492: undefined,
  bIsUndef___12496: undefined,
  aIsNull___12507: undefined,
  bIsNull___12511: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_sortHelper__P4658(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___12546 = undefined;
    s.i___12549 = undefined;
    s.j___12555 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 25;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[25]) return breakpoint(s, 12, 25, r0);
  case 12:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 26;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[26]) return breakpoint(s, 13, 26, r0);
  case 13:
    r0 = s.arg0;
    { step = 11; continue; }
  case 3:
  case 4:
    s.lastBrkId = 27;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[27]) return breakpoint(s, 14, 27, r0);
  case 14:
    r0 = pxsim_Array__length(s.arg0);
    s.len___12546 = (r0);
    s.lastBrkId = 28;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[28]) return breakpoint(s, 15, 28, r0);
  case 15:
    s.i___12549 = (0);
    s.lastBrkId = 29;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[29]) return breakpoint(s, 16, 29, r0);
  case 16:
  case 5:
    s.lastBrkId = 30;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[30]) return breakpoint(s, 17, 30, r0);
  case 17:
    s.tmp_1 = r0 = s.i___12549;
    r0 = (s.len___12546 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 31;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[31]) return breakpoint(s, 18, 31, r0);
  case 18:
    r0 = (s.i___12549 + 1);
    s.j___12555 = (r0);
    s.lastBrkId = 32;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[32]) return breakpoint(s, 19, 32, r0);
  case 19:
  case 6:
    s.lastBrkId = 33;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[33]) return breakpoint(s, 20, 33, r0);
  case 20:
    r0 = (s.j___12555 < s.len___12546);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 34;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[34]) return breakpoint(s, 21, 34, r0);
  case 21:
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___12549);
    s.tmp_3.arg0 = r0;
    r0 = pxsim_Array__getAt(s.arg0, s.j___12555);
    s.tmp_3.arg1 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 0; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 35;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[35]) return breakpoint(s, 23, 35, r0);
  case 23:
    s.tmp_4 = helpers_swap__P4657_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.i___12549;
    s.tmp_4.arg2 = s.j___12555;
    s.callLocIdx = 1; s.pc = 24; return s.tmp_4;
  case 24:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 36;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[36]) return breakpoint(s, 25, 36, r0);
  case 25:
    r0 = (s.j___12555 + 1);
    s.j___12555 = (r0);
    { step = 6; continue; }
  case 9:
    s.lastBrkId = 37;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[37]) return breakpoint(s, 26, 37, r0);
  case 26:
    r0 = (s.i___12549 + 1);
    s.i___12549 = (r0);
    { step = 5; continue; }
  case 10:
    s.lastBrkId = 38;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[38]) return breakpoint(s, 27, 38, r0);
  case 27:
    r0 = s.arg0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
helpers_sortHelper__P4658.info = {"start":5176,"length":481,"line":191,"column":4,"endLine":205,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sortHelper","argumentNames":["arr","callbackfn"]}

function helpers_sortHelper__P4658_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_sortHelper__P4658, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  len___12546: undefined,
  i___12549: undefined,
  j___12555: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_swap__P4657(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.temp___12584 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 22;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[22]) return breakpoint(s, 1, 22, r0);
  case 1:
    r0 = pxsim_Array__getAt(s.arg0, s.arg1);
    s.temp___12584 = (r0);
    s.lastBrkId = 23;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[23]) return breakpoint(s, 2, 23, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.tmp_2);
    s.lastBrkId = 24;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[24]) return breakpoint(s, 3, 24, r0);
  case 3:
    r0 = pxsim_Array_.setAt(s.arg0, s.arg2, s.temp___12584);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_swap__P4657.info = {"start":5030,"length":140,"line":185,"column":4,"endLine":189,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"swap","argumentNames":["arr","i","j"]}

function helpers_swap__P4657_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_swap__P4657, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  temp___12584: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_update__P2797(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.elapsed___12853 = undefined;
    s.percentComplete___12867 = undefined;
    s.damp___12874 = undefined;
    s.f___12883 = undefined;
    s.x___12889 = undefined;
    s.y___12896 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1886]) return breakpoint(s, 9, 1886, r0);
  case 9:
    r0 = s.arg0.fields["sprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1887]) return breakpoint(s, 10, 1887, r0);
  case 10:
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = Sprite_x__P2353_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 910; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_lastUpdatedSpriteX"] = (s.tmp_2);
    s.lastBrkId = 1888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1888]) return breakpoint(s, 12, 1888, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_y__P2355_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 911; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_lastUpdatedSpriteY"] = (s.tmp_1);
    s.lastBrkId = 1889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1889]) return breakpoint(s, 14, 1889, r0);
  case 14:
    s.tmp_0 = scene_Camera_offsetX__P2786_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_x__P2353_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 912; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 913; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 1890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1890]) return breakpoint(s, 17, 1890, r0);
  case 17:
    s.tmp_0 = scene_Camera_offsetY__P2788_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_y__P2355_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 914; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 915; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1891]) return breakpoint(s, 20, 1891, r0);
  case 20:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Camera_offsetX__P2785_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 916; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.lastBrkId = 1892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1892]) return breakpoint(s, 22, 1892, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Camera_offsetY__P2787_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 917; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
    s.lastBrkId = 1893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1893]) return breakpoint(s, 24, 1893, r0);
  case 24:
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1894]) return breakpoint(s, 25, 1894, r0);
  case 25:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.elapsed___12853 = (r0);
    s.lastBrkId = 1895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1895]) return breakpoint(s, 26, 1895, r0);
  case 26:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_1 = r0;
    r0 = (s.elapsed___12853 >= s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1896]) return breakpoint(s, 27, 1896, r0);
  case 27:
    r0 = (s.arg0).fields["shakeStartTime"] = (undefined);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 1897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1897]) return breakpoint(s, 28, 1897, r0);
  case 28:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_0 = r0;
    r0 = (s.elapsed___12853 / s.tmp_0);
    s.percentComplete___12867 = (r0);
    s.lastBrkId = 1898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1898]) return breakpoint(s, 29, 1898, r0);
  case 29:
    s.damp___12874 = (1);
    s.lastBrkId = 1899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1899]) return breakpoint(s, 30, 1899, r0);
  case 30:
    r0 = (s.percentComplete___12867 >= 0.75);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1900]) return breakpoint(s, 31, 1900, r0);
  case 31:
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = (1 - s.percentComplete___12867);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 918; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
    s.damp___12874 = (r0);
  case 4:
  case 5:
    s.lastBrkId = 1901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1901]) return breakpoint(s, 33, 1901, r0);
  case 33:
    r0 = s.arg0.fields["shakeAmplitude"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.damp___12874);
    s.f___12883 = (r0);
    s.lastBrkId = 1902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1902]) return breakpoint(s, 34, 1902, r0);
  case 34:
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___12883);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.x___12889 = (r0);
    s.lastBrkId = 1903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1903]) return breakpoint(s, 35, 1903, r0);
  case 35:
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___12883);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.y___12896 = (r0);
    s.lastBrkId = 1904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1904]) return breakpoint(s, 36, 1904, r0);
  case 36:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetX"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.x___12889);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.lastBrkId = 1905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1905]) return breakpoint(s, 37, 1905, r0);
  case 37:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetY"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.y___12896);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_update__P2797.info = {"start":2563,"length":1418,"line":83,"column":8,"endLine":116,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"update","argumentNames":["this"]}

function scene_Camera_update__P2797_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_update__P2797, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  elapsed___12853: undefined,
  percentComplete___12867: undefined,
  damp___12874: undefined,
  f___12883: undefined,
  x___12889: undefined,
  y___12896: undefined,
  arg0: undefined,
} }





function scene_Camera_offsetY__P2788(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___12915 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1876]) return breakpoint(s, 5, 1876, r0);
  case 5:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 900; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___12915 = (r0);
    s.lastBrkId = 1877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1877]) return breakpoint(s, 7, 1877, r0);
  case 7:
    r0 = s.scene___12915.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2746_mk(s);
    r0 = s.scene___12915.fields["tileMap"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 901; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1878]) return breakpoint(s, 9, 1878, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_6 = tiles_TileMap_offsetY__P2741_mk(s);
    r0 = s.scene___12915.fields["tileMap"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg1;
    s.callLocIdx = 902; s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim.Math_.floor(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_offsetY"] = (s.tmp_4);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1879]) return breakpoint(s, 11, 1879, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.Math_.floor(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_offsetY"] = (s.tmp_1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P2788.info = {"start":1152,"length":291,"line":39,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this","v"]}

function scene_Camera_offsetY__P2788_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P2788, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___12915: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_enabled__P2746(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1798]) return breakpoint(s, 1, 1798, r0);
  case 1:
    r0 = s.arg0.fields["_map"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_enabled__P2746.info = {"start":10177,"length":66,"line":351,"column":8,"endLine":353,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"enabled","argumentNames":["this"]}
tiles_TileMap_enabled__P2746.isGetter = true;

function tiles_TileMap_enabled__P2746_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_enabled__P2746, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_TileMap_offsetY__P2741(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1794]) return breakpoint(s, 1, 1794, r0);
  case 1:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_3 = tiles_TileMap_areaHeight__P2743_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 839; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 840; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 841; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetY__P2741.info = {"start":9630,"length":123,"line":329,"column":8,"endLine":331,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetY","argumentNames":["this","value"]}

function tiles_TileMap_offsetY__P2741_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetY__P2741, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaHeight__P2743(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1796]) return breakpoint(s, 3, 1796, r0);
  case 3:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = tiles_TileMapData_height__P2719_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 844; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 845; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaHeight__P2743.info = {"start":9864,"length":93,"line":337,"column":8,"endLine":339,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaHeight","argumentNames":["this"]}

function tiles_TileMap_areaHeight__P2743_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaHeight__P2743, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function tiles_TileMap_scale__P2737(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1788]) return breakpoint(s, 1, 1788, r0);
  case 1:
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P2737.info = {"start":9205,"length":55,"line":310,"column":8,"endLine":312,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMap_scale__P2737.isGetter = true;

function tiles_TileMap_scale__P2737_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P2737, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMapData_height__P2719(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1765]) return breakpoint(s, 1, 1765, r0);
  case 1:
    r0 = s.arg0.fields["_height"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_height__P2719.info = {"start":6489,"length":65,"line":218,"column":8,"endLine":220,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"height","argumentNames":["this"]}
tiles_TileMapData_height__P2719.isGetter = true;

function tiles_TileMapData_height__P2719_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_height__P2719, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetY__P2787(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1875]) return breakpoint(s, 1, 1875, r0);
  case 1:
    r0 = s.arg0.fields["_offsetY"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P2787.info = {"start":1084,"length":59,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this"]}
scene_Camera_offsetY__P2787.isGetter = true;

function scene_Camera_offsetY__P2787_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P2787, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P2786(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___12975 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1871]) return breakpoint(s, 5, 1871, r0);
  case 5:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 897; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___12975 = (r0);
    s.lastBrkId = 1872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1872]) return breakpoint(s, 7, 1872, r0);
  case 7:
    r0 = s.scene___12975.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2746_mk(s);
    r0 = s.scene___12975.fields["tileMap"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 898; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1873]) return breakpoint(s, 9, 1873, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_6 = tiles_TileMap_offsetX__P2740_mk(s);
    r0 = s.scene___12975.fields["tileMap"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg1;
    s.callLocIdx = 899; s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim.Math_.floor(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_offsetX"] = (s.tmp_4);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1874]) return breakpoint(s, 11, 1874, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.Math_.floor(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_offsetX"] = (s.tmp_1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P2786.info = {"start":784,"length":291,"line":28,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this","v"]}

function scene_Camera_offsetX__P2786_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P2786, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___12975: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_offsetX__P2740(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1793]) return breakpoint(s, 1, 1793, r0);
  case 1:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_3 = tiles_TileMap_areaWidth__P2742_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 836; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 837; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 838; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetX__P2740.info = {"start":9499,"length":121,"line":325,"column":8,"endLine":327,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetX","argumentNames":["this","value"]}

function tiles_TileMap_offsetX__P2740_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetX__P2740, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaWidth__P2742(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1795]) return breakpoint(s, 3, 1795, r0);
  case 3:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = tiles_TileMapData_width__P2718_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 842; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 843; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaWidth__P2742.info = {"start":9763,"length":91,"line":333,"column":8,"endLine":335,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaWidth","argumentNames":["this"]}

function tiles_TileMap_areaWidth__P2742_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaWidth__P2742, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function tiles_TileMapData_width__P2718(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1764]) return breakpoint(s, 1, 1764, r0);
  case 1:
    r0 = s.arg0.fields["_width"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_width__P2718.info = {"start":6416,"length":63,"line":214,"column":8,"endLine":216,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"width","argumentNames":["this"]}
tiles_TileMapData_width__P2718.isGetter = true;

function tiles_TileMapData_width__P2718_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_width__P2718, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P2785(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1870]) return breakpoint(s, 1, 1870, r0);
  case 1:
    r0 = s.arg0.fields["_offsetX"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P2785.info = {"start":716,"length":59,"line":25,"column":8,"endLine":27,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this"]}
scene_Camera_offsetX__P2785.isGetter = true;

function scene_Camera_offsetX__P2785_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P2785, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function PhysicsEngine_move__P2516(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2510_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_move__P2516.info = {"start":351,"length":20,"line":18,"column":4,"endLine":18,"endColumn":24,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function PhysicsEngine_move__P2516_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_move__P2516, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_draw__P2515(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2510_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_draw__P2515.info = {"start":279,"length":10,"line":15,"column":4,"endLine":15,"endColumn":14,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function PhysicsEngine_draw__P2515_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_draw__P2515, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller___update__P2165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtms___13375 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[858]) return breakpoint(s, 1, 858, r0);
  case 1:
    r0 = (s.arg0 * 1000);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    s.dtms___13375 = (r0);
    s.lastBrkId = 859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[859]) return breakpoint(s, 2, 859, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, controller___update_inline__P13382);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.dtms___13375);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_2 = controller_players__P2129_mk(s);
    s.callLocIdx = 200; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 202; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update__P2165.info = {"start":13733,"length":137,"line":414,"column":4,"endLine":417,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["dt"]}

function controller___update__P2165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update__P2165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dtms___13375: undefined,
  arg0: undefined,
} }





function controller___update_inline__P13382(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___update__P2163_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.callLocIdx = 201; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update_inline__P13382.info = {"start":13835,"length":27,"line":416,"column":26,"endLine":416,"endColumn":53,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller___update_inline__P13382_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update_inline__P13382, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___update__P2163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[856]) return breakpoint(s, 1, 856, r0);
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 0);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.lastBrkId = 857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[857]) return breakpoint(s, 2, 857, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, controller_Controller___update_inline__P13395);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["buttons"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 199; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update__P2163.info = {"start":13211,"length":124,"line":396,"column":8,"endLine":399,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Controller___update__P2163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update__P2163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller___update_inline__P13395(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Button___update__P2203_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 198; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update_inline__P13395.info = {"start":13298,"length":25,"line":398,"column":33,"endLine":398,"endColumn":58,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["btn"]}

function controller_Controller___update_inline__P13395_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update_inline__P13395, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button___update__P2203(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___13411 = undefined;
    s.interval___13420 = undefined;
    s.count___13433 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[914]) return breakpoint(s, 12, 914, r0);
  case 12:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[915]) return breakpoint(s, 13, 915, r0);
  case 13:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[916]) return breakpoint(s, 14, 916, r0);
  case 14:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_pressedElasped"] = (s.tmp_4);
    s.lastBrkId = 917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[917]) return breakpoint(s, 15, 917, r0);
  case 15:
    r0 = s.arg0.fields["repeatDelay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = globals.defaultRepeatDelay___5035;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["repeatDelay"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.delay___13411 = (s.tmp_2);
    s.lastBrkId = 918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[918]) return breakpoint(s, 16, 918, r0);
  case 16:
    r0 = s.arg0.fields["repeatInterval"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = globals.defaultRepeatInterval___5037;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["repeatInterval"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.interval___13420 = (s.tmp_2);
    s.lastBrkId = 919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[919]) return breakpoint(s, 17, 919, r0);
  case 17:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.delay___13411);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[920]) return breakpoint(s, 18, 920, r0);
  case 18:
    { step = 11; continue; }
  case 7:
  case 8:
    s.lastBrkId = 921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[921]) return breakpoint(s, 19, 921, r0);
  case 19:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.delay___13411);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.interval___13420);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / s.interval___13420);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.count___13433 = (r0);
    s.lastBrkId = 922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[922]) return breakpoint(s, 20, 922, r0);
  case 20:
    r0 = s.arg0.fields["_repeatCount"];
    s.tmp_1 = r0;
    r0 = (s.count___13433 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[923]) return breakpoint(s, 21, 923, r0);
  case 21:
    s.tmp_2 = controller_Button_raiseButtonRepeat__P5024_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 214; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[924]) return breakpoint(s, 23, 924, r0);
  case 23:
    r0 = (s.arg0).fields["_repeatCount"] = (s.count___13433);
  case 9:
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button___update__P2203.info = {"start":7291,"length":704,"line":217,"column":8,"endLine":234,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Button___update__P2203_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button___update__P2203, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  delay___13411: undefined,
  interval___13420: undefined,
  count___13433: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonRepeat__P5024(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[895]) return breakpoint(s, 3, 895, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___5033);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[896]) return breakpoint(s, 4, 896, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2054, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[897]) return breakpoint(s, 5, 897, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2055, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonRepeat__P5024.info = {"start":3303,"length":211,"line":110,"column":8,"endLine":115,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonRepeat","argumentNames":["this"]}

function controller_Button_raiseButtonRepeat__P5024_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonRepeat__P5024, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_players__P2129(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[777]) return breakpoint(s, 1, 777, r0);
  case 1:
    s.tmp_0 = controller__player1__P2128_mk(s);
    s.callLocIdx = 155; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[778]) return breakpoint(s, 3, 778, r0);
  case 3:
    s.tmp_0 = helpers_arrayFilter__P110_mk(s);
    s.tmp_0.arg0 = globals._players___4953;
    s.tmp_0.arg1 = controller_players_inline__P13256;
    s.callLocIdx = 156; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
controller_players__P2129.info = {"start":1645,"length":144,"line":53,"column":4,"endLine":56,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"players","argumentNames":[]}

function controller_players__P2129_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players__P2129, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_players_inline__P13256(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
controller_players_inline__P13256.info = {"start":1767,"length":14,"line":55,"column":31,"endLine":55,"endColumn":45,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller_players_inline__P13256_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players_inline__P13256, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller__player1__P2128(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[774]) return breakpoint(s, 5, 774, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._players___4953);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__getAt(globals._players___4953, 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[775]) return breakpoint(s, 6, 775, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C2134_VT);
    s.tmp_5 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, globals.left___2115);
    r0 = pxsim_Array__push(s.tmp_6, globals.up___2116);
    r0 = pxsim_Array__push(s.tmp_6, globals.right___2117);
    r0 = pxsim_Array__push(s.tmp_6, globals.down___2118);
    r0 = pxsim_Array__push(s.tmp_6, globals.A___2113);
    r0 = pxsim_Array__push(s.tmp_6, globals.B___2114);
    r0 = pxsim_Array__push(s.tmp_6, globals.menu___2119);
    s.tmp_7 = controller_Controller_constructor__P2138_mk(s);
    s.tmp_7.arg0 = s.tmp_5;
    s.tmp_7.arg1 = 1;
    s.tmp_7.arg2 = s.tmp_6;
    s.callLocIdx = 154; s.pc = 7; return s.tmp_7;
  case 7:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[776]) return breakpoint(s, 8, 776, r0);
  case 8:
    r0 = pxsim_Array__getAt(globals._players___4953, 0);
    return leave(s, r0)
  default: oops()
} } }
controller__player1__P2128.info = {"start":1381,"length":258,"line":47,"column":4,"endLine":51,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_player1","argumentNames":[]}

function controller__player1__P2128_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__player1__P2128, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
} }





function controller_Controller_constructor__P2138(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.leftId___13317 = undefined;
    s.i___13325 = undefined;
    s.i___13343 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[781]) return breakpoint(s, 7, 781, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_id"] = (s.tmp_1);
    s.lastBrkId = 782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[782]) return breakpoint(s, 8, 782, r0);
  case 8:
    r0 = (s.arg0).fields["_connected"] = (false);
    s.lastBrkId = 783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[783]) return breakpoint(s, 9, 783, r0);
  case 9:
    r0 = (s.arg0).fields["playerIndex"] = (s.arg1);
    s.lastBrkId = 784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[784]) return breakpoint(s, 10, 784, r0);
  case 10:
    r0 = (s.arg0).fields["analog"] = (false);
    s.lastBrkId = 785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[785]) return breakpoint(s, 11, 785, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[786]) return breakpoint(s, 12, 786, r0);
  case 12:
    r0 = (s.arg0).fields["buttons"] = (s.arg2);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[787]) return breakpoint(s, 13, 787, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttons"] = (s.tmp_1);
    s.lastBrkId = 788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[788]) return breakpoint(s, 14, 788, r0);
  case 14:
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 7);
    s.tmp_0 = r0;
    r0 = (1 + s.tmp_0);
    s.leftId___13317 = (r0);
    s.lastBrkId = 789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[789]) return breakpoint(s, 15, 789, r0);
  case 15:
    s.i___13325 = (0);
    s.lastBrkId = 790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[790]) return breakpoint(s, 16, 790, r0);
  case 16:
  case 2:
    s.lastBrkId = 791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[791]) return breakpoint(s, 17, 791, r0);
  case 17:
    r0 = (s.i___13325 < 7);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[792]) return breakpoint(s, 18, 792, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2189_VT);
    s.tmp_1 = r0;
    s.tmp_2 = controller_Button_constructor__P2195_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    r0 = (s.leftId___13317 + s.i___13325);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = -1;
    s.callLocIdx = 160; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_1);
    s.lastBrkId = 793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[793]) return breakpoint(s, 20, 793, r0);
  case 20:
    r0 = (s.i___13325 + 1);
    s.i___13325 = (r0);
    { step = 2; continue; }
  case 3:
  case 4:
    s.lastBrkId = 794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[794]) return breakpoint(s, 21, 794, r0);
  case 21:
    s.i___13343 = (0);
    s.lastBrkId = 795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[795]) return breakpoint(s, 22, 795, r0);
  case 22:
  case 5:
    s.lastBrkId = 796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[796]) return breakpoint(s, 23, 796, r0);
  case 23:
    s.tmp_1 = r0 = s.i___13343;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[797]) return breakpoint(s, 24, 797, r0);
  case 24:
    r0 = s.arg0.fields["buttons"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___13343);
    s.tmp_4 = r0;
    r0 = (s.tmp_4).fields["_owner"] = (s.arg0);
    s.lastBrkId = 798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[798]) return breakpoint(s, 25, 798, r0);
  case 25:
    r0 = (s.i___13343 + 1);
    s.i___13343 = (r0);
    { step = 5; continue; }
  case 6:
    s.lastBrkId = 799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[799]) return breakpoint(s, 26, 799, r0);
  case 26:
    s.tmp_0 = controller_addController__P5017_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 161; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_constructor__P2138.info = {"start":2452,"length":696,"line":82,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["this","playerIndex","buttons"]}

function controller_Controller_constructor__P2138_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_constructor__P2138, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  leftId___13317: undefined,
  i___13325: undefined,
  i___13343: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_addController__P5017(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[771]) return breakpoint(s, 3, 771, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._players___4953);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[772]) return breakpoint(s, 4, 772, r0);
  case 4:
    r0 = pxsim_Array__mk();
    globals._players___4953 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[773]) return breakpoint(s, 5, 773, r0);
  case 5:
    s.tmp_0 = r0 = globals._players___4953;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_addController__P5017.info = {"start":1218,"length":157,"line":40,"column":4,"endLine":45,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"addController","argumentNames":["ctrl"]}

function controller_addController__P5017_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_addController__P5017, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller__moveSprites__P2133(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[779]) return breakpoint(s, 1, 779, r0);
  case 1:
    s.lastBrkId = 780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[780]) return breakpoint(s, 2, 780, r0);
  case 2:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1 = controller_players__P2129_mk(s);
    s.callLocIdx = 157; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = controller__moveSprites_inline__P13029;
    s.callLocIdx = 159; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites__P2133.info = {"start":2005,"length":180,"line":67,"column":4,"endLine":71,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_moveSprites","argumentNames":[]}

function controller__moveSprites__P2133_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites__P2133, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function controller__moveSprites_inline__P13029(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___preUpdate__P2162_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 158; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites_inline__P13029.info = {"start":2151,"length":26,"line":70,"column":26,"endLine":70,"endColumn":52,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller__moveSprites_inline__P13029_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites_inline__P13029, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate__P2162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.deadSprites___13036 = undefined;
    s.svx___13037 = undefined;
    s.svy___13038 = undefined;
    s.svxInCricle___13073 = undefined;
    s.svyInCircle___13075 = undefined;
    s.sq___13077 = undefined;
    s.scale___13092 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[815]) return breakpoint(s, 18, 815, r0);
  case 18:
    s.tmp_3 = controller_Controller__controlledSprites__P2139_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 173; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[816]) return breakpoint(s, 20, 816, r0);
  case 20:
    { step = 17; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mklocRef();
    s.deadSprites___13036 = (r0);
    s.lastBrkId = 817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[817]) return breakpoint(s, 21, 817, r0);
  case 21:
    r0 = pxsim_pxtrt_stlocRef(s.deadSprites___13036, false);
    r0 = pxsim_pxtrt.mklocRef();
    s.svx___13037 = (r0);
    s.lastBrkId = 818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[818]) return breakpoint(s, 22, 818, r0);
  case 22:
    r0 = pxsim_pxtrt_stlocRef(s.svx___13037, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.svy___13038 = (r0);
    s.lastBrkId = 819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[819]) return breakpoint(s, 23, 819, r0);
  case 23:
    r0 = pxsim_pxtrt_stlocRef(s.svy___13038, 0);
    s.lastBrkId = 820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[820]) return breakpoint(s, 24, 820, r0);
  case 24:
    r0 = s.arg0.fields["analog"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[821]) return breakpoint(s, 25, 821, r0);
  case 25:
    s.tmp_1 = r0 = s.svx___13037;
    s.tmp_5 = controller_Button_pressureLevel__P2201_mk(s);
    s.tmp_6 = controller_Controller_right__P2144_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 174; s.pc = 27; return s.tmp_6;
  case 27:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 175; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_8 = controller_Button_pressureLevel__P2201_mk(s);
    s.tmp_9 = controller_Controller_left__P2143_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 176; s.pc = 29; return s.tmp_9;
  case 29:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 177; s.pc = 28; return s.tmp_8;
  case 28:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_4 - s.tmp_7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.lastBrkId = 822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[822]) return breakpoint(s, 30, 822, r0);
  case 30:
    s.tmp_0 = r0 = s.svy___13038;
    s.tmp_4 = controller_Button_pressureLevel__P2201_mk(s);
    s.tmp_5 = controller_Controller_down__P2146_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 178; s.pc = 32; return s.tmp_5;
  case 32:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 179; s.pc = 31; return s.tmp_4;
  case 31:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_7 = controller_Button_pressureLevel__P2201_mk(s);
    s.tmp_8 = controller_Controller_up__P2145_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 180; s.pc = 34; return s.tmp_8;
  case 34:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 181; s.pc = 33; return s.tmp_7;
  case 33:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 - s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 12; continue; }
  case 3:
    s.lastBrkId = 823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[823]) return breakpoint(s, 35, 823, r0);
  case 35:
    s.tmp_1 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_2 = controller_Controller_right__P2144_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 182; s.pc = 37; return s.tmp_2;
  case 37:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = 256;
    { step = 5; continue; }
  case 4:
    r0 = 0;
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_6 = controller_Controller_left__P2143_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 183; s.pc = 39; return s.tmp_6;
  case 39:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 38; return s.tmp_5;
  case 38:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 6; continue; }
    r0 = 256;
    { step = 7; continue; }
  case 6:
    r0 = 0;
  case 7:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svx___13037;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
    s.lastBrkId = 824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[824]) return breakpoint(s, 40, 824, r0);
  case 40:
    s.tmp_1 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_2 = controller_Controller_down__P2146_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 184; s.pc = 42; return s.tmp_2;
  case 42:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = 256;
    { step = 9; continue; }
  case 8:
    r0 = 0;
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_6 = controller_Controller_up__P2145_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 185; s.pc = 44; return s.tmp_6;
  case 44:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 43; return s.tmp_5;
  case 43:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 10; continue; }
    r0 = 256;
    { step = 11; continue; }
  case 10:
    r0 = 0;
  case 11:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svy___13038;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
  case 12:
    r0 = pxsim_pxtrt.mklocRef();
    s.svxInCricle___13073 = (r0);
    s.lastBrkId = 825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[825]) return breakpoint(s, 45, 825, r0);
  case 45:
    s.tmp_0 = r0 = s.svxInCricle___13073;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13037);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.svyInCircle___13075 = (r0);
    s.lastBrkId = 826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[826]) return breakpoint(s, 46, 826, r0);
  case 46:
    s.tmp_0 = r0 = s.svyInCircle___13075;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13038);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[827]) return breakpoint(s, 47, 827, r0);
  case 47:
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13037);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13037);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13038);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13038);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.sq___13077 = (r0);
    s.lastBrkId = 828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[828]) return breakpoint(s, 48, 828, r0);
  case 48:
    r0 = (s.sq___13077 > 65536);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[829]) return breakpoint(s, 49, 829, r0);
  case 49:
    r0 = (65536 / s.sq___13077);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_1);
    s.scale___13092 = (r0);
    s.lastBrkId = 830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[830]) return breakpoint(s, 50, 830, r0);
  case 50:
    s.tmp_0 = r0 = s.svxInCricle___13073;
    s.tmp_3 = r0 = s.scale___13092;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13037);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[831]) return breakpoint(s, 51, 831, r0);
  case 51:
    s.tmp_0 = r0 = s.svyInCircle___13075;
    s.tmp_3 = r0 = s.scale___13092;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13038);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 13:
  case 14:
    s.lastBrkId = 832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[832]) return breakpoint(s, 52, 832, r0);
  case 52:
    r0 = pxsim_pxtcore_mkAction(5, controller_Controller___preUpdate_inline__P13110);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.deadSprites___13036);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.svx___13037);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.svy___13038);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.svxInCricle___13073);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.svyInCircle___13075);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_2 = controller_Controller__controlledSprites__P2139_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 186; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 194; s.pc = 53; return s.tmp_1;
  case 53:
    r0 = s.retval;
    s.lastBrkId = 854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[854]) return breakpoint(s, 55, 854, r0);
  case 55:
    r0 = pxsim_pxtrt_ldlocRef(s.deadSprites___13036);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[855]) return breakpoint(s, 56, 855, r0);
  case 56:
    s.tmp_1 = controller_Controller__controlledSprites__P2140_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3 = controller_Controller__controlledSprites__P2139_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 195; s.pc = 59; return s.tmp_3;
  case 59:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = controller_Controller___preUpdate_inline__P13167;
    s.callLocIdx = 196; s.pc = 58; return s.tmp_2;
  case 58:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 197; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate__P2162.info = {"start":10666,"length":2535,"line":330,"column":8,"endLine":394,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__preUpdate","argumentNames":["this"]}

function controller_Controller___preUpdate__P2162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate__P2162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  deadSprites___13036: undefined,
  svx___13037: undefined,
  svy___13038: undefined,
  svxInCricle___13073: undefined,
  svyInCircle___13075: undefined,
  sq___13077: undefined,
  scale___13092: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate_inline__P13110(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___13113 = undefined;
    s.vx___13114 = undefined;
    s.vy___13115 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[833]) return breakpoint(s, 22, 833, r0);
  case 22:
    s.tmp_0 = if_s_1_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "s");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["s"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["s"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 187; s.pc = 23; return s.tmp_0; }
    }
  case 23:
    r0 = s.retval;
    s.s___13113 = (r0);
    s.lastBrkId = 834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[834]) return breakpoint(s, 24, 834, r0);
  case 24:
    s.tmp_2 = if_vx_1_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "vx");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["vx"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["vx"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 188; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.vx___13114 = (r0);
    s.lastBrkId = 835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[835]) return breakpoint(s, 26, 835, r0);
  case 26:
    s.tmp_3 = if_vy_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "vy");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["vy"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["vy"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 189; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.vy___13115 = (r0);
    s.lastBrkId = 836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[836]) return breakpoint(s, 28, 836, r0);
  case 28:
    r0 = s.s___13113.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[837]) return breakpoint(s, 29, 837, r0);
  case 29:
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], true);
    s.lastBrkId = 838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[838]) return breakpoint(s, 30, 838, r0);
  case 30:
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[839]) return breakpoint(s, 31, 839, r0);
  case 31:
    r0 = s.arg0.fields["_inputLastFrame"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[840]) return breakpoint(s, 32, 840, r0);
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.vx___13114);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[841]) return breakpoint(s, 33, 841, r0);
  case 33:
    r0 = (s.s___13113).fields["_vx"] = (0);
  case 3:
  case 4:
    s.lastBrkId = 842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[842]) return breakpoint(s, 34, 842, r0);
  case 34:
    r0 = pxsim_numops_toBoolDecr(s.vy___13115);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[843]) return breakpoint(s, 35, 843, r0);
  case 35:
    r0 = (s.s___13113).fields["_vy"] = (0);
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[844]) return breakpoint(s, 36, 844, r0);
  case 36:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[845]) return breakpoint(s, 37, 845, r0);
  case 37:
    s.tmp_2 = r0 = s.vx___13114;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_2;
    { step = 12; continue; }
  case 11:
    r0 = s.vy___13115;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[846]) return breakpoint(s, 38, 846, r0);
  case 38:
    s.tmp_4 = r0 = s.s___13113;
    s.tmp_6 = Fx_imul__P161_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.vx___13114;
    s.callLocIdx = 190; s.pc = 39; return s.tmp_6;
  case 39:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["_vx"] = (s.tmp_5);
    s.lastBrkId = 847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[847]) return breakpoint(s, 40, 847, r0);
  case 40:
    s.tmp_0 = r0 = s.s___13113;
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[4]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vy___13115;
    s.callLocIdx = 191; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    { step = 18; continue; }
  case 13:
    s.lastBrkId = 848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[848]) return breakpoint(s, 42, 848, r0);
  case 42:
    r0 = pxsim_numops_toBoolDecr(s.vx___13114);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[849]) return breakpoint(s, 43, 849, r0);
  case 43:
    s.tmp_0 = r0 = s.s___13113;
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vx___13114;
    s.callLocIdx = 192; s.pc = 44; return s.tmp_2;
  case 44:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    { step = 17; continue; }
  case 14:
    s.lastBrkId = 850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[850]) return breakpoint(s, 45, 850, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.vy___13115);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[851]) return breakpoint(s, 46, 851, r0);
  case 46:
    s.tmp_0 = r0 = s.s___13113;
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vy___13115;
    s.callLocIdx = 193; s.pc = 47; return s.tmp_2;
  case 47:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
  case 15:
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[852]) return breakpoint(s, 48, 852, r0);
  case 48:
    r0 = (s.arg0).fields["_inputLastFrame"] = (true);
    { step = 20; continue; }
  case 19:
    s.lastBrkId = 853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[853]) return breakpoint(s, 49, 853, r0);
  case 49:
    r0 = (s.arg0).fields["_inputLastFrame"] = (false);
  case 20:
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate_inline__P13110.info = {"start":11849,"length":1171,"line":361,"column":44,"endLine":389,"endColumn":13,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["controlledSprite"]}

function controller_Controller___preUpdate_inline__P13110_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate_inline__P13110, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  s___13113: undefined,
  vx___13114: undefined,
  vy___13115: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate_inline__P13167(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["s"];
    r0 = r0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate_inline__P13167.info = {"start":13147,"length":42,"line":393,"column":28,"endLine":393,"endColumn":70,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["s"]}

function controller_Controller___preUpdate_inline__P13167_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate_inline__P13167, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller_Button_pressureLevel__P2201(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[901]) return breakpoint(s, 6, 901, r0);
  case 6:
    r0 = pxsim.control.deviceDalVersion();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "sim");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[902]) return breakpoint(s, 7, 902, r0);
  case 7:
    s.tmp_3 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = 512;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    { step = 5; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[903]) return breakpoint(s, 9, 903, r0);
  case 9:
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtcore.pressureLevelByButtonId(s.tmp_5, -1);
    { step = 5; continue; }
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_pressureLevel__P2201.info = {"start":6453,"length":311,"line":192,"column":8,"endLine":199,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"pressureLevel","argumentNames":["this"]}

function controller_Button_pressureLevel__P2201_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_pressureLevel__P2201, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function controller_Controller_down__P2146(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[806]) return breakpoint(s, 1, 806, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P5018_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 4;
    s.callLocIdx = 167; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_down__P2146.info = {"start":4131,"length":77,"line":145,"column":8,"endLine":147,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"down","argumentNames":["this"]}
controller_Controller_down__P2146.isGetter = true;

function controller_Controller_down__P2146_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_down__P2146, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_button__P5018(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[809]) return breakpoint(s, 1, 809, r0);
  case 1:
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (s.arg1 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_button__P5018.info = {"start":6666,"length":105,"line":220,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"button","argumentNames":["this","button"]}

function controller_Controller_button__P5018_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_button__P5018, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_up__P2145(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[805]) return breakpoint(s, 1, 805, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P5018_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 166; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_up__P2145.info = {"start":3979,"length":73,"line":137,"column":8,"endLine":139,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"up","argumentNames":["this"]}
controller_Controller_up__P2145.isGetter = true;

function controller_Controller_up__P2145_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_up__P2145, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_right__P2144(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[804]) return breakpoint(s, 1, 804, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P5018_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 3;
    s.callLocIdx = 165; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_right__P2144.info = {"start":3823,"length":79,"line":129,"column":8,"endLine":131,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"right","argumentNames":["this"]}
controller_Controller_right__P2144.isGetter = true;

function controller_Controller_right__P2144_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_right__P2144, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_left__P2143(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[803]) return breakpoint(s, 1, 803, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P5018_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 164; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_left__P2143.info = {"start":3666,"length":77,"line":121,"column":8,"endLine":123,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"left","argumentNames":["this"]}
controller_Controller_left__P2143.isGetter = true;

function controller_Controller_left__P2143_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_left__P2143, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller__controlledSprites__P2140(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[801]) return breakpoint(s, 1, 801, r0);
  case 1:
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 163; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_2, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P2140.info = {"start":3300,"length":134,"line":105,"column":8,"endLine":107,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this","cps"]}

function controller_Controller__controlledSprites__P2140_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P2140, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller__controlledSprites__P2139(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[800]) return breakpoint(s, 1, 800, r0);
  case 1:
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 162; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P2139.info = {"start":3158,"length":132,"line":101,"column":8,"endLine":103,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this"]}
controller_Controller__controlledSprites__P2139.isGetter = true;

function controller_Controller__controlledSprites__P2139_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P2139, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_imul__P161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[221]) return breakpoint(s, 1, 221, r0);
  case 1:
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_imul__P161.info = {"start":1010,"length":130,"line":32,"column":4,"endLine":34,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"imul","argumentNames":["a","b"]}

function Fx_imul__P161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_imul__P161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function power_checkDeepSleep__P1930(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___12100 = undefined;
    s.to___12103 = undefined;
    s.lastBrkId = 540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[540]) return breakpoint(s, 11, 540, r0);
  case 11:
    s.tmp_0 = power_init__P4862_mk(s);
    s.callLocIdx = 78; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[541]) return breakpoint(s, 13, 541, r0);
  case 13:
    s.tmp_0 = r0 = globals._poked___4860;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.p___12100 = (s.tmp_1);
    s.lastBrkId = 542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[542]) return breakpoint(s, 14, 542, r0);
  case 14:
    s.tmp_0 = r0 = globals._timeout___4861;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.to___12103 = (s.tmp_1);
    s.lastBrkId = 543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[543]) return breakpoint(s, 15, 543, r0);
  case 15:
    r0 = (s.to___12103 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.p___12100);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.to___12103);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_3;
    { step = 8; continue; }
  case 7:
    r0 = pxsim.control.isUSBInitialized();
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 8:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[544]) return breakpoint(s, 16, 544, r0);
  case 16:
    r0 = pxsim_pxtcore.deepSleep();
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_checkDeepSleep__P1930.info = {"start":1087,"length":298,"line":36,"column":4,"endLine":46,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"checkDeepSleep","argumentNames":[]}

function power_checkDeepSleep__P1930_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_checkDeepSleep__P1930, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  p___12100: undefined,
  to___12103: undefined,
} }





function power_init__P4862(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[545]) return breakpoint(s, 8, 545, r0);
  case 8:
    r0 = (globals._timeout___4861 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[546]) return breakpoint(s, 9, 546, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[547]) return breakpoint(s, 10, 547, r0);
  case 10:
    r0 = pxsim_pxtcore.getConfig(212, -1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 1000);
    globals._timeout___4861 = (r0);
    s.lastBrkId = 548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[548]) return breakpoint(s, 11, 548, r0);
  case 11:
    r0 = (globals._timeout___4861 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (globals._timeout___4861 < 300000);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[549]) return breakpoint(s, 12, 549, r0);
  case 12:
    globals._timeout___4861 = (300000);
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_init__P4862.info = {"start":1610,"length":376,"line":57,"column":4,"endLine":66,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"init","argumentNames":[]}

function power_init__P4862_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_init__P4862, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function power_poke__P1929(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[538]) return breakpoint(s, 1, 538, r0);
  case 1:
    s.tmp_0 = power_init__P4862_mk(s);
    s.callLocIdx = 77; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[539]) return breakpoint(s, 3, 539, r0);
  case 3:
    r0 = pxsim.control.millis();
    globals._poked___4860 = (r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_poke__P1929.info = {"start":795,"length":81,"line":26,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"poke","argumentNames":[]}

function power_poke__P1929_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_poke__P1929, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_EventContext_registerFrameHandler__P403(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.fn___10565 = undefined;
    s.i___10574 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[444]) return breakpoint(s, 8, 444, r0);
  case 8:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[445]) return breakpoint(s, 9, 445, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["frameCallbacks"] = (s.tmp_4);
    s.lastBrkId = 446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[446]) return breakpoint(s, 10, 446, r0);
  case 10:
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P4735_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 53; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[447]) return breakpoint(s, 12, 447, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_FrameCallback__C392_VT);
    s.fn___10565 = (r0);
    s.lastBrkId = 448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[448]) return breakpoint(s, 13, 448, r0);
  case 13:
    r0 = (s.fn___10565).fields["order"] = (s.arg1);
    s.lastBrkId = 449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[449]) return breakpoint(s, 14, 449, r0);
  case 14:
    r0 = (s.fn___10565).fields["handler"] = (s.arg2);
    s.lastBrkId = 450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[450]) return breakpoint(s, 15, 450, r0);
  case 15:
    s.i___10574 = (0);
    s.lastBrkId = 451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[451]) return breakpoint(s, 16, 451, r0);
  case 16:
  case 3:
    s.lastBrkId = 452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[452]) return breakpoint(s, 17, 452, r0);
  case 17:
    s.tmp_1 = r0 = s.i___10574;
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[453]) return breakpoint(s, 18, 453, r0);
  case 18:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.i___10574);
    r0 = r0.fields["order"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > s.arg1);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[454]) return breakpoint(s, 19, 454, r0);
  case 19:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_7 = r0;
    r0 = pxsim_Array_.insertAt(s.tmp_7, s.i___10574, s.fn___10565);
    s.lastBrkId = 455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[455]) return breakpoint(s, 20, 455, r0);
  case 20:
    r0 = s.fn___10565;
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[456]) return breakpoint(s, 21, 456, r0);
  case 21:
    r0 = (s.i___10574 + 1);
    s.i___10574 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[457]) return breakpoint(s, 22, 457, r0);
  case 22:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.fn___10565);
    s.lastBrkId = 458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[458]) return breakpoint(s, 23, 458, r0);
  case 23:
    r0 = s.fn___10565;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameHandler__P403.info = {"start":4862,"length":643,"line":147,"column":8,"endLine":164,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameHandler","argumentNames":["this","order","handler"]}

function control_EventContext_registerFrameHandler__P403_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameHandler__P403, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  fn___10565: undefined,
  i___10574: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_EventContext_deltaTime__P400(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[390]) return breakpoint(s, 1, 390, r0);
  case 1:
    r0 = s.arg0.fields["deltaTimeMillis"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    return leaveAccessor(s, r0)
  default: oops()
} } }
control_EventContext_deltaTime__P400.info = {"start":2135,"length":75,"line":71,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"deltaTime","argumentNames":["this"]}
control_EventContext_deltaTime__P400.isGetter = true;

function control_EventContext_deltaTime__P400_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_deltaTime__P400, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Scene_constructor__P2865(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2842_VT)) failedCast(r0);
    r0 = (s.arg0).fields["previousScene"] = (s.arg2);
    s.lastBrkId = 1912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1912]) return breakpoint(s, 1, 1912, r0);
  case 1:
    r0 = (s.arg0).fields["eventContext"] = (s.arg1);
    s.lastBrkId = 1913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1913]) return breakpoint(s, 2, 1913, r0);
  case 2:
    r0 = (s.arg0).fields["flags"] = (0);
    s.lastBrkId = 1914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1914]) return breakpoint(s, 3, 1914, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(ArcadePhysicsEngine__C2526_VT);
    s.tmp_0 = r0;
    s.tmp_1 = ArcadePhysicsEngine_constructor__P2527_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 500;
    s.tmp_1.arg2 = 2;
    s.tmp_1.arg3 = 4;
    s.callLocIdx = 923; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = (s.arg0).fields["physicsEngine"] = (s.tmp_0);
    s.lastBrkId = 1915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1915]) return breakpoint(s, 5, 1915, r0);
  case 5:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Camera__C2780_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Camera_constructor__P2784_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 924; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = (s.arg0).fields["camera"] = (s.tmp_0);
    s.lastBrkId = 1916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1916]) return breakpoint(s, 7, 1916, r0);
  case 7:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Background__C2668_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Background_constructor__P2672_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["camera"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 925; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    r0 = (s.arg0).fields["background"] = (s.tmp_0);
    s.lastBrkId = 1917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1917]) return breakpoint(s, 9, 1917, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["destroyedHandlers"] = (s.tmp_1);
    s.lastBrkId = 1918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1918]) return breakpoint(s, 10, 1918, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["createdHandlers"] = (s.tmp_1);
    s.lastBrkId = 1919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1919]) return breakpoint(s, 11, 1919, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapHandlers"] = (s.tmp_1);
    s.lastBrkId = 1920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1920]) return breakpoint(s, 12, 1920, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapMap"] = (s.tmp_1);
    s.lastBrkId = 1921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1921]) return breakpoint(s, 13, 1921, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["tileOverlapHandlers"] = (s.tmp_1);
    s.lastBrkId = 1922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1922]) return breakpoint(s, 14, 1922, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["collisionHandlers"] = (s.tmp_1);
    s.lastBrkId = 1923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1923]) return breakpoint(s, 15, 1923, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["wallCollisionHandlers"] = (s.tmp_1);
    s.lastBrkId = 1924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1924]) return breakpoint(s, 16, 1924, r0);
  case 16:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["gameForeverHandlers"] = (s.tmp_1);
    s.lastBrkId = 1925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1925]) return breakpoint(s, 17, 1925, r0);
  case 17:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spritesByKind"] = (s.tmp_1);
    s.lastBrkId = 1926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1926]) return breakpoint(s, 18, 1926, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["controlledSprites"] = (s.tmp_1);
    s.lastBrkId = 1927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1927]) return breakpoint(s, 19, 1927, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttonEventHandlers"] = (s.tmp_1);
    s.lastBrkId = 1928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1928]) return breakpoint(s, 20, 1928, r0);
  case 20:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_data"] = (s.tmp_1);
    s.lastBrkId = 1929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1929]) return breakpoint(s, 21, 1929, r0);
  case 21:
    r0 = (s.arg0).fields["_millis"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_constructor__P2865.info = {"start":3586,"length":836,"line":106,"column":8,"endLine":125,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["this","eventContext","previousScene"]}

function scene_Scene_constructor__P2865_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_constructor__P2865, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_constructor__P2784(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1866]) return breakpoint(s, 1, 1866, r0);
  case 1:
    r0 = (s.arg0).fields["_offsetX"] = (0);
    s.lastBrkId = 1867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1867]) return breakpoint(s, 2, 1867, r0);
  case 2:
    r0 = (s.arg0).fields["_offsetY"] = (0);
    s.lastBrkId = 1868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1868]) return breakpoint(s, 3, 1868, r0);
  case 3:
    r0 = (s.arg0).fields["drawOffsetX"] = (0);
    s.lastBrkId = 1869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1869]) return breakpoint(s, 4, 1869, r0);
  case 4:
    r0 = (s.arg0).fields["drawOffsetY"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_constructor__P2784.info = {"start":550,"length":156,"line":17,"column":8,"endLine":23,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"inline","argumentNames":["this"]}

function scene_Camera_constructor__P2784_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_constructor__P2784, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Background_constructor__P2672(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2668_VT)) failedCast(r0);
    s.lastBrkId = 1669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1669]) return breakpoint(s, 1, 1669, r0);
  case 1:
    r0 = (s.arg0).fields["color"] = (0);
    s.lastBrkId = 1670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1670]) return breakpoint(s, 2, 1670, r0);
  case 2:
    r0 = (s.arg0).fields["camera"] = (s.arg1);
    s.lastBrkId = 1671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1671]) return breakpoint(s, 3, 1671, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_layers"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_constructor__P2672.info = {"start":367,"length":132,"line":20,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","camera"]}

function scene_Background_constructor__P2672_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_constructor__P2672, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_constructor__P2527(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1334]) return breakpoint(s, 1, 1334, r0);
  case 1:
    s.tmp_0 = PhysicsEngine_constructor__P2511_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 539; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1335]) return breakpoint(s, 3, 1335, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["sprites"] = (s.tmp_1);
    s.lastBrkId = 1336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1336]) return breakpoint(s, 4, 1336, r0);
  case 4:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteMap__C2445_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_SpriteMap_constructor__P2446_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 540; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = (s.arg0).fields["map"] = (s.tmp_0);
    s.lastBrkId = 1337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1337]) return breakpoint(s, 6, 1337, r0);
  case 6:
    s.tmp_0 = ArcadePhysicsEngine_maxSpeed__P2529_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 541; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1338]) return breakpoint(s, 8, 1338, r0);
  case 8:
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P2533_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 542; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 1339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1339]) return breakpoint(s, 10, 1339, r0);
  case 10:
    s.tmp_0 = ArcadePhysicsEngine_minStep__P2531_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 543; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constructor__P2527.info = {"start":1601,"length":277,"line":58,"column":4,"endLine":65,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","maxVelocity","minSingleStep","maxSingleStep"]}

function ArcadePhysicsEngine_constructor__P2527_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constructor__P2527, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_maxStep__P2533(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1346]) return breakpoint(s, 1, 1346, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 550; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P2533.info = {"start":2329,"length":67,"line":88,"column":4,"endLine":90,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxStep__P2533_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P2533, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_maxStep__P2532(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1345]) return breakpoint(s, 1, 1345, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 549; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P2532.info = {"start":2249,"length":74,"line":84,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this"]}
ArcadePhysicsEngine_maxStep__P2532.isGetter = true;

function ArcadePhysicsEngine_maxStep__P2532_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P2532, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_toInt__P172(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[236]) return breakpoint(s, 1, 236, r0);
  case 1:
    r0 = (s.arg0 + 128);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_toInt__P172.info = {"start":2379,"length":86,"line":74,"column":4,"endLine":76,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toInt","argumentNames":["v"]}

function Fx_toInt__P172_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toInt__P172, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_minStep__P2531(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1344]) return breakpoint(s, 1, 1344, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 548; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P2531.info = {"start":2176,"length":67,"line":80,"column":4,"endLine":82,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_minStep__P2531_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P2531, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_minStep__P2530(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1343]) return breakpoint(s, 1, 1343, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 547; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P2530.info = {"start":2096,"length":74,"line":76,"column":4,"endLine":78,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this"]}
ArcadePhysicsEngine_minStep__P2530.isGetter = true;

function ArcadePhysicsEngine_minStep__P2530_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P2530, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P2529(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1341]) return breakpoint(s, 1, 1341, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 545; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxVelocity"] = (s.tmp_1);
    s.lastBrkId = 1342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1342]) return breakpoint(s, 3, 1342, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 546; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxNegativeVelocity"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P2529.info = {"start":1963,"length":127,"line":71,"column":4,"endLine":74,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxSpeed__P2529_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P2529, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_neg__P155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[215]) return breakpoint(s, 1, 215, r0);
  case 1:
    r0 = (0 - s.arg0);
    return leave(s, r0)
  default: oops()
} } }
Fx_neg__P155.info = {"start":311,"length":88,"line":14,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"neg","argumentNames":["a"]}

function Fx_neg__P155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_neg__P155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P2528(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1340]) return breakpoint(s, 1, 1340, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 544; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P2528.info = {"start":1884,"length":73,"line":67,"column":4,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this"]}
ArcadePhysicsEngine_maxSpeed__P2528.isGetter = true;

function ArcadePhysicsEngine_maxSpeed__P2528_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P2528, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_constructor__P2511(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2510_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_constructor__P2511.info = {"start":26,"length":21,"line":1,"column":4,"endLine":2,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this"]}

function PhysicsEngine_constructor__P2511_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_constructor__P2511, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteMap_constructor__P2446(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1227]) return breakpoint(s, 1, 1227, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_constructor__P2446.info = {"start":237,"length":56,"line":8,"column":8,"endLine":10,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteMap_constructor__P2446_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_constructor__P2446, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function control_pushEventContext__P409(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___13474 = undefined;
    s.n___13480 = undefined;
    s.lastBrkId = 470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[470]) return breakpoint(s, 5, 470, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4737);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[471]) return breakpoint(s, 6, 471, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals.eventContexts___4737 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[472]) return breakpoint(s, 7, 472, r0);
  case 7:
    s.tmp_0 = control_eventContext__P408_mk(s);
    s.callLocIdx = 56; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.ctx___13474 = (r0);
    s.lastBrkId = 473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[473]) return breakpoint(s, 9, 473, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.ctx___13474);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[474]) return breakpoint(s, 10, 474, r0);
  case 10:
    s.tmp_0 = control_EventContext_unregister__P402_mk(s);
    s.tmp_0.arg0 = s.ctx___13474;
    s.callLocIdx = 57; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[475]) return breakpoint(s, 12, 475, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventContext__C395_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventContext_constructor__P399_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 58; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.n___13480 = (s.tmp_0);
    s.lastBrkId = 476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[476]) return breakpoint(s, 14, 476, r0);
  case 14:
    r0 = pxsim_Array__push(globals.eventContexts___4737, s.n___13480);
    s.lastBrkId = 477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[477]) return breakpoint(s, 15, 477, r0);
  case 15:
    r0 = s.n___13480;
    return leave(s, r0)
  default: oops()
} } }
control_pushEventContext__P409.info = {"start":7310,"length":340,"line":220,"column":4,"endLine":231,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"pushEventContext","argumentNames":[]}

function control_pushEventContext__P409_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pushEventContext__P409, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___13474: undefined,
  n___13480: undefined,
} }





function control_EventContext_constructor__P399(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[382]) return breakpoint(s, 3, 382, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["handlers"] = (s.tmp_1);
    s.lastBrkId = 383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[383]) return breakpoint(s, 4, 383, r0);
  case 4:
    r0 = (s.arg0).fields["framesInSample"] = (0);
    s.lastBrkId = 384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[384]) return breakpoint(s, 5, 384, r0);
  case 5:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    s.lastBrkId = 385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[385]) return breakpoint(s, 6, 385, r0);
  case 6:
    r0 = (s.arg0).fields["deltaTimeMillis"] = (0);
    s.lastBrkId = 386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[386]) return breakpoint(s, 7, 386, r0);
  case 7:
    r0 = (s.arg0).fields["frameWorker"] = (0);
    s.lastBrkId = 387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[387]) return breakpoint(s, 8, 387, r0);
  case 8:
    r0 = (s.arg0).fields["idleCallbacks"] = (undefined);
    s.lastBrkId = 388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[388]) return breakpoint(s, 9, 388, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(globals.control_EventContext_lastStats___397);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[389]) return breakpoint(s, 10, 389, r0);
  case 10:
    r0 = pxsim_String_.mkEmpty();
    globals.control_EventContext_lastStats___397 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_constructor__P399.info = {"start":1778,"length":347,"line":59,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this"]}

function control_EventContext_constructor__P399_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_constructor__P399, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function particles_disableAll__P3181(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___13659 = undefined;
    s.lastBrkId = 2744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2744]) return breakpoint(s, 3, 2744, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P5587_mk(s);
    s.callLocIdx = 1336; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___13659 = (r0);
    s.lastBrkId = 2745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2745]) return breakpoint(s, 5, 2745, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___13659);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2746]) return breakpoint(s, 6, 2746, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___13659;
    s.tmp_0.arg1 = particles_disableAll_inline__P13665;
    s.callLocIdx = 1338; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2747]) return breakpoint(s, 8, 2747, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P5583_mk(s);
    s.callLocIdx = 1339; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll__P3181.info = {"start":12370,"length":195,"line":402,"column":4,"endLine":408,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"disableAll","argumentNames":[]}

function particles_disableAll__P3181_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll__P3181, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___13659: undefined,
} }





function particles_disableAll_inline__P13665(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P3163_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1337; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll_inline__P13665.info = {"start":12495,"length":22,"line":405,"column":28,"endLine":405,"endColumn":50,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_disableAll_inline__P13665_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll_inline__P13665, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_clearAll__P3180(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___13670 = undefined;
    s.lastBrkId = 2740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2740]) return breakpoint(s, 3, 2740, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P5587_mk(s);
    s.callLocIdx = 1332; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___13670 = (r0);
    s.lastBrkId = 2741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2741]) return breakpoint(s, 5, 2741, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___13670);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2742]) return breakpoint(s, 6, 2742, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___13670;
    s.tmp_0.arg1 = particles_clearAll_inline__P13676;
    s.callLocIdx = 1334; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2743]) return breakpoint(s, 8, 2743, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P5583_mk(s);
    s.callLocIdx = 1335; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll__P3180.info = {"start":12098,"length":185,"line":391,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"clearAll","argumentNames":[]}

function particles_clearAll__P3180_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll__P3180, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___13670: undefined,
} }





function particles_clearAll_inline__P13676(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_clear__P3165_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1333; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll_inline__P13676.info = {"start":12221,"length":14,"line":394,"column":28,"endLine":394,"endColumn":42,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_clearAll_inline__P13676_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll_inline__P13676, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_clear__P3165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2703]) return breakpoint(s, 1, 2703, r0);
  case 1:
    r0 = (s.arg0).fields["head"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_clear__P3165.info = {"start":7424,"length":54,"line":243,"column":8,"endLine":245,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"clear","argumentNames":["this"]}

function particles_ParticleSource_clear__P3165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_clear__P3165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_SplashDialog_setSubtext__P2940(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2931_VT)) failedCast(r0);
    s.lastBrkId = 2129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2129]) return breakpoint(s, 1, 2129, r0);
  case 1:
    r0 = (s.arg0).fields["subtext"] = (s.arg1);
    s.lastBrkId = 2130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2130]) return breakpoint(s, 2, 2130, r0);
  case 2:
    s.tmp_0 = game_SplashDialog_updateFont__P5210_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1021; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 2131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2131]) return breakpoint(s, 4, 2131, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_4 = r0;
    s.tmp_6 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "charWidth");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["charWidth"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["charWidth"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1022; s.pc = 5; return s.tmp_6; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_7 = r0;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 << 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_2 + s.tmp_8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxSubOffset"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_setSubtext__P2940.info = {"start":9748,"length":200,"line":300,"column":8,"endLine":304,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setSubtext","argumentNames":["this","sub"]}

function game_SplashDialog_setSubtext__P2940_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_setSubtext__P2940, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_SplashDialog_updateFont__P5210(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2931_VT)) failedCast(r0);
    s.lastBrkId = 2123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2123]) return breakpoint(s, 5, 2123, r0);
  case 5:
    r0 = s.arg0.fields["text"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.mkEmpty();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["subtext"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_2;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_String_.mkEmpty();
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = game_BaseDialog_setFont__P5207_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_5 = image_getFontForText__P1977_mk(s);
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_7);
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 1017; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1018; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_updateFont__P5210.info = {"start":9357,"length":122,"line":288,"column":8,"endLine":290,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"updateFont","argumentNames":["this"]}

function game_SplashDialog_updateFont__P5210_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_updateFont__P5210, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function game_BaseDialog_setFont__P5207(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2071]) return breakpoint(s, 1, 2071, r0);
  case 1:
    r0 = (s.arg0).fields["font"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_setFont__P5207.info = {"start":5994,"length":77,"line":190,"column":8,"endLine":192,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setFont","argumentNames":["this","font"]}

function game_BaseDialog_setFont__P5207_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_setFont__P5207, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function game_SplashDialog_setText__P2939(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2931_VT)) failedCast(r0);
    s.lastBrkId = 2124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2124]) return breakpoint(s, 1, 2124, r0);
  case 1:
    r0 = (s.arg0).fields["text"] = (s.arg1);
    s.lastBrkId = 2125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2125]) return breakpoint(s, 2, 2125, r0);
  case 2:
    s.tmp_0 = game_SplashDialog_updateFont__P5210_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1019; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 2126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2126]) return breakpoint(s, 4, 2126, r0);
  case 4:
    r0 = (s.arg0).fields["offset"] = (0);
    s.lastBrkId = 2127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2127]) return breakpoint(s, 5, 2127, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_4 = r0;
    s.tmp_6 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "charWidth");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["charWidth"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["charWidth"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1020; s.pc = 6; return s.tmp_6; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_7 = r0;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 << 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_2 + s.tmp_8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxOffset"] = (s.tmp_1);
    s.lastBrkId = 2128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2128]) return breakpoint(s, 7, 2128, r0);
  case 7:
    r0 = (s.arg0).fields["timer"] = (2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_setText__P2939.info = {"start":9489,"length":249,"line":292,"column":8,"endLine":298,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setText","argumentNames":["this","text"]}

function game_SplashDialog_setText__P2939_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_setText__P2939, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_SplashDialog_constructor__P2938(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2931_VT)) failedCast(r0);
    s.lastBrkId = 2119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2119]) return breakpoint(s, 1, 2119, r0);
  case 1:
    s.tmp_0 = game_BaseDialog_constructor__P2914_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_1 = game_defaultSplashFrame__P5222_mk(s);
    s.callLocIdx = 1015; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.callLocIdx = 1016; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2120]) return breakpoint(s, 4, 2120, r0);
  case 4:
    r0 = (s.arg0).fields["maxOffset"] = (-1);
    s.lastBrkId = 2121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2121]) return breakpoint(s, 5, 2121, r0);
  case 5:
    r0 = (s.arg0).fields["maxSubOffset"] = (-1);
    s.lastBrkId = 2122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2122]) return breakpoint(s, 6, 2122, r0);
  case 6:
    r0 = (s.arg0).fields["textColor"] = (1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_constructor__P2938.info = {"start":9137,"length":210,"line":281,"column":8,"endLine":286,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":["this","width","height"]}

function game_SplashDialog_constructor__P2938_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_constructor__P2938, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function game_defaultSplashFrame__P5222(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2222]) return breakpoint(s, 3, 2222, r0);
  case 3:
    r0 = pxsim_ImageMethods.isMono(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex11678);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex11680);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultSplashFrame__P5222.info = {"start":27877,"length":220,"line":768,"column":4,"endLine":781,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultSplashFrame","argumentNames":[]}

function game_defaultSplashFrame__P5222_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultSplashFrame__P5222, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex11678 = pxsim.BufferMethods.createBufferFromHex("8704030003000000010100000101000001010000")
const _hex11680 = pxsim.BufferMethods.createBufferFromHex("8704030003000000f1010000f1010000f1010000")




function game_BaseDialog_constructor__P2914(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 1990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1990]) return breakpoint(s, 1, 1990, r0);
  case 1:
    r0 = (s.arg0).fields["cursorCount"] = (0);
    s.lastBrkId = 1991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1991]) return breakpoint(s, 2, 1991, r0);
  case 2:
    s.tmp_0 = game_BaseDialog_resize__P2915_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg3;
    s.tmp_0.arg4 = s.arg4;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 960; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_constructor__P2914.info = {"start":1103,"length":199,"line":53,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":["this","width","height","frame","font","cursor"]}

function game_BaseDialog_constructor__P2914_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_constructor__P2914, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function game_BaseDialog_resize__P2915(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 1992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1992]) return breakpoint(s, 13, 1992, r0);
  case 13:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.dialogFrame___5194;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_1;
    { step = 4; continue; }
  case 3:
    s.tmp_3 = game_defaultFrame__P5221_mk(s);
    s.callLocIdx = 961; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    globals.dialogFrame___5194 = (r0);
    r0 = s.tmp_2;
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["frame"] = (s.tmp_4);
    s.lastBrkId = 1993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1993]) return breakpoint(s, 15, 1993, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["frame"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["unit"] = (s.tmp_1);
    s.lastBrkId = 1994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1994]) return breakpoint(s, 16, 1994, r0);
  case 16:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["unit"];
    s.tmp_3 = r0;
    r0 = (s.arg1 / s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["columns"] = (s.tmp_1);
    s.lastBrkId = 1995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1995]) return breakpoint(s, 17, 1995, r0);
  case 17:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["unit"];
    s.tmp_3 = r0;
    r0 = (s.arg2 / s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rows"] = (s.tmp_1);
    s.lastBrkId = 1996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1996]) return breakpoint(s, 18, 1996, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = r0 = s.arg1;
    r0 = s.arg0.fields["columns"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 * s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["innerLeft"] = (s.tmp_1);
    s.lastBrkId = 1997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1997]) return breakpoint(s, 19, 1997, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = r0 = s.arg2;
    r0 = s.arg0.fields["rows"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 * s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["innerTop"] = (s.tmp_1);
    s.lastBrkId = 1998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1998]) return breakpoint(s, 20, 1998, r0);
  case 20:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.image.create(s.arg1, s.arg2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["image"] = (s.tmp_1);
    s.lastBrkId = 1999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1999]) return breakpoint(s, 21, 1999, r0);
  case 21:
    s.tmp_0 = r0 = s.arg4;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = globals.font8___1975;
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["font"] = (s.tmp_1);
    s.lastBrkId = 2000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2000]) return breakpoint(s, 22, 2000, r0);
  case 22:
    s.tmp_0 = r0 = s.arg5;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = globals.dialogCursor___5195;
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_1;
    { step = 10; continue; }
  case 9:
    s.tmp_3 = game_defaultCursorImage__P5223_mk(s);
    s.callLocIdx = 962; s.pc = 23; return s.tmp_3;
  case 23:
    r0 = s.retval;
    s.tmp_2 = r0;
    globals.dialogCursor___5195 = (r0);
    r0 = s.tmp_2;
  case 10:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["cursor"] = (s.tmp_4);
    s.lastBrkId = 2001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2001]) return breakpoint(s, 24, 2001, r0);
  case 24:
    r0 = (globals.dialogTextColor___5196 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    globals.dialogTextColor___5196 = (15);
    r0 = 15;
    { step = 12; continue; }
  case 11:
    r0 = globals.dialogTextColor___5196;
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["textColor"] = (s.tmp_1);
    s.lastBrkId = 2002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2002]) return breakpoint(s, 25, 2002, r0);
  case 25:
    s.tmp_0 = game_BaseDialog_drawBorder__P5199_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 963; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2003]) return breakpoint(s, 27, 2003, r0);
  case 27:
    s.tmp_0 = game_BaseDialog_clearInterior__P5201_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 964; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_resize__P2915.info = {"start":1312,"length":849,"line":58,"column":8,"endLine":72,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"resize","argumentNames":["this","width","height","frame","font","cursor"]}

function game_BaseDialog_resize__P2915_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_resize__P2915, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function game_defaultCursorImage__P5223(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2223]) return breakpoint(s, 3, 2223, r0);
  case 3:
    r0 = pxsim_ImageMethods.isMono(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex11876);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex11878);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultCursorImage__P5223.info = {"start":28103,"length":690,"line":783,"column":4,"endLine":809,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultCursorImage","argumentNames":[]}

function game_defaultCursorImage__P5223_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultCursorImage__P5223, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex11876 = pxsim.BufferMethods.createBufferFromHex("87040a000800000011111101010000010111010111100001011101010100000101000001100010000001010000100000")
const _hex11878 = pxsim.BufferMethods.createBufferFromHex("87040b000b00000000606686080000006076776686000000607777676608000076171111670800007671177766080000767117776608000076711777660800007617111167080000607777676608000060767766860000000060668608000000")




function game_defaultFrame__P5221(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2221]) return breakpoint(s, 3, 2221, r0);
  case 3:
    r0 = pxsim_ImageMethods.isMono(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex11882);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex11884);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultFrame__P5221.info = {"start":27315,"length":556,"line":744,"column":4,"endLine":766,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultFrame","argumentNames":[]}

function game_defaultFrame__P5221_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultFrame__P5221, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex11882 = pxsim.BufferMethods.createBufferFromHex("8704030003000000110100000101000011010000")
const _hex11884 = pxsim.BufferMethods.createBufferFromHex("87040c000c0000000000000000000000b0bbbbbbbb0b0000b0bbbbbbbbcb0000b0db1111bdcb0000b01b1111b1cb0000b01b1111b1cb0000b01b1111b1cb0000b01b1111b1cb0000b0db1111bdcb0000b0bbbbbbbbcb0000b0bbbbbbbbcb000000cccccccccc0000")




function game_BaseDialog_clearInterior__P5201(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.d___11468 = undefined;
    s.s___11475 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2043]) return breakpoint(s, 8, 2043, r0);
  case 8:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2044]) return breakpoint(s, 9, 2044, r0);
  case 9:
    s.tmp_2 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = 4;
    s.tmp_2.arg2 = 1;
    s.tmp_2.arg3 = 1;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 2);
    s.tmp_2.arg4 = r0;
    r0 = s.arg0.fields["rows"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 2);
    s.tmp_2.arg5 = r0;
    s.callLocIdx = 987; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2045]) return breakpoint(s, 11, 2045, r0);
  case 11:
    s.d___11468 = (1);
    s.lastBrkId = 2046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2046]) return breakpoint(s, 12, 2046, r0);
  case 12:
  case 3:
    s.lastBrkId = 2047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2047]) return breakpoint(s, 13, 2047, r0);
  case 13:
    s.tmp_1 = r0 = s.d___11468;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2048]) return breakpoint(s, 14, 2048, r0);
  case 14:
    s.s___11475 = (1);
    s.lastBrkId = 2049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2049]) return breakpoint(s, 15, 2049, r0);
  case 15:
  case 4:
    s.lastBrkId = 2050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2050]) return breakpoint(s, 16, 2050, r0);
  case 16:
    s.tmp_1 = r0 = s.s___11475;
    r0 = s.arg0.fields["rows"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2051]) return breakpoint(s, 17, 2051, r0);
  case 17:
    s.tmp_4 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 4;
    s.tmp_4.arg2 = s.d___11468;
    s.tmp_4.arg3 = s.s___11475;
    s.callLocIdx = 988; s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2052]) return breakpoint(s, 19, 2052, r0);
  case 19:
    r0 = (s.s___11475 + 1);
    s.s___11475 = (r0);
    { step = 4; continue; }
  case 5:
    s.lastBrkId = 2053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2053]) return breakpoint(s, 20, 2053, r0);
  case 20:
    r0 = (s.d___11468 + 1);
    s.d___11468 = (r0);
    { step = 3; continue; }
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_clearInterior__P5201.info = {"start":4543,"length":342,"line":146,"column":8,"endLine":155,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"clearInterior","argumentNames":["this"]}

function game_BaseDialog_clearInterior__P5201_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_clearInterior__P5201, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  d___11468: undefined,
  s___11475: undefined,
  arg0: undefined,
} }





function game_BaseDialog_drawPartial__P5202(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x0___11493 = undefined;
    s.y0___11501 = undefined;
    s.xf___11509 = undefined;
    s.yf___11516 = undefined;
    s.e___11523 = undefined;
    s.t___11529 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2054]) return breakpoint(s, 5, 2054, r0);
  case 5:
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_2 = r0;
    r0 = (s.arg2 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.x0___11493 = (r0);
    s.lastBrkId = 2055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2055]) return breakpoint(s, 6, 2055, r0);
  case 6:
    r0 = s.arg0.fields["innerTop"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_2 = r0;
    r0 = (s.arg3 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.y0___11501 = (r0);
    s.lastBrkId = 2056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2056]) return breakpoint(s, 7, 2056, r0);
  case 7:
    r0 = (s.arg1 % 3);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.xf___11509 = (r0);
    s.lastBrkId = 2057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2057]) return breakpoint(s, 8, 2057, r0);
  case 8:
    r0 = pxsim.Math_.idiv(s.arg1, 3);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.yf___11516 = (r0);
    s.lastBrkId = 2058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2058]) return breakpoint(s, 9, 2058, r0);
  case 9:
    s.e___11523 = (0);
    s.lastBrkId = 2059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2059]) return breakpoint(s, 10, 2059, r0);
  case 10:
  case 1:
    s.lastBrkId = 2060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2060]) return breakpoint(s, 11, 2060, r0);
  case 11:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.e___11523 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2061]) return breakpoint(s, 12, 2061, r0);
  case 12:
    s.t___11529 = (0);
    s.lastBrkId = 2062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2062]) return breakpoint(s, 13, 2062, r0);
  case 13:
  case 2:
    s.lastBrkId = 2063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2063]) return breakpoint(s, 14, 2063, r0);
  case 14:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.t___11529 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2064]) return breakpoint(s, 15, 2064, r0);
  case 15:
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = (s.x0___11493 + s.e___11523);
    s.tmp_3 = r0;
    r0 = (s.y0___11501 + s.t___11529);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["frame"];
    s.tmp_6 = r0;
    r0 = (s.xf___11509 + s.e___11523);
    s.tmp_7 = r0;
    r0 = (s.yf___11516 + s.t___11529);
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_6, s.tmp_7, s.tmp_8);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_2, s.tmp_3, s.tmp_4, s.tmp_5);
    s.lastBrkId = 2065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2065]) return breakpoint(s, 16, 2065, r0);
  case 16:
    r0 = (s.t___11529 + 1);
    s.t___11529 = (r0);
    { step = 2; continue; }
  case 3:
    s.lastBrkId = 2066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2066]) return breakpoint(s, 17, 2066, r0);
  case 17:
    r0 = (s.e___11523 + 1);
    s.e___11523 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawPartial__P5202.info = {"start":4895,"length":604,"line":157,"column":8,"endLine":172,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawPartial","argumentNames":["this","index","colTo","rowTo"]}

function game_BaseDialog_drawPartial__P5202_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawPartial__P5202, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  x0___11493: undefined,
  y0___11501: undefined,
  xf___11509: undefined,
  yf___11516: undefined,
  e___11523: undefined,
  t___11529: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function game_BaseDialog_fastFill__P5200(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.color___11565 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2041]) return breakpoint(s, 1, 2041, r0);
  case 1:
    r0 = s.arg0.fields["frame"];
    s.tmp_0 = r0;
    r0 = (s.arg1 % 3);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg1, 3);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_0, s.tmp_1, s.tmp_2);
    s.color___11565 = (r0);
    s.lastBrkId = 2042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2042]) return breakpoint(s, 2, 2042, r0);
  case 2:
    s.tmp_0 = helpers_imageFillRect__P1956_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg2);
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg3);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg4;
    s.tmp_0.arg4 = s.arg5;
    s.tmp_0.arg5 = s.color___11565;
    s.callLocIdx = 986; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_fastFill__P5200.info = {"start":4284,"length":249,"line":141,"column":8,"endLine":144,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"fastFill","argumentNames":["this","index","x","y","w","h"]}

function game_BaseDialog_fastFill__P5200_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_fastFill__P5200, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  color___11565: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function game_BaseDialog_drawBorder__P5199(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.y___11807 = undefined;
    s.c___11823 = undefined;
    s.r___11857 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2012]) return breakpoint(s, 12, 2012, r0);
  case 12:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2013]) return breakpoint(s, 13, 2013, r0);
  case 13:
    s.tmp_2 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = 0;
    s.tmp_2.arg2 = 0;
    s.tmp_2.arg3 = 0;
    s.tmp_2.arg4 = 1;
    s.tmp_2.arg5 = 1;
    s.callLocIdx = 970; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 2014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2014]) return breakpoint(s, 15, 2014, r0);
  case 15:
    s.tmp_0 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = 0;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 971; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 2015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2015]) return breakpoint(s, 17, 2015, r0);
  case 17:
    s.tmp_0 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 972; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2016]) return breakpoint(s, 19, 2016, r0);
  case 19:
    s.tmp_0 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 3;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = 1;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 973; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 2017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2017]) return breakpoint(s, 21, 2017, r0);
  case 21:
    s.tmp_0 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 5;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = 1;
    r0 = s.arg0.fields["rows"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 2);
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 974; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 2018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2018]) return breakpoint(s, 23, 2018, r0);
  case 23:
    r0 = s.arg0.fields["rows"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.y___11807 = (r0);
    s.lastBrkId = 2019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2019]) return breakpoint(s, 24, 2019, r0);
  case 24:
    s.tmp_0 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = s.y___11807;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 975; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 2020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2020]) return breakpoint(s, 26, 2020, r0);
  case 26:
    s.tmp_0 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 7;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = s.y___11807;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 976; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 2021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2021]) return breakpoint(s, 28, 2021, r0);
  case 28:
    s.tmp_0 = game_BaseDialog_fastFill__P5200_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 8;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.y___11807;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 977; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.lastBrkId = 2022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2022]) return breakpoint(s, 30, 2022, r0);
  case 30:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2023]) return breakpoint(s, 31, 2023, r0);
  case 31:
    s.c___11823 = (0);
    s.lastBrkId = 2024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2024]) return breakpoint(s, 32, 2024, r0);
  case 32:
  case 3:
    s.lastBrkId = 2025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2025]) return breakpoint(s, 33, 2025, r0);
  case 33:
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.c___11823 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2026]) return breakpoint(s, 34, 2026, r0);
  case 34:
    r0 = (s.c___11823 == 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2027]) return breakpoint(s, 35, 2027, r0);
  case 35:
    s.tmp_3 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = 0;
    s.tmp_3.arg2 = 0;
    s.tmp_3.arg3 = 0;
    s.callLocIdx = 978; s.pc = 36; return s.tmp_3;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 2028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2028]) return breakpoint(s, 37, 2028, r0);
  case 37:
    s.tmp_0 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 0;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 979; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    { step = 7; continue; }
  case 4:
    s.lastBrkId = 2029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2029]) return breakpoint(s, 39, 2029, r0);
  case 39:
    s.tmp_1 = r0 = s.c___11823;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2030]) return breakpoint(s, 40, 2030, r0);
  case 40:
    s.tmp_4 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 2;
    s.tmp_4.arg2 = s.c___11823;
    s.tmp_4.arg3 = 0;
    s.callLocIdx = 980; s.pc = 41; return s.tmp_4;
  case 41:
    r0 = s.retval;
    s.lastBrkId = 2031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2031]) return breakpoint(s, 42, 2031, r0);
  case 42:
    s.tmp_0 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 8;
    s.tmp_0.arg2 = s.c___11823;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 981; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2032]) return breakpoint(s, 44, 2032, r0);
  case 44:
    s.tmp_0 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = s.c___11823;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 982; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    s.lastBrkId = 2033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2033]) return breakpoint(s, 46, 2033, r0);
  case 46:
    s.tmp_0 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 7;
    s.tmp_0.arg2 = s.c___11823;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 983; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
  case 6:
  case 7:
    s.lastBrkId = 2034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2034]) return breakpoint(s, 48, 2034, r0);
  case 48:
    r0 = (s.c___11823 + 1);
    s.c___11823 = (r0);
    { step = 3; continue; }
  case 8:
    s.lastBrkId = 2035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2035]) return breakpoint(s, 49, 2035, r0);
  case 49:
    s.r___11857 = (1);
    s.lastBrkId = 2036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2036]) return breakpoint(s, 50, 2036, r0);
  case 50:
  case 9:
    s.lastBrkId = 2037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2037]) return breakpoint(s, 51, 2037, r0);
  case 51:
    s.tmp_1 = r0 = s.r___11857;
    r0 = s.arg0.fields["rows"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2038]) return breakpoint(s, 52, 2038, r0);
  case 52:
    s.tmp_4 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 3;
    s.tmp_4.arg2 = 0;
    s.tmp_4.arg3 = s.r___11857;
    s.callLocIdx = 984; s.pc = 53; return s.tmp_4;
  case 53:
    r0 = s.retval;
    s.lastBrkId = 2039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2039]) return breakpoint(s, 54, 2039, r0);
  case 54:
    s.tmp_0 = game_BaseDialog_drawPartial__P5202_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 5;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.r___11857;
    s.callLocIdx = 985; s.pc = 55; return s.tmp_0;
  case 55:
    r0 = s.retval;
    s.lastBrkId = 2040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2040]) return breakpoint(s, 56, 2040, r0);
  case 56:
    r0 = (s.r___11857 + 1);
    s.r___11857 = (r0);
    { step = 9; continue; }
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawBorder__P5199.info = {"start":2953,"length":1321,"line":103,"column":8,"endLine":139,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawBorder","argumentNames":["this"]}

function game_BaseDialog_drawBorder__P5199_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawBorder__P5199, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  y___11807: undefined,
  c___11823: undefined,
  r___11857: undefined,
  arg0: undefined,
} }





function game_BaseDialog_update__P2916(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2004]) return breakpoint(s, 1, 2004, r0);
  case 1:
    s.tmp_0 = game_BaseDialog_clearInterior__P5201_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 965; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2005]) return breakpoint(s, 3, 2005, r0);
  case 3:
    s.tmp_0 = game_BaseDialog__C2902_v2_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, game_BaseDialog__C2902_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawTextCore;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2006]) return breakpoint(s, 5, 2006, r0);
  case 5:
    s.tmp_0 = game_BaseDialog_drawCursorRow__P2919_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 966; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_update__P2916.info = {"start":2171,"length":121,"line":74,"column":8,"endLine":78,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"update","argumentNames":["this"]}

function game_BaseDialog_update__P2916_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_update__P2916, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_BaseDialog_drawCursorRow__P2919(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.offset___11373 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2007]) return breakpoint(s, 3, 2007, r0);
  case 3:
    s.offset___11373 = (0);
    s.lastBrkId = 2008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2008]) return breakpoint(s, 4, 2008, r0);
  case 4:
    r0 = s.arg0.fields["cursorCount"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 20);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2009]) return breakpoint(s, 5, 2009, r0);
  case 5:
    s.offset___11373 = (1);
  case 1:
  case 2:
    s.lastBrkId = 2010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2010]) return breakpoint(s, 6, 2010, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cursorCount"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 40);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorCount"] = (s.tmp_1);
    s.lastBrkId = 2011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2011]) return breakpoint(s, 7, 2011, r0);
  case 7:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cursor"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_6 = r0;
    s.tmp_8 = game_BaseDialog_textAreaWidth__P5205_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 967; s.pc = 8; return s.tmp_8;
  case 8:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_9 = r0;
    r0 = (s.tmp_5 + s.tmp_9);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.offset___11373);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["cursor"];
    s.tmp_11 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_11);
    s.tmp_10 = r0;
    r0 = (s.tmp_3 - s.tmp_10);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_16 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_17 = r0;
    r0 = (s.tmp_16 + s.tmp_17);
    s.tmp_15 = r0;
    s.tmp_19 = game_BaseDialog_textAreaHeight__P5206_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.callLocIdx = 968; s.pc = 9; return s.tmp_19;
  case 9:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = (s.tmp_15 + s.tmp_18);
    s.tmp_14 = r0;
    r0 = (s.tmp_14 + 1);
    s.tmp_13 = r0;
    s.tmp_21 = game_BaseDialog_cursorRowHeight__P5203_mk(s);
    s.tmp_21.arg0 = s.arg0;
    s.callLocIdx = 969; s.pc = 10; return s.tmp_21;
  case 10:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = (s.tmp_13 - s.tmp_20);
    s.tmp_12 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_12);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawCursorRow__P2919.info = {"start":2464,"length":479,"line":88,"column":8,"endLine":101,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawCursorRow","argumentNames":["this"]}

function game_BaseDialog_drawCursorRow__P2919_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawCursorRow__P2919, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  offset___11373: undefined,
  arg0: undefined,
} }





function game_BaseDialog_textAreaHeight__P5206(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2070]) return breakpoint(s, 1, 2070, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_2);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_5 = r0;
    s.tmp_7 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["unit"];
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = 12;
    s.callLocIdx = 991; s.pc = 2; return s.tmp_7;
  case 2:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_textAreaHeight__P5206.info = {"start":5841,"length":143,"line":186,"column":8,"endLine":188,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"textAreaHeight","argumentNames":["this"]}

function game_BaseDialog_textAreaHeight__P5206_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_textAreaHeight__P5206, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function game_BaseDialog_textAreaWidth__P5205(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2069]) return breakpoint(s, 1, 2069, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_2);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_5 = r0;
    s.tmp_7 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["unit"];
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = 12;
    s.callLocIdx = 990; s.pc = 2; return s.tmp_7;
  case 2:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 2);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_textAreaWidth__P5205.info = {"start":5689,"length":142,"line":182,"column":8,"endLine":184,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"textAreaWidth","argumentNames":["this"]}

function game_BaseDialog_textAreaWidth__P5205_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_textAreaWidth__P5205, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function game_BaseDialog_cursorRowHeight__P5203(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2067]) return breakpoint(s, 1, 2067, r0);
  case 1:
    r0 = s.arg0.fields["cursor"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_cursorRowHeight__P5203.info = {"start":5509,"length":82,"line":174,"column":8,"endLine":176,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"cursorRowHeight","argumentNames":["this"]}

function game_BaseDialog_cursorRowHeight__P5203_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_cursorRowHeight__P5203, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_BaseDialog_drawTextCore__P2918(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawTextCore__P2918.info = {"start":2389,"length":65,"line":84,"column":8,"endLine":86,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawTextCore","argumentNames":["this"]}

function game_BaseDialog_drawTextCore__P2918_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawTextCore__P2918, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller__setUserEventsEnabled__P2206(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[952]) return breakpoint(s, 1, 952, r0);
  case 1:
    globals._userEventsEnabled___5033 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__setUserEventsEnabled__P2206.info = {"start":10070,"length":101,"line":291,"column":4,"endLine":293,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"_setUserEventsEnabled","argumentNames":["enabled"]}

function controller__setUserEventsEnabled__P2206_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__setUserEventsEnabled__P2206, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Button_isPressed__P2200(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[900]) return breakpoint(s, 1, 900, r0);
  case 1:
    r0 = s.arg0.fields["_pressed"];
    return leave(s, r0)
  default: oops()
} } }
controller_Button_isPressed__P2200.info = {"start":6303,"length":57,"line":185,"column":8,"endLine":187,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_Button_isPressed__P2200_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_isPressed__P2200, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function console_inspect__P382(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.asArr___13705 = undefined;
    s.asString___13723 = undefined;
    s.keys___13735 = undefined;
    s.snipped___13739 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[354]) return breakpoint(s, 18, 354, r0);
  case 18:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[355]) return breakpoint(s, 19, 355, r0);
  case 19:
    r0 = s.arg0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 1:
    s.lastBrkId = 356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[356]) return breakpoint(s, 20, 356, r0);
  case 20:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == "number");
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[357]) return breakpoint(s, 21, 357, r0);
  case 21:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    { step = 17; continue; }
    { step = 15; continue; }
  case 2:
    s.lastBrkId = 358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[358]) return breakpoint(s, 23, 358, r0);
  case 23:
    r0 = pxsim_Array_.isArray(s.arg0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[359]) return breakpoint(s, 24, 359, r0);
  case 24:
    s.asArr___13705 = (s.arg0);
    s.lastBrkId = 360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[360]) return breakpoint(s, 25, 360, r0);
  case 25:
    r0 = pxsim_Array__length(s.asArr___13705);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[361]) return breakpoint(s, 26, 361, r0);
  case 26:
    s.tmp_2 = helpers_arrayJoin__P103_mk(s);
    s.tmp_2.arg0 = s.asArr___13705;
    s.tmp_2.arg1 = ",";
    s.callLocIdx = 37; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    { step = 17; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[362]) return breakpoint(s, 28, 362, r0);
  case 28:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    s.tmp_7 = helpers_arrayJoin__P103_mk(s);
    s.tmp_8 = helpers_arraySlice__P115_mk(s);
    s.tmp_8.arg0 = s.asArr___13705;
    s.tmp_8.arg1 = 0;
    s.tmp_8.arg2 = s.arg1;
    s.callLocIdx = 38; s.pc = 30; return s.tmp_8;
  case 30:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = ",";
    s.callLocIdx = 39; s.pc = 29; return s.tmp_7;
  case 29:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 31);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 31:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "...");
    { step = 17; continue; }
  case 4:
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[363]) return breakpoint(s, 32, 363, r0);
  case 32:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.asString___13723 = (r0);
    s.lastBrkId = 364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[364]) return breakpoint(s, 34, 364, r0);
  case 34:
    r0 = (s.asString___13723 != "[object Object]");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.asString___13723 != "[Object]");
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[365]) return breakpoint(s, 35, 365, r0);
  case 35:
    r0 = s.asString___13723;
    { step = 17; continue; }
  case 8:
  case 9:
    s.lastBrkId = 366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[366]) return breakpoint(s, 36, 366, r0);
  case 36:
    r0 = pxsim_pxtrt.keysOf(s.arg0);
    s.keys___13735 = (r0);
    s.lastBrkId = 367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[367]) return breakpoint(s, 37, 367, r0);
  case 37:
    r0 = pxsim_Array__length(s.keys___13735);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > s.arg1);
    s.snipped___13739 = (r0);
    s.lastBrkId = 368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[368]) return breakpoint(s, 38, 368, r0);
  case 38:
    r0 = pxsim_numops_toBoolDecr(s.snipped___13739);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[369]) return breakpoint(s, 39, 369, r0);
  case 39:
    s.tmp_0 = helpers_arraySlice__P115_mk(s);
    s.tmp_0.arg0 = s.keys___13735;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 40; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    s.keys___13735 = (r0);
  case 10:
  case 11:
    s.lastBrkId = 370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[370]) return breakpoint(s, 41, 370, r0);
  case 41:
    r0 = pxsim_pxtcore_mkAction(1, console_inspect_inline__P13756);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___13739);
    if (!r0) { step = 12; continue; }
    r0 = "\n    ...";
    { step = 13; continue; }
  case 12:
    r0 = pxsim_String_.mkEmpty();
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_7 = helpers_arrayReduce__P112_mk(s);
    s.tmp_7.arg0 = s.keys___13735;
    s.tmp_7.arg1 = s.tmp_0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7.arg2 = r0;
    s.callLocIdx = 41; s.pc = 42; return s.tmp_7;
  case 42:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 43);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 43:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 44);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 44:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 45);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 45:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("{", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\n}");
    { step = 17; continue; }
  case 14:
  case 15:
  case 16:
    r0 = undefined;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
console_inspect__P382.info = {"start":2271,"length":1190,"line":81,"column":4,"endLine":114,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"inspect","argumentNames":["obj","maxElements"]}

function console_inspect__P382_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect__P382, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  asArr___13705: undefined,
  asString___13723: undefined,
  keys___13735: undefined,
  snipped___13739: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_inspect_inline__P13756(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("\n    ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ": ");
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg1);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_6);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
console_inspect_inline__P13756.info = {"start":3293,"length":61,"line":108,"column":20,"endLine":108,"endColumn":81,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["prev","currKey"]}

function console_inspect_inline__P13756_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect_inline__P13756, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayJoin__P103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___13790 = undefined;
    s.len___13791 = undefined;
    s.i___13794 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 10;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[10]) return breakpoint(s, 15, 10, r0);
  case 15:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 === null);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 11;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[11]) return breakpoint(s, 16, 11, r0);
  case 16:
    s.arg1 = (",");
  case 3:
  case 4:
    s.lastBrkId = 12;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[12]) return breakpoint(s, 17, 12, r0);
  case 17:
    r0 = pxsim_String_.mkEmpty();
    s.r___13790 = (r0);
    s.lastBrkId = 13;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[13]) return breakpoint(s, 18, 13, r0);
  case 18:
    r0 = pxsim_Array__length(s.arg0);
    s.len___13791 = (r0);
    s.lastBrkId = 14;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[14]) return breakpoint(s, 19, 14, r0);
  case 19:
    s.i___13794 = (0);
    s.lastBrkId = 15;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[15]) return breakpoint(s, 20, 15, r0);
  case 20:
  case 5:
    s.lastBrkId = 16;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[16]) return breakpoint(s, 21, 16, r0);
  case 21:
    r0 = (s.i___13794 < s.len___13791);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 17;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[17]) return breakpoint(s, 22, 17, r0);
  case 22:
    r0 = (s.i___13794 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = s.arg1;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 18;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[18]) return breakpoint(s, 23, 18, r0);
  case 23:
    if ((s.r___13790) && (s.r___13790).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.r___13790);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___13790) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 25);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 25:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.r___13790 = (r0);
  case 8:
  case 9:
    s.lastBrkId = 19;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[19]) return breakpoint(s, 26, 19, r0);
  case 26:
    r0 = pxsim_Array__getAt(s.arg0, s.i___13794);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___13794);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === null);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_String_.mkEmpty();
    { step = 13; continue; }
  case 12:
    r0 = pxsim_Array__getAt(s.arg0, s.i___13794);
  case 13:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    if ((s.r___13790) && (s.r___13790).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.r___13790);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___13790) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    s.r___13790 = (r0);
    s.lastBrkId = 20;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[20]) return breakpoint(s, 29, 20, r0);
  case 29:
    r0 = (s.i___13794 + 1);
    s.i___13794 = (r0);
    { step = 5; continue; }
  case 14:
    s.lastBrkId = 21;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[21]) return breakpoint(s, 30, 21, r0);
  case 30:
    r0 = s.r___13790;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayJoin__P103.info = {"start":4133,"length":432,"line":157,"column":4,"endLine":170,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayJoin","argumentNames":["arr","sep"]}

function helpers_arrayJoin__P103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayJoin__P103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  r___13790: undefined,
  len___13791: undefined,
  i___13794: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function pauseUntil__P367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[336]) return breakpoint(s, 8, 336, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.arg0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 32; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[337]) return breakpoint(s, 10, 337, r0);
  case 10:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[338]) return breakpoint(s, 11, 338, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[339]) return breakpoint(s, 12, 339, r0);
  case 12:
    s.arg1 = (0);
  case 5:
  case 6:
    s.lastBrkId = 340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[340]) return breakpoint(s, 13, 340, r0);
  case 13:
    s.tmp_0 = control___queuePollEvent__P366_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 33; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pauseUntil__P367.info = {"start":2224,"length":227,"line":73,"column":0,"endLine":77,"endColumn":1,"fileName":"pxt_modules/base/poll.ts","functionName":"pauseUntil","argumentNames":["condition","timeOut"]}

function pauseUntil__P367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pauseUntil__P367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control___queuePollEvent__P366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ev___10793 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[328]) return breakpoint(s, 5, 328, r0);
  case 5:
    r0 = pxsim_pxtcore_mkClassInstance(control_PollEvent__C4708_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_PollEvent_constructor__P4709_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1023;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1.arg2 = r0;
    r0 = pxsim.control.millis();
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.arg0;
    s.tmp_1.arg5 = s.arg1;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1.arg6 = r0;
    s.callLocIdx = 30; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.ev___10793 = (s.tmp_0);
    s.lastBrkId = 329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[329]) return breakpoint(s, 7, 329, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(globals._pollEventQueue___4711);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[330]) return breakpoint(s, 8, 330, r0);
  case 8:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.ev___10793);
    globals._pollEventQueue___4711 = (s.tmp_2);
    s.lastBrkId = 331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[331]) return breakpoint(s, 9, 331, r0);
  case 9:
    r0 = pxsim.control.runInParallel(control_pollEvents__P4712);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[332]) return breakpoint(s, 10, 332, r0);
  case 10:
    r0 = pxsim_Array__push(globals._pollEventQueue___4711, s.ev___10793);
  case 2:
    s.lastBrkId = 333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[333]) return breakpoint(s, 11, 333, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[334]) return breakpoint(s, 12, 334, r0);
  case 12:
    s.tmp_0 = control_onEvent__P391_mk(s);
    r0 = s.ev___10793.fields["eid"];
    s.tmp_0.arg0 = r0;
    r0 = s.ev___10793.fields["vid"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 16;
    s.callLocIdx = 31; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[335]) return breakpoint(s, 14, 335, r0);
  case 14:
    r0 = s.ev___10793.fields["eid"];
    s.tmp_0 = r0;
    r0 = s.ev___10793.fields["vid"];
    s.tmp_1 = r0;
    setupResume(s, 15);
    pxsim.control.waitForEvent(s.tmp_0, s.tmp_1);
    checkResumeConsumed();
    return;
  case 15:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___queuePollEvent__P366.info = {"start":1262,"length":758,"line":39,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"__queuePollEvent","argumentNames":["timeOut","condition","handler"]}

function control___queuePollEvent__P366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___queuePollEvent__P366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ev___10793: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_pollEvents__P4712(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.now___10920 = undefined;
    s.i___10923 = undefined;
    s.ev___10929 = undefined;
    s.lastBrkId = 313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[313]) return breakpoint(s, 13, 313, r0);
  case 13:
  case 1:
    s.lastBrkId = 314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[314]) return breakpoint(s, 14, 314, r0);
  case 14:
    r0 = pxsim_Array__length(globals._pollEventQueue___4711);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[315]) return breakpoint(s, 15, 315, r0);
  case 15:
    r0 = pxsim.control.millis();
    s.now___10920 = (r0);
    s.lastBrkId = 316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[316]) return breakpoint(s, 16, 316, r0);
  case 16:
    s.i___10923 = (0);
    s.lastBrkId = 317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[317]) return breakpoint(s, 17, 317, r0);
  case 17:
  case 2:
    s.lastBrkId = 318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[318]) return breakpoint(s, 18, 318, r0);
  case 18:
    s.tmp_1 = r0 = s.i___10923;
    r0 = pxsim_Array__length(globals._pollEventQueue___4711);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[319]) return breakpoint(s, 19, 319, r0);
  case 19:
    r0 = pxsim_Array__getAt(globals._pollEventQueue___4711, s.i___10923);
    s.ev___10929 = (r0);
    s.lastBrkId = 320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[320]) return breakpoint(s, 20, 320, r0);
  case 20:
    s.tmp_1 = if_condition_1_mk(s);
    s.tmp_1.arg0 = s.ev___10929;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "condition"), 1);
      s.callLocIdx = 27; s.pc = 21; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["condition"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["condition"], 1); s.callLocIdx = 27; s.pc = 21; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 27; s.pc = 21; return s.tmp_1;; }
     else { s.callLocIdx = 27; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 3:
    r0 = s.ev___10929.fields["timeOut"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 4:
    r0 = s.ev___10929.fields["start"];
    s.tmp_5 = r0;
    r0 = (s.now___10920 - s.tmp_5);
    s.tmp_4 = r0;
    r0 = s.ev___10929.fields["timeOut"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[321]) return breakpoint(s, 22, 321, r0);
  case 22:
    r0 = s.ev___10929.fields["eid"];
    s.tmp_9 = r0;
    r0 = s.ev___10929.fields["vid"];
    s.tmp_10 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_9, s.tmp_10);
    s.lastBrkId = 322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[322]) return breakpoint(s, 23, 322, r0);
  case 23:
    r0 = s.ev___10929.fields["once"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[323]) return breakpoint(s, 24, 323, r0);
  case 24:
    s.tmp_1 = helpers_arraySplice__P100_mk(s);
    s.tmp_1.arg0 = globals._pollEventQueue___4711;
    s.tmp_1.arg1 = s.i___10923;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 28; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[324]) return breakpoint(s, 26, 324, r0);
  case 26:
    r0 = (s.i___10923 - 1);
    s.i___10923 = (r0);
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[325]) return breakpoint(s, 27, 325, r0);
  case 27:
    r0 = (s.i___10923 + 1);
    s.i___10923 = (r0);
    { step = 2; continue; }
  case 11:
    s.lastBrkId = 326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[326]) return breakpoint(s, 28, 326, r0);
  case 28:
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 50;
    s.callLocIdx = 29; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    { step = 1; continue; }
  case 12:
    s.lastBrkId = 327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[327]) return breakpoint(s, 30, 327, r0);
  case 30:
    globals._pollEventQueue___4711 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_pollEvents__P4712.info = {"start":618,"length":638,"line":20,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"pollEvents","argumentNames":[]}

function control_pollEvents__P4712_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pollEvents__P4712, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  now___10920: undefined,
  i___10923: undefined,
  ev___10929: undefined,
} }





function control_PollEvent_constructor__P4709(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_PollEvent__C4708_VT)) failedCast(r0);
    s.lastBrkId = 306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[306]) return breakpoint(s, 1, 306, r0);
  case 1:
    r0 = (s.arg0).fields["eid"] = (s.arg1);
    s.lastBrkId = 307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[307]) return breakpoint(s, 2, 307, r0);
  case 2:
    r0 = (s.arg0).fields["vid"] = (s.arg2);
    s.lastBrkId = 308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[308]) return breakpoint(s, 3, 308, r0);
  case 3:
    r0 = (s.arg0).fields["start"] = (s.arg3);
    s.lastBrkId = 309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[309]) return breakpoint(s, 4, 309, r0);
  case 4:
    r0 = (s.arg0).fields["timeOut"] = (s.arg4);
    s.lastBrkId = 310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[310]) return breakpoint(s, 5, 310, r0);
  case 5:
    r0 = (s.arg0).fields["condition"] = (s.arg5);
    s.lastBrkId = 311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[311]) return breakpoint(s, 6, 311, r0);
  case 6:
    r0 = (s.arg0).fields["once"] = (s.arg6);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_PollEvent_constructor__P4709.info = {"start":239,"length":316,"line":8,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/base/poll.ts","functionName":"inline","argumentNames":["this","eid","vid","start","timeOut","condition","once"]}

function control_PollEvent_constructor__P4709_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_PollEvent_constructor__P4709, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function FirstRoll_findFirstPlayer__P173402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.toReturn___173403 = undefined;
    s.frs___173405 = undefined;
    s.unnamed20282___U2 = undefined;
    s.unnamed20283___U3 = undefined;
    s.p___173410 = undefined;
    s.unnamed20284___U5 = undefined;
    s.unnamed20285___U6 = undefined;
    s.highRoll___173415 = undefined;
    s.winPlayer___173416 = undefined;
    s.i___173418 = undefined;
    s.p___173424 = undefined;
    s.i___173464 = undefined;
    s.toReturn___173403 = (false);
    s.frs___173405 = (undefined);
    s.unnamed20282___U2 = (globals.firstRollStarted___173398);
    s.unnamed20283___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20283___U3;
    r0 = pxsim_Array__length(s.unnamed20282___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20282___U2, s.unnamed20283___U3);
    s.frs___173405 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.frs___173405);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = false;
    { step = 25; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed20283___U3 + 1);
    s.unnamed20283___U3 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed20282___U2 = (undefined);
    s.p___173410 = (undefined);
    s.unnamed20284___U5 = (globals.players___158156);
    s.unnamed20285___U6 = (0);
  case 5:
    s.tmp_0 = r0 = s.unnamed20285___U6;
    r0 = pxsim_Array__length(s.unnamed20284___U5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20284___U5, s.unnamed20285___U6);
    s.p___173410 = (r0);
    r0 = s.p___173410.fields["dice"];
    s.tmp_3 = r0;
    r0 = s.tmp_3.fields["areRolling"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = false;
    { step = 25; continue; }
  case 6:
  case 7:
    r0 = (s.unnamed20285___U6 + 1);
    s.unnamed20285___U6 = (r0);
    { step = 5; continue; }
  case 8:
    s.unnamed20284___U5 = (undefined);
    s.highRoll___173415 = (0);
    r0 = pxsim_Array__mk();
    s.winPlayer___173416 = (r0);
    s.i___173418 = (0);
  case 9:
    s.tmp_1 = r0 = s.i___173418;
    r0 = pxsim_Array__length(globals.players___158156);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = pxsim_Array__getAt(globals.players___158156, s.i___173418);
    s.p___173424 = (r0);
    r0 = s.p___173424.fields["dice"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, 0);
    r0 = r0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 != 128);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_6 = Dice_Roll__P32626_mk(s);
    r0 = s.p___173424.fields["dice"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 391; s.pc = 26; return s.tmp_6;
  case 26:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 == s.highRoll___173415);
  case 11:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_Array__push(s.winPlayer___173416, s.i___173418);
  case 12:
  case 13:
    r0 = s.p___173424.fields["dice"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, 0);
    r0 = r0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 != 128);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_0;
    { step = 15; continue; }
  case 14:
    s.tmp_6 = Dice_Roll__P32626_mk(s);
    r0 = s.p___173424.fields["dice"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 395; s.pc = 27; return s.tmp_6;
  case 27:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > s.highRoll___173415);
  case 15:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 16; continue; }
    r0 = pxsim_Array__mk();
    s.winPlayer___173416 = (r0);
    r0 = pxsim_Array__push(s.winPlayer___173416, s.i___173418);
    s.tmp_0 = Dice_Roll__P32626_mk(s);
    r0 = s.p___173424.fields["dice"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 397; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.highRoll___173415 = (r0);
  case 16:
  case 17:
    r0 = (s.i___173418 + 1);
    s.i___173418 = (r0);
    { step = 9; continue; }
  case 18:
    r0 = pxsim_Array__length(s.winPlayer___173416);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.i___173464 = (0);
  case 19:
    s.tmp_1 = r0 = s.i___173464;
    r0 = pxsim_Array__length(globals.players___158156);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    r0 = pxsim_Array_.indexOf(s.winPlayer___173416, s.i___173464, undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 > -1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 20; continue; }
    s.tmp_5 = Dice_startRoll__P32586_mk(s);
    r0 = pxsim_Array__getAt(globals.players___158156, s.i___173464);
    s.tmp_6 = r0;
    r0 = s.tmp_6.fields["dice"];
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 399; s.pc = 29; return s.tmp_5;
  case 29:
    r0 = s.retval;
    { step = 21; continue; }
  case 20:
    s.tmp_0 = Dice_hide__P32628_mk(s);
    r0 = pxsim_Array__getAt(globals.players___158156, s.i___173464);
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["dice"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 401; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
  case 21:
    r0 = (s.i___173464 + 1);
    s.i___173464 = (r0);
    { step = 19; continue; }
  case 22:
    { step = 24; continue; }
  case 23:
    r0 = pxsim_Array__getAt(s.winPlayer___173416, 0);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    globals.firstPlayer___173401 = (r0);
    s.toReturn___173403 = (true);
  case 24:
    r0 = s.toReturn___173403;
  case 25:
    return leave(s, r0)
  default: oops()
} } }
FirstRoll_findFirstPlayer__P173402.info = {"start":305,"length":1293,"line":16,"column":4,"endLine":54,"endColumn":5,"fileName":"firstroll.ts","functionName":"findFirstPlayer","argumentNames":[]}

function FirstRoll_findFirstPlayer__P173402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: FirstRoll_findFirstPlayer__P173402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  toReturn___173403: undefined,
  frs___173405: undefined,
  unnamed20282___U2: undefined,
  unnamed20283___U3: undefined,
  p___173410: undefined,
  unnamed20284___U5: undefined,
  unnamed20285___U6: undefined,
  highRoll___173415: undefined,
  winPlayer___173416: undefined,
  i___173418: undefined,
  p___173424: undefined,
  i___173464: undefined,
} }





function Dice_hide__P32628(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___32811 = undefined;
    s.unnamed20276___U1 = undefined;
    s.unnamed20277___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    s.s___32811 = (undefined);
    r0 = s.arg0.fields["sprites"];
    s.unnamed20276___U1 = (r0);
    s.unnamed20277___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20277___U2;
    r0 = pxsim_Array__length(s.unnamed20276___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20276___U1, s.unnamed20277___U2);
    s.s___32811 = (r0);
    s.tmp_2 = Sprite_setFlag__P2418_mk(s);
    s.tmp_2.arg0 = s.s___32811;
    s.tmp_2.arg1 = 128;
    s.tmp_2.arg2 = true;
    s.callLocIdx = 360; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    r0 = (s.unnamed20277___U2 + 1);
    s.unnamed20277___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed20276___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_hide__P32628.info = {"start":2804,"length":125,"line":112,"column":4,"endLine":116,"endColumn":5,"fileName":"dice.ts","functionName":"hide","argumentNames":["this"]}

function Dice_hide__P32628_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_hide__P32628, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  s___32811: undefined,
  unnamed20276___U1: undefined,
  unnamed20277___U2: undefined,
  arg0: undefined,
} }





function Dice_startRoll__P32586(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    s.tmp_0 = Dice_resetSprites__P32631_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 372; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Dice_show__P32597_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 373; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = (s.arg0).fields["areRolling"] = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_startRoll__P32586.info = {"start":4468,"length":111,"line":174,"column":4,"endLine":178,"endColumn":5,"fileName":"dice.ts","functionName":"startRoll","argumentNames":["this"]}

function Dice_startRoll__P32586_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_startRoll__P32586, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Dice_Visible__P32627(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = s.arg0.fields["sprites"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    r0 = r0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 128);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 != 128);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Dice_Visible__P32627.info = {"start":2637,"length":123,"line":105,"column":4,"endLine":107,"endColumn":5,"fileName":"dice.ts","functionName":"Visible","argumentNames":["this"]}
Dice_Visible__P32627.isGetter = true;

function Dice_Visible__P32627_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_Visible__P32627, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function FirstRoll_moveDice__P173495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___173497 = undefined;
    s.unnamed20286___U1 = undefined;
    s.unnamed20287___U2 = undefined;
    s.p___173497 = (undefined);
    s.unnamed20286___U1 = (globals.players___158156);
    s.unnamed20287___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20287___U2;
    r0 = pxsim_Array__length(s.unnamed20286___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20286___U1, s.unnamed20287___U2);
    s.p___173497 = (r0);
    r0 = s.p___173497.fields["dice"];
    s.tmp_3 = r0;
    r0 = s.tmp_3.fields["areRolling"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.tmp_4 = Dice_move__P32629_mk(s);
    r0 = s.p___173497.fields["dice"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 405; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
  case 2:
  case 3:
    r0 = (s.unnamed20287___U2 + 1);
    s.unnamed20287___U2 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed20286___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
FirstRoll_moveDice__P173495.info = {"start":1604,"length":177,"line":56,"column":4,"endLine":62,"endColumn":5,"fileName":"firstroll.ts","functionName":"moveDice","argumentNames":[]}

function FirstRoll_moveDice__P173495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: FirstRoll_moveDice__P173495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  p___173497: undefined,
  unnamed20286___U1: undefined,
  unnamed20287___U2: undefined,
} }





function RotatingScreens_rotate__P4456(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3479]) return breakpoint(s, 1, 3479, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["_currScreen"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_currScreen"] = (s.tmp_1);
    s.lastBrkId = 3480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3480]) return breakpoint(s, 2, 3480, r0);
  case 2:
    s.tmp_0 = RotatingScreens__C4428_v1_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, RotatingScreens__C4428_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.refresh;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_rotate__P4456.info = {"start":23923,"length":79,"line":805,"column":4,"endLine":808,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"rotate","argumentNames":["this"]}

function RotatingScreens_rotate__P4456_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_rotate__P4456, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function RotatingScreens_refresh__P4454(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3474]) return breakpoint(s, 7, 3474, r0);
  case 7:
    r0 = s.arg0.fields["_currScreen"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_currScreen"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["_currScreen"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["_headlines"];
    r0 = r0.fields["data"];
    s.tmp_7 = r0;
    r0 = pxsim_Array__length(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 >= s.tmp_6);
  case 4:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3475]) return breakpoint(s, 8, 3475, r0);
  case 8:
    r0 = (s.arg0).fields["_currScreen"] = (0);
  case 5:
  case 6:
    s.lastBrkId = 3476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3476]) return breakpoint(s, 9, 3476, r0);
  case 9:
    s.tmp_0 = String2dArrayTextSpriteFactory_DrawCenter__P4423_mk(s);
    s.tmp_1 = RotatingScreens_headlines__P4435_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1594; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_currScreen"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 80;
    s.tmp_0.arg3 = true;
    s.callLocIdx = 1595; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 3477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3477]) return breakpoint(s, 12, 3477, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = game_runtime__P3024_mk(s);
    s.callLocIdx = 1596; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_interval"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_next"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_refresh__P4454.info = {"start":23131,"length":349,"line":783,"column":4,"endLine":789,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"refresh","argumentNames":["this"]}

function RotatingScreens_refresh__P4454_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_refresh__P4454, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function RotatingScreens_headlines__P4435(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3442]) return breakpoint(s, 1, 3442, r0);
  case 1:
    r0 = s.arg0.fields["_headlines"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
RotatingScreens_headlines__P4435.info = {"start":16369,"length":94,"line":575,"column":4,"endLine":577,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"headlines","argumentNames":["this"]}
RotatingScreens_headlines__P4435.isGetter = true;

function RotatingScreens_headlines__P4435_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_headlines__P4435, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function String2dArrayTextSpriteFactory_DrawCenter__P4423(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___9583 = undefined;
    s.unnamed12700___U1 = undefined;
    s.unnamed12701___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, String2dArrayTextSpriteFactory__C4420_VT)) failedCast(r0);
    s.lastBrkId = 3377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3377]) return breakpoint(s, 3, 3377, r0);
  case 3:
    s.tmp_0 = String2dArrayTextSpriteFactory_CreateSprites__P7306_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.callLocIdx = 1564; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3378]) return breakpoint(s, 5, 3378, r0);
  case 5:
    s.s___9583 = (undefined);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg1);
    s.unnamed12700___U1 = (r0);
    s.unnamed12701___U2 = (0);
    s.lastBrkId = 3379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3379]) return breakpoint(s, 6, 3379, r0);
  case 6:
  case 1:
    s.tmp_0 = r0 = s.unnamed12701___U2;
    r0 = pxsim_Array__length(s.unnamed12700___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12700___U1, s.unnamed12701___U2);
    s.s___9583 = (r0);
    s.lastBrkId = 3380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3380]) return breakpoint(s, 7, 3380, r0);
  case 7:
    s.lastBrkId = 3381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3381]) return breakpoint(s, 8, 3381, r0);
  case 8:
    s.tmp_2 = Sprite_x__P2354_mk(s);
    s.tmp_2.arg0 = s.s___9583;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 1565; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    r0 = (s.unnamed12701___U2 + 1);
    s.unnamed12701___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12700___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
String2dArrayTextSpriteFactory_DrawCenter__P4423.info = {"start":8718,"length":207,"line":355,"column":4,"endLine":360,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"DrawCenter","argumentNames":["this","index","x","reset"]}

function String2dArrayTextSpriteFactory_DrawCenter__P4423_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: String2dArrayTextSpriteFactory_DrawCenter__P4423, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  s___9583: undefined,
  unnamed12700___U1: undefined,
  unnamed12701___U2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function String2dArrayTextSpriteFactory_CreateSprites__P7306(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.group___9612 = undefined;
    s.unnamed12704___U1 = undefined;
    s.unnamed12705___U2 = undefined;
    s.s___9616 = undefined;
    s.unnamed12706___U4 = undefined;
    s.unnamed12707___U5 = undefined;
    s.currY___9625 = undefined;
    s.text___9634 = undefined;
    s.unnamed12708___U8 = undefined;
    s.unnamed12709___U9 = undefined;
    s.ts___9639 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, String2dArrayTextSpriteFactory__C4420_VT)) failedCast(r0);
    s.lastBrkId = 3401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3401]) return breakpoint(s, 20, 3401, r0);
  case 20:
    r0 = s.arg0.fields["data"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["data"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3402]) return breakpoint(s, 21, 3402, r0);
  case 21:
    { step = 19; continue; }
  case 3:
  case 4:
    s.lastBrkId = 3403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3403]) return breakpoint(s, 22, 3403, r0);
  case 22:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3404]) return breakpoint(s, 23, 3404, r0);
  case 23:
    s.tmp_7 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_7;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 > 0);
  case 6:
    // jmp value (already in r0)
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3405]) return breakpoint(s, 24, 3405, r0);
  case 24:
    s.group___9612 = (undefined);
    r0 = s.arg0.fields["_sprites"];
    s.unnamed12704___U1 = (r0);
    s.unnamed12705___U2 = (0);
    s.lastBrkId = 3406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3406]) return breakpoint(s, 25, 3406, r0);
  case 25:
  case 7:
    s.tmp_0 = r0 = s.unnamed12705___U2;
    r0 = pxsim_Array__length(s.unnamed12704___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12704___U1, s.unnamed12705___U2);
    s.group___9612 = (r0);
    s.lastBrkId = 3407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3407]) return breakpoint(s, 26, 3407, r0);
  case 26:
    s.lastBrkId = 3408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3408]) return breakpoint(s, 27, 3408, r0);
  case 27:
    s.s___9616 = (undefined);
    s.unnamed12706___U4 = (s.group___9612);
    s.unnamed12707___U5 = (0);
    s.lastBrkId = 3409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3409]) return breakpoint(s, 28, 3409, r0);
  case 28:
  case 8:
    s.tmp_0 = r0 = s.unnamed12707___U5;
    r0 = pxsim_Array__length(s.unnamed12706___U4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12706___U4, s.unnamed12707___U5);
    s.s___9616 = (r0);
    s.lastBrkId = 3410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3410]) return breakpoint(s, 29, 3410, r0);
  case 29:
    s.lastBrkId = 3411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3411]) return breakpoint(s, 30, 3411, r0);
  case 30:
    s.tmp_2 = Sprite_destroy__P2427_mk(s);
    s.tmp_2.arg0 = s.s___9616;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1572; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    r0 = (s.unnamed12707___U5 + 1);
    s.unnamed12707___U5 = (r0);
    { step = 8; continue; }
  case 9:
    s.unnamed12706___U4 = (undefined);
    r0 = (s.unnamed12705___U2 + 1);
    s.unnamed12705___U2 = (r0);
    { step = 7; continue; }
  case 10:
    s.unnamed12704___U1 = (undefined);
  case 11:
  case 12:
    { step = 14; continue; }
  case 13:
    s.lastBrkId = 3412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3412]) return breakpoint(s, 32, 3412, r0);
  case 32:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
  case 14:
    s.lastBrkId = 3413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3413]) return breakpoint(s, 33, 3413, r0);
  case 33:
    r0 = s.arg0.fields["y"];
    s.currY___9625 = (r0);
    s.lastBrkId = 3414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3414]) return breakpoint(s, 34, 3414, r0);
  case 34:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.tmp_2);
    s.lastBrkId = 3415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3415]) return breakpoint(s, 35, 3415, r0);
  case 35:
    s.text___9634 = (undefined);
    r0 = s.arg0.fields["data"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg1);
    s.unnamed12708___U8 = (r0);
    s.unnamed12709___U9 = (0);
    s.lastBrkId = 3416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3416]) return breakpoint(s, 36, 3416, r0);
  case 36:
  case 15:
    s.tmp_0 = r0 = s.unnamed12709___U9;
    r0 = pxsim_Array__length(s.unnamed12708___U8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 18; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12708___U8, s.unnamed12709___U9);
    s.text___9634 = (r0);
    s.lastBrkId = 3417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3417]) return breakpoint(s, 37, 3417, r0);
  case 37:
    s.lastBrkId = 3418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3418]) return breakpoint(s, 38, 3418, r0);
  case 38:
    s.tmp_2 = textsprite_create__P4343_mk(s);
    s.tmp_2.arg0 = s.text___9634;
    s.tmp_2.arg1 = 0;
    r0 = s.arg0.fields["color"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1573; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
    s.ts___9639 = (r0);
    s.lastBrkId = 3419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3419]) return breakpoint(s, 40, 3419, r0);
  case 40:
    r0 = s.arg0.fields["padding"];
    s.tmp_0 = r0;
    r0 = (s.ts___9639).fields["padding"] = (s.tmp_0);
    s.lastBrkId = 3420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3420]) return breakpoint(s, 41, 3420, r0);
  case 41:
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 3421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3421]) return breakpoint(s, 42, 3421, r0);
  case 42:
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_2 = r0;
    r0 = (s.ts___9639).fields["borderWidth"] = (s.tmp_2);
    s.lastBrkId = 3422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3422]) return breakpoint(s, 43, 3422, r0);
  case 43:
    r0 = (s.ts___9639).fields["borderColor"] = (0);
  case 16:
  case 17:
    s.lastBrkId = 3423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3423]) return breakpoint(s, 44, 3423, r0);
  case 44:
    s.tmp_0 = TextSprite_setMaxFontHeight__P4335_mk(s);
    s.tmp_0.arg0 = s.ts___9639;
    r0 = s.arg0.fields["fontSize"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1574; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    s.lastBrkId = 3424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3424]) return breakpoint(s, 46, 3424, r0);
  case 46:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    s.tmp_0.arg0 = s.ts___9639;
    s.tmp_0.arg1 = s.currY___9625;
    s.callLocIdx = 1575; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    s.lastBrkId = 3425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3425]) return breakpoint(s, 48, 3425, r0);
  case 48:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.ts___9639);
    s.lastBrkId = 3426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3426]) return breakpoint(s, 49, 3426, r0);
  case 49:
    s.tmp_0 = r0 = s.currY___9625;
    r0 = s.arg0.fields["fontSize"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["padding"];
    s.tmp_5 = r0;
    r0 = (2 * s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_6 = r0;
    r0 = (s.tmp_2 + s.tmp_6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.currY___9625 = (r0);
    r0 = (s.unnamed12709___U9 + 1);
    s.unnamed12709___U9 = (r0);
    { step = 15; continue; }
  case 18:
    s.unnamed12708___U8 = (undefined);
  case 19:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
String2dArrayTextSpriteFactory_CreateSprites__P7306.info = {"start":10284,"length":1032,"line":402,"column":4,"endLine":433,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"CreateSprites","argumentNames":["this","index","reset"]}

function String2dArrayTextSpriteFactory_CreateSprites__P7306_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: String2dArrayTextSpriteFactory_CreateSprites__P7306, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  group___9612: undefined,
  unnamed12704___U1: undefined,
  unnamed12705___U2: undefined,
  s___9616: undefined,
  unnamed12706___U4: undefined,
  unnamed12707___U5: undefined,
  currY___9625: undefined,
  text___9634: undefined,
  unnamed12708___U8: undefined,
  unnamed12709___U9: undefined,
  ts___9639: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function TextSprite_setMaxFontHeight__P4335(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSprite__C4332_VT)) failedCast(r0);
    s.lastBrkId = 3238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3238]) return breakpoint(s, 1, 3238, r0);
  case 1:
    r0 = (s.arg0).fields["maxFontHeight"] = (s.arg1);
    s.lastBrkId = 3239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3239]) return breakpoint(s, 2, 3239, r0);
  case 2:
    s.tmp_0 = TextSprite_update__P4334_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1525; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSprite_setMaxFontHeight__P4335.info = {"start":2047,"length":106,"line":50,"column":4,"endLine":53,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"setMaxFontHeight","argumentNames":["this","height"]}

function TextSprite_setMaxFontHeight__P4335_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSprite_setMaxFontHeight__P4335, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_destroy__P2427(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1186]) return breakpoint(s, 6, 1186, r0);
  case 6:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1187]) return breakpoint(s, 7, 1187, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1188]) return breakpoint(s, 8, 1188, r0);
  case 8:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    s.lastBrkId = 1189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1189]) return breakpoint(s, 9, 1189, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1190]) return breakpoint(s, 10, 1190, r0);
  case 10:
    s.tmp_0 = effects_ParticleEffect_destroy__P3264_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.callLocIdx = 444; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1191]) return breakpoint(s, 12, 1191, r0);
  case 12:
    s.tmp_0 = Sprite__destroyCore__P2428_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 445; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_destroy__P2427.info = {"start":26333,"length":293,"line":857,"column":4,"endLine":866,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"destroy","argumentNames":["this","effect","duration"]}

function Sprite_destroy__P2427_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_destroy__P2427, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ParticleEffect_destroy__P3264(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C3261_VT)) failedCast(r0);
    s.lastBrkId = 2843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2843]) return breakpoint(s, 3, 2843, r0);
  case 3:
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1396; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2844]) return breakpoint(s, 5, 2844, r0);
  case 5:
    s.tmp_0 = effects_ParticleEffect_start__P3263_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = null;
    r0 = s.arg1.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 512);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1397; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2845]) return breakpoint(s, 7, 2845, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    r0 = s.arg2;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["defaultLifespan"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 2);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg1).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2846]) return breakpoint(s, 8, 2846, r0);
  case 8:
    s.tmp_0 = effects_ImageEffect_applyTo__P3291_mk(s);
    s.tmp_0.arg0 = globals.dissolve___3294;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1398; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_destroy__P3264.info = {"start":1736,"length":368,"line":41,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"destroy","argumentNames":["this","anchor","duration","particlesPerSecond"]}

function effects_ParticleEffect_destroy__P3264_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_destroy__P3264, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function dissolve_inline__P14553(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14556 = undefined;
    s.x___14567 = undefined;
    s.y___14573 = undefined;
    s.w___14579 = undefined;
    s.h___14583 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.i___14556 = (r0);
  case 1:
    r0 = (s.i___14556 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P3062_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 58; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___14567 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P3062_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 59; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___14573 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P3062_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 60; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.w___14579 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P3062_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 61; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.h___14583 = (r0);
    s.tmp_0 = helpers_imageDrawRect__P1959_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.x___14567;
    s.tmp_0.arg2 = s.y___14573;
    s.tmp_0.arg3 = s.w___14579;
    s.tmp_0.arg4 = s.h___14583;
    s.tmp_0.arg5 = 0;
    s.callLocIdx = 62; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = (s.i___14556 - 1);
    s.i___14556 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dissolve_inline__P14553.info = {"start":2199,"length":360,"line":60,"column":49,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function dissolve_inline__P14553_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dissolve_inline__P14553, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  i___14556: undefined,
  x___14567: undefined,
  y___14573: undefined,
  w___14579: undefined,
  h___14583: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageDrawRect__P1959(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[567]) return breakpoint(s, 6, 567, r0);
  case 6:
    r0 = (s.arg3 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg4 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[568]) return breakpoint(s, 7, 568, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[569]) return breakpoint(s, 8, 569, r0);
  case 8:
    r0 = (s.arg3 - 1);
    s.arg3 = (r0);
    s.lastBrkId = 570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[570]) return breakpoint(s, 9, 570, r0);
  case 9:
    r0 = (s.arg4 - 1);
    s.arg4 = (r0);
    s.lastBrkId = 571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[571]) return breakpoint(s, 10, 571, r0);
  case 10:
    s.tmp_0 = helpers_imageDrawLine__P1958_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 86; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[572]) return breakpoint(s, 12, 572, r0);
  case 12:
    s.tmp_0 = helpers_imageDrawLine__P1958_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 87; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[573]) return breakpoint(s, 14, 573, r0);
  case 14:
    s.tmp_0 = helpers_imageDrawLine__P1958_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 88; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[574]) return breakpoint(s, 16, 574, r0);
  case 16:
    s.tmp_0 = helpers_imageDrawLine__P1958_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 89; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawRect__P1959.info = {"start":5945,"length":370,"line":185,"column":4,"endLine":193,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawRect__P1959_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawRect__P1959, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function helpers_imageDrawLine__P1958(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[566]) return breakpoint(s, 1, 566, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P4874_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 84; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P4874_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 85; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._drawLine(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawLine__P1958.info = {"start":5781,"length":159,"line":182,"column":4,"endLine":184,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawLine","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawLine__P1958_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawLine__P1958, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function Math_FastRandom_randomRange__P3062(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C3058_VT)) failedCast(r0);
    s.lastBrkId = 2378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2378]) return breakpoint(s, 3, 2378, r0);
  case 3:
    r0 = (s.arg2 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = Math_FastRandom_next__P3061_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1113; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.arg2 - s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 % s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = (s.arg1 + s.tmp_5);
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_randomRange__P3062.info = {"start":2079,"length":131,"line":62,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"randomRange","argumentNames":["this","min","max"]}

function Math_FastRandom_randomRange__P3062_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_randomRange__P3062, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_FastRandom_next__P3061(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C3058_VT)) failedCast(r0);
    s.lastBrkId = 2377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2377]) return breakpoint(s, 1, 2377, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 & 1);
    s.tmp_6 = r0;
    r0 = (0 - s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 46080);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 ^ s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lfsr"] = (s.tmp_1);
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_next__P3061.info = {"start":1713,"length":107,"line":53,"column":8,"endLine":55,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"next","argumentNames":["this"]}

function Math_FastRandom_next__P3061_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_next__P3061, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function effects_ImageEffect_constructor__P3290(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C3289_VT)) failedCast(r0);
    s.lastBrkId = 2853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2853]) return breakpoint(s, 1, 2853, r0);
  case 1:
    r0 = (s.arg0).fields["effect"] = (s.arg2);
    s.lastBrkId = 2854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2854]) return breakpoint(s, 2, 2854, r0);
  case 2:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C3058_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P3060_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1406; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["fastRandom"] = (s.tmp_0);
    s.lastBrkId = 2855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2855]) return breakpoint(s, 4, 2855, r0);
  case 4:
    r0 = (s.arg0).fields["preferredDelay"] = (s.arg1);
    s.lastBrkId = 2856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2856]) return breakpoint(s, 5, 2856, r0);
  case 5:
    r0 = (s.arg0).fields["times"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_constructor__P3290.info = {"start":410,"length":290,"line":10,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["this","defaultRate","effectFactory"]}

function effects_ImageEffect_constructor__P3290_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_constructor__P3290, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ImageEffect_applyTo__P3291(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.clonedImage___14733 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C3289_VT)) failedCast(r0);
    s.lastBrkId = 2857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2857]) return breakpoint(s, 6, 2857, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = Sprite_image__P2389_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.callLocIdx = 1407; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2858]) return breakpoint(s, 8, 2858, r0);
  case 8:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2859]) return breakpoint(s, 9, 2859, r0);
  case 9:
    s.tmp_7 = Sprite_image__P2389_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.callLocIdx = 1408; s.pc = 10; return s.tmp_7;
  case 10:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_6);
    s.clonedImage___14733 = (r0);
    s.lastBrkId = 2860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2860]) return breakpoint(s, 11, 2860, r0);
  case 11:
    s.tmp_0 = effects_ImageEffect_change__P3292_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.clonedImage___14733;
    s.callLocIdx = 1409; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2861]) return breakpoint(s, 13, 2861, r0);
  case 13:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.clonedImage___14733;
    s.callLocIdx = 1410; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_applyTo__P3291.info = {"start":823,"length":218,"line":21,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"applyTo","argumentNames":["this","sprite"]}

function effects_ImageEffect_applyTo__P3291_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_applyTo__P3291, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  clonedImage___14733: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ImageEffect_change__P3292(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C3289_VT)) failedCast(r0);
    s.lastBrkId = 2862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2862]) return breakpoint(s, 1, 2862, r0);
  case 1:
    s.tmp_0 = if_effect_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    r0 = s.arg0.fields["fastRandom"];
    s.tmp_0.arg2 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "effect"), 3);
      s.callLocIdx = 1411; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["effect"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["effect"], 3); s.callLocIdx = 1411; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1411; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 1411; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_change__P3292.info = {"start":1151,"length":81,"line":32,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"change","argumentNames":["this","input"]}

function effects_ImageEffect_change__P3292_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_change__P3292, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ParticleEffect_start__P3263(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.src___14758 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C3261_VT)) failedCast(r0);
    s.lastBrkId = 2837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2837]) return breakpoint(s, 10, 2837, r0);
  case 10:
    r0 = s.arg0.fields["sourceFactory"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2838]) return breakpoint(s, 11, 2838, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2839]) return breakpoint(s, 12, 2839, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 3; continue; }
    r0 = s.arg3;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["defaultRate"];
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = if_sourceFactory_3_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tmp_3;
    if (!s.tmp_4.arg0.vtable.iface) {
      setupLambda(s.tmp_4, pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "sourceFactory"), 3);
      s.callLocIdx = 1394; s.pc = 13; return s.tmp_4;
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["sourceFactory"];
      if (s.tmp_4.fn == null) { setupLambda(s.tmp_4, s.tmp_4.arg0.fields["sourceFactory"], 3); s.callLocIdx = 1394; s.pc = 13; return s.tmp_4; }
      else if (s.tmp_4.fn.isGetter) { s.tmp_4.stage2Call = true; s.callLocIdx = 1394; s.pc = 13; return s.tmp_4;; }
     else { s.callLocIdx = 1394; s.pc = 13; return s.tmp_4; }
    }
  case 13:
    r0 = s.retval;
    s.src___14758 = (r0);
    s.lastBrkId = 2840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2840]) return breakpoint(s, 14, 2840, r0);
  case 14:
    s.tmp_0 = particles_ParticleSource_setRelativeToCamera__P3161_mk(s);
    s.tmp_0.arg0 = s.src___14758;
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1395; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2841]) return breakpoint(s, 16, 2841, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2842]) return breakpoint(s, 17, 2842, r0);
  case 17:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg2;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["defaultLifespan"];
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.src___14758).fields["lifespan"] = (s.tmp_1);
  case 7:
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_start__P3263.info = {"start":967,"length":452,"line":26,"column":8,"endLine":32,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"start","argumentNames":["this","anchor","duration","particlesPerSecond","relativeToCamera"]}

function effects_ParticleEffect_start__P3263_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_start__P3263, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  src___14758: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function particles_ParticleSource_setRelativeToCamera__P3161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2693]) return breakpoint(s, 3, 2693, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2694]) return breakpoint(s, 4, 2694, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2695]) return breakpoint(s, 5, 2695, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 4);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRelativeToCamera__P3161.info = {"start":6439,"length":173,"line":211,"column":8,"endLine":214,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRelativeToCamera","argumentNames":["this","on"]}

function particles_ParticleSource_setRelativeToCamera__P3161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRelativeToCamera__P3161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite__destroyCore__P2428(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14459 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1192]) return breakpoint(s, 7, 1192, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    s.lastBrkId = 1193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1193]) return breakpoint(s, 8, 1193, r0);
  case 8:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 446; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.scene___14459 = (r0);
    s.lastBrkId = 1194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1194]) return breakpoint(s, 10, 1194, r0);
  case 10:
    r0 = s.scene___14459.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
    s.lastBrkId = 1195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1195]) return breakpoint(s, 11, 1195, r0);
  case 11:
    s.tmp_2 = Sprite_kind__P2406_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 447; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___14459.fields["spritesByKind"];
    s.tmp_3 = r0;
    s.tmp_5 = Sprite_kind__P2406_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 448; s.pc = 13; return s.tmp_5;
  case 13:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_3, s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1196]) return breakpoint(s, 14, 1196, r0);
  case 14:
    s.tmp_7 = sprites_SpriteSet_remove__P2469_mk(s);
    r0 = s.scene___14459.fields["spritesByKind"];
    s.tmp_8 = r0;
    s.tmp_10 = Sprite_kind__P2406_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 449; s.pc = 16; return s.tmp_10;
  case 16:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_8, s.tmp_9);
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = s.arg0;
    s.callLocIdx = 450; s.pc = 15; return s.tmp_7;
  case 15:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1197]) return breakpoint(s, 17, 1197, r0);
  case 17:
    s.tmp_0 = PhysicsEngine__C2510_v1_2_mk(s);
    r0 = s.scene___14459.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2510_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.removeSprite;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1198]) return breakpoint(s, 19, 1198, r0);
  case 19:
    r0 = s.arg0.fields["destroyHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1199]) return breakpoint(s, 20, 1199, r0);
  case 20:
    s.tmp_1 = if_destroyHandler_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "destroyHandler"), 1);
      s.callLocIdx = 451; s.pc = 21; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["destroyHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["destroyHandler"], 1); s.callLocIdx = 451; s.pc = 21; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 451; s.pc = 21; return s.tmp_1;; }
     else { s.callLocIdx = 451; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1200]) return breakpoint(s, 22, 1200, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P14488);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, Sprite__destroyCore_inline__P14495);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    r0 = s.scene___14459.fields["destroyedHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 453; s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 455; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore__P2428.info = {"start":26632,"length":522,"line":868,"column":4,"endLine":880,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"_destroyCore","argumentNames":["this"]}

function Sprite__destroyCore__P2428_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore__P2428, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  scene___14459: undefined,
  arg0: undefined,
} }





function forEach_inline__P14488(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2406_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 452; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P14488.info = {"start":27077,"length":26,"line":878,"column":20,"endLine":878,"endColumn":46,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P14488_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P14488, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite__destroyCore_inline__P14495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 454; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 454; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 454; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 454; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore_inline__P14495.info = {"start":27126,"length":20,"line":879,"column":21,"endLine":879,"endColumn":41,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite__destroyCore_inline__P14495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore_inline__P14495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_removeSprite__P2513(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2510_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_removeSprite__P2513.info = {"start":159,"length":32,"line":10,"column":4,"endLine":10,"endColumn":36,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_removeSprite__P2513_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_removeSprite__P2513, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_kind__P2406(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1114]) return breakpoint(s, 1, 1114, r0);
  case 1:
    r0 = s.arg0.fields["_kind"];
    return leave(s, r0)
  default: oops()
} } }
Sprite_kind__P2406.info = {"start":12573,"length":41,"line":453,"column":4,"endLine":455,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"kind","argumentNames":["this"]}

function Sprite_kind__P2406_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_kind__P2406, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function RotatingScreens_nextTime__P4441(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3443]) return breakpoint(s, 1, 3443, r0);
  case 1:
    r0 = s.arg0.fields["_next"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
RotatingScreens_nextTime__P4441.info = {"start":18120,"length":63,"line":630,"column":4,"endLine":632,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"nextTime","argumentNames":["this"]}
RotatingScreens_nextTime__P4441.isGetter = true;

function RotatingScreens_nextTime__P4441_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_nextTime__P4441, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_runtime__P3024(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2367]) return breakpoint(s, 1, 2367, r0);
  case 1:
    s.tmp_0 = scene_Scene_millis__P2868_mk(s);
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1111; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1112; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
game_runtime__P3024.info = {"start":1426,"length":81,"line":44,"column":4,"endLine":46,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"runtime","argumentNames":[]}

function game_runtime__P3024_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_runtime__P3024, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_Scene_millis__P2868(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2842_VT)) failedCast(r0);
    s.lastBrkId = 1965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1965]) return breakpoint(s, 1, 1965, r0);
  case 1:
    r0 = s.arg0.fields["_millis"];
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_millis__P2868.info = {"start":7147,"length":61,"line":196,"column":8,"endLine":198,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"millis","argumentNames":["this"]}

function scene_Scene_millis__P2868_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_millis__P2868, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_onUpdate__P3022(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2356]) return breakpoint(s, 4, 2356, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2357]) return breakpoint(s, 5, 2357, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2358]) return breakpoint(s, 6, 2358, r0);
  case 6:
    s.tmp_2 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_3 = game_eventContext__P3001_mk(s);
    s.callLocIdx = 1104; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 20;
    s.tmp_2.arg2 = s.arg0;
    s.callLocIdx = 1105; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdate__P3022.info = {"start":327,"length":153,"line":13,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"onUpdate","argumentNames":["a"]}

function game_onUpdate__P3022_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdate__P3022, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function control_ramSize__P346(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[304]) return breakpoint(s, 3, 304, r0);
  case 3:
    r0 = pxsim_pxtcore.getConfig(205, 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = control__ramSize__P4700_mk(s);
    s.callLocIdx = 26; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
control_ramSize__P346.info = {"start":4847,"length":100,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"ramSize","argumentNames":[]}

function control_ramSize__P346_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_ramSize__P346, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control__ramSize__P4700(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[303]) return breakpoint(s, 1, 303, r0);
  case 1:
    r0 = 33554432;
    return leave(s, r0)
  default: oops()
} } }
control__ramSize__P4700.info = {"start":4727,"length":60,"line":160,"column":4,"endLine":162,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"_ramSize","argumentNames":[]}

function control__ramSize__P4700_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control__ramSize__P4700, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function helpers_getAnimationByName__P3336(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2899]) return breakpoint(s, 1, 2899, r0);
  case 1:
    s.tmp_0 = helpers__getFactoryInstance__P3332_mk(s);
    s.tmp_0.arg0 = "animation";
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1424; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_getAnimationByName__P3336.info = {"start":2990,"length":111,"line":91,"column":4,"endLine":93,"endColumn":5,"fileName":"pxt_modules/game/assetTemplates.ts","functionName":"getAnimationByName","argumentNames":["name"]}

function helpers_getAnimationByName__P3336_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_getAnimationByName__P3336, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function assets_animation__P3328(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2885]) return breakpoint(s, 1, 2885, r0);
  case 1:
    r0 = null;
    return leave(s, r0)
  default: oops()
} } }
assets_animation__P3328.info = {"start":1303,"length":77,"line":36,"column":4,"endLine":36,"endColumn":81,"fileName":"pxt_modules/game/assetTemplates.ts","functionName":"animation","argumentNames":["lits","args"]}

function assets_animation__P3328_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: assets_animation__P3328, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_stringTrim__P123(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.start___17859 = undefined;
    s.end___17860 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[189]) return breakpoint(s, 9, 189, r0);
  case 9:
    s.start___17859 = (0);
    s.lastBrkId = 190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[190]) return breakpoint(s, 10, 190, r0);
  case 10:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.end___17860 = (r0);
    s.lastBrkId = 191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[191]) return breakpoint(s, 11, 191, r0);
  case 11:
  case 1:
    s.lastBrkId = 192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[192]) return breakpoint(s, 12, 192, r0);
  case 12:
    r0 = (s.start___17859 <= s.end___17860);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    s.tmp_1 = helpers_isWhitespace__P124_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.start___17859);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 14; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[193]) return breakpoint(s, 14, 193, r0);
  case 14:
    r0 = (s.start___17859 + 1);
    s.start___17859 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[194]) return breakpoint(s, 15, 194, r0);
  case 15:
  case 5:
    s.lastBrkId = 195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[195]) return breakpoint(s, 16, 195, r0);
  case 16:
    r0 = (s.end___17860 > s.start___17859);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    s.tmp_1 = helpers_isWhitespace__P124_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.end___17860);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 15; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[196]) return breakpoint(s, 18, 196, r0);
  case 18:
    r0 = (s.end___17860 - 1);
    s.end___17860 = (r0);
    { step = 5; continue; }
  case 8:
    s.lastBrkId = 197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[197]) return breakpoint(s, 19, 197, r0);
  case 19:
    s.tmp_0 = helpers_stringSlice__P119_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.start___17859;
    r0 = (s.end___17860 + 1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 16; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_stringTrim__P123.info = {"start":14539,"length":319,"line":491,"column":4,"endLine":501,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringTrim","argumentNames":["s"]}

function helpers_stringTrim__P123_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringTrim__P123, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  start___17859: undefined,
  end___17860: undefined,
  arg0: undefined,
} }





function helpers_isWhitespace__P124(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[198]) return breakpoint(s, 13, 198, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(32, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(160, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(65279, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(8232, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(8233, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[199]) return breakpoint(s, 14, 199, r0);
  case 14:
    r0 = true;
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[200]) return breakpoint(s, 15, 200, r0);
  case 15:
    r0 = false;
    { step = 12; continue; }
    r0 = undefined;
  case 12:
    return leave(s, r0)
  default: oops()
} } }
helpers_isWhitespace__P124.info = {"start":14864,"length":674,"line":503,"column":4,"endLine":520,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"isWhitespace","argumentNames":["c"]}

function helpers_isWhitespace__P124_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_isWhitespace__P124, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers__registerFactory__P3331(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2886]) return breakpoint(s, 3, 2886, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.factories___5656);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2887]) return breakpoint(s, 4, 2887, r0);
  case 4:
    r0 = pxsim_Array__mk();
    globals.factories___5656 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2888]) return breakpoint(s, 5, 2888, r0);
  case 5:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "kind", s.arg0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "factory", s.arg1);
    r0 = pxsim_Array__push(globals.factories___5656, s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers__registerFactory__P3331.info = {"start":2019,"length":201,"line":58,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/game/assetTemplates.ts","functionName":"_registerFactory","argumentNames":["kind","factory"]}

function helpers__registerFactory__P3331_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers__registerFactory__P3331, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function pressRight__P137640(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = globals.gameMode___158120;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 1:
    r0 = (s.arg0 == 1);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = GameSettings_start__P158122_mk(s);
    s.callLocIdx = 113; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 13; continue; }
  case 4:
    r0 = (s.arg0 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = OptionScreen_moveCursorRight__P4483_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 114; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 13; continue; }
  case 7:
    s.tmp_2 = if_currPlayer_1_mk(s);
    s.tmp_2.arg0 = globals.selection___149739;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currPlayer");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currPlayer"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currPlayer"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 115; s.pc = 16; return s.tmp_2; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_3 = Avatar_showNext__P149746_mk(s);
    s.tmp_3.arg0 = 1;
    s.callLocIdx = 116; s.pc = 17; return s.tmp_3;
  case 17:
    r0 = s.retval;
  case 8:
  case 9:
    { step = 13; continue; }
  case 10:
    { step = 13; continue; }
  case 11:
    s.tmp_0 = AvatarTest_showTestAvatarRight__P149748_mk(s);
    s.callLocIdx = 117; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 13; continue; }
  case 12:
    s.tmp_0 = Dice_Orientation__P32593_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 118; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.tmp_0 = Dice_setStartLocation__P32594_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 5;
    s.callLocIdx = 119; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.tmp_0 = Dice_setStopLocation__P32595_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 154;
    s.tmp_0.arg2 = 5;
    s.callLocIdx = 120; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.tmp_0 = Dice_setLocationChange__P32596_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 121; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.tmp_0 = Dice_show__P32597_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.callLocIdx = 122; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pressRight__P137640.info = {"start":3823,"length":1043,"line":141,"column":0,"endLine":176,"endColumn":1,"fileName":"controller.ts","functionName":"pressRight","argumentNames":["player"]}

function pressRight__P137640_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pressRight__P137640, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function AvatarTest_showTestAvatarRight__P149748(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.a___150229 = undefined;
    s.i___150232 = undefined;
    s.unnamed20272___U2 = undefined;
    s.unnamed20273___U3 = undefined;
    s.right_i___150236 = undefined;
    s.tmp_0 = animation_stopAnimation__P3367_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = globals.test___150167;
    s.callLocIdx = 327; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.animate___150171);
    if (!r0) { step = 5; continue; }
    s.tmp_3 = if_rightAnim_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "rightAnim");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["rightAnim"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["rightAnim"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 328; s.pc = 10; return s.tmp_3; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__mk();
    s.a___150229 = (r0);
    s.i___150232 = (undefined);
    s.tmp_0 = if_leftAnim_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "leftAnim");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["leftAnim"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["leftAnim"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 329; s.pc = 11; return s.tmp_0; }
    }
  case 11:
    r0 = s.retval;
    s.unnamed20272___U2 = (r0);
    s.unnamed20273___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20273___U3;
    r0 = pxsim_Array__length(s.unnamed20272___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20272___U2, s.unnamed20273___U3);
    s.i___150232 = (r0);
    r0 = pxsim_ImageMethods.clone(s.i___150232);
    s.right_i___150236 = (r0);
    r0 = pxsim_ImageMethods.flipX(s.right_i___150236);
    r0 = pxsim_Array__push(s.a___150229, s.right_i___150236);
    r0 = (s.unnamed20273___U3 + 1);
    s.unnamed20273___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed20272___U2 = (undefined);
    s.tmp_0 = animation_runImageAnimation__P3361_mk(s);
    s.tmp_0.arg0 = globals.test___150167;
    s.tmp_0.arg1 = s.a___150229;
    s.tmp_0.arg2 = 500;
    s.tmp_0.arg3 = true;
    s.callLocIdx = 330; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.tmp_0 = animation_runImageAnimation__P3361_mk(s);
    s.tmp_0.arg0 = globals.test___150167;
    s.tmp_1 = if_rightAnim_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "rightAnim");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["rightAnim"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["rightAnim"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 331; s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 500;
    s.tmp_0.arg3 = true;
    s.callLocIdx = 332; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 4:
    { step = 8; continue; }
  case 5:
    s.tmp_2 = if_rightImage_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "rightImage");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["rightImage"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["rightImage"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 333; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = Sprite_setImage__P2390_mk(s);
    s.tmp_3.arg0 = globals.test___150167;
    s.tmp_5 = if_leftImage_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "leftImage");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["leftImage"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["leftImage"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 334; s.pc = 17; return s.tmp_5; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_4);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 335; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    s.tmp_1 = Sprite_image__P2389_mk(s);
    s.tmp_1.arg0 = globals.test___150167;
    s.callLocIdx = 336; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.flipX(s.tmp_0);
    { step = 7; continue; }
  case 6:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = globals.test___150167;
    s.tmp_1 = if_rightImage_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "rightImage");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["rightImage"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["rightImage"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 337; s.pc = 20; return s.tmp_1; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 338; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
AvatarTest_showTestAvatarRight__P149748.info = {"start":11351,"length":924,"line":323,"column":4,"endLine":345,"endColumn":5,"fileName":"avatars.ts","functionName":"showTestAvatarRight","argumentNames":[]}

function AvatarTest_showTestAvatarRight__P149748_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: AvatarTest_showTestAvatarRight__P149748, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  a___150229: undefined,
  i___150232: undefined,
  unnamed20272___U2: undefined,
  unnamed20273___U3: undefined,
  right_i___150236: undefined,
} }





function animation_runImageAnimation__P3361(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.anim___14329 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3116]) return breakpoint(s, 3, 3116, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(animation_ImageAnimation__C3355_VT);
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = 500;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = animation_ImageAnimation_constructor__P3356_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.arg0;
    s.tmp_3.arg2 = s.arg1;
    s.tmp_3.arg3 = s.tmp_2;
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3.arg4 = r0;
    s.callLocIdx = 1492; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.anim___14329 = (s.tmp_0);
    s.lastBrkId = 3117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3117]) return breakpoint(s, 5, 3117, r0);
  case 5:
    s.tmp_0 = animation_SpriteAnimation_init__P3353_mk(s);
    s.tmp_0.arg0 = s.anim___14329;
    s.callLocIdx = 1493; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_runImageAnimation__P3361.info = {"start":21512,"length":222,"line":588,"column":4,"endLine":591,"endColumn":5,"fileName":"pxt_modules/game/animation.ts","functionName":"runImageAnimation","argumentNames":["sprite","frames","frameInterval","loop"]}

function animation_runImageAnimation__P3361_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_runImageAnimation__P3361, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  anim___14329: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function animation_ImageAnimation_constructor__P3356(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_ImageAnimation__C3355_VT)) failedCast(r0);
    r0 = (s.arg0).fields["frames"] = (s.arg2);
    r0 = (s.arg0).fields["frameInterval"] = (s.arg3);
    s.lastBrkId = 3090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3090]) return breakpoint(s, 1, 3090, r0);
  case 1:
    s.tmp_0 = animation_SpriteAnimation_constructor__P3352_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg4;
    s.callLocIdx = 1480; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3091]) return breakpoint(s, 3, 3091, r0);
  case 3:
    r0 = (s.arg0).fields["lastFrame"] = (-1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_ImageAnimation_constructor__P3356.info = {"start":19278,"length":177,"line":527,"column":8,"endLine":530,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"inline","argumentNames":["this","sprite","frames","frameInterval","loop"]}

function animation_ImageAnimation_constructor__P3356_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_ImageAnimation_constructor__P3356, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function animation_SpriteAnimation_constructor__P3352(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_SpriteAnimation__C3351_VT)) failedCast(r0);
    r0 = (s.arg0).fields["sprite"] = (s.arg1);
    r0 = (s.arg0).fields["loop"] = (s.arg2);
    s.lastBrkId = 3077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3077]) return breakpoint(s, 1, 3077, r0);
  case 1:
    r0 = (s.arg0).fields["elapsedTime"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_constructor__P3352.info = {"start":17626,"length":105,"line":486,"column":8,"endLine":488,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"inline","argumentNames":["this","sprite","loop"]}

function animation_SpriteAnimation_constructor__P3352_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_constructor__P3352, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function animation_SpriteAnimation_init__P3353(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___14342 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_SpriteAnimation__C3351_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.state___14342 = (r0);
    s.lastBrkId = 3078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3078]) return breakpoint(s, 3, 3078, r0);
  case 3:
    s.tmp_0 = r0 = s.state___14342;
    s.tmp_3 = scene_Scene_data__P2867_mk(s);
    s.tmp_4 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1467; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1468; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_2, globals.stateNamespace___5657);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 3079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3079]) return breakpoint(s, 6, 3079, r0);
  case 6:
    r0 = pxsim_pxtrt_ldlocRef(s.state___14342);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3080]) return breakpoint(s, 7, 3080, r0);
  case 7:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_3 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_3, "animations", s.tmp_4);
    s.tmp_6 = scene_Scene_data__P2867_mk(s);
    s.tmp_7 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1469; s.pc = 9; return s.tmp_7;
  case 9:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1470; s.pc = 8; return s.tmp_6;
  case 8:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_5, globals.stateNamespace___5657, s.tmp_3);
    r0 = pxsim_pxtrt_stlocRef(s.state___14342, s.tmp_3);
    s.lastBrkId = 3081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3081]) return breakpoint(s, 10, 3081, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(1, animation_SpriteAnimation_init_inline__P14357);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.state___14342);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_2 = game_eventContext__P3001_mk(s);
    s.callLocIdx = 1471; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 15;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1475; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 3086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3086]) return breakpoint(s, 13, 3086, r0);
  case 13:
    r0 = pxsim_pxtcore_mkAction(1, animation_SpriteAnimation_init_inline__P14379);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = if_animations_2_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.state___14342);
    s.tmp_1.arg0 = r0;
    s.tmp_2 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3 = if_animations_1_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.state___14342);
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "animations");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["animations"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["animations"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1476; s.pc = 16; return s.tmp_3; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_0;
    s.callLocIdx = 1477; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_1.arg0, "animations", s.tmp_1.arg1);
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["set/animations"];
      if (s.tmp_1.fn === null) { s.tmp_1.arg0.fields["animations"] = s.tmp_1.arg1; }
      else if (s.tmp_1.fn === undefined) { failedCast(s.tmp_1.arg0) } 
     else { s.callLocIdx = 1478; s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    s.lastBrkId = 3088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3088]) return breakpoint(s, 17, 3088, r0);
  case 17:
    s.tmp_1 = if_animations_1_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.state___14342);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "animations");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["animations"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["animations"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1479; s.pc = 18; return s.tmp_1; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_init__P3353.info = {"start":17741,"length":1299,"line":490,"column":8,"endLine":516,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"init","argumentNames":["this"]}

function animation_SpriteAnimation_init__P3353_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_init__P3353, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  state___14342: undefined,
  arg0: undefined,
} }





function animation_SpriteAnimation_init_inline__P14357(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3082]) return breakpoint(s, 1, 3082, r0);
  case 1:
    s.tmp_0 = if_animations_2_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0.arg0 = r0;
    s.tmp_1 = helpers_arrayFilter__P110_mk(s);
    s.tmp_2 = if_animations_1_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "animations");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["animations"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["animations"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1472; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = animation_SpriteAnimation_init_inline__P14363;
    s.callLocIdx = 1473; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "animations", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/animations"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["animations"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1474; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_init_inline__P14357.info = {"start":18173,"length":371,"line":499,"column":90,"endLine":505,"endColumn":17,"fileName":"pxt_modules/game/animation.ts","functionName":"inline","argumentNames":[]}

function animation_SpriteAnimation_init_inline__P14357_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_init_inline__P14357, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function animation_SpriteAnimation_init_inline__P14363(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3083]) return breakpoint(s, 4, 3083, r0);
  case 4:
    r0 = s.arg0.fields["sprite"];
    r0 = r0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3084]) return breakpoint(s, 5, 3084, r0);
  case 5:
    r0 = false;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3085]) return breakpoint(s, 6, 3085, r0);
  case 6:
    s.tmp_4 = animation_SpriteAnimation__C3351_v0_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_4.arg0, animation_SpriteAnimation__C3351_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.update;
    s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_init_inline__P14363.info = {"start":18244,"length":280,"line":500,"column":63,"endLine":504,"endColumn":21,"fileName":"pxt_modules/game/animation.ts","functionName":"inline","argumentNames":["anim"]}

function animation_SpriteAnimation_init_inline__P14363_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_init_inline__P14363, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function animation_SpriteAnimation_init_inline__P14379(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3087]) return breakpoint(s, 9, 3087, r0);
  case 9:
    r0 = s.arg0.fields["sprite"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["sprite"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    r0 = s.arg0;
    r0 = checkSubtype(r0, animation_ImageAnimation__C3355_VT);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_3;
    { step = 3; continue; }
  case 2:
    r0 = s.caps[0];
    r0 = checkSubtype(r0, animation_ImageAnimation__C3355_VT);
  case 3:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 4; continue; }
    r0 = s.tmp_4;
    { step = 7; continue; }
  case 4:
    r0 = s.arg0;
    r0 = checkSubtype(r0, animation_MovementAnimation__C3358_VT);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_5;
    { step = 6; continue; }
  case 5:
    r0 = s.caps[0];
    r0 = checkSubtype(r0, animation_MovementAnimation__C3358_VT);
  case 6:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = s.tmp_6;
  case 7:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 8:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    s.tmp_9 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_9);
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_init_inline__P14379.info = {"start":18701,"length":285,"line":509,"column":55,"endLine":513,"endColumn":13,"fileName":"pxt_modules/game/animation.ts","functionName":"inline","argumentNames":["anim"]}

function animation_SpriteAnimation_init_inline__P14379_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_init_inline__P14379, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function animation_SpriteAnimation_update__P3354(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_SpriteAnimation__C3351_VT)) failedCast(r0);
    s.lastBrkId = 3089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3089]) return breakpoint(s, 1, 3089, r0);
  case 1:
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
animation_SpriteAnimation_update__P3354.info = {"start":19050,"length":118,"line":518,"column":8,"endLine":521,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"update","argumentNames":["this"]}

function animation_SpriteAnimation_update__P3354_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_SpriteAnimation_update__P3354, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Scene_data__P2867(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2842_VT)) failedCast(r0);
    s.lastBrkId = 1964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1964]) return breakpoint(s, 1, 1964, r0);
  case 1:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Scene_data__P2867.info = {"start":7014,"length":53,"line":189,"column":8,"endLine":191,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"data","argumentNames":["this"]}
scene_Scene_data__P2867.isGetter = true;

function scene_Scene_data__P2867_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_data__P2867, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function animation_stopAnimation__P3367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___13924 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3118]) return breakpoint(s, 9, 3118, r0);
  case 9:
    s.tmp_1 = scene_Scene_data__P2867_mk(s);
    s.tmp_2 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1494; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1495; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_0, globals.stateNamespace___5657);
    s.state___13924 = (r0);
    s.lastBrkId = 3119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3119]) return breakpoint(s, 12, 3119, r0);
  case 12:
    s.tmp_0 = r0 = s.state___13924;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = if_animations_1_mk(s);
    s.tmp_1.arg0 = s.state___13924;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "animations");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["animations"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["animations"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1496; s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3120]) return breakpoint(s, 14, 3120, r0);
  case 14:
    r0 = pxsim_pxtcore_mkAction(2, animation_stopAnimation_inline__P13939);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_3, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_3, 1, s.arg0);
    s.tmp_4 = if_animations_2_mk(s);
    s.tmp_4.arg0 = s.state___13924;
    s.tmp_5 = helpers_arrayFilter__P110_mk(s);
    s.tmp_6 = if_animations_1_mk(s);
    s.tmp_6.arg0 = s.state___13924;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "animations");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["animations"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["animations"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1497; s.pc = 17; return s.tmp_6; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tmp_3;
    s.callLocIdx = 1498; s.pc = 16; return s.tmp_5;
  case 16:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_4.arg0, "animations", s.tmp_4.arg1);
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["set/animations"];
      if (s.tmp_4.fn === null) { s.tmp_4.arg0.fields["animations"] = s.tmp_4.arg1; }
      else if (s.tmp_4.fn === undefined) { failedCast(s.tmp_4.arg0) } 
     else { s.callLocIdx = 1499; s.pc = 15; return s.tmp_4; }
    }
  case 15:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 3131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3131]) return breakpoint(s, 18, 3131, r0);
  case 18:
    r0 = (s.arg0 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = (s.arg0 == 1);
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3132]) return breakpoint(s, 19, 3132, r0);
  case 19:
    r0 = (s.arg1).fields["_action"] = (-1);
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_stopAnimation__P3367.info = {"start":23094,"length":1079,"line":630,"column":4,"endLine":653,"endColumn":5,"fileName":"pxt_modules/game/animation.ts","functionName":"stopAnimation","argumentNames":["type","sprite"]}

function animation_stopAnimation__P3367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_stopAnimation__P3367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  state___13924: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function animation_stopAnimation_inline__P13939(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3121]) return breakpoint(s, 12, 3121, r0);
  case 12:
    r0 = s.arg0.fields["sprite"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3122]) return breakpoint(s, 13, 3122, r0);
  case 13:
    s.tmp_2 = r0 = s.caps[1];
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_2);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_2);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_2;
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 3123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3123]) return breakpoint(s, 14, 3123, r0);
  case 14:
    r0 = s.arg0;
    r0 = checkSubtype(r0, animation_ImageAnimation__C3355_VT);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3124]) return breakpoint(s, 15, 3124, r0);
  case 15:
    r0 = false;
    { step = 11; continue; }
  case 2:
  case 3:
    s.lastBrkId = 3125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3125]) return breakpoint(s, 16, 3125, r0);
  case 16:
    { step = 8; continue; }
  case 4:
    s.lastBrkId = 3126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3126]) return breakpoint(s, 17, 3126, r0);
  case 17:
    r0 = s.arg0;
    r0 = checkSubtype(r0, animation_MovementAnimation__C3358_VT);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3127]) return breakpoint(s, 18, 3127, r0);
  case 18:
    r0 = false;
    { step = 11; continue; }
  case 5:
  case 6:
    s.lastBrkId = 3128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3128]) return breakpoint(s, 19, 3128, r0);
  case 19:
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 3129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3129]) return breakpoint(s, 20, 3129, r0);
  case 20:
    r0 = false;
    { step = 11; continue; }
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 3130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3130]) return breakpoint(s, 21, 3130, r0);
  case 21:
    r0 = true;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
animation_stopAnimation_inline__P13939.info = {"start":23338,"length":636,"line":633,"column":55,"endLine":647,"endColumn":13,"fileName":"pxt_modules/game/animation.ts","functionName":"inline","argumentNames":["anim"]}

function animation_stopAnimation_inline__P13939_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_stopAnimation_inline__P13939, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function Avatar_showNext__P149746(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.taken___149991 = undefined;
    s.p___150019 = undefined;
    s.unnamed20268___U2 = undefined;
    s.unnamed20269___U3 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.taken___149991 = (true);
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.taken___149991);
    if (!r0) { step = 12; continue; }
    r0 = (s.arg0 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = if_selectedAvatar_2_mk(s);
    s.tmp_2 = r0 = globals.selection___149739;
    s.tmp_1.arg0 = r0;
    s.tmp_4 = if_selectedAvatar_1_mk(s);
    s.tmp_4.arg0 = s.tmp_2;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "selectedAvatar");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 247; s.pc = 14; return s.tmp_4; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_1.arg1 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_1.arg0, "selectedAvatar", s.tmp_1.arg1);
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["set/selectedAvatar"];
      if (s.tmp_1.fn === null) { s.tmp_1.arg0.fields["selectedAvatar"] = s.tmp_1.arg1; }
      else if (s.tmp_1.fn === undefined) { failedCast(s.tmp_1.arg0) } 
     else { s.callLocIdx = 248; s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    { step = 3; continue; }
  case 2:
    s.tmp_0 = if_selectedAvatar_2_mk(s);
    s.tmp_1 = r0 = globals.selection___149739;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = if_selectedAvatar_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "selectedAvatar");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 249; s.pc = 16; return s.tmp_3; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "selectedAvatar", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/selectedAvatar"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["selectedAvatar"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 250; s.pc = 15; return s.tmp_0; }
    }
  case 15:
    r0 = s.retval;
  case 3:
    s.tmp_2 = if_selectedAvatar_1_mk(s);
    s.tmp_2.arg0 = globals.selection___149739;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "selectedAvatar");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 251; s.pc = 17; return s.tmp_2; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = if_selectedAvatar_2_mk(s);
    s.tmp_3.arg0 = globals.selection___149739;
    r0 = pxsim_Array__length(globals.AVATARS___149757);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3.arg1 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "selectedAvatar", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/selectedAvatar"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["selectedAvatar"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 252; s.pc = 18; return s.tmp_3; }
    }
  case 18:
    r0 = s.retval;
  case 4:
  case 5:
    s.tmp_2 = if_selectedAvatar_1_mk(s);
    s.tmp_2.arg0 = globals.selection___149739;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "selectedAvatar");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 253; s.pc = 19; return s.tmp_2; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__length(globals.AVATARS___149757);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 >= s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_4 = if_selectedAvatar_2_mk(s);
    s.tmp_4.arg0 = globals.selection___149739;
    s.tmp_4.arg1 = 0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_4.arg0, "selectedAvatar", s.tmp_4.arg1);
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["set/selectedAvatar"];
      if (s.tmp_4.fn === null) { s.tmp_4.arg0.fields["selectedAvatar"] = s.tmp_4.arg1; }
      else if (s.tmp_4.fn === undefined) { failedCast(s.tmp_4.arg0) } 
     else { s.callLocIdx = 254; s.pc = 20; return s.tmp_4; }
    }
  case 20:
    r0 = s.retval;
  case 6:
  case 7:
    s.taken___149991 = (false);
    s.p___150019 = (undefined);
    s.unnamed20268___U2 = (globals.players___158156);
    s.unnamed20269___U3 = (0);
  case 8:
    s.tmp_0 = r0 = s.unnamed20269___U3;
    r0 = pxsim_Array__length(s.unnamed20268___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 11; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20268___U2, s.unnamed20269___U3);
    s.p___150019 = (r0);
    r0 = s.p___150019.fields["avatar"];
    s.tmp_3 = r0;
    s.tmp_5 = if_selectedAvatar_1_mk(s);
    s.tmp_5.arg0 = globals.selection___149739;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "selectedAvatar");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 256; s.pc = 21; return s.tmp_5; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3 == s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 9; continue; }
    s.taken___149991 = (true);
    { step = 11; continue; }
  case 9:
  case 10:
    r0 = (s.unnamed20269___U3 + 1);
    s.unnamed20269___U3 = (r0);
    { step = 8; continue; }
  case 11:
    s.unnamed20268___U2 = (undefined);
    { step = 1; continue; }
  case 12:
    s.tmp_0 = Avatar_updateImages__P150028_mk(s);
    s.callLocIdx = 257; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Avatar_showNext__P149746.info = {"start":7393,"length":774,"line":204,"column":4,"endLine":227,"endColumn":5,"fileName":"avatars.ts","functionName":"showNext","argumentNames":["direction"]}

function Avatar_showNext__P149746_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Avatar_showNext__P149746, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  taken___149991: undefined,
  p___150019: undefined,
  unnamed20268___U2: undefined,
  unnamed20269___U3: undefined,
  arg0: undefined,
} }





function Avatar_updateImages__P150028(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.a___150136 = undefined;
    s.i___150139 = undefined;
    s.unnamed20270___U2 = undefined;
    s.unnamed20271___U3 = undefined;
    s.right_i___150144 = undefined;
    s.tmp_0 = animation_runImageAnimation__P3361_mk(s);
    s.tmp_1 = if_left_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "left");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["left"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["left"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 294; s.pc = 6; return s.tmp_1; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = if_leftAnim_1_mk(s);
    s.tmp_3 = r0 = globals.AVATARS___149757;
    s.tmp_5 = if_selectedAvatar_1_mk(s);
    s.tmp_5.arg0 = globals.selection___149739;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "selectedAvatar");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 295; s.pc = 8; return s.tmp_5; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "leftAnim");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["leftAnim"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["leftAnim"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 296; s.pc = 7; return s.tmp_2; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 100;
    s.tmp_0.arg3 = true;
    s.callLocIdx = 297; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_1 = if_front_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "front");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["front"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["front"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 298; s.pc = 10; return s.tmp_1; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = if_frontImage_1_mk(s);
    s.tmp_3 = r0 = globals.AVATARS___149757;
    s.tmp_5 = if_selectedAvatar_1_mk(s);
    s.tmp_5.arg0 = globals.selection___149739;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "selectedAvatar");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 299; s.pc = 12; return s.tmp_5; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "frontImage");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["frontImage"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["frontImage"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 300; s.pc = 11; return s.tmp_2; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 301; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_3 = if_rightAnim_1_mk(s);
    s.tmp_4 = r0 = globals.AVATARS___149757;
    s.tmp_6 = if_selectedAvatar_1_mk(s);
    s.tmp_6.arg0 = globals.selection___149739;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "selectedAvatar");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 302; s.pc = 14; return s.tmp_6; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "rightAnim");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["rightAnim"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["rightAnim"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 303; s.pc = 13; return s.tmp_3; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__mk();
    s.a___150136 = (r0);
    s.i___150139 = (undefined);
    s.tmp_0 = if_leftAnim_1_mk(s);
    s.tmp_1 = r0 = globals.AVATARS___149757;
    s.tmp_3 = if_selectedAvatar_1_mk(s);
    s.tmp_3.arg0 = globals.selection___149739;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "selectedAvatar");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 304; s.pc = 16; return s.tmp_3; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "leftAnim");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["leftAnim"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["leftAnim"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 305; s.pc = 15; return s.tmp_0; }
    }
  case 15:
    r0 = s.retval;
    s.unnamed20270___U2 = (r0);
    s.unnamed20271___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20271___U3;
    r0 = pxsim_Array__length(s.unnamed20270___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20270___U2, s.unnamed20271___U3);
    s.i___150139 = (r0);
    r0 = pxsim_ImageMethods.clone(s.i___150139);
    s.right_i___150144 = (r0);
    r0 = pxsim_ImageMethods.flipX(s.right_i___150144);
    r0 = pxsim_Array__push(s.a___150136, s.right_i___150144);
    s.tmp_0 = animation_runImageAnimation__P3361_mk(s);
    s.tmp_1 = if_right_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "right");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["right"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["right"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 306; s.pc = 18; return s.tmp_1; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.a___150136;
    s.tmp_0.arg2 = 500;
    s.tmp_0.arg3 = true;
    s.callLocIdx = 307; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = (s.unnamed20271___U3 + 1);
    s.unnamed20271___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed20270___U2 = (undefined);
    { step = 4; continue; }
  case 3:
    s.tmp_0 = animation_runImageAnimation__P3361_mk(s);
    s.tmp_1 = if_right_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "right");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["right"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["right"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 308; s.pc = 20; return s.tmp_1; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = if_rightAnim_1_mk(s);
    s.tmp_3 = r0 = globals.AVATARS___149757;
    s.tmp_5 = if_selectedAvatar_1_mk(s);
    s.tmp_5.arg0 = globals.selection___149739;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "selectedAvatar");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 309; s.pc = 22; return s.tmp_5; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "rightAnim");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["rightAnim"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["rightAnim"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 310; s.pc = 21; return s.tmp_2; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 100;
    s.tmp_0.arg3 = true;
    s.callLocIdx = 311; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Avatar_updateImages__P150028.info = {"start":9408,"length":766,"line":264,"column":4,"endLine":280,"endColumn":5,"fileName":"avatars.ts","functionName":"updateImages","argumentNames":[]}

function Avatar_updateImages__P150028_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Avatar_updateImages__P150028, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  a___150136: undefined,
  i___150139: undefined,
  unnamed20270___U2: undefined,
  unnamed20271___U3: undefined,
  right_i___150144: undefined,
} }





function OptionScreen_moveCursorRight__P4483(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3603]) return breakpoint(s, 18, 3603, r0);
  case 18:
    r0 = s.arg0.fields["_isDone"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3604]) return breakpoint(s, 19, 3604, r0);
  case 19:
    { step = 17; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3605]) return breakpoint(s, 20, 3605, r0);
  case 20:
    s.tmp_1 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = false;
    s.callLocIdx = 1689; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 3606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3606]) return breakpoint(s, 22, 3606, r0);
  case 22:
    s.tmp_1 = if_isInFooter_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "isInFooter");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["isInFooter"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["isInFooter"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1690; s.pc = 23; return s.tmp_1; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3607]) return breakpoint(s, 24, 3607, r0);
  case 24:
    s.tmp_2 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3 = r0;
    s.tmp_2.arg0 = r0;
    s.tmp_5 = if_currGroup_1_mk(s);
    s.tmp_5.arg0 = s.tmp_3;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "currGroup");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["currGroup"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["currGroup"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1691; s.pc = 26; return s.tmp_5; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_2.arg1 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_2.arg0, "currGroup", s.tmp_2.arg1);
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_2.fn === null) { s.tmp_2.arg0.fields["currGroup"] = s.tmp_2.arg1; }
      else if (s.tmp_2.fn === undefined) { failedCast(s.tmp_2.arg0) } 
     else { s.callLocIdx = 1692; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.lastBrkId = 3608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3608]) return breakpoint(s, 27, 3608, r0);
  case 27:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1693; s.pc = 28; return s.tmp_2; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3609]) return breakpoint(s, 29, 3609, r0);
  case 29:
    s.tmp_3 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = 0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "currGroup", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["currGroup"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 1694; s.pc = 30; return s.tmp_3; }
    }
  case 30:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 3610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3610]) return breakpoint(s, 31, 3610, r0);
  case 31:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1695; s.pc = 32; return s.tmp_2; }
    }
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["_showNext"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3611]) return breakpoint(s, 33, 3611, r0);
  case 33:
    s.tmp_6 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_6.arg0, "currGroup", s.tmp_6.arg1);
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_6.fn === null) { s.tmp_6.arg0.fields["currGroup"] = s.tmp_6.arg1; }
      else if (s.tmp_6.fn === undefined) { failedCast(s.tmp_6.arg0) } 
     else { s.callLocIdx = 1696; s.pc = 34; return s.tmp_6; }
    }
  case 34:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 3612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3612]) return breakpoint(s, 35, 3612, r0);
  case 35:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1697; s.pc = 36; return s.tmp_2; }
    }
  case 36:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = s.arg0.fields["_showPrevious"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 10:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3613]) return breakpoint(s, 37, 3613, r0);
  case 37:
    s.tmp_6 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 1;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_6.arg0, "currGroup", s.tmp_6.arg1);
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_6.fn === null) { s.tmp_6.arg0.fields["currGroup"] = s.tmp_6.arg1; }
      else if (s.tmp_6.fn === undefined) { failedCast(s.tmp_6.arg0) } 
     else { s.callLocIdx = 1698; s.pc = 38; return s.tmp_6; }
    }
  case 38:
    r0 = s.retval;
  case 11:
  case 12:
    { step = 16; continue; }
  case 13:
    s.lastBrkId = 3614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3614]) return breakpoint(s, 39, 3614, r0);
  case 39:
    s.tmp_0 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1 = r0;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = if_currGroup_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "currGroup");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["currGroup"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["currGroup"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1699; s.pc = 41; return s.tmp_3; }
    }
  case 41:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currGroup", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currGroup"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1700; s.pc = 40; return s.tmp_0; }
    }
  case 40:
    r0 = s.retval;
    s.lastBrkId = 3615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3615]) return breakpoint(s, 42, 3615, r0);
  case 42:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1701; s.pc = 43; return s.tmp_2; }
    }
  case 43:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 >= s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 3616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3616]) return breakpoint(s, 44, 3616, r0);
  case 44:
    s.tmp_5 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = 0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_5.arg0, "currGroup", s.tmp_5.arg1);
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_5.fn === null) { s.tmp_5.arg0.fields["currGroup"] = s.tmp_5.arg1; }
      else if (s.tmp_5.fn === undefined) { failedCast(s.tmp_5.arg0) } 
     else { s.callLocIdx = 1702; s.pc = 45; return s.tmp_5; }
    }
  case 45:
    r0 = s.retval;
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 3617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3617]) return breakpoint(s, 46, 3617, r0);
  case 46:
    s.tmp_0 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1703; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_moveCursorRight__P4483.info = {"start":40439,"length":1189,"line":1257,"column":4,"endLine":1280,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"moveCursorRight","argumentNames":["this"]}

function OptionScreen_moveCursorRight__P4483_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_moveCursorRight__P4483, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function OptionScreen_updateCursor__P7319(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ts___16542 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3698]) return breakpoint(s, 13, 3698, r0);
  case 13:
    s.tmp_1 = if_isInFooter_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "isInFooter");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["isInFooter"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["isInFooter"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1749; s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3699]) return breakpoint(s, 15, 3699, r0);
  case 15:
    s.tmp_3 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "currGroup");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["currGroup"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["currGroup"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1750; s.pc = 16; return s.tmp_3; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_2);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_2);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_2;
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 3700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3700]) return breakpoint(s, 17, 3700, r0);
  case 17:
    s.tmp_4 = StringTextSpriteFactory_sprite__P4408_mk(s);
    r0 = s.arg0.fields["_footer"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1751; s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.ts___16542 = (r0);
    s.lastBrkId = 3701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3701]) return breakpoint(s, 19, 3701, r0);
  case 19:
    { step = 4; continue; }
  case 2:
    s.lastBrkId = 3702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3702]) return breakpoint(s, 20, 3702, r0);
  case 20:
    r0 = s.arg0.fields["_nextSprite"];
    s.ts___16542 = (r0);
    s.lastBrkId = 3703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3703]) return breakpoint(s, 21, 3703, r0);
  case 21:
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 3704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3704]) return breakpoint(s, 22, 3704, r0);
  case 22:
    r0 = s.arg0.fields["_prevSprite"];
    s.ts___16542 = (r0);
    s.lastBrkId = 3705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3705]) return breakpoint(s, 23, 3705, r0);
  case 23:
  case 4:
    s.lastBrkId = 3706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3706]) return breakpoint(s, 24, 3706, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(s.ts___16542);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3707]) return breakpoint(s, 25, 3707, r0);
  case 25:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3708]) return breakpoint(s, 26, 3708, r0);
  case 26:
    s.tmp_0 = TextSprite_setBorder__P4338_mk(s);
    s.tmp_0.arg0 = s.ts___16542;
    s.tmp_0.arg1 = 1;
    s.tmp_1 = if_color_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "color");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["color"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["color"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1752; s.pc = 28; return s.tmp_1; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 1753; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 3709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3709]) return breakpoint(s, 29, 3709, r0);
  case 29:
    s.tmp_0 = TextSprite_setBorder__P4338_mk(s);
    s.tmp_0.arg0 = s.ts___16542;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 1754; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
  case 6:
  case 7:
  case 8:
    { step = 12; continue; }
  case 9:
    s.lastBrkId = 3710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3710]) return breakpoint(s, 31, 3710, r0);
  case 31:
    r0 = s.arg0.fields["_hasHeaders"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = 1;
    { step = 11; continue; }
  case 10:
    r0 = 0;
  case 11:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = String2dArrayTextSpriteFactory_SetBorder__P4427_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "currGroup");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["currGroup"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["currGroup"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1755; s.pc = 33; return s.tmp_3; }
    }
  case 33:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.tmp_5 = if_currOption_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "currOption");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["currOption"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["currOption"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1756; s.pc = 34; return s.tmp_5; }
    }
  case 34:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.tmp_1);
    s.tmp_2.arg2 = r0;
    s.tmp_6 = if_color_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "color");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["color"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["color"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1757; s.pc = 35; return s.tmp_6; }
    }
  case 35:
    r0 = s.retval;
    s.tmp_2.arg3 = r0;
    s.tmp_2.arg4 = s.arg1;
    s.callLocIdx = 1758; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_updateCursor__P7319.info = {"start":48626,"length":941,"line":1480,"column":4,"endLine":1509,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"updateCursor","argumentNames":["this","show"]}

function OptionScreen_updateCursor__P7319_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_updateCursor__P7319, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  ts___16542: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function String2dArrayTextSpriteFactory_SetBorder__P4427(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ts___16608 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, String2dArrayTextSpriteFactory__C4420_VT)) failedCast(r0);
    s.lastBrkId = 3395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3395]) return breakpoint(s, 9, 3395, r0);
  case 9:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.arg1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_2;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.arg2);
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3396]) return breakpoint(s, 10, 3396, r0);
  case 10:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_7 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.arg1);
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.arg2);
    s.ts___16608 = (r0);
    s.lastBrkId = 3397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3397]) return breakpoint(s, 11, 3397, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3398]) return breakpoint(s, 12, 3398, r0);
  case 12:
    s.tmp_0 = TextSprite_setBorder__P4338_mk(s);
    s.tmp_0.arg0 = s.ts___16608;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["padding"];
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1569; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 3399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3399]) return breakpoint(s, 14, 3399, r0);
  case 14:
    s.tmp_0 = TextSprite_setBorder__P4338_mk(s);
    s.tmp_0.arg0 = s.ts___16608;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = s.arg0.fields["padding"];
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1570; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 6:
    s.lastBrkId = 3400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3400]) return breakpoint(s, 16, 3400, r0);
  case 16:
    s.tmp_0 = TextSprite_update__P4334_mk(s);
    s.tmp_0.arg0 = s.ts___16608;
    s.callLocIdx = 1571; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
String2dArrayTextSpriteFactory_SetBorder__P4427.info = {"start":9819,"length":459,"line":390,"column":4,"endLine":400,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"SetBorder","argumentNames":["this","group","item","color","show"]}

function String2dArrayTextSpriteFactory_SetBorder__P4427_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: String2dArrayTextSpriteFactory_SetBorder__P4427, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  ts___16608: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function StringTextSpriteFactory_sprite__P4408(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringTextSpriteFactory__C4405_VT)) failedCast(r0);
    s.lastBrkId = 3316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3316]) return breakpoint(s, 1, 3316, r0);
  case 1:
    r0 = s.arg0.fields["_sprite"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
StringTextSpriteFactory_sprite__P4408.info = {"start":4753,"length":67,"line":208,"column":4,"endLine":210,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"sprite","argumentNames":["this"]}
StringTextSpriteFactory_sprite__P4408.isGetter = true;

function StringTextSpriteFactory_sprite__P4408_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringTextSpriteFactory_sprite__P4408, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function TextSprite_setBorder__P4338(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSprite__C4332_VT)) failedCast(r0);
    s.lastBrkId = 3242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3242]) return breakpoint(s, 1, 3242, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 1527; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["borderWidth"] = (s.tmp_1);
    s.lastBrkId = 3243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3243]) return breakpoint(s, 3, 3243, r0);
  case 3:
    r0 = (s.arg0).fields["borderColor"] = (s.arg2);
    s.lastBrkId = 3244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3244]) return breakpoint(s, 4, 3244, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = s.arg3;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 1528; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["padding"] = (s.tmp_1);
    s.lastBrkId = 3245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3245]) return breakpoint(s, 6, 3245, r0);
  case 6:
    s.tmp_0 = TextSprite_update__P4334_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1529; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSprite_setBorder__P4338.info = {"start":2748,"length":223,"line":77,"column":4,"endLine":82,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"setBorder","argumentNames":["this","width","color","padding"]}

function TextSprite_setBorder__P4338_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSprite_setBorder__P4338, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function GameSettings_start__P158122(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    globals.gameMode___158120 = (2);
    s.tmp_0 = RotatingScreens_release__P4455_mk(s);
    s.tmp_0.arg0 = globals.splashScreen___4565;
    s.callLocIdx = 199; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = GameSettings_build__P158158_mk(s);
    s.callLocIdx = 200; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = OptionScreenCollection__C4488_v0_1_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    if (!checkSubtype(s.tmp_0.arg0, OptionScreenCollection__C4488_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.build;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    globals.gameMode___158120 = (3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GameSettings_start__P158122.info = {"start":2833,"length":198,"line":81,"column":4,"endLine":87,"endColumn":5,"fileName":"settings.ts","functionName":"start","argumentNames":[]}

function GameSettings_start__P158122_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GameSettings_start__P158122, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function OptionScreenCollection_build__P4496(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3733]) return breakpoint(s, 1, 3733, r0);
  case 1:
    s.tmp_0 = OptionScreenCollection_setBase__P7325_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1761; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3734]) return breakpoint(s, 3, 3734, r0);
  case 3:
    s.tmp_0 = OptionScreen_build__P4479_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1762; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_build__P4496.info = {"start":53533,"length":73,"line":1621,"column":4,"endLine":1624,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"build","argumentNames":["this"]}

function OptionScreenCollection_build__P4496_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_build__P4496, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function OptionScreenCollection_setBase__P7325(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.selectedOptions___17302 = undefined;
    s.index___17308 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3765]) return breakpoint(s, 5, 3765, r0);
  case 5:
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3766]) return breakpoint(s, 6, 3766, r0);
  case 6:
    s.tmp_2 = OptionScreen_options__P4472_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg0.fields["_optionSets"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1777; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 3767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3767]) return breakpoint(s, 8, 3767, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["_optionSetHasHeaders"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_hasHeaders"] = (s.tmp_1);
    s.lastBrkId = 3768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3768]) return breakpoint(s, 9, 3768, r0);
  case 9:
    r0 = s.arg0.fields["_selectedOptionsColl"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.selectedOptions___17302 = (r0);
    s.lastBrkId = 3769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3769]) return breakpoint(s, 10, 3769, r0);
  case 10:
    s.index___17308 = (0);
    s.lastBrkId = 3770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3770]) return breakpoint(s, 11, 3770, r0);
  case 11:
  case 1:
    s.lastBrkId = 3771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3771]) return breakpoint(s, 12, 3771, r0);
  case 12:
    s.tmp_1 = r0 = s.index___17308;
    r0 = pxsim_Array__length(s.selectedOptions___17302);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3772]) return breakpoint(s, 13, 3772, r0);
  case 13:
    s.tmp_3 = OptionScreenCollection__C4488_v4_3_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.index___17308;
    r0 = pxsim_Array__getAt(s.selectedOptions___17302, s.index___17308);
    s.tmp_3.arg2 = r0;
    if (!checkSubtype(s.tmp_3.arg0, OptionScreenCollection__C4488_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.setSelection;
    s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 3773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3773]) return breakpoint(s, 15, 3773, r0);
  case 15:
    r0 = (s.index___17308 + 1);
    s.index___17308 = (r0);
    { step = 1; continue; }
  case 2:
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_setBase__P7325.info = {"start":57052,"length":531,"line":1727,"column":4,"endLine":1736,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"setBase","argumentNames":["this"]}

function OptionScreenCollection_setBase__P7325_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_setBase__P7325, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  selectedOptions___17302: undefined,
  index___17308: undefined,
  arg0: undefined,
} }





function OptionScreenCollection_setSelection__P4500(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3749]) return breakpoint(s, 1, 3749, r0);
  case 1:
    s.tmp_0 = OptionScreen_setSelection__P4487_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 1770; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3750]) return breakpoint(s, 3, 3750, r0);
  case 3:
    r0 = s.arg0.fields["_selectedOptionsColl"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_setSelection__P4500.info = {"start":55261,"length":183,"line":1670,"column":4,"endLine":1673,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"setSelection","argumentNames":["this","index","value"]}

function OptionScreenCollection_setSelection__P4500_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_setSelection__P4500, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function OptionScreen_setSelection__P4487(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3639]) return breakpoint(s, 1, 3639, r0);
  case 1:
    r0 = s.arg0.fields["_selectedOptions"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.arg2);
    s.lastBrkId = 3640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3640]) return breakpoint(s, 2, 3640, r0);
  case 2:
    s.tmp_0 = OptionScreen__C4464_v1_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, OptionScreen__C4464_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.refresh;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_setSelection__P4487.info = {"start":43503,"length":140,"line":1337,"column":4,"endLine":1340,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"setSelection","argumentNames":["this","index","value"]}

function OptionScreen_setSelection__P4487_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_setSelection__P4487, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function OptionScreen_refresh__P4485(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3631]) return breakpoint(s, 1, 3631, r0);
  case 1:
    s.tmp_0 = RotatingScreens_refresh__P4454_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1714; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3632]) return breakpoint(s, 3, 3632, r0);
  case 3:
    s.tmp_0 = OptionScreen_refreshSelections__P7318_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1715; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3633]) return breakpoint(s, 5, 3633, r0);
  case 5:
    s.tmp_0 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1716; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_refresh__P4485.info = {"start":42648,"length":113,"line":1311,"column":4,"endLine":1315,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"refresh","argumentNames":["this"]}

function OptionScreen_refresh__P4485_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_refresh__P4485, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function OptionScreen_refreshSelections__P7318(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.group___17209 = undefined;
    s.option___17217 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3688]) return breakpoint(s, 9, 3688, r0);
  case 9:
    r0 = s.arg0.fields["_selectedOptions"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3689]) return breakpoint(s, 10, 3689, r0);
  case 10:
    s.group___17209 = (0);
    s.lastBrkId = 3690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3690]) return breakpoint(s, 11, 3690, r0);
  case 11:
  case 1:
    s.lastBrkId = 3691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3691]) return breakpoint(s, 12, 3691, r0);
  case 12:
    s.tmp_1 = r0 = s.group___17209;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3692]) return breakpoint(s, 13, 3692, r0);
  case 13:
    s.option___17217 = (0);
    s.lastBrkId = 3693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3693]) return breakpoint(s, 14, 3693, r0);
  case 14:
  case 2:
    s.lastBrkId = 3694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3694]) return breakpoint(s, 15, 3694, r0);
  case 15:
    s.tmp_1 = r0 = s.option___17217;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.group___17209);
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3695]) return breakpoint(s, 16, 3695, r0);
  case 16:
    r0 = s.arg0.fields["_hasHeaders"];
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.tmp_7 = String2dArrayTextSpriteFactory_Redraw__P4426_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = s.group___17209;
    s.tmp_7.arg2 = s.option___17217;
    s.tmp_8 = r0 = s.option___17217;
    r0 = s.arg0.fields["_selectedOptions"];
    s.tmp_11 = r0;
    r0 = pxsim_Array__getAt(s.tmp_11, s.group___17209);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + s.tmp_6);
    s.tmp_9 = r0;
    r0 = (s.tmp_8 == s.tmp_9);
    s.tmp_7.arg3 = r0;
    s.callLocIdx = 1748; s.pc = 17; return s.tmp_7;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 3696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3696]) return breakpoint(s, 18, 3696, r0);
  case 18:
    r0 = (s.option___17217 + 1);
    s.option___17217 = (r0);
    { step = 2; continue; }
  case 5:
    s.lastBrkId = 3697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3697]) return breakpoint(s, 19, 3697, r0);
  case 19:
    r0 = (s.group___17209 + 1);
    s.group___17209 = (r0);
    { step = 1; continue; }
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_refreshSelections__P7318.info = {"start":47595,"length":478,"line":1453,"column":4,"endLine":1463,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"refreshSelections","argumentNames":["this"]}

function OptionScreen_refreshSelections__P7318_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_refreshSelections__P7318, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  group___17209: undefined,
  option___17217: undefined,
  arg0: undefined,
} }





function String2dArrayTextSpriteFactory_Redraw__P4426(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ts___17261 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, String2dArrayTextSpriteFactory__C4420_VT)) failedCast(r0);
    s.lastBrkId = 3387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3387]) return breakpoint(s, 9, 3387, r0);
  case 9:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.arg1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_2;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.arg2);
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3388]) return breakpoint(s, 10, 3388, r0);
  case 10:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_7 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.arg1);
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.arg2);
    s.ts___17261 = (r0);
    s.lastBrkId = 3389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3389]) return breakpoint(s, 11, 3389, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3390]) return breakpoint(s, 12, 3390, r0);
  case 12:
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = (s.ts___17261).fields["bg"] = (s.tmp_0);
    s.lastBrkId = 3391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3391]) return breakpoint(s, 13, 3391, r0);
  case 13:
    r0 = (s.ts___17261).fields["fg"] = (15);
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 3392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3392]) return breakpoint(s, 14, 3392, r0);
  case 14:
    r0 = (s.ts___17261).fields["bg"] = (0);
    s.lastBrkId = 3393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3393]) return breakpoint(s, 15, 3393, r0);
  case 15:
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = (s.ts___17261).fields["fg"] = (s.tmp_0);
  case 6:
    s.lastBrkId = 3394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3394]) return breakpoint(s, 16, 3394, r0);
  case 16:
    s.tmp_0 = TextSprite_update__P4334_mk(s);
    s.tmp_0.arg0 = s.ts___17261;
    s.callLocIdx = 1568; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
String2dArrayTextSpriteFactory_Redraw__P4426.info = {"start":9375,"length":438,"line":376,"column":4,"endLine":388,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"Redraw","argumentNames":["this","group","item","reverse"]}

function String2dArrayTextSpriteFactory_Redraw__P4426_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: String2dArrayTextSpriteFactory_Redraw__P4426, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  ts___17261: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function OptionScreen_options__P4472(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3569]) return breakpoint(s, 1, 3569, r0);
  case 1:
    r0 = s.arg0.fields["_midText"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["data"] = (s.arg1);
    s.lastBrkId = 3570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3570]) return breakpoint(s, 2, 3570, r0);
  case 2:
    s.tmp_0 = OptionScreen_buildSelectedOptions__P7312_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1660; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_options__P4472.info = {"start":35731,"length":116,"line":1119,"column":4,"endLine":1122,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"options","argumentNames":["this","value"]}

function OptionScreen_options__P4472_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_options__P4472, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function OptionScreen_buildSelectedOptions__P7312(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___17358 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3641]) return breakpoint(s, 3, 3641, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_selectedOptions"] = (s.tmp_1);
    s.lastBrkId = 3642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3642]) return breakpoint(s, 4, 3642, r0);
  case 4:
    s.index___17358 = (0);
    s.lastBrkId = 3643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3643]) return breakpoint(s, 5, 3643, r0);
  case 5:
  case 1:
    s.lastBrkId = 3644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3644]) return breakpoint(s, 6, 3644, r0);
  case 6:
    s.tmp_1 = r0 = s.index___17358;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3645]) return breakpoint(s, 7, 3645, r0);
  case 7:
    r0 = s.arg0.fields["_selectedOptions"];
    s.tmp_4 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_4, s.index___17358, -1);
    s.lastBrkId = 3646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3646]) return breakpoint(s, 8, 3646, r0);
  case 8:
    r0 = (s.index___17358 + 1);
    s.index___17358 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_buildSelectedOptions__P7312.info = {"start":43773,"length":236,"line":1349,"column":4,"endLine":1354,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"buildSelectedOptions","argumentNames":["this"]}

function OptionScreen_buildSelectedOptions__P7312_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_buildSelectedOptions__P7312, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  index___17358: undefined,
  arg0: undefined,
} }





function OptionScreen_options__P4471(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3568]) return breakpoint(s, 1, 3568, r0);
  case 1:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
OptionScreen_options__P4471.info = {"start":35555,"length":74,"line":1112,"column":4,"endLine":1114,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"options","argumentNames":["this"]}
OptionScreen_options__P4471.isGetter = true;

function OptionScreen_options__P4471_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_options__P4471, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function OptionScreen_build__P4479(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3571]) return breakpoint(s, 1, 3571, r0);
  case 1:
    s.tmp_0 = RotatingScreens_build__P4450_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1661; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3572]) return breakpoint(s, 3, 3572, r0);
  case 3:
    s.tmp_0 = OptionScreen_refreshSelections__P7318_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1662; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3573]) return breakpoint(s, 5, 3573, r0);
  case 5:
    s.tmp_0 = OptionScreen_createCursor__P7314_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1663; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3574]) return breakpoint(s, 7, 3574, r0);
  case 7:
    r0 = (s.arg0).fields["_isDone"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_build__P4479.info = {"start":37241,"length":140,"line":1176,"column":4,"endLine":1181,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"build","argumentNames":["this"]}

function OptionScreen_build__P4479_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_build__P4479, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function OptionScreen_createCursor__P7314(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3667]) return breakpoint(s, 1, 3667, r0);
  case 1:
    s.tmp_0 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1734; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_createCursor__P7314.info = {"start":45410,"length":66,"line":1387,"column":4,"endLine":1389,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"createCursor","argumentNames":["this"]}

function OptionScreen_createCursor__P7314_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_createCursor__P7314, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function RotatingScreens_build__P4450(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3445]) return breakpoint(s, 7, 3445, r0);
  case 7:
    s.tmp_0 = RotatingScreens_rebuild__P4453_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1580; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 3446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3446]) return breakpoint(s, 9, 3446, r0);
  case 9:
    s.tmp_0 = RotatingScreens__C4428_v1_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, RotatingScreens__C4428_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.refresh;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 3447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3447]) return breakpoint(s, 11, 3447, r0);
  case 11:
    r0 = s.arg0.fields["_staticSprites"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3448]) return breakpoint(s, 12, 3448, r0);
  case 12:
    s.tmp_3 = RotatingScreens_addStaticSprites__P7308_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1581; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 3449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3449]) return breakpoint(s, 14, 3449, r0);
  case 14:
    s.tmp_1 = if_mode_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "mode");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["mode"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["mode"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1582; s.pc = 15; return s.tmp_1; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 3450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3450]) return breakpoint(s, 16, 3450, r0);
  case 16:
    r0 = (s.arg0).fields["_currSprite"] = (0);
    s.lastBrkId = 3451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3451]) return breakpoint(s, 17, 3451, r0);
  case 17:
    s.tmp_0 = RotatingScreens_showScrollingSprite__P4458_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1583; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 3452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3452]) return breakpoint(s, 19, 3452, r0);
  case 19:
    { step = 6; continue; }
  case 4:
    s.lastBrkId = 3453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3453]) return breakpoint(s, 20, 3453, r0);
  case 20:
    s.tmp_0 = RotatingScreens_addAllMovingSprites__P7307_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1584; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 3454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3454]) return breakpoint(s, 22, 3454, r0);
  case 22:
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 3455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3455]) return breakpoint(s, 23, 3455, r0);
  case 23:
    s.tmp_0 = RotatingScreens_addAllMovingSprites__P7307_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1585; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 3456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3456]) return breakpoint(s, 25, 3456, r0);
  case 25:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_build__P4450.info = {"start":21238,"length":654,"line":721,"column":4,"endLine":741,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"build","argumentNames":["this"]}

function RotatingScreens_build__P4450_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_build__P4450, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function RotatingScreens_addStaticSprites__P7308(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sprite___18783 = undefined;
    s.unnamed12720___U1 = undefined;
    s.unnamed12721___U2 = undefined;
    s.newSprite___18786 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3513]) return breakpoint(s, 3, 3513, r0);
  case 3:
    s.sprite___18783 = (undefined);
    r0 = s.arg0.fields["_staticSprites"];
    s.unnamed12720___U1 = (r0);
    s.unnamed12721___U2 = (0);
    s.lastBrkId = 3514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3514]) return breakpoint(s, 4, 3514, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed12721___U2;
    r0 = pxsim_Array__length(s.unnamed12720___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12720___U1, s.unnamed12721___U2);
    s.sprite___18783 = (r0);
    s.lastBrkId = 3515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3515]) return breakpoint(s, 5, 3515, r0);
  case 5:
    s.lastBrkId = 3516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3516]) return breakpoint(s, 6, 3516, r0);
  case 6:
    s.tmp_2 = sprites_create__P2275_mk(s);
    s.tmp_4 = if_img_1_mk(s);
    s.tmp_4.arg0 = s.sprite___18783;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "img");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["img"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["img"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1636; s.pc = 8; return s.tmp_4; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_3);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = globals.Static___4348;
    s.callLocIdx = 1637; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.newSprite___18786 = (r0);
    s.lastBrkId = 3517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3517]) return breakpoint(s, 9, 3517, r0);
  case 9:
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_0.arg0 = s.newSprite___18786;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1638; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 3518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3518]) return breakpoint(s, 11, 3518, r0);
  case 11:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.newSprite___18786;
    s.tmp_1 = if_x_1_mk(s);
    s.tmp_1.arg0 = s.sprite___18783;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "x");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["x"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["x"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1639; s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1640; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 3519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3519]) return breakpoint(s, 14, 3519, r0);
  case 14:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.newSprite___18786;
    s.tmp_1 = if_y_1_mk(s);
    s.tmp_1.arg0 = s.sprite___18783;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "y");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["y"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["y"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1641; s.pc = 16; return s.tmp_1; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1642; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = (s.unnamed12721___U2 + 1);
    s.unnamed12721___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12720___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_addStaticSprites__P7308.info = {"start":27344,"length":334,"line":888,"column":4,"endLine":895,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"addStaticSprites","argumentNames":["this"]}

function RotatingScreens_addStaticSprites__P7308_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_addStaticSprites__P7308, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  sprite___18783: undefined,
  unnamed12720___U1: undefined,
  unnamed12721___U2: undefined,
  newSprite___18786: undefined,
  arg0: undefined,
} }





function RotatingScreens_addAllMovingSprites__P7307(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.img___18615 = undefined;
    s.unnamed12718___U1 = undefined;
    s.unnamed12719___U2 = undefined;
    s.newSprite___18619 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3499]) return breakpoint(s, 7, 3499, r0);
  case 7:
    s.img___18615 = (undefined);
    s.tmp_0 = if_imgs_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "imgs");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["imgs"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["imgs"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 1619; s.pc = 8; return s.tmp_0; }
    }
  case 8:
    r0 = s.retval;
    s.unnamed12718___U1 = (r0);
    s.unnamed12719___U2 = (0);
    s.lastBrkId = 3500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3500]) return breakpoint(s, 9, 3500, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed12719___U2;
    r0 = pxsim_Array__length(s.unnamed12718___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12718___U1, s.unnamed12719___U2);
    s.img___18615 = (r0);
    s.lastBrkId = 3501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3501]) return breakpoint(s, 10, 3501, r0);
  case 10:
    s.lastBrkId = 3502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3502]) return breakpoint(s, 11, 3502, r0);
  case 11:
    s.tmp_2 = sprites_create__P2275_mk(s);
    r0 = pxsim_ImageMethods.clone(s.img___18615);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = globals.Moving___4347;
    s.callLocIdx = 1620; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.newSprite___18619 = (r0);
    s.lastBrkId = 3503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3503]) return breakpoint(s, 13, 3503, r0);
  case 13:
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_0.arg0 = s.newSprite___18619;
    s.tmp_0.arg1 = 32;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 1621; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 3504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3504]) return breakpoint(s, 15, 3504, r0);
  case 15:
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_0.arg0 = s.newSprite___18619;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1622; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 3505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3505]) return breakpoint(s, 17, 3505, r0);
  case 17:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.newSprite___18619;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.randomRange(0, s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1623; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 3506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3506]) return breakpoint(s, 19, 3506, r0);
  case 19:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.newSprite___18619;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.randomRange(0, s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1624; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 3507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3507]) return breakpoint(s, 21, 3507, r0);
  case 21:
    s.tmp_0 = Sprite_vx__P2358_mk(s);
    s.tmp_0.arg0 = s.newSprite___18619;
    s.tmp_2 = if_speed_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "speed");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["speed"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["speed"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1625; s.pc = 23; return s.tmp_2; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.Math_.randomRange(0, s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1626; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 3508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3508]) return breakpoint(s, 24, 3508, r0);
  case 24:
    s.tmp_0 = Sprite_vy__P2360_mk(s);
    s.tmp_0.arg0 = s.newSprite___18619;
    s.tmp_2 = if_speed_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "speed");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["speed"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["speed"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1627; s.pc = 26; return s.tmp_2; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Sprite_vx__P2357_mk(s);
    s.tmp_4.arg0 = s.newSprite___18619;
    s.callLocIdx = 1628; s.pc = 27; return s.tmp_4;
  case 27:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1629; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 3509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3509]) return breakpoint(s, 28, 3509, r0);
  case 28:
    s.tmp_1 = Math_percentChance__P3056_mk(s);
    s.tmp_1.arg0 = 50;
    s.callLocIdx = 1630; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3510]) return breakpoint(s, 30, 3510, r0);
  case 30:
    s.tmp_2 = Sprite_vx__P2358_mk(s);
    s.tmp_2.arg0 = s.newSprite___18619;
    s.tmp_4 = Sprite_vx__P2357_mk(s);
    s.tmp_4.arg0 = s.newSprite___18619;
    s.callLocIdx = 1631; s.pc = 32; return s.tmp_4;
  case 32:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (0 - s.tmp_3);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1632; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
  case 2:
  case 3:
    s.lastBrkId = 3511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3511]) return breakpoint(s, 33, 3511, r0);
  case 33:
    s.tmp_1 = Math_percentChance__P3056_mk(s);
    s.tmp_1.arg0 = 50;
    s.callLocIdx = 1633; s.pc = 34; return s.tmp_1;
  case 34:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 3512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3512]) return breakpoint(s, 35, 3512, r0);
  case 35:
    s.tmp_2 = Sprite_vy__P2360_mk(s);
    s.tmp_2.arg0 = s.newSprite___18619;
    s.tmp_4 = Sprite_vy__P2359_mk(s);
    s.tmp_4.arg0 = s.newSprite___18619;
    s.callLocIdx = 1634; s.pc = 37; return s.tmp_4;
  case 37:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (0 - s.tmp_3);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1635; s.pc = 36; return s.tmp_2;
  case 36:
    r0 = s.retval;
  case 4:
  case 5:
    r0 = (s.unnamed12719___U2 + 1);
    s.unnamed12719___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed12718___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_addAllMovingSprites__P7307.info = {"start":26372,"length":893,"line":867,"column":4,"endLine":883,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"addAllMovingSprites","argumentNames":["this","keepOnScreen"]}

function RotatingScreens_addAllMovingSprites__P7307_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_addAllMovingSprites__P7307, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  img___18615: undefined,
  unnamed12718___U1: undefined,
  unnamed12719___U2: undefined,
  newSprite___18619: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_percentChance__P3056(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2368]) return breakpoint(s, 6, 2368, r0);
  case 6:
    r0 = (s.arg0 >= 100);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2369]) return breakpoint(s, 7, 2369, r0);
  case 7:
    r0 = true;
    { step = 5; continue; }
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 2370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2370]) return breakpoint(s, 8, 2370, r0);
  case 8:
    r0 = (s.arg0 <= 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2371]) return breakpoint(s, 9, 2371, r0);
  case 9:
    r0 = false;
    { step = 5; continue; }
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 2372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2372]) return breakpoint(s, 10, 2372, r0);
  case 10:
    r0 = pxsim.Math_.randomRange(0, 99);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 < s.arg0);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_percentChance__P3056.info = {"start":369,"length":259,"line":9,"column":4,"endLine":17,"endColumn":5,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"percentChance","argumentNames":["percentage"]}

function Math_percentChance__P3056_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_percentChance__P3056, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function RotatingScreens_showScrollingSprite__P4458(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.newSprite___18711 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3481]) return breakpoint(s, 13, 3481, r0);
  case 13:
    r0 = s.arg0.fields["_movingSpritesSequential"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3482]) return breakpoint(s, 14, 3482, r0);
  case 14:
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["_currSprite"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_currSprite"] = (s.tmp_2);
    s.lastBrkId = 3483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3483]) return breakpoint(s, 15, 3483, r0);
  case 15:
    r0 = s.arg0.fields["_currSprite"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_currSprite"];
    s.tmp_2 = r0;
    s.tmp_5 = if_imgs_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "imgs");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["imgs"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["imgs"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1598; s.pc = 16; return s.tmp_5; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 >= s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3484]) return breakpoint(s, 17, 3484, r0);
  case 17:
    r0 = (s.arg0).fields["_currSprite"] = (0);
  case 3:
  case 4:
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 3485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3485]) return breakpoint(s, 18, 3485, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_5 = if_imgs_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "imgs");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["imgs"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["imgs"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1599; s.pc = 19; return s.tmp_5; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.randomRange(0, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_currSprite"] = (s.tmp_1);
  case 6:
    s.lastBrkId = 3486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3486]) return breakpoint(s, 20, 3486, r0);
  case 20:
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_3 = if_imgs_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "imgs");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["imgs"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["imgs"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1600; s.pc = 22; return s.tmp_3; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_currSprite"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.Moving___4347;
    s.callLocIdx = 1601; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.newSprite___18711 = (r0);
    s.lastBrkId = 3487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3487]) return breakpoint(s, 23, 3487, r0);
  case 23:
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_0.arg0 = s.newSprite___18711;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1602; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 3488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3488]) return breakpoint(s, 25, 3488, r0);
  case 25:
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_0.arg0 = s.newSprite___18711;
    s.tmp_0.arg1 = 4;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1603; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 3489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3489]) return breakpoint(s, 27, 3489, r0);
  case 27:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.newSprite___18711;
    s.tmp_1 = if_y_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "y");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["y"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["y"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1604; s.pc = 29; return s.tmp_1; }
    }
  case 29:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1605; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.lastBrkId = 3490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3490]) return breakpoint(s, 30, 3490, r0);
  case 30:
    s.tmp_1 = Math_percentChance__P3056_mk(s);
    s.tmp_1.arg0 = 50;
    s.callLocIdx = 1606; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3491]) return breakpoint(s, 32, 3491, r0);
  case 32:
    s.tmp_2 = Sprite_x__P2354_mk(s);
    s.tmp_2.arg0 = s.newSprite___18711;
    s.tmp_6 = Sprite_image__P2389_mk(s);
    s.tmp_6.arg0 = s.newSprite___18711;
    s.callLocIdx = 1607; s.pc = 34; return s.tmp_6;
  case 34:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 2);
    s.tmp_3 = r0;
    r0 = (0 - s.tmp_3);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1608; s.pc = 33; return s.tmp_2;
  case 33:
    r0 = s.retval;
    s.lastBrkId = 3492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3492]) return breakpoint(s, 35, 3492, r0);
  case 35:
    s.tmp_0 = Sprite_vx__P2358_mk(s);
    s.tmp_0.arg0 = s.newSprite___18711;
    s.tmp_1 = if_speed_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "speed");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["speed"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["speed"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1609; s.pc = 37; return s.tmp_1; }
    }
  case 37:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1610; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 3493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3493]) return breakpoint(s, 38, 3493, r0);
  case 38:
    s.tmp_2 = if_dir_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "dir");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["dir"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["dir"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1611; s.pc = 39; return s.tmp_2; }
    }
  case 39:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3494]) return breakpoint(s, 40, 3494, r0);
  case 40:
    s.tmp_4 = Sprite_image__P2389_mk(s);
    s.tmp_4.arg0 = s.newSprite___18711;
    s.callLocIdx = 1612; s.pc = 41; return s.tmp_4;
  case 41:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.flipX(s.tmp_3);
  case 7:
  case 8:
    { step = 12; continue; }
  case 9:
    s.lastBrkId = 3495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3495]) return breakpoint(s, 42, 3495, r0);
  case 42:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.newSprite___18711;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    s.tmp_5 = Sprite_image__P2389_mk(s);
    s.tmp_5.arg0 = s.newSprite___18711;
    s.callLocIdx = 1613; s.pc = 44; return s.tmp_5;
  case 44:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1614; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    s.lastBrkId = 3496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3496]) return breakpoint(s, 45, 3496, r0);
  case 45:
    s.tmp_0 = Sprite_vx__P2358_mk(s);
    s.tmp_0.arg0 = s.newSprite___18711;
    s.tmp_2 = if_speed_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "speed");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["speed"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["speed"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1615; s.pc = 47; return s.tmp_2; }
    }
  case 47:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1616; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    s.lastBrkId = 3497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3497]) return breakpoint(s, 48, 3497, r0);
  case 48:
    s.tmp_2 = if_dir_1_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "dir");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["dir"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["dir"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1617; s.pc = 49; return s.tmp_2; }
    }
  case 49:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 3498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3498]) return breakpoint(s, 50, 3498, r0);
  case 50:
    s.tmp_4 = Sprite_image__P2389_mk(s);
    s.tmp_4.arg0 = s.newSprite___18711;
    s.callLocIdx = 1618; s.pc = 51; return s.tmp_4;
  case 51:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.flipX(s.tmp_3);
  case 10:
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_showScrollingSprite__P4458.info = {"start":24580,"length":1498,"line":827,"column":4,"endLine":856,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"showScrollingSprite","argumentNames":["this"]}

function RotatingScreens_showScrollingSprite__P4458_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_showScrollingSprite__P4458, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  newSprite___18711: undefined,
  arg0: undefined,
} }





function RotatingScreens_rebuild__P4453(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3473]) return breakpoint(s, 1, 3473, r0);
  case 1:
    s.tmp_0 = RotatingScreens__C4428_v2_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, RotatingScreens__C4428_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.createBase;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_rebuild__P4453.info = {"start":22957,"length":56,"line":775,"column":4,"endLine":777,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"rebuild","argumentNames":["this"]}

function RotatingScreens_rebuild__P4453_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_rebuild__P4453, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function RotatingScreens_createBase__P7309(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.minY___18326 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3520]) return breakpoint(s, 17, 3520, r0);
  case 17:
    s.tmp_0 = RotatingScreens_destroySprites__P4452_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1643; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 3521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3521]) return breakpoint(s, 19, 3521, r0);
  case 19:
    s.tmp_0 = scene_setBackgroundColor__P2882_mk(s);
    r0 = s.arg0.fields["_backColor"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1644; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 3522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3522]) return breakpoint(s, 21, 3522, r0);
  case 21:
    r0 = s.arg0.fields["_backImage"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3523]) return breakpoint(s, 22, 3523, r0);
  case 22:
    s.tmp_1 = scene_setBackgroundImage__P2884_mk(s);
    r0 = s.arg0.fields["_backImage"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1645; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3524]) return breakpoint(s, 24, 3524, r0);
  case 24:
    s.tmp_0 = scene_setBackgroundImage__P2884_mk(s);
    s.tmp_0.arg0 = null;
    s.callLocIdx = 1646; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
  case 2:
    s.lastBrkId = 3525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3525]) return breakpoint(s, 26, 3525, r0);
  case 26:
    s.tmp_0 = StringArrayTextSpriteFactory_DrawCenter__P4415_mk(s);
    r0 = s.arg0.fields["_titles"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 80;
    s.callLocIdx = 1647; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 3526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3526]) return breakpoint(s, 28, 3526, r0);
  case 28:
    r0 = s.arg0.fields["_footer"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["fontSize"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["padding"];
    s.tmp_7 = r0;
    r0 = (2 * s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    s.lastBrkId = 3527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3527]) return breakpoint(s, 29, 3527, r0);
  case 29:
    s.tmp_0 = StringTextSpriteFactory_DrawCenter__P4409_mk(s);
    r0 = s.arg0.fields["_footer"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 80;
    s.callLocIdx = 1648; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 3528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3528]) return breakpoint(s, 31, 3528, r0);
  case 31:
    r0 = s.arg0.fields["_midText"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 10);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    s.lastBrkId = 3529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3529]) return breakpoint(s, 32, 3529, r0);
  case 32:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3530]) return breakpoint(s, 33, 3530, r0);
  case 33:
    r0 = s.arg0.fields["_midText"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_6 = r0;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["fontSize"];
    s.tmp_11 = r0;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["padding"];
    s.tmp_12 = r0;
    r0 = (s.tmp_11 + s.tmp_12);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + 1);
    s.tmp_9 = r0;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_16 = r0;
    r0 = pxsim_Array__getAt(s.tmp_16, 0);
    s.tmp_15 = r0;
    r0 = pxsim_Array__length(s.tmp_15);
    s.tmp_14 = r0;
    r0 = (s.tmp_14 + 1);
    s.tmp_13 = r0;
    r0 = (s.tmp_9 * s.tmp_13);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 4);
    s.tmp_7 = r0;
    r0 = (s.tmp_6 - s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["y"] = (s.tmp_5);
    s.lastBrkId = 3531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3531]) return breakpoint(s, 34, 3531, r0);
  case 34:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__length(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 5:
    s.lastBrkId = 3532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3532]) return breakpoint(s, 35, 3532, r0);
  case 35:
    s.tmp_2 = String2dArrayTextSpriteFactory_DrawCenter__P4423_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 0;
    s.tmp_2.arg2 = 80;
    s.tmp_2.arg3 = false;
    s.callLocIdx = 1649; s.pc = 36; return s.tmp_2;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 3533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3533]) return breakpoint(s, 37, 3533, r0);
  case 37:
    { step = 8; continue; }
  case 6:
    s.lastBrkId = 3534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3534]) return breakpoint(s, 38, 3534, r0);
  case 38:
    s.tmp_0 = String2dArrayTextSpriteFactory_DrawLeft__P4424_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = false;
    s.callLocIdx = 1650; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.lastBrkId = 3535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3535]) return breakpoint(s, 40, 3535, r0);
  case 40:
    s.tmp_0 = String2dArrayTextSpriteFactory_DrawLeft__P4424_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = false;
    s.callLocIdx = 1651; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.lastBrkId = 3536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3536]) return breakpoint(s, 42, 3536, r0);
  case 42:
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 3537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3537]) return breakpoint(s, 43, 3537, r0);
  case 43:
    s.tmp_0 = String2dArrayTextSpriteFactory_DrawLeft__P4424_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = false;
    s.callLocIdx = 1652; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.lastBrkId = 3538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3538]) return breakpoint(s, 45, 3538, r0);
  case 45:
    s.tmp_0 = String2dArrayTextSpriteFactory_DrawCenter__P4423_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 80;
    s.tmp_0.arg3 = false;
    s.callLocIdx = 1653; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    s.lastBrkId = 3539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3539]) return breakpoint(s, 47, 3539, r0);
  case 47:
    s.tmp_0 = String2dArrayTextSpriteFactory_DrawLeft__P4424_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 2;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = false;
    s.callLocIdx = 1654; s.pc = 48; return s.tmp_0;
  case 48:
    r0 = s.retval;
    s.lastBrkId = 3540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3540]) return breakpoint(s, 49, 3540, r0);
  case 49:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 3541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3541]) return breakpoint(s, 50, 3541, r0);
  case 50:
    r0 = s.arg0.fields["_backImage"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3542]) return breakpoint(s, 51, 3542, r0);
  case 51:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["y"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_headlines"];
    r0 = r0.fields["fontSize"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.minY___18326 = (r0);
    s.lastBrkId = 3543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3543]) return breakpoint(s, 52, 3543, r0);
  case 52:
    r0 = s.arg0.fields["_backImage"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.minY___18326);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3544]) return breakpoint(s, 53, 3544, r0);
  case 53:
    r0 = s.arg0.fields["_headlines"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3).fields["y"] = (s.minY___18326);
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 3545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3545]) return breakpoint(s, 54, 3545, r0);
  case 54:
    r0 = s.arg0.fields["_headlines"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_backImage"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
  case 12:
    { step = 16; continue; }
  case 13:
    s.lastBrkId = 3546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3546]) return breakpoint(s, 55, 3546, r0);
  case 55:
    r0 = s.arg0.fields["_titles"];
    r0 = r0.fields["data"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 3547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3547]) return breakpoint(s, 56, 3547, r0);
  case 56:
    r0 = s.arg0.fields["_headlines"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_titles"];
    r0 = r0.fields["fontSize"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["_titles"];
    r0 = r0.fields["data"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__length(s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_6 * s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["_titles"];
    r0 = r0.fields["data"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__length(s.tmp_10);
    s.tmp_9 = r0;
    r0 = (s.tmp_5 + s.tmp_9);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["y"] = (s.tmp_2);
    { step = 15; continue; }
  case 14:
    s.lastBrkId = 3548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3548]) return breakpoint(s, 57, 3548, r0);
  case 57:
    r0 = s.arg0.fields["_headlines"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["y"] = (4);
  case 15:
  case 16:
    s.lastBrkId = 3549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3549]) return breakpoint(s, 58, 3549, r0);
  case 58:
    s.tmp_0 = if_y_2_mk(s);
    r0 = s.arg0.fields["_movingSprites"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_headlines"];
    r0 = r0.fields["y"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["_headlines"];
    r0 = r0.fields["fontSize"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["y"];
    s.tmp_7 = r0;
    r0 = (s.tmp_2 + s.tmp_7);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "y", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/y"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["y"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1655; s.pc = 59; return s.tmp_0; }
    }
  case 59:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_createBase__P7309.info = {"start":27774,"length":2371,"line":900,"column":4,"endLine":956,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"createBase","argumentNames":["this"]}

function RotatingScreens_createBase__P7309_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_createBase__P7309, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  minY___18326: undefined,
  arg0: undefined,
} }





function RotatingScreens_destroySprites__P4452(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sprite___17382 = undefined;
    s.unnamed12710___U1 = undefined;
    s.unnamed12711___U2 = undefined;
    s.sprite___17391 = undefined;
    s.unnamed12712___U4 = undefined;
    s.unnamed12713___U5 = undefined;
    s.sprite___17400 = undefined;
    s.unnamed12714___U7 = undefined;
    s.unnamed12715___U8 = undefined;
    s.sprite___17409 = undefined;
    s.unnamed12716___U10 = undefined;
    s.unnamed12717___U11 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3457]) return breakpoint(s, 9, 3457, r0);
  case 9:
    s.sprite___17382 = (undefined);
    s.tmp_0 = sprites_allOfKind__P2278_mk(s);
    s.tmp_0.arg0 = globals.InfoScreens___4346;
    s.callLocIdx = 1586; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.unnamed12710___U1 = (r0);
    s.unnamed12711___U2 = (0);
    s.lastBrkId = 3458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3458]) return breakpoint(s, 11, 3458, r0);
  case 11:
  case 1:
    s.tmp_0 = r0 = s.unnamed12711___U2;
    r0 = pxsim_Array__length(s.unnamed12710___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12710___U1, s.unnamed12711___U2);
    s.sprite___17382 = (r0);
    s.lastBrkId = 3459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3459]) return breakpoint(s, 12, 3459, r0);
  case 12:
    s.lastBrkId = 3460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3460]) return breakpoint(s, 13, 3460, r0);
  case 13:
    s.tmp_2 = Sprite_destroy__P2427_mk(s);
    s.tmp_2.arg0 = s.sprite___17382;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1587; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    r0 = (s.unnamed12711___U2 + 1);
    s.unnamed12711___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12710___U1 = (undefined);
    s.lastBrkId = 3461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3461]) return breakpoint(s, 15, 3461, r0);
  case 15:
    s.sprite___17391 = (undefined);
    s.tmp_0 = sprites_allOfKind__P2278_mk(s);
    s.tmp_0.arg0 = globals.Moving___4347;
    s.callLocIdx = 1588; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.unnamed12712___U4 = (r0);
    s.unnamed12713___U5 = (0);
    s.lastBrkId = 3462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3462]) return breakpoint(s, 17, 3462, r0);
  case 17:
  case 3:
    s.tmp_0 = r0 = s.unnamed12713___U5;
    r0 = pxsim_Array__length(s.unnamed12712___U4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12712___U4, s.unnamed12713___U5);
    s.sprite___17391 = (r0);
    s.lastBrkId = 3463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3463]) return breakpoint(s, 18, 3463, r0);
  case 18:
    s.lastBrkId = 3464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3464]) return breakpoint(s, 19, 3464, r0);
  case 19:
    s.tmp_2 = Sprite_destroy__P2427_mk(s);
    s.tmp_2.arg0 = s.sprite___17391;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1589; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    r0 = (s.unnamed12713___U5 + 1);
    s.unnamed12713___U5 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed12712___U4 = (undefined);
    s.lastBrkId = 3465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3465]) return breakpoint(s, 21, 3465, r0);
  case 21:
    s.sprite___17400 = (undefined);
    s.tmp_0 = sprites_allOfKind__P2278_mk(s);
    s.tmp_0.arg0 = globals.Static___4348;
    s.callLocIdx = 1590; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.unnamed12714___U7 = (r0);
    s.unnamed12715___U8 = (0);
    s.lastBrkId = 3466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3466]) return breakpoint(s, 23, 3466, r0);
  case 23:
  case 5:
    s.tmp_0 = r0 = s.unnamed12715___U8;
    r0 = pxsim_Array__length(s.unnamed12714___U7);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12714___U7, s.unnamed12715___U8);
    s.sprite___17400 = (r0);
    s.lastBrkId = 3467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3467]) return breakpoint(s, 24, 3467, r0);
  case 24:
    s.lastBrkId = 3468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3468]) return breakpoint(s, 25, 3468, r0);
  case 25:
    s.tmp_2 = Sprite_destroy__P2427_mk(s);
    s.tmp_2.arg0 = s.sprite___17400;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1591; s.pc = 26; return s.tmp_2;
  case 26:
    r0 = s.retval;
    r0 = (s.unnamed12715___U8 + 1);
    s.unnamed12715___U8 = (r0);
    { step = 5; continue; }
  case 6:
    s.unnamed12714___U7 = (undefined);
    s.lastBrkId = 3469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3469]) return breakpoint(s, 27, 3469, r0);
  case 27:
    s.sprite___17409 = (undefined);
    s.tmp_0 = sprites_allOfKind__P2278_mk(s);
    s.tmp_0.arg0 = globals.Text___4331;
    s.callLocIdx = 1592; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.unnamed12716___U10 = (r0);
    s.unnamed12717___U11 = (0);
    s.lastBrkId = 3470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3470]) return breakpoint(s, 29, 3470, r0);
  case 29:
  case 7:
    s.tmp_0 = r0 = s.unnamed12717___U11;
    r0 = pxsim_Array__length(s.unnamed12716___U10);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12716___U10, s.unnamed12717___U11);
    s.sprite___17409 = (r0);
    s.lastBrkId = 3471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3471]) return breakpoint(s, 30, 3471, r0);
  case 30:
    s.lastBrkId = 3472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3472]) return breakpoint(s, 31, 3472, r0);
  case 31:
    s.tmp_2 = Sprite_destroy__P2427_mk(s);
    s.tmp_2.arg0 = s.sprite___17409;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1593; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    r0 = (s.unnamed12717___U11 + 1);
    s.unnamed12717___U11 = (r0);
    { step = 7; continue; }
  case 8:
    s.unnamed12716___U10 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_destroySprites__P4452.info = {"start":22327,"length":500,"line":756,"column":4,"endLine":769,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"destroySprites","argumentNames":["this"]}

function RotatingScreens_destroySprites__P4452_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_destroySprites__P4452, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  sprite___17382: undefined,
  unnamed12710___U1: undefined,
  unnamed12711___U2: undefined,
  sprite___17391: undefined,
  unnamed12712___U4: undefined,
  unnamed12713___U5: undefined,
  sprite___17400: undefined,
  unnamed12714___U7: undefined,
  unnamed12715___U8: undefined,
  sprite___17409: undefined,
  unnamed12716___U10: undefined,
  unnamed12717___U11: undefined,
  arg0: undefined,
} }





function sprites_allOfKind__P2278(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.spritesByKind___17418 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1039]) return breakpoint(s, 6, 1039, r0);
  case 6:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 309; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["spritesByKind"];
    s.spritesByKind___17418 = (r0);
    s.lastBrkId = 1040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1040]) return breakpoint(s, 8, 1040, r0);
  case 8:
    r0 = (s.arg0 >= 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___17418, s.arg0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1041]) return breakpoint(s, 9, 1041, r0);
  case 9:
    r0 = pxsim_Array__mk();
    { step = 5; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1042]) return breakpoint(s, 10, 1042, r0);
  case 10:
    s.tmp_6 = sprites_SpriteSet_sprites__P2466_mk(s);
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___17418, s.arg0);
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 310; s.pc = 11; return s.tmp_6;
  case 11:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
sprites_allOfKind__P2278.info = {"start":2425,"length":234,"line":81,"column":4,"endLine":85,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"allOfKind","argumentNames":["kind"]}

function sprites_allOfKind__P2278_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_allOfKind__P2278, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  spritesByKind___17418: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_sprites__P2466(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2462_VT)) failedCast(r0);
    s.lastBrkId = 1303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1303]) return breakpoint(s, 1, 1303, r0);
  case 1:
    s.tmp_0 = helpers_arrayFilter__P110_mk(s);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = sprites_SpriteSet_sprites_inline__P17439;
    s.callLocIdx = 528; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_sprites__P2466.info = {"start":784,"length":104,"line":33,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"sprites","argumentNames":["this"]}

function sprites_SpriteSet_sprites__P2466_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_sprites__P2466, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_sprites_inline__P17439(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_sprites_inline__P17439.info = {"start":836,"length":40,"line":34,"column":40,"endLine":34,"endColumn":80,"fileName":"pxt_modules/game/spriteset.ts","functionName":"inline","argumentNames":["s"]}

function sprites_SpriteSet_sprites_inline__P17439_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_sprites_inline__P17439, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function String2dArrayTextSpriteFactory_DrawLeft__P4424(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___18409 = undefined;
    s.unnamed12702___U1 = undefined;
    s.unnamed12703___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, String2dArrayTextSpriteFactory__C4420_VT)) failedCast(r0);
    s.lastBrkId = 3382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3382]) return breakpoint(s, 3, 3382, r0);
  case 3:
    s.tmp_0 = String2dArrayTextSpriteFactory_CreateSprites__P7306_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.callLocIdx = 1566; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3383]) return breakpoint(s, 5, 3383, r0);
  case 5:
    s.s___18409 = (undefined);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg1);
    s.unnamed12702___U1 = (r0);
    s.unnamed12703___U2 = (0);
    s.lastBrkId = 3384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3384]) return breakpoint(s, 6, 3384, r0);
  case 6:
  case 1:
    s.tmp_0 = r0 = s.unnamed12703___U2;
    r0 = pxsim_Array__length(s.unnamed12702___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12702___U1, s.unnamed12703___U2);
    s.s___18409 = (r0);
    s.lastBrkId = 3385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3385]) return breakpoint(s, 7, 3385, r0);
  case 7:
    s.lastBrkId = 3386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3386]) return breakpoint(s, 8, 3386, r0);
  case 8:
    s.tmp_2 = Sprite_left__P2399_mk(s);
    s.tmp_2.arg0 = s.s___18409;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 1567; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    r0 = (s.unnamed12703___U2 + 1);
    s.unnamed12703___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12702___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
String2dArrayTextSpriteFactory_DrawLeft__P4424.info = {"start":8931,"length":213,"line":362,"column":4,"endLine":367,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"DrawLeft","argumentNames":["this","index","left","reset"]}

function String2dArrayTextSpriteFactory_DrawLeft__P4424_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: String2dArrayTextSpriteFactory_DrawLeft__P4424, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  s___18409: undefined,
  unnamed12702___U1: undefined,
  unnamed12703___U2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function StringArrayTextSpriteFactory_DrawCenter__P4415(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___18469 = undefined;
    s.unnamed12692___U1 = undefined;
    s.unnamed12693___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringArrayTextSpriteFactory__C4412_VT)) failedCast(r0);
    s.lastBrkId = 3331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3331]) return breakpoint(s, 3, 3331, r0);
  case 3:
    s.tmp_0 = StringArrayTextSpriteFactory_CreateSprites__P7304_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1550; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3332]) return breakpoint(s, 5, 3332, r0);
  case 5:
    s.s___18469 = (undefined);
    r0 = s.arg0.fields["_sprites"];
    s.unnamed12692___U1 = (r0);
    s.unnamed12693___U2 = (0);
    s.lastBrkId = 3333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3333]) return breakpoint(s, 6, 3333, r0);
  case 6:
  case 1:
    s.tmp_0 = r0 = s.unnamed12693___U2;
    r0 = pxsim_Array__length(s.unnamed12692___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12692___U1, s.unnamed12693___U2);
    s.s___18469 = (r0);
    s.lastBrkId = 3334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3334]) return breakpoint(s, 7, 3334, r0);
  case 7:
    s.lastBrkId = 3335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3335]) return breakpoint(s, 8, 3335, r0);
  case 8:
    s.tmp_2 = Sprite_x__P2354_mk(s);
    s.tmp_2.arg0 = s.s___18469;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 1551; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    r0 = (s.unnamed12693___U2 + 1);
    s.unnamed12693___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12692___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StringArrayTextSpriteFactory_DrawCenter__P4415.info = {"start":6130,"length":145,"line":262,"column":4,"endLine":267,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"DrawCenter","argumentNames":["this","x"]}

function StringArrayTextSpriteFactory_DrawCenter__P4415_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringArrayTextSpriteFactory_DrawCenter__P4415, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  s___18469: undefined,
  unnamed12692___U1: undefined,
  unnamed12693___U2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function StringArrayTextSpriteFactory_CreateSprites__P7304(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___18483 = undefined;
    s.unnamed12696___U1 = undefined;
    s.unnamed12697___U2 = undefined;
    s.currY___18496 = undefined;
    s.text___18500 = undefined;
    s.unnamed12698___U5 = undefined;
    s.unnamed12699___U6 = undefined;
    s.ts___18503 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringArrayTextSpriteFactory__C4412_VT)) failedCast(r0);
    s.lastBrkId = 3353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3353]) return breakpoint(s, 11, 3353, r0);
  case 11:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3354]) return breakpoint(s, 12, 3354, r0);
  case 12:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3355]) return breakpoint(s, 13, 3355, r0);
  case 13:
    s.s___18483 = (undefined);
    r0 = s.arg0.fields["_sprites"];
    s.unnamed12696___U1 = (r0);
    s.unnamed12697___U2 = (0);
    s.lastBrkId = 3356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3356]) return breakpoint(s, 14, 3356, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed12697___U2;
    r0 = pxsim_Array__length(s.unnamed12696___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12696___U1, s.unnamed12697___U2);
    s.s___18483 = (r0);
    s.lastBrkId = 3357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3357]) return breakpoint(s, 15, 3357, r0);
  case 15:
    s.lastBrkId = 3358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3358]) return breakpoint(s, 16, 3358, r0);
  case 16:
    s.tmp_2 = Sprite_destroy__P2427_mk(s);
    s.tmp_2.arg0 = s.s___18483;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1558; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
    r0 = (s.unnamed12697___U2 + 1);
    s.unnamed12697___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12696___U1 = (undefined);
  case 3:
  case 4:
    s.lastBrkId = 3359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3359]) return breakpoint(s, 18, 3359, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 3360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3360]) return breakpoint(s, 19, 3360, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
  case 6:
    s.lastBrkId = 3361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3361]) return breakpoint(s, 20, 3361, r0);
  case 20:
    r0 = s.arg0.fields["y"];
    s.currY___18496 = (r0);
    s.lastBrkId = 3362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3362]) return breakpoint(s, 21, 3362, r0);
  case 21:
    s.text___18500 = (undefined);
    r0 = s.arg0.fields["data"];
    s.unnamed12698___U5 = (r0);
    s.unnamed12699___U6 = (0);
    s.lastBrkId = 3363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3363]) return breakpoint(s, 22, 3363, r0);
  case 22:
  case 7:
    s.tmp_0 = r0 = s.unnamed12699___U6;
    r0 = pxsim_Array__length(s.unnamed12698___U5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12698___U5, s.unnamed12699___U6);
    s.text___18500 = (r0);
    s.lastBrkId = 3364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3364]) return breakpoint(s, 23, 3364, r0);
  case 23:
    s.lastBrkId = 3365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3365]) return breakpoint(s, 24, 3365, r0);
  case 24:
    s.tmp_2 = textsprite_create__P4343_mk(s);
    s.tmp_2.arg0 = s.text___18500;
    s.tmp_2.arg1 = 0;
    r0 = s.arg0.fields["color"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1559; s.pc = 25; return s.tmp_2;
  case 25:
    r0 = s.retval;
    s.ts___18503 = (r0);
    s.lastBrkId = 3366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3366]) return breakpoint(s, 26, 3366, r0);
  case 26:
    r0 = s.arg0.fields["padding"];
    s.tmp_0 = r0;
    r0 = (s.ts___18503).fields["padding"] = (s.tmp_0);
    s.lastBrkId = 3367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3367]) return breakpoint(s, 27, 3367, r0);
  case 27:
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 3368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3368]) return breakpoint(s, 28, 3368, r0);
  case 28:
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_2 = r0;
    r0 = (s.ts___18503).fields["borderWidth"] = (s.tmp_2);
    s.lastBrkId = 3369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3369]) return breakpoint(s, 29, 3369, r0);
  case 29:
    r0 = (s.ts___18503).fields["borderColor"] = (0);
  case 8:
  case 9:
    s.lastBrkId = 3370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3370]) return breakpoint(s, 30, 3370, r0);
  case 30:
    s.tmp_0 = TextSprite_setMaxFontHeight__P4335_mk(s);
    s.tmp_0.arg0 = s.ts___18503;
    r0 = s.arg0.fields["fontSize"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1560; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 3371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3371]) return breakpoint(s, 32, 3371, r0);
  case 32:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    s.tmp_0.arg0 = s.ts___18503;
    s.tmp_0.arg1 = s.currY___18496;
    s.callLocIdx = 1561; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    s.lastBrkId = 3372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3372]) return breakpoint(s, 34, 3372, r0);
  case 34:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.ts___18503);
    s.lastBrkId = 3373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3373]) return breakpoint(s, 35, 3373, r0);
  case 35:
    s.tmp_0 = r0 = s.currY___18496;
    s.tmp_3 = Sprite_height__P2397_mk(s);
    s.tmp_3.arg0 = s.ts___18503;
    s.callLocIdx = 1562; s.pc = 36; return s.tmp_3;
  case 36:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.currY___18496 = (r0);
    r0 = (s.unnamed12699___U6 + 1);
    s.unnamed12699___U6 = (r0);
    { step = 7; continue; }
  case 10:
    s.unnamed12698___U5 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StringArrayTextSpriteFactory_CreateSprites__P7304.info = {"start":7391,"length":800,"line":308,"column":4,"endLine":333,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"CreateSprites","argumentNames":["this"]}

function StringArrayTextSpriteFactory_CreateSprites__P7304_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringArrayTextSpriteFactory_CreateSprites__P7304, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  s___18483: undefined,
  unnamed12696___U1: undefined,
  unnamed12697___U2: undefined,
  currY___18496: undefined,
  text___18500: undefined,
  unnamed12698___U5: undefined,
  unnamed12699___U6: undefined,
  ts___18503: undefined,
  arg0: undefined,
} }





function StringTextSpriteFactory_DrawCenter__P4409(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringTextSpriteFactory__C4405_VT)) failedCast(r0);
    s.lastBrkId = 3317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3317]) return breakpoint(s, 1, 3317, r0);
  case 1:
    s.tmp_0 = StringTextSpriteFactory_CreateSprite__P7302_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1543; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3318]) return breakpoint(s, 3, 3318, r0);
  case 3:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["_sprite"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1544; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StringTextSpriteFactory_DrawCenter__P4409.info = {"start":4826,"length":102,"line":212,"column":4,"endLine":215,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"DrawCenter","argumentNames":["this","x"]}

function StringTextSpriteFactory_DrawCenter__P4409_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringTextSpriteFactory_DrawCenter__P4409, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function StringTextSpriteFactory_CreateSprite__P7302(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringTextSpriteFactory__C4405_VT)) failedCast(r0);
    s.lastBrkId = 3319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3319]) return breakpoint(s, 5, 3319, r0);
  case 5:
    r0 = s.arg0.fields["_sprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3320]) return breakpoint(s, 6, 3320, r0);
  case 6:
    s.tmp_1 = Sprite_destroy__P2427_mk(s);
    r0 = s.arg0.fields["_sprite"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1545; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 3321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3321]) return breakpoint(s, 8, 3321, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = textsprite_create__P4343_mk(s);
    r0 = s.arg0.fields["data"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 0;
    r0 = s.arg0.fields["color"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1546; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprite"] = (s.tmp_1);
    s.lastBrkId = 3322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3322]) return breakpoint(s, 10, 3322, r0);
  case 10:
    r0 = s.arg0.fields["_sprite"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["padding"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["padding"] = (s.tmp_1);
    s.lastBrkId = 3323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3323]) return breakpoint(s, 11, 3323, r0);
  case 11:
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3324]) return breakpoint(s, 12, 3324, r0);
  case 12:
    r0 = s.arg0.fields["_sprite"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["borderWidth"] = (s.tmp_3);
    s.lastBrkId = 3325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3325]) return breakpoint(s, 13, 3325, r0);
  case 13:
    r0 = s.arg0.fields["_sprite"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["borderColor"] = (0);
  case 3:
  case 4:
    s.lastBrkId = 3326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3326]) return breakpoint(s, 14, 3326, r0);
  case 14:
    s.tmp_0 = TextSprite_setMaxFontHeight__P4335_mk(s);
    r0 = s.arg0.fields["_sprite"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["fontSize"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1547; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 3327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3327]) return breakpoint(s, 16, 3327, r0);
  case 16:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    r0 = s.arg0.fields["_sprite"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1548; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StringTextSpriteFactory_CreateSprite__P7302.info = {"start":5168,"length":453,"line":227,"column":4,"endLine":240,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"CreateSprite","argumentNames":["this"]}

function StringTextSpriteFactory_CreateSprite__P7302_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringTextSpriteFactory_CreateSprite__P7302, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function GameSettings_build__P158158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.headlines___158159 = undefined;
    s.s___158166 = undefined;
    s.unnamed20262___U2 = undefined;
    s.unnamed20263___U3 = undefined;
    r0 = pxsim_Array__mk();
    s.headlines___158159 = (r0);
    r0 = pxsim_Array__push(s.headlines___158159, globals.TEXT_SETTINGS_HEADLINES___158134);
    s.s___158166 = (undefined);
    s.unnamed20262___U2 = (globals.TEXT_HEADLINES___4563);
    s.unnamed20263___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20263___U3;
    r0 = pxsim_Array__length(s.unnamed20262___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20262___U2, s.unnamed20263___U3);
    s.s___158166 = (r0);
    r0 = pxsim_Array__push(s.headlines___158159, s.s___158166);
    r0 = (s.unnamed20263___U3 + 1);
    s.unnamed20263___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed20262___U2 = (undefined);
    r0 = pxsim_pxtcore_mkClassInstance(OptionScreenCollection__C4488_VT);
    s.tmp_0 = r0;
    s.tmp_1 = OptionScreenCollection_constructor__P4489_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.TEXT_TITLES___4564;
    s.tmp_1.arg2 = 5;
    s.tmp_1.arg3 = s.headlines___158159;
    s.tmp_1.arg4 = 14;
    s.tmp_1.arg5 = null;
    s.tmp_1.arg6 = null;
    s.callLocIdx = 185; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    globals.settingsScreens___158123 = (s.tmp_0);
    s.tmp_1 = RotatingScreens_titles__P4444_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 186; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["fontSize"] = (8);
    s.tmp_1 = RotatingScreens_headlines__P4435_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 187; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["fontSize"] = (5);
    s.tmp_1 = RotatingScreens_footer__P4434_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 188; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["fontSize"] = (5);
    s.tmp_0 = OptionScreen_doneText__P4470_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    s.tmp_0.arg1 = globals.TEXT_DONE___158128;
    s.callLocIdx = 189; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = OptionScreenCollection_addScreen__P4495_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    s.tmp_0.arg1 = globals.TEXT_SETTINGS_PLAYERS_TAB___158136;
    s.tmp_0.arg2 = globals.TEXT_SETTINGS_PLAYERS___158138;
    s.tmp_0.arg3 = false;
    s.callLocIdx = 190; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.tmp_0 = OptionScreenCollection_addScreen__P4495_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    s.tmp_0.arg1 = globals.TEXT_SETTINGS_MULTIPLAYER_TAB___158141;
    s.tmp_0.arg2 = globals.TEXT_SETTINGS_MULTIPLAYER___158143;
    s.tmp_0.arg3 = false;
    s.callLocIdx = 191; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.tmp_0 = OptionScreenCollection_setSelectionForScreen__P4501_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 1;
    s.callLocIdx = 192; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.HARDWARE___175561);
    if (!r0) { step = 3; continue; }
    s.tmp_0 = OptionScreenCollection_setSelectionForScreen__P4501_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 193; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.tmp_0 = OptionScreenCollection_setSelectionForScreen__P4501_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 1;
    s.callLocIdx = 194; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GameSettings_build__P158158.info = {"start":1218,"length":1030,"line":34,"column":4,"endLine":58,"endColumn":5,"fileName":"settings.ts","functionName":"build","argumentNames":[]}

function GameSettings_build__P158158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GameSettings_build__P158158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  headlines___158159: undefined,
  s___158166: undefined,
  unnamed20262___U2: undefined,
  unnamed20263___U3: undefined,
} }





function OptionScreenCollection_setSelectionForScreen__P4501(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3751]) return breakpoint(s, 1, 3751, r0);
  case 1:
    r0 = s.arg0.fields["_selectedOptionsColl"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg2, s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_setSelectionForScreen__P4501.info = {"start":55729,"length":154,"line":1681,"column":4,"endLine":1683,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"setSelectionForScreen","argumentNames":["this","screen","index","value"]}

function OptionScreenCollection_setSelectionForScreen__P4501_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_setSelectionForScreen__P4501, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function OptionScreenCollection_addScreen__P4495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.maxOptions___17515 = undefined;
    s.index___17516 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3717]) return breakpoint(s, 7, 3717, r0);
  case 7:
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3718]) return breakpoint(s, 8, 3718, r0);
  case 8:
    r0 = (s.arg0).fields["_currOptScreen"] = (0);
  case 1:
  case 2:
    s.lastBrkId = 3719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3719]) return breakpoint(s, 9, 3719, r0);
  case 9:
    r0 = s.arg0.fields["_tabs"];
    r0 = r0.fields["data"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 3720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3720]) return breakpoint(s, 10, 3720, r0);
  case 10:
    r0 = s.arg0.fields["_optionSets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg2);
    s.lastBrkId = 3721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3721]) return breakpoint(s, 11, 3721, r0);
  case 11:
    r0 = s.arg0.fields["_optionSetHasHeaders"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg3);
    s.lastBrkId = 3722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3722]) return breakpoint(s, 12, 3722, r0);
  case 12:
    r0 = s.arg0.fields["_selectedOptionsColl"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 3723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3723]) return breakpoint(s, 13, 3723, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["_tabs"];
    r0 = r0.fields["data"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_showPrevious"] = (s.tmp_1);
    s.lastBrkId = 3724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3724]) return breakpoint(s, 14, 3724, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["_tabs"];
    r0 = r0.fields["data"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_showNext"] = (s.tmp_1);
    s.lastBrkId = 3725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3725]) return breakpoint(s, 15, 3725, r0);
  case 15:
    s.maxOptions___17515 = (0);
    s.lastBrkId = 3726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3726]) return breakpoint(s, 16, 3726, r0);
  case 16:
    s.index___17516 = (0);
    s.lastBrkId = 3727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3727]) return breakpoint(s, 17, 3727, r0);
  case 17:
  case 3:
    s.lastBrkId = 3728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3728]) return breakpoint(s, 18, 3728, r0);
  case 18:
    s.tmp_1 = r0 = s.index___17516;
    r0 = s.arg0.fields["_optionSets"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3729]) return breakpoint(s, 19, 3729, r0);
  case 19:
    r0 = s.arg0.fields["_optionSets"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_8, s.index___17516);
    s.tmp_7 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, 0);
    s.tmp_6 = r0;
    r0 = pxsim_Array__length(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > s.maxOptions___17515);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 3730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3730]) return breakpoint(s, 20, 3730, r0);
  case 20:
    r0 = s.arg0.fields["_optionSets"];
    s.tmp_11 = r0;
    r0 = pxsim_Array__getAt(s.tmp_11, s.index___17516);
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_10, 0);
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.maxOptions___17515 = (r0);
  case 4:
  case 5:
    s.lastBrkId = 3731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3731]) return breakpoint(s, 21, 3731, r0);
  case 21:
    r0 = (s.index___17516 + 1);
    s.index___17516 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 3732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3732]) return breakpoint(s, 22, 3732, r0);
  case 22:
    r0 = s.arg0.fields["_tabs"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["fontSize"];
    s.tmp_9 = r0;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["padding"];
    s.tmp_10 = r0;
    r0 = (s.tmp_9 + s.tmp_10);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 1);
    s.tmp_7 = r0;
    r0 = (s.maxOptions___17515 + 1);
    s.tmp_11 = r0;
    r0 = (s.tmp_7 * s.tmp_11);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["_tabs"];
    r0 = r0.fields["fontSize"];
    s.tmp_12 = r0;
    r0 = (s.tmp_4 - s.tmp_12);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["_tabs"];
    r0 = r0.fields["padding"];
    s.tmp_15 = r0;
    r0 = (s.tmp_15 + 1);
    s.tmp_14 = r0;
    r0 = (s.tmp_14 * 2);
    s.tmp_13 = r0;
    r0 = (s.tmp_3 - s.tmp_13);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_addScreen__P4495.info = {"start":52432,"length":1033,"line":1597,"column":4,"endLine":1616,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"addScreen","argumentNames":["this","name","options","hasHeaders"]}

function OptionScreenCollection_addScreen__P4495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_addScreen__P4495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  maxOptions___17515: undefined,
  index___17516: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function OptionScreen_doneText__P4470(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3567]) return breakpoint(s, 1, 3567, r0);
  case 1:
    r0 = s.arg0.fields["_footer"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["data"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_doneText__P4470.info = {"start":35383,"length":76,"line":1105,"column":4,"endLine":1107,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"doneText","argumentNames":["this","value"]}

function OptionScreen_doneText__P4470_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_doneText__P4470, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function OptionScreen_doneText__P4469(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3566]) return breakpoint(s, 1, 3566, r0);
  case 1:
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
OptionScreen_doneText__P4469.info = {"start":35204,"length":70,"line":1098,"column":4,"endLine":1100,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"doneText","argumentNames":["this"]}
OptionScreen_doneText__P4469.isGetter = true;

function OptionScreen_doneText__P4469_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_doneText__P4469, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function RotatingScreens_footer__P4434(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3441]) return breakpoint(s, 1, 3441, r0);
  case 1:
    r0 = s.arg0.fields["_footer"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
RotatingScreens_footer__P4434.info = {"start":16241,"length":81,"line":570,"column":4,"endLine":572,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"footer","argumentNames":["this"]}
RotatingScreens_footer__P4434.isGetter = true;

function RotatingScreens_footer__P4434_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_footer__P4434, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function RotatingScreens_titles__P4444(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3444]) return breakpoint(s, 1, 3444, r0);
  case 1:
    r0 = s.arg0.fields["_titles"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
RotatingScreens_titles__P4444.info = {"start":18976,"length":86,"line":654,"column":4,"endLine":656,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"titles","argumentNames":["this"]}
RotatingScreens_titles__P4444.isGetter = true;

function RotatingScreens_titles__P4444_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_titles__P4444, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function OptionScreenCollection_constructor__P4489(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3711]) return breakpoint(s, 1, 3711, r0);
  case 1:
    s.tmp_0 = OptionScreen_constructor__P4465_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg3;
    s.tmp_0.arg4 = s.arg4;
    r0 = pxsim_Array__mk();
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 9;
    s.tmp_0.arg7 = false;
    s.tmp_0.arg8 = s.arg5;
    s.tmp_0.arg9 = s.arg6;
    s.callLocIdx = 1759; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3712]) return breakpoint(s, 3, 3712, r0);
  case 3:
    r0 = (s.arg0).fields["_currOptScreen"] = (-1);
    s.lastBrkId = 3713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3713]) return breakpoint(s, 4, 3713, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_optionSetHasHeaders"] = (s.tmp_1);
    s.lastBrkId = 3714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3714]) return breakpoint(s, 5, 3714, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_optionSets"] = (s.tmp_1);
    s.lastBrkId = 3715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3715]) return breakpoint(s, 6, 3715, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_selectedOptionsColl"] = (s.tmp_1);
    s.lastBrkId = 3716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3716]) return breakpoint(s, 7, 3716, r0);
  case 7:
    r0 = pxsim_pxtcore_mkClassInstance(StringArrayTextSpriteFactory__C4412_VT);
    s.tmp_0 = r0;
    s.tmp_1 = StringArrayTextSpriteFactory_constructor__P4414_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = pxsim_Array__mk();
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = 3;
    s.tmp_1.arg3 = 5;
    s.tmp_1.arg4 = 0;
    s.tmp_1.arg5 = 0;
    s.tmp_1.arg6 = 1;
    s.tmp_1.arg7 = 1;
    s.callLocIdx = 1760; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    r0 = (s.arg0).fields["_tabs"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_constructor__P4489.info = {"start":50458,"length":630,"line":1532,"column":4,"endLine":1547,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"inline","argumentNames":["this","titles","titlesColor","headlines","headlinesColor","backColor","delay"]}

function OptionScreenCollection_constructor__P4489_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_constructor__P4489, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function OptionScreen_constructor__P4465(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3551]) return breakpoint(s, 1, 3551, r0);
  case 1:
    s.tmp_0 = RotatingScreens_constructor__P4429_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg3;
    s.tmp_0.arg4 = s.arg4;
    s.tmp_0.arg5 = globals.DEFAULT_TEXT_DONE___4377;
    s.tmp_0.arg6 = null;
    s.tmp_0.arg7 = s.arg5;
    s.tmp_0.arg8 = s.arg6;
    s.tmp_0.arg9 = s.arg8;
    s.tmp_0.arg10 = s.arg9;
    s.callLocIdx = 1657; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3552]) return breakpoint(s, 3, 3552, r0);
  case 3:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "color", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "currGroup", 0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "currOption", 0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "isInFooter", false);
    r0 = (s.arg0).fields["_cursor"] = (s.tmp_0);
    s.lastBrkId = 3553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3553]) return breakpoint(s, 4, 3553, r0);
  case 4:
    r0 = (s.arg0).fields["_hasHeaders"] = (s.arg7);
    s.lastBrkId = 3554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3554]) return breakpoint(s, 5, 3554, r0);
  case 5:
    r0 = (s.arg0).fields["_isDone"] = (false);
    s.lastBrkId = 3555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3555]) return breakpoint(s, 6, 3555, r0);
  case 6:
    r0 = (s.arg0).fields["_showNext"] = (false);
    s.lastBrkId = 3556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3556]) return breakpoint(s, 7, 3556, r0);
  case 7:
    r0 = (s.arg0).fields["_showPrevious"] = (false);
    s.lastBrkId = 3557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3557]) return breakpoint(s, 8, 3557, r0);
  case 8:
    r0 = s.arg0.fields["_midText"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["padding"] = (1);
    s.lastBrkId = 3558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3558]) return breakpoint(s, 9, 3558, r0);
  case 9:
    r0 = s.arg0.fields["_midText"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["spacing"] = (0);
    s.lastBrkId = 3559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3559]) return breakpoint(s, 10, 3559, r0);
  case 10:
    r0 = s.arg0.fields["_midText"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["borderWidth"] = (1);
    s.lastBrkId = 3560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3560]) return breakpoint(s, 11, 3560, r0);
  case 11:
    r0 = s.arg0.fields["_footer"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["borderWidth"] = (1);
    s.lastBrkId = 3561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3561]) return breakpoint(s, 12, 3561, r0);
  case 12:
    s.tmp_0 = OptionScreen_buildSelectedOptions__P7312_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1658; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_constructor__P4465.info = {"start":33708,"length":915,"line":1049,"column":4,"endLine":1072,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"inline","argumentNames":["this","titles","titlesColor","headlines","headlinesColor","options","optionsColor","hasHeaders","backColor","delay"]}

function OptionScreen_constructor__P4465_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_constructor__P4465, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
} }





function RotatingScreens_constructor__P4429(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.arg10 = (s.lambdaArgs[10]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3427]) return breakpoint(s, 21, 3427, r0);
  case 21:
    r0 = (s.arg0).fields["_currScreen"] = (-1);
    s.lastBrkId = 3428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3428]) return breakpoint(s, 22, 3428, r0);
  case 22:
    r0 = (s.arg0).fields["_currSprite"] = (-1);
    s.lastBrkId = 3429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3429]) return breakpoint(s, 23, 3429, r0);
  case 23:
    r0 = pxsim_numops_toBoolDecr(s.arg9);
    if (!r0) { step = 1; continue; }
    r0 = s.arg9;
    { step = 2; continue; }
  case 1:
    r0 = 15;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_backColor"] = (s.tmp_0);
    s.lastBrkId = 3430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3430]) return breakpoint(s, 24, 3430, r0);
  case 24:
    r0 = (s.arg0).fields["_backImage"] = (null);
    s.lastBrkId = 3431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3431]) return breakpoint(s, 25, 3431, r0);
  case 25:
    r0 = pxsim_numops_toBoolDecr(s.arg10);
    if (!r0) { step = 3; continue; }
    r0 = s.arg10;
    { step = 4; continue; }
  case 3:
    r0 = 5000;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_interval"] = (s.tmp_0);
    s.lastBrkId = 3432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3432]) return breakpoint(s, 26, 3432, r0);
  case 26:
    r0 = (s.arg0).fields["_movingSpritesSequential"] = (true);
    s.lastBrkId = 3433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3433]) return breakpoint(s, 27, 3433, r0);
  case 27:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_staticSprites"] = (s.tmp_1);
    s.lastBrkId = 3434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3434]) return breakpoint(s, 28, 3434, r0);
  case 28:
    r0 = pxsim_pxtcore_mkClassInstance(StringTextSpriteFactory__C4405_VT);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg5);
    if (!r0) { step = 5; continue; }
    r0 = s.arg5;
    { step = 6; continue; }
  case 5:
    r0 = pxsim_String_.mkEmpty();
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg6);
    if (!r0) { step = 7; continue; }
    r0 = s.arg6;
    { step = 8; continue; }
  case 7:
    r0 = 1;
  case 8:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = StringTextSpriteFactory_constructor__P4407_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.tmp_1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = 8;
    s.tmp_3.arg4 = 0;
    s.tmp_3.arg5 = 1;
    s.tmp_3.arg6 = 0;
    s.tmp_3.arg7 = 0;
    s.callLocIdx = 1576; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    r0 = (s.arg0).fields["_footer"] = (s.tmp_0);
    s.lastBrkId = 3435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3435]) return breakpoint(s, 30, 3435, r0);
  case 30:
    r0 = pxsim_pxtcore_mkClassInstance(String2dArrayTextSpriteFactory__C4420_VT);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 9; continue; }
    r0 = s.arg3;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_Array__mk();
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    if (!r0) { step = 11; continue; }
    r0 = s.arg4;
    { step = 12; continue; }
  case 11:
    r0 = 14;
  case 12:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = String2dArrayTextSpriteFactory_constructor__P4422_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.tmp_1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = 8;
    s.tmp_3.arg4 = 0;
    s.tmp_3.arg5 = 1;
    s.tmp_3.arg6 = 0;
    s.tmp_3.arg7 = 0;
    s.callLocIdx = 1577; s.pc = 31; return s.tmp_3;
  case 31:
    r0 = s.retval;
    r0 = (s.arg0).fields["_headlines"] = (s.tmp_0);
    s.lastBrkId = 3436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3436]) return breakpoint(s, 32, 3436, r0);
  case 32:
    r0 = pxsim_pxtcore_mkClassInstance(String2dArrayTextSpriteFactory__C4420_VT);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg7);
    if (!r0) { step = 13; continue; }
    r0 = s.arg7;
    { step = 14; continue; }
  case 13:
    r0 = pxsim_Array__mk();
  case 14:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg8);
    if (!r0) { step = 15; continue; }
    r0 = s.arg8;
    { step = 16; continue; }
  case 15:
    r0 = 9;
  case 16:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = String2dArrayTextSpriteFactory_constructor__P4422_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.tmp_1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = 5;
    s.tmp_3.arg4 = 0;
    s.tmp_3.arg5 = 1;
    s.tmp_3.arg6 = 0;
    s.tmp_3.arg7 = 0;
    s.callLocIdx = 1578; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    r0 = (s.arg0).fields["_midText"] = (s.tmp_0);
    s.lastBrkId = 3437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3437]) return breakpoint(s, 34, 3437, r0);
  case 34:
    r0 = pxsim_pxtcore_mkClassInstance(StringArrayTextSpriteFactory__C4412_VT);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 17; continue; }
    r0 = s.arg1;
    { step = 18; continue; }
  case 17:
    r0 = pxsim_Array__mk();
  case 18:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 19; continue; }
    r0 = s.arg2;
    { step = 20; continue; }
  case 19:
    r0 = 5;
  case 20:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = StringArrayTextSpriteFactory_constructor__P4414_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.tmp_1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = 16;
    s.tmp_3.arg4 = 2;
    s.tmp_3.arg5 = 1;
    s.tmp_3.arg6 = 0;
    s.tmp_3.arg7 = 0;
    s.callLocIdx = 1579; s.pc = 35; return s.tmp_3;
  case 35:
    r0 = s.retval;
    r0 = (s.arg0).fields["_titles"] = (s.tmp_0);
    s.lastBrkId = 3438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3438]) return breakpoint(s, 36, 3438, r0);
  case 36:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "imgs", s.tmp_1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "dir", 0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "mode", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "speed", 100);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "y", 0);
    r0 = (s.arg0).fields["_movingSprites"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_constructor__P4429.info = {"start":13073,"length":1662,"line":468,"column":4,"endLine":516,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"inline","argumentNames":["this","titles","titlesColor","headlines","headlinesColor","footer","footerColor","midText","midTextColor","backColor","delay"]}

function RotatingScreens_constructor__P4429_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_constructor__P4429, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
  arg10: undefined,
} }





function String2dArrayTextSpriteFactory_constructor__P4422(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, String2dArrayTextSpriteFactory__C4420_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    s.lastBrkId = 3374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3374]) return breakpoint(s, 1, 3374, r0);
  case 1:
    s.tmp_2 = TextSpriteFactory_constructor__P4404_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg2;
    s.tmp_2.arg2 = s.arg3;
    s.tmp_2.arg3 = s.arg4;
    s.tmp_2.arg4 = s.arg5;
    s.tmp_2.arg5 = s.arg6;
    s.tmp_2.arg6 = s.arg7;
    s.callLocIdx = 1563; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3375]) return breakpoint(s, 3, 3375, r0);
  case 3:
    r0 = (s.arg0).fields["data"] = (s.arg1);
    s.lastBrkId = 3376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3376]) return breakpoint(s, 4, 3376, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
String2dArrayTextSpriteFactory_constructor__P4422.info = {"start":8378,"length":334,"line":341,"column":4,"endLine":353,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"inline","argumentNames":["this","data","color","fontSize","y","spacing","padding","borderWidth"]}

function String2dArrayTextSpriteFactory_constructor__P4422_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: String2dArrayTextSpriteFactory_constructor__P4422, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function TextSpriteFactory_constructor__P4404(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSpriteFactory__C4397_VT)) failedCast(r0);
    s.lastBrkId = 3307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3307]) return breakpoint(s, 1, 3307, r0);
  case 1:
    r0 = (s.arg0).fields["borderWidth"] = (s.arg6);
    s.lastBrkId = 3308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3308]) return breakpoint(s, 2, 3308, r0);
  case 2:
    r0 = (s.arg0).fields["color"] = (s.arg1);
    s.lastBrkId = 3309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3309]) return breakpoint(s, 3, 3309, r0);
  case 3:
    r0 = (s.arg0).fields["fontSize"] = (s.arg2);
    s.lastBrkId = 3310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3310]) return breakpoint(s, 4, 3310, r0);
  case 4:
    r0 = (s.arg0).fields["padding"] = (s.arg5);
    s.lastBrkId = 3311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3311]) return breakpoint(s, 5, 3311, r0);
  case 5:
    r0 = (s.arg0).fields["spacing"] = (s.arg4);
    s.lastBrkId = 3312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3312]) return breakpoint(s, 6, 3312, r0);
  case 6:
    r0 = (s.arg0).fields["y"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSpriteFactory_constructor__P4404.info = {"start":3935,"length":309,"line":178,"column":4,"endLine":186,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"inline","argumentNames":["this","color","fontSize","y","spacing","padding","borderWidth"]}

function TextSpriteFactory_constructor__P4404_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSpriteFactory_constructor__P4404, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function StringTextSpriteFactory_constructor__P4407(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringTextSpriteFactory__C4405_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_sprite"] = (null);
    s.lastBrkId = 3313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3313]) return breakpoint(s, 1, 3313, r0);
  case 1:
    s.tmp_0 = TextSpriteFactory_constructor__P4404_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg4;
    s.tmp_0.arg4 = s.arg5;
    s.tmp_0.arg5 = s.arg6;
    s.tmp_0.arg6 = s.arg7;
    s.callLocIdx = 1542; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3314]) return breakpoint(s, 3, 3314, r0);
  case 3:
    r0 = (s.arg0).fields["data"] = (s.arg1);
    s.lastBrkId = 3315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3315]) return breakpoint(s, 4, 3315, r0);
  case 4:
    r0 = (s.arg0).fields["_sprite"] = (null);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StringTextSpriteFactory_constructor__P4407.info = {"start":4415,"length":332,"line":194,"column":4,"endLine":206,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"inline","argumentNames":["this","data","color","fontSize","y","spacing","padding","borderWidth"]}

function StringTextSpriteFactory_constructor__P4407_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringTextSpriteFactory_constructor__P4407, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function StringArrayTextSpriteFactory_constructor__P4414(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringArrayTextSpriteFactory__C4412_VT)) failedCast(r0);
    s.lastBrkId = 3328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3328]) return breakpoint(s, 1, 3328, r0);
  case 1:
    s.tmp_0 = TextSpriteFactory_constructor__P4404_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg4;
    s.tmp_0.arg4 = s.arg5;
    s.tmp_0.arg5 = s.arg6;
    s.tmp_0.arg6 = s.arg7;
    s.callLocIdx = 1549; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3329]) return breakpoint(s, 3, 3329, r0);
  case 3:
    r0 = (s.arg0).fields["data"] = (s.arg1);
    s.lastBrkId = 3330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3330]) return breakpoint(s, 4, 3330, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StringArrayTextSpriteFactory_constructor__P4414.info = {"start":5792,"length":332,"line":248,"column":4,"endLine":260,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"inline","argumentNames":["this","data","color","fontSize","y","spacing","padding","borderWidth"]}

function StringArrayTextSpriteFactory_constructor__P4414_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringArrayTextSpriteFactory_constructor__P4414, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function RotatingScreens_release__P4455(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3478]) return breakpoint(s, 1, 3478, r0);
  case 1:
    s.tmp_0 = RotatingScreens_destroySprites__P4452_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1597; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_release__P4455.info = {"start":23689,"length":60,"line":796,"column":4,"endLine":798,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"release","argumentNames":["this"]}

function RotatingScreens_release__P4455_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_release__P4455, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function pressLeft__P137602(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = globals.gameMode___158120;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 1:
    r0 = (s.arg0 == 1);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = GameSettings_start__P158122_mk(s);
    s.callLocIdx = 103; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 13; continue; }
  case 4:
    r0 = (s.arg0 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = OptionScreen_moveCursorLeft__P4482_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 104; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 13; continue; }
  case 7:
    s.tmp_2 = if_currPlayer_1_mk(s);
    s.tmp_2.arg0 = globals.selection___149739;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currPlayer");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currPlayer"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currPlayer"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 105; s.pc = 16; return s.tmp_2; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_3 = Avatar_showNext__P149746_mk(s);
    s.tmp_3.arg0 = -1;
    s.callLocIdx = 106; s.pc = 17; return s.tmp_3;
  case 17:
    r0 = s.retval;
  case 8:
  case 9:
    { step = 13; continue; }
  case 10:
    { step = 13; continue; }
  case 11:
    s.tmp_0 = AvatarTest_showTestAvatarLeft__P149747_mk(s);
    s.callLocIdx = 107; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 13; continue; }
  case 12:
    s.tmp_0 = Dice_Orientation__P32593_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 108; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.tmp_0 = Dice_setStartLocation__P32594_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 155;
    s.tmp_0.arg2 = 5;
    s.callLocIdx = 109; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.tmp_0 = Dice_setStopLocation__P32595_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 5;
    s.callLocIdx = 110; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.tmp_0 = Dice_setLocationChange__P32596_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = -5;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 111; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.tmp_0 = Dice_show__P32597_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.callLocIdx = 112; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pressLeft__P137602.info = {"start":2779,"length":1042,"line":104,"column":0,"endLine":139,"endColumn":1,"fileName":"controller.ts","functionName":"pressLeft","argumentNames":["player"]}

function pressLeft__P137602_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pressLeft__P137602, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function AvatarTest_showTestAvatarLeft__P149747(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = animation_stopAnimation__P3367_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = globals.test___150167;
    s.callLocIdx = 322; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.animate___150171);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = animation_runImageAnimation__P3361_mk(s);
    s.tmp_0.arg0 = globals.test___150167;
    s.tmp_1 = if_leftAnim_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "leftAnim");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["leftAnim"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["leftAnim"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 323; s.pc = 5; return s.tmp_1; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 500;
    s.tmp_0.arg3 = true;
    s.callLocIdx = 324; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = globals.test___150167;
    s.tmp_1 = if_leftImage_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "leftImage");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["leftImage"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["leftImage"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 325; s.pc = 7; return s.tmp_1; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 326; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
AvatarTest_showTestAvatarLeft__P149747.info = {"start":11029,"length":316,"line":314,"column":4,"endLine":321,"endColumn":5,"fileName":"avatars.ts","functionName":"showTestAvatarLeft","argumentNames":[]}

function AvatarTest_showTestAvatarLeft__P149747_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: AvatarTest_showTestAvatarLeft__P149747, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function OptionScreen_moveCursorLeft__P4482(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3588]) return breakpoint(s, 18, 3588, r0);
  case 18:
    r0 = s.arg0.fields["_isDone"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3589]) return breakpoint(s, 19, 3589, r0);
  case 19:
    { step = 17; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3590]) return breakpoint(s, 20, 3590, r0);
  case 20:
    s.tmp_1 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = false;
    s.callLocIdx = 1674; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 3591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3591]) return breakpoint(s, 22, 3591, r0);
  case 22:
    s.tmp_1 = if_isInFooter_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "isInFooter");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["isInFooter"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["isInFooter"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1675; s.pc = 23; return s.tmp_1; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 3592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3592]) return breakpoint(s, 24, 3592, r0);
  case 24:
    s.tmp_2 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3 = r0;
    s.tmp_2.arg0 = r0;
    s.tmp_5 = if_currGroup_1_mk(s);
    s.tmp_5.arg0 = s.tmp_3;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "currGroup");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["currGroup"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["currGroup"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1676; s.pc = 26; return s.tmp_5; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_2.arg1 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_2.arg0, "currGroup", s.tmp_2.arg1);
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_2.fn === null) { s.tmp_2.arg0.fields["currGroup"] = s.tmp_2.arg1; }
      else if (s.tmp_2.fn === undefined) { failedCast(s.tmp_2.arg0) } 
     else { s.callLocIdx = 1677; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.lastBrkId = 3593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3593]) return breakpoint(s, 27, 3593, r0);
  case 27:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1678; s.pc = 28; return s.tmp_2; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3594]) return breakpoint(s, 29, 3594, r0);
  case 29:
    s.tmp_3 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = 2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "currGroup", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["currGroup"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 1679; s.pc = 30; return s.tmp_3; }
    }
  case 30:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 3595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3595]) return breakpoint(s, 31, 3595, r0);
  case 31:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1680; s.pc = 32; return s.tmp_2; }
    }
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["_showPrevious"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3596]) return breakpoint(s, 33, 3596, r0);
  case 33:
    s.tmp_6 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 2;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_6.arg0, "currGroup", s.tmp_6.arg1);
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_6.fn === null) { s.tmp_6.arg0.fields["currGroup"] = s.tmp_6.arg1; }
      else if (s.tmp_6.fn === undefined) { failedCast(s.tmp_6.arg0) } 
     else { s.callLocIdx = 1681; s.pc = 34; return s.tmp_6; }
    }
  case 34:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 3597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3597]) return breakpoint(s, 35, 3597, r0);
  case 35:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1682; s.pc = 36; return s.tmp_2; }
    }
  case 36:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = s.arg0.fields["_showNext"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 10:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3598]) return breakpoint(s, 37, 3598, r0);
  case 37:
    s.tmp_6 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 1;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_6.arg0, "currGroup", s.tmp_6.arg1);
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_6.fn === null) { s.tmp_6.arg0.fields["currGroup"] = s.tmp_6.arg1; }
      else if (s.tmp_6.fn === undefined) { failedCast(s.tmp_6.arg0) } 
     else { s.callLocIdx = 1683; s.pc = 38; return s.tmp_6; }
    }
  case 38:
    r0 = s.retval;
  case 11:
  case 12:
    { step = 16; continue; }
  case 13:
    s.lastBrkId = 3599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3599]) return breakpoint(s, 39, 3599, r0);
  case 39:
    s.tmp_0 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1 = r0;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = if_currGroup_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "currGroup");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["currGroup"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["currGroup"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1684; s.pc = 41; return s.tmp_3; }
    }
  case 41:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currGroup", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currGroup"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1685; s.pc = 40; return s.tmp_0; }
    }
  case 40:
    r0 = s.retval;
    s.lastBrkId = 3600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3600]) return breakpoint(s, 42, 3600, r0);
  case 42:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1686; s.pc = 43; return s.tmp_2; }
    }
  case 43:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 3601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3601]) return breakpoint(s, 44, 3601, r0);
  case 44:
    s.tmp_3 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__length(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3.arg1 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "currGroup", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["currGroup"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 1687; s.pc = 45; return s.tmp_3; }
    }
  case 45:
    r0 = s.retval;
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 3602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3602]) return breakpoint(s, 46, 3602, r0);
  case 46:
    s.tmp_0 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1688; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_moveCursorLeft__P4482.info = {"start":39025,"length":1171,"line":1227,"column":4,"endLine":1250,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"moveCursorLeft","argumentNames":["this"]}

function OptionScreen_moveCursorLeft__P4482_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_moveCursorLeft__P4482, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function pressDown__P137574(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = globals.gameMode___158120;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 1:
    r0 = (s.arg0 == 1);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = GameSettings_start__P158122_mk(s);
    s.callLocIdx = 95; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 10; continue; }
  case 4:
    r0 = (s.arg0 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = OptionScreen_moveCursorDown__P4481_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 96; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 10; continue; }
  case 7:
    { step = 10; continue; }
  case 8:
    s.tmp_0 = AvatarTest_showTestAvatarFront__P149745_mk(s);
    s.callLocIdx = 97; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    s.tmp_0 = Dice_Orientation__P32593_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 98; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.tmp_0 = Dice_setStartLocation__P32594_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 5;
    s.callLocIdx = 99; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.tmp_0 = Dice_setStopLocation__P32595_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 114;
    s.callLocIdx = 100; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.tmp_0 = Dice_setLocationChange__P32596_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 5;
    s.callLocIdx = 101; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.tmp_0 = Dice_show__P32597_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.callLocIdx = 102; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pressDown__P137574.info = {"start":1895,"length":882,"line":73,"column":0,"endLine":102,"endColumn":1,"fileName":"controller.ts","functionName":"pressDown","argumentNames":["player"]}

function pressDown__P137574_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pressDown__P137574, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function AvatarTest_showTestAvatarFront__P149745(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = animation_stopAnimation__P3367_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = globals.test___150167;
    s.callLocIdx = 319; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = globals.test___150167;
    s.tmp_1 = if_frontImage_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "frontImage");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["frontImage"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["frontImage"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 320; s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 321; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
AvatarTest_showTestAvatarFront__P149745.info = {"start":10848,"length":175,"line":309,"column":4,"endLine":312,"endColumn":5,"fileName":"avatars.ts","functionName":"showTestAvatarFront","argumentNames":[]}

function AvatarTest_showTestAvatarFront__P149745_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: AvatarTest_showTestAvatarFront__P149745, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function OptionScreen_moveCursorDown__P4481(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.numOptions___18056 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3575]) return breakpoint(s, 10, 3575, r0);
  case 10:
    r0 = s.arg0.fields["_isDone"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3576]) return breakpoint(s, 11, 3576, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3577]) return breakpoint(s, 12, 3577, r0);
  case 12:
    s.tmp_1 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = false;
    s.callLocIdx = 1664; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 3578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3578]) return breakpoint(s, 14, 3578, r0);
  case 14:
    s.tmp_1 = if_isInFooter_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "isInFooter");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["isInFooter"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["isInFooter"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1665; s.pc = 15; return s.tmp_1; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3579]) return breakpoint(s, 16, 3579, r0);
  case 16:
    s.tmp_2 = OptionScreen_moveOutOfFooter__P7316_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1666; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 3580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3580]) return breakpoint(s, 18, 3580, r0);
  case 18:
    s.tmp_0 = if_currOption_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currOption", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currOption"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currOption"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1667; s.pc = 19; return s.tmp_0; }
    }
  case 19:
    r0 = s.retval;
    { step = 8; continue; }
  case 3:
    s.lastBrkId = 3581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3581]) return breakpoint(s, 20, 3581, r0);
  case 20:
    s.tmp_0 = if_currOption_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1 = r0;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = if_currOption_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "currOption");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["currOption"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["currOption"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1668; s.pc = 22; return s.tmp_3; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currOption", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currOption"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currOption"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1669; s.pc = 21; return s.tmp_0; }
    }
  case 21:
    r0 = s.retval;
    s.lastBrkId = 3582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3582]) return breakpoint(s, 23, 3582, r0);
  case 23:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_1 = r0;
    s.tmp_3 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "currGroup");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["currGroup"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["currGroup"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1670; s.pc = 24; return s.tmp_3; }
    }
  case 24:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    s.numOptions___18056 = (r0);
    s.lastBrkId = 3583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3583]) return breakpoint(s, 25, 3583, r0);
  case 25:
    r0 = s.arg0.fields["_hasHeaders"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 3584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3584]) return breakpoint(s, 26, 3584, r0);
  case 26:
    r0 = (s.numOptions___18056 - 1);
    s.numOptions___18056 = (r0);
  case 4:
  case 5:
    s.lastBrkId = 3585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3585]) return breakpoint(s, 27, 3585, r0);
  case 27:
    s.tmp_2 = if_currOption_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currOption");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currOption"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currOption"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1671; s.pc = 28; return s.tmp_2; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= s.numOptions___18056);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3586]) return breakpoint(s, 29, 3586, r0);
  case 29:
    s.tmp_3 = OptionScreen_moveToFooter__P7317_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1672; s.pc = 30; return s.tmp_3;
  case 30:
    r0 = s.retval;
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 3587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3587]) return breakpoint(s, 31, 3587, r0);
  case 31:
    s.tmp_0 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1673; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_moveCursorDown__P4481.info = {"start":38047,"length":736,"line":1201,"column":4,"endLine":1220,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"moveCursorDown","argumentNames":["this"]}

function OptionScreen_moveCursorDown__P4481_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_moveCursorDown__P4481, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  numOptions___18056: undefined,
  arg0: undefined,
} }





function OptionScreen_moveToFooter__P7317(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3677]) return breakpoint(s, 9, 3677, r0);
  case 9:
    s.tmp_0 = if_isInFooter_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = true;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "isInFooter", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/isInFooter"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["isInFooter"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1741; s.pc = 10; return s.tmp_0; }
    }
  case 10:
    r0 = s.retval;
    s.lastBrkId = 3678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3678]) return breakpoint(s, 11, 3678, r0);
  case 11:
    s.tmp_1 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "currGroup");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["currGroup"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["currGroup"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1742; s.pc = 12; return s.tmp_1; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 1:
    s.lastBrkId = 3679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3679]) return breakpoint(s, 13, 3679, r0);
  case 13:
    r0 = s.arg0.fields["_showPrevious"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3680]) return breakpoint(s, 14, 3680, r0);
  case 14:
    s.tmp_3 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = 0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "currGroup", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["currGroup"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 1743; s.pc = 15; return s.tmp_3; }
    }
  case 15:
    r0 = s.retval;
    { step = 3; continue; }
  case 2:
    s.lastBrkId = 3681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3681]) return breakpoint(s, 16, 3681, r0);
  case 16:
    s.tmp_0 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currGroup", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currGroup"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1744; s.pc = 17; return s.tmp_0; }
    }
  case 17:
    r0 = s.retval;
  case 3:
    s.lastBrkId = 3682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3682]) return breakpoint(s, 18, 3682, r0);
  case 18:
    { step = 8; continue; }
  case 4:
    s.lastBrkId = 3683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3683]) return breakpoint(s, 19, 3683, r0);
  case 19:
    r0 = s.arg0.fields["_showNext"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3684]) return breakpoint(s, 20, 3684, r0);
  case 20:
    s.tmp_1 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_1.arg0, "currGroup", s.tmp_1.arg1);
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_1.fn === null) { s.tmp_1.arg0.fields["currGroup"] = s.tmp_1.arg1; }
      else if (s.tmp_1.fn === undefined) { failedCast(s.tmp_1.arg0) } 
     else { s.callLocIdx = 1745; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 3685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3685]) return breakpoint(s, 22, 3685, r0);
  case 22:
    s.tmp_0 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currGroup", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currGroup"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1746; s.pc = 23; return s.tmp_0; }
    }
  case 23:
    r0 = s.retval;
  case 6:
    s.lastBrkId = 3686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3686]) return breakpoint(s, 24, 3686, r0);
  case 24:
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 3687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3687]) return breakpoint(s, 25, 3687, r0);
  case 25:
    s.tmp_0 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currGroup", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currGroup"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1747; s.pc = 26; return s.tmp_0; }
    }
  case 26:
    r0 = s.retval;
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_moveToFooter__P7317.info = {"start":46671,"length":818,"line":1426,"column":4,"endLine":1448,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"moveToFooter","argumentNames":["this"]}

function OptionScreen_moveToFooter__P7317_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_moveToFooter__P7317, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function OptionScreen_moveOutOfFooter__P7316(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3669]) return breakpoint(s, 7, 3669, r0);
  case 7:
    s.tmp_0 = if_isInFooter_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = false;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "isInFooter", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/isInFooter"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["isInFooter"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1736; s.pc = 8; return s.tmp_0; }
    }
  case 8:
    r0 = s.retval;
    s.lastBrkId = 3670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3670]) return breakpoint(s, 9, 3670, r0);
  case 9:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__length(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 1:
    s.lastBrkId = 3671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3671]) return breakpoint(s, 10, 3671, r0);
  case 10:
    s.tmp_2 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_2.arg0, "currGroup", s.tmp_2.arg1);
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_2.fn === null) { s.tmp_2.arg0.fields["currGroup"] = s.tmp_2.arg1; }
      else if (s.tmp_2.fn === undefined) { failedCast(s.tmp_2.arg0) } 
     else { s.callLocIdx = 1737; s.pc = 11; return s.tmp_2; }
    }
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3672]) return breakpoint(s, 12, 3672, r0);
  case 12:
    { step = 6; continue; }
  case 2:
    s.lastBrkId = 3673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3673]) return breakpoint(s, 13, 3673, r0);
  case 13:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1738; s.pc = 14; return s.tmp_2; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3674]) return breakpoint(s, 15, 3674, r0);
  case 15:
    s.tmp_3 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = 0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "currGroup", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["currGroup"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 1739; s.pc = 16; return s.tmp_3; }
    }
  case 16:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 3675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3675]) return breakpoint(s, 17, 3675, r0);
  case 17:
    s.tmp_0 = if_currGroup_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currGroup", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currGroup"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currGroup"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1740; s.pc = 18; return s.tmp_0; }
    }
  case 18:
    r0 = s.retval;
  case 4:
    s.lastBrkId = 3676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3676]) return breakpoint(s, 19, 3676, r0);
  case 19:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_moveOutOfFooter__P7316.info = {"start":45921,"length":644,"line":1403,"column":4,"endLine":1421,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"moveOutOfFooter","argumentNames":["this"]}

function OptionScreen_moveOutOfFooter__P7316_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_moveOutOfFooter__P7316, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function pressUp__P137674(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = globals.gameMode___158120;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 1:
    r0 = (s.arg0 == 1);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = GameSettings_start__P158122_mk(s);
    s.callLocIdx = 123; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 10; continue; }
  case 4:
    r0 = (s.arg0 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = OptionScreen_moveCursorUp__P4484_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 124; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 10; continue; }
  case 7:
    { step = 10; continue; }
  case 8:
    s.tmp_0 = AvatarTest_showTestAvatarBack__P149749_mk(s);
    s.callLocIdx = 125; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    s.tmp_0 = Dice_Orientation__P32593_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 126; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.tmp_0 = Dice_setStartLocation__P32594_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 115;
    s.callLocIdx = 127; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.tmp_0 = Dice_setStopLocation__P32595_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 5;
    s.tmp_0.arg2 = 6;
    s.callLocIdx = 128; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.tmp_0 = Dice_setLocationChange__P32596_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = -5;
    s.callLocIdx = 129; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.tmp_0 = Dice_show__P32597_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.callLocIdx = 130; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pressUp__P137674.info = {"start":4868,"length":872,"line":178,"column":0,"endLine":207,"endColumn":1,"fileName":"controller.ts","functionName":"pressUp","argumentNames":["player"]}

function pressUp__P137674_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pressUp__P137674, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function AvatarTest_showTestAvatarBack__P149749(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = animation_stopAnimation__P3367_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = globals.test___150167;
    s.callLocIdx = 316; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = globals.test___150167;
    s.tmp_1 = if_backImage_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "backImage");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["backImage"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["backImage"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 317; s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 318; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
AvatarTest_showTestAvatarBack__P149749.info = {"start":10669,"length":173,"line":304,"column":4,"endLine":307,"endColumn":5,"fileName":"avatars.ts","functionName":"showTestAvatarBack","argumentNames":[]}

function AvatarTest_showTestAvatarBack__P149749_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: AvatarTest_showTestAvatarBack__P149749, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function OptionScreen_moveCursorUp__P4484(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.numOptions___18138 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3618]) return breakpoint(s, 10, 3618, r0);
  case 10:
    r0 = s.arg0.fields["_isDone"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3619]) return breakpoint(s, 11, 3619, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3620]) return breakpoint(s, 12, 3620, r0);
  case 12:
    s.tmp_1 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = false;
    s.callLocIdx = 1704; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 3621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3621]) return breakpoint(s, 14, 3621, r0);
  case 14:
    s.tmp_1 = if_isInFooter_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "isInFooter");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["isInFooter"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["isInFooter"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1705; s.pc = 15; return s.tmp_1; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3622]) return breakpoint(s, 16, 3622, r0);
  case 16:
    s.tmp_2 = OptionScreen_moveOutOfFooter__P7316_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1706; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 3623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3623]) return breakpoint(s, 18, 3623, r0);
  case 18:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_1 = r0;
    s.tmp_3 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "currGroup");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["currGroup"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["currGroup"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1707; s.pc = 19; return s.tmp_3; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    s.numOptions___18138 = (r0);
    s.lastBrkId = 3624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3624]) return breakpoint(s, 20, 3624, r0);
  case 20:
    r0 = s.arg0.fields["_hasHeaders"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3625]) return breakpoint(s, 21, 3625, r0);
  case 21:
    r0 = (s.numOptions___18138 - 1);
    s.numOptions___18138 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 3626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3626]) return breakpoint(s, 22, 3626, r0);
  case 22:
    s.tmp_0 = if_currOption_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_0.arg0 = r0;
    r0 = (s.numOptions___18138 - 1);
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currOption", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currOption"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currOption"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1708; s.pc = 23; return s.tmp_0; }
    }
  case 23:
    r0 = s.retval;
    { step = 8; continue; }
  case 5:
    s.lastBrkId = 3627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3627]) return breakpoint(s, 24, 3627, r0);
  case 24:
    s.tmp_0 = if_currOption_2_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1 = r0;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = if_currOption_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "currOption");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["currOption"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["currOption"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1709; s.pc = 26; return s.tmp_3; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currOption", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currOption"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currOption"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1710; s.pc = 25; return s.tmp_0; }
    }
  case 25:
    r0 = s.retval;
    s.lastBrkId = 3628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3628]) return breakpoint(s, 27, 3628, r0);
  case 27:
    s.tmp_2 = if_currOption_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currOption");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currOption"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currOption"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1711; s.pc = 28; return s.tmp_2; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3629]) return breakpoint(s, 29, 3629, r0);
  case 29:
    s.tmp_3 = OptionScreen_moveToFooter__P7317_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1712; s.pc = 30; return s.tmp_3;
  case 30:
    r0 = s.retval;
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 3630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3630]) return breakpoint(s, 31, 3630, r0);
  case 31:
    s.tmp_0 = OptionScreen_updateCursor__P7319_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1713; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_moveCursorUp__P4484.info = {"start":41844,"length":726,"line":1287,"column":4,"endLine":1306,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"moveCursorUp","argumentNames":["this"]}

function OptionScreen_moveCursorUp__P4484_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_moveCursorUp__P4484, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  numOptions___18138: undefined,
  arg0: undefined,
} }





function pressB__P137551(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = globals.gameMode___158120;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 1:
    r0 = (s.arg0 == 1);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = GameSettings_start__P158122_mk(s);
    s.callLocIdx = 89; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 10; continue; }
  case 4:
    { step = 10; continue; }
  case 5:
    { step = 10; continue; }
  case 6:
    s.tmp_0 = AvatarTest_toggleAvatarTestAnims__P149743_mk(s);
    s.callLocIdx = 90; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    { step = 10; continue; }
  case 7:
    r0 = globals.diceTest___32587.fields["skin"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_2 = Dice_Skin__P32590_mk(s);
    s.tmp_2.arg0 = globals.diceTest___32587;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 92; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    { step = 9; continue; }
  case 8:
    s.tmp_0 = Dice_Skin__P32590_mk(s);
    s.tmp_1 = r0 = globals.diceTest___32587;
    s.tmp_0.arg0 = r0;
    r0 = s.tmp_1.fields["skin"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 94; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pressB__P137551.info = {"start":1197,"length":696,"line":45,"column":0,"endLine":71,"endColumn":1,"fileName":"controller.ts","functionName":"pressB","argumentNames":["player"]}

function pressB__P137551_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pressB__P137551, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Dice_Skin__P32590(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = (s.arg0).fields["skin"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Dice_Skin__P32590.info = {"start":2565,"length":66,"line":101,"column":4,"endLine":103,"endColumn":5,"fileName":"dice.ts","functionName":"Skin","argumentNames":["this","value"]}

function Dice_Skin__P32590_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_Skin__P32590, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Dice_Skin__P32589(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Dice__C32621_VT)) failedCast(r0);
    r0 = s.arg0.fields["skin"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Dice_Skin__P32589.info = {"start":2499,"length":60,"line":97,"column":4,"endLine":99,"endColumn":5,"fileName":"dice.ts","functionName":"Skin","argumentNames":["this"]}
Dice_Skin__P32589.isGetter = true;

function Dice_Skin__P32589_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Dice_Skin__P32589, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function AvatarTest_toggleAvatarTestAnims__P149743(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.animate___150171);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    globals.animate___150171 = (r0);
    s.tmp_0 = AvatarTest_showTestAvatar__P150180_mk(s);
    s.callLocIdx = 339; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
AvatarTest_toggleAvatarTestAnims__P149743.info = {"start":12518,"length":105,"line":354,"column":4,"endLine":357,"endColumn":5,"fileName":"avatars.ts","functionName":"toggleAvatarTestAnims","argumentNames":[]}

function AvatarTest_toggleAvatarTestAnims__P149743_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: AvatarTest_toggleAvatarTestAnims__P149743, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function AvatarTest_showTestAvatar__P150180(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = animation_stopAnimation__P3367_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = globals.test___150167;
    s.callLocIdx = 313; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    s.tmp_0.arg0 = globals.test___150167;
    s.tmp_1 = if_frontImage_1_mk(s);
    r0 = pxsim_Array__getAt(globals.AVATARS___149757, globals.index___150169);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "frontImage");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["frontImage"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["frontImage"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 314; s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 315; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
AvatarTest_showTestAvatar__P150180.info = {"start":10493,"length":170,"line":299,"column":4,"endLine":302,"endColumn":5,"fileName":"avatars.ts","functionName":"showTestAvatar","argumentNames":[]}

function AvatarTest_showTestAvatar__P150180_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: AvatarTest_showTestAvatar__P150180, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function pressA__P137518(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = globals.gameMode___158120;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = s.tmp_0;
    { step = 18; continue; }
  case 1:
    r0 = (s.arg0 == 1);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = GameSettings_start__P158122_mk(s);
    s.callLocIdx = 79; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 18; continue; }
  case 4:
    r0 = (s.arg0 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_1 = OptionScreenCollection__C4488_v3_1_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    if (!checkSubtype(s.tmp_1.arg0, OptionScreenCollection__C4488_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.select;
    s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    s.tmp_1 = OptionScreen_done__P4467_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 80; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_3 = GameSettings_validate__P158125_mk(s);
    s.callLocIdx = 81; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    s.tmp_4 = GameSettings_collect__P158126_mk(s);
    s.callLocIdx = 82; s.pc = 23; return s.tmp_4;
  case 23:
    r0 = s.retval;
    s.tmp_0 = Avatar_startSelection__P149737_mk(s);
    s.callLocIdx = 83; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
  case 8:
  case 9:
  case 10:
    { step = 18; continue; }
  case 11:
    s.tmp_2 = if_currPlayer_1_mk(s);
    s.tmp_2.arg0 = globals.selection___149739;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currPlayer");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currPlayer"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currPlayer"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 84; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.tmp_3 = Avatar_select__P149741_mk(s);
    s.callLocIdx = 85; s.pc = 26; return s.tmp_3;
  case 26:
    r0 = s.retval;
  case 12:
  case 13:
    { step = 18; continue; }
  case 14:
    s.tmp_0 = FirstRoll_startRoll__P173328_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 86; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    { step = 18; continue; }
  case 15:
    { step = 18; continue; }
  case 16:
    s.tmp_0 = AvatarTest_showNextAvatarTest__P149742_mk(s);
    s.callLocIdx = 87; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    { step = 18; continue; }
  case 17:
    s.tmp_0 = Dice_startRoll__P32586_mk(s);
    s.tmp_0.arg0 = globals.diceTest___32587;
    s.callLocIdx = 88; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
  case 18:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pressA__P137518.info = {"start":37,"length":1158,"line":3,"column":0,"endLine":43,"endColumn":1,"fileName":"controller.ts","functionName":"pressA","argumentNames":["player"]}

function pressA__P137518_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pressA__P137518, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function AvatarTest_showNextAvatarTest__P149742(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = (globals.index___150169 + 1);
    globals.index___150169 = (r0);
    s.tmp_1 = r0 = globals.index___150169;
    r0 = pxsim_Array__length(globals.AVATARS___149757);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    globals.index___150169 = (0);
  case 1:
  case 2:
    s.tmp_0 = AvatarTest_showTestAvatar__P150180_mk(s);
    s.callLocIdx = 312; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
AvatarTest_showNextAvatarTest__P149742.info = {"start":10318,"length":169,"line":291,"column":4,"endLine":297,"endColumn":5,"fileName":"avatars.ts","functionName":"showNextAvatarTest","argumentNames":[]}

function AvatarTest_showNextAvatarTest__P149742_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: AvatarTest_showNextAvatarTest__P149742, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function FirstRoll_startRoll__P173328(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = r0 = s.arg0;
    r0 = pxsim_Array__length(globals.players___158156);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    s.tmp_4 = r0 = globals.firstRollStarted___173398;
    r0 = (s.arg0 - 1);
    s.tmp_5 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_4, s.tmp_5, true);
    s.tmp_0 = Dice_startRoll__P32586_mk(s);
    s.tmp_2 = r0 = globals.players___158156;
    r0 = (s.arg0 - 1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["dice"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 424; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
FirstRoll_startRoll__P173328.info = {"start":2918,"length":252,"line":91,"column":4,"endLine":97,"endColumn":5,"fileName":"firstroll.ts","functionName":"startRoll","argumentNames":["player"]}

function FirstRoll_startRoll__P173328_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: FirstRoll_startRoll__P173328, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function Avatar_select__P149741(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Player_Avatar__P143736_mk(s);
    s.tmp_1 = r0 = globals.players___158156;
    s.tmp_4 = if_currPlayer_1_mk(s);
    s.tmp_4.arg0 = globals.selection___149739;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "currPlayer");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["currPlayer"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["currPlayer"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 264; s.pc = 4; return s.tmp_4; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.tmp_5 = if_selectedAvatar_1_mk(s);
    s.tmp_5.arg0 = globals.selection___149739;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "selectedAvatar");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["selectedAvatar"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["selectedAvatar"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 265; s.pc = 5; return s.tmp_5; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 266; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_2 = if_currPlayer_1_mk(s);
    s.tmp_2.arg0 = globals.selection___149739;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currPlayer");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currPlayer"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currPlayer"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 267; s.pc = 6; return s.tmp_2; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < globals.numPlayers___158155);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_currPlayer_2_mk(s);
    s.tmp_4 = r0 = globals.selection___149739;
    s.tmp_3.arg0 = r0;
    s.tmp_6 = if_currPlayer_1_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "currPlayer");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["currPlayer"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["currPlayer"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 268; s.pc = 8; return s.tmp_6; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + 1);
    s.tmp_3.arg1 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "currPlayer", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/currPlayer"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["currPlayer"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 269; s.pc = 7; return s.tmp_3; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_0 = Player_promptForName__P143762_mk(s);
    s.tmp_1 = r0 = globals.players___158156;
    s.tmp_4 = if_currPlayer_1_mk(s);
    s.tmp_4.arg0 = globals.selection___149739;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "currPlayer");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["currPlayer"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["currPlayer"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 270; s.pc = 10; return s.tmp_4; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 271; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = Avatar_updateSelection__P150043_mk(s);
    s.callLocIdx = 272; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = Sprite_destroy__P2427_mk(s);
    s.tmp_1 = if_header_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "header");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["header"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["header"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 273; s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 274; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_0 = Sprite_destroy__P2427_mk(s);
    s.tmp_1 = if_footer1_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "footer1");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["footer1"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["footer1"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 275; s.pc = 15; return s.tmp_1; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 276; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.tmp_0 = Sprite_destroy__P2427_mk(s);
    s.tmp_1 = if_footer2_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "footer2");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["footer2"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["footer2"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 277; s.pc = 17; return s.tmp_1; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 278; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.tmp_0 = Sprite_destroy__P2427_mk(s);
    s.tmp_1 = if_left_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "left");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["left"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["left"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 279; s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 280; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.tmp_0 = Sprite_destroy__P2427_mk(s);
    s.tmp_1 = if_front_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "front");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["front"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["front"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 281; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 282; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.tmp_0 = Sprite_destroy__P2427_mk(s);
    s.tmp_1 = if_right_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "right");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["right"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["right"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 283; s.pc = 23; return s.tmp_1; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 284; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.tmp_0 = FirstRoll_setup__P173346_mk(s);
    s.callLocIdx = 285; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Avatar_select__P149741.info = {"start":8518,"length":618,"line":239,"column":4,"endLine":254,"endColumn":5,"fileName":"avatars.ts","functionName":"select","argumentNames":[]}

function Avatar_select__P149741_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Avatar_select__P149741, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }





function Avatar_updateSelection__P150043(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = TextSprite_setText__P4337_mk(s);
    s.tmp_1 = if_header_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "header");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["header"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["header"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 286; s.pc = 2; return s.tmp_1; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_5 = r0 = globals.players___158156;
    s.tmp_8 = if_currPlayer_1_mk(s);
    s.tmp_8.arg0 = globals.selection___149739;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "currPlayer");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["currPlayer"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["currPlayer"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 287; s.pc = 3; return s.tmp_8; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = s.tmp_4.fields["name"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " select avatar.");
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 289; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_1 = if_header_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "header");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["header"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["header"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 290; s.pc = 6; return s.tmp_1; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 80;
    s.tmp_0.arg2 = 4;
    s.callLocIdx = 291; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = if_selectedAvatar_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_0.arg1 = -1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "selectedAvatar", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/selectedAvatar"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["selectedAvatar"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 292; s.pc = 7; return s.tmp_0; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_0 = Avatar_showNext__P149746_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 293; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Avatar_updateSelection__P150043.info = {"start":9142,"length":260,"line":256,"column":4,"endLine":262,"endColumn":5,"fileName":"avatars.ts","functionName":"updateSelection","argumentNames":[]}

function Avatar_updateSelection__P150043_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Avatar_updateSelection__P150043, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
} }





function TextSprite_setText__P4337(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSprite__C4332_VT)) failedCast(r0);
    s.lastBrkId = 3240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3240]) return breakpoint(s, 3, 3240, r0);
  case 3:
    s.tmp_0 = r0 = s.arg1;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.mkEmpty();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["text"] = (s.tmp_1);
    s.lastBrkId = 3241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3241]) return breakpoint(s, 4, 3241, r0);
  case 4:
    s.tmp_0 = TextSprite_update__P4334_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1526; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSprite_setText__P4337.info = {"start":2447,"length":89,"line":66,"column":4,"endLine":69,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"setText","argumentNames":["this","text"]}

function TextSprite_setText__P4337_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSprite_setText__P4337, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Player_promptForName__P143762(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Player__C143754_VT)) failedCast(r0);
    r0 = s.arg0.fields["controllerId"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["controllerId"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 <= 4);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.tmp_4 = r0 = s.arg0;
    s.tmp_6 = game_askPlayerForString__P4505_mk(s);
    r0 = s.arg0.fields["controllerId"];
    s.tmp_6.arg0 = r0;
    r0 = s.arg0.fields["controllerId"];
    s.tmp_10 = r0;
    if ((s.tmp_10) && (s.tmp_10).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_10);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_10) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String__concat("Player ", s.tmp_9);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_7, " enter name.");
    s.tmp_6.arg1 = r0;
    s.tmp_6.arg2 = 12;
    s.callLocIdx = 345; s.pc = 5; return s.tmp_6;
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["name"] = (s.tmp_5);
    { step = 4; continue; }
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = game_askForString__P3036_mk(s);
    s.tmp_2.arg0 = "Enter your name.";
    s.tmp_2.arg1 = 12;
    s.callLocIdx = 346; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["name"] = (s.tmp_1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Player_promptForName__P143762.info = {"start":2069,"length":320,"line":98,"column":4,"endLine":105,"endColumn":5,"fileName":"players.ts","functionName":"promptForName","argumentNames":["this"]}

function Player_promptForName__P143762_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Player_promptForName__P143762, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  arg0: undefined,
} }





function game_askForString__P3036(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___143960 = undefined;
    s.result___143964 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(game_Prompt__C3037_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_Prompt_constructor__P3042_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 37; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.p___143960 = (s.tmp_0);
    s.tmp_0 = game_Prompt_show__P3043_mk(s);
    s.tmp_0.arg0 = s.p___143960;
    s.tmp_1 = console_inspect__P382_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 20;
    s.callLocIdx = 38; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 39; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.result___143964 = (r0);
    r0 = s.result___143964;
    return leave(s, r0)
  default: oops()
} } }
game_askForString__P3036.info = {"start":873,"length":198,"line":26,"column":4,"endLine":30,"endColumn":5,"fileName":"pxt_modules/game/prompt.ts","functionName":"askForString","argumentNames":["message","answerLength"]}

function game_askForString__P3036_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_askForString__P3036, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  p___143960: undefined,
  result___143964: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Prompt_show__P3043(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = (s.arg0).fields["message"] = (s.arg1);
    r0 = (s.arg0).fields["answerLength"] = (s.arg2);
    r0 = (s.arg0).fields["inputIndex"] = (0);
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 46; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = game_pushScene__P3002_mk(s);
    s.callLocIdx = 47; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_draw__P5354_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 48; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_registerHandlers__P5364_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 49; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = (s.arg0).fields["confirmPressed"] = (false);
    r0 = pxsim_pxtcore_mkAction(1, game_Prompt_show_inline__P143993);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = pauseUntil__P367_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 50; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = game_popScene__P3003_mk(s);
    s.callLocIdx = 51; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 52; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = s.arg0.fields["result"];
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_show__P3043.info = {"start":5234,"length":524,"line":161,"column":8,"endLine":179,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"show","argumentNames":["this","message","answerLength"]}

function game_Prompt_show__P3043_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_show__P3043, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function game_Prompt_show_inline__P143993(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["confirmPressed"];
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_show_inline__P143993.info = {"start":5606,"length":25,"line":173,"column":23,"endLine":173,"endColumn":48,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function game_Prompt_show_inline__P143993_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_show_inline__P143993, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_Prompt_registerHandlers__P5364(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = pxsim_pxtcore_mkAction(1, game_Prompt_registerHandlers_inline__P144004);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.up___2116;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 121; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, game_Prompt_registerHandlers_inline__P144009);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.down___2118;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 123; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, game_Prompt_registerHandlers_inline__P144014);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.right___2117;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 125; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, game_Prompt_registerHandlers_inline__P144019);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.left___2115;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 127; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, game_Prompt_registerHandlers_inline__P144024);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.A___2113;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 129; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, game_Prompt_registerHandlers_inline__P144029);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.B___2114;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 131; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = (s.arg0).fields["frameCount"] = (0);
    r0 = (s.arg0).fields["blink"] = (true);
    r0 = pxsim_pxtcore_mkAction(1, game_Prompt_registerHandlers_inline__P144038);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = game_onUpdate__P3022_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 133; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_registerHandlers__P5364.info = {"start":11246,"length":1066,"line":324,"column":8,"endLine":362,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"registerHandlers","argumentNames":["this"]}

function game_Prompt_registerHandlers__P5364_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_registerHandlers__P5364, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_Prompt_registerHandlers_inline__P144004(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_Prompt_moveVertical__P5365_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 120; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_registerHandlers_inline__P144004.info = {"start":11326,"length":62,"line":325,"column":51,"endLine":327,"endColumn":13,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function game_Prompt_registerHandlers_inline__P144004_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_registerHandlers_inline__P144004, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_Prompt_registerHandlers_inline__P144009(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_Prompt_moveVertical__P5365_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 122; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_registerHandlers_inline__P144009.info = {"start":11444,"length":63,"line":329,"column":53,"endLine":331,"endColumn":13,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function game_Prompt_registerHandlers_inline__P144009_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_registerHandlers_inline__P144009, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_Prompt_registerHandlers_inline__P144014(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_Prompt_moveHorizontal__P5366_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 124; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_registerHandlers_inline__P144014.info = {"start":11564,"length":64,"line":333,"column":54,"endLine":335,"endColumn":13,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function game_Prompt_registerHandlers_inline__P144014_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_registerHandlers_inline__P144014, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_Prompt_registerHandlers_inline__P144019(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_Prompt_moveHorizontal__P5366_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 126; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_registerHandlers_inline__P144019.info = {"start":11685,"length":65,"line":337,"column":53,"endLine":339,"endColumn":13,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function game_Prompt_registerHandlers_inline__P144019_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_registerHandlers_inline__P144019, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_Prompt_registerHandlers_inline__P144024(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_Prompt_confirm__P5367_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 128; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_registerHandlers_inline__P144024.info = {"start":11804,"length":53,"line":341,"column":50,"endLine":343,"endColumn":13,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function game_Prompt_registerHandlers_inline__P144024_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_registerHandlers_inline__P144024, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_Prompt_registerHandlers_inline__P144029(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_Prompt_delete__P5368_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 130; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_registerHandlers_inline__P144029.info = {"start":11911,"length":52,"line":345,"column":50,"endLine":347,"endColumn":13,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function game_Prompt_registerHandlers_inline__P144029_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_registerHandlers_inline__P144029, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_Prompt_registerHandlers_inline__P144038(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = r0 = s.caps[0];
    r0 = s.caps[0].fields["frameCount"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 30);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["frameCount"] = (s.tmp_1);
    r0 = s.caps[0].fields["frameCount"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = r0 = s.caps[0];
    r0 = s.caps[0].fields["blink"];
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["blink"] = (s.tmp_3);
    s.tmp_0 = game_Prompt_updateSelectedInput__P5361_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 132; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_registerHandlers_inline__P144038.info = {"start":12059,"length":242,"line":353,"column":26,"endLine":361,"endColumn":13,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function game_Prompt_registerHandlers_inline__P144038_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_registerHandlers_inline__P144038, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
} }





function game_Prompt_delete__P5368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["answerLength"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 < s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.tmp_5 = game_Prompt_drawInput__P5363_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_6 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["inputs"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 148; s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_5.arg2 = r0;
    s.tmp_9 = if_colorInput_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_9.arg0 = r0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "colorInput");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["colorInput"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["colorInput"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 149; s.pc = 8; return s.tmp_9; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_5.arg3 = r0;
    s.callLocIdx = 150; s.pc = 6; return s.tmp_5;
  case 6:
    r0 = s.retval;
  case 3:
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_stringSubstr__P118_mk(s);
    r0 = s.arg0.fields["result"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 0;
    r0 = s.arg0.fields["result"];
    s.tmp_4 = r0;
    r0 = pxsim_String_.length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 151; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["result"] = (s.tmp_1);
    s.tmp_0 = game_Prompt_changeInputIndex__P5369_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 152; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_delete__P5368.info = {"start":14633,"length":353,"line":436,"column":8,"endLine":446,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"delete","argumentNames":["this"]}

function game_Prompt_delete__P5368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_delete__P5368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function game_Prompt_changeInputIndex__P5369(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["inputIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["inputIndex"] = (s.tmp_1);
    r0 = (s.arg0).fields["frameCount"] = (0);
    r0 = (s.arg0).fields["blink"] = (false);
    s.tmp_0 = game_Prompt_updateSelectedInput__P5361_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 153; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_changeInputIndex__P5369.info = {"start":14996,"length":193,"line":448,"column":8,"endLine":453,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"changeInputIndex","argumentNames":["this","delta"]}

function game_Prompt_changeInputIndex__P5369_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_changeInputIndex__P5369, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Prompt_drawInput__P5363(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = pxsim_ImageMethods.fill(s.arg1, 0);
    s.tmp_0 = helpers_imageFillRect__P1956_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    r0 = (globals.CELL_HEIGHT___5280 - 1);
    s.tmp_0.arg2 = r0;
    r0 = (globals.CELL_WIDTH___5278 - 2);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.arg3;
    s.callLocIdx = 117; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = globals.LETTER_OFFSET_X___5284;
    s.tmp_0.arg3 = globals.LETTER_OFFSET_Y___5288;
    s.tmp_1 = if_colorInputText_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "colorInputText");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["colorInputText"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["colorInputText"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 118; s.pc = 5; return s.tmp_1; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = globals.font___5251;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 119; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_drawInput__P5363.info = {"start":10903,"length":333,"line":315,"column":8,"endLine":322,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"drawInput","argumentNames":["this","img","char","color"]}

function game_Prompt_drawInput__P5363_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_drawInput__P5363, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function helpers_stringSubstr__P118(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[128]) return breakpoint(s, 5, 128, r0);
  case 5:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_String_.length(s.arg0);
    { step = 4; continue; }
  case 1:
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = s.tmp_1;
    { step = 3; continue; }
  case 2:
    r0 = 0;
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.arg2 = (s.tmp_3);
    s.lastBrkId = 129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[129]) return breakpoint(s, 6, 129, r0);
  case 6:
    r0 = pxsim_String_.substr(s.arg0, s.arg1, s.arg2);
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSubstr__P118.info = {"start":11286,"length":204,"line":379,"column":4,"endLine":382,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSubstr","argumentNames":["s","start","length"]}

function helpers_stringSubstr__P118_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSubstr__P118, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function game_Prompt_confirm__P5367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___144194 = undefined;
    s.letter___144202 = undefined;
    s.sprite___144221 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 % 2);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["confirmPressed"] = (true);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["upper"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["upper"] = (s.tmp_1);
    s.tmp_0 = game_Prompt_updateKeyboard__P5362_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 141; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_updateButtons__P5359_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 142; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 2:
    { step = 8; continue; }
  case 3:
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["answerLength"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    { step = 9; continue; }
  case 4:
  case 5:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * 12);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.index___144194 = (r0);
    s.tmp_0 = game_getCharForIndex__P5371_mk(s);
    s.tmp_0.arg0 = s.index___144194;
    r0 = s.arg0.fields["upper"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 143; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.letter___144202 = (r0);
    r0 = s.arg0.fields["result"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = (s.arg0).fields["result"] = (s.letter___144202);
    { step = 7; continue; }
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["result"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.letter___144202) && (s.letter___144202).vtable) {
    setupResume(s, 14);
    pxsim_String__stringConv(s.letter___144202);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.letter___144202) + ""; }
  case 14:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["result"] = (s.tmp_1);
  case 7:
    r0 = s.arg0.fields["inputs"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.sprite___144221 = (r0);
    s.tmp_0 = game_Prompt_changeInputIndex__P5369_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 144; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_drawInput__P5363_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_image__P2389_mk(s);
    s.tmp_1.arg0 = s.sprite___144221;
    s.callLocIdx = 145; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.letter___144202;
    s.tmp_2 = if_colorInput_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorInput");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorInput"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorInput"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 146; s.pc = 18; return s.tmp_2; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 147; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_confirm__P5367.info = {"start":13641,"length":982,"line":406,"column":8,"endLine":434,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"confirm","argumentNames":["this"]}

function game_Prompt_confirm__P5367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_confirm__P5367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  index___144194: undefined,
  letter___144202: undefined,
  sprite___144221: undefined,
  arg0: undefined,
} }





function game_getCharForIndex__P5371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < 26);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = 65;
    { step = 2; continue; }
  case 1:
    r0 = 97;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0 + s.tmp_1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.fromCharCode(s.tmp_2);
    { step = 7; continue; }
    { step = 6; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = r0 = globals.digitsUpper___5352;
    r0 = (s.arg0 - 26);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    { step = 7; continue; }
    { step = 5; continue; }
  case 4:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_5 = r0;
    r0 = (s.arg0 - 26);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    { step = 7; continue; }
  case 5:
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
game_getCharForIndex__P5371.info = {"start":17063,"length":353,"line":528,"column":4,"endLine":540,"endColumn":5,"fileName":"pxt_modules/game/prompt.ts","functionName":"getCharForIndex","argumentNames":["index","upper"]}

function game_getCharForIndex__P5371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_getCharForIndex__P5371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Prompt_updateKeyboard__P5362(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___144358 = undefined;
    s.k___144363 = undefined;
    s.img___144368 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = s.arg0.fields["letters"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    s.len___144358 = (r0);
    s.k___144363 = (0);
  case 1:
    r0 = (s.k___144363 < s.len___144358);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["letters"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.k___144363);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 114; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.img___144368 = (r0);
    r0 = pxsim_ImageMethods.fill(s.img___144368, 0);
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = s.img___144368;
    s.tmp_1 = game_getCharForIndex__P5371_mk(s);
    s.tmp_1.arg0 = s.k___144363;
    r0 = s.arg0.fields["upper"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 115; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = globals.LETTER_OFFSET_X___5284;
    s.tmp_0.arg3 = globals.LETTER_OFFSET_Y___5288;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 116; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = (s.k___144363 + 1);
    s.k___144363 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_updateKeyboard__P5362.info = {"start":10581,"length":312,"line":306,"column":8,"endLine":313,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"updateKeyboard","argumentNames":["this"]}

function game_Prompt_updateKeyboard__P5362_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_updateKeyboard__P5362, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___144358: undefined,
  k___144363: undefined,
  img___144368: undefined,
  arg0: undefined,
} }





function game_Prompt_updateButtons__P5359(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 % 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.tmp_6 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 90; s.pc = 11; return s.tmp_6;
  case 11:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = if_colorCursor_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "colorCursor");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["colorCursor"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["colorCursor"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 91; s.pc = 12; return s.tmp_8; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_5, s.tmp_7);
    { step = 4; continue; }
  case 3:
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 92; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = if_colorBottomBackground_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "colorBottomBackground");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["colorBottomBackground"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["colorBottomBackground"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 93; s.pc = 14; return s.tmp_3; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, s.tmp_2);
  case 4:
    r0 = s.arg0.fields["upper"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = helpers_imagePrint__P1990_mk(s);
    s.tmp_2 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 94; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = globals.upperShiftText___5351;
    s.tmp_1.arg2 = globals.BOTTOM_BAR_SHIFT_X___5320;
    s.tmp_1.arg3 = globals.BOTTOM_BAR_TEXT_Y___5317;
    s.tmp_1.arg4 = undefined;
    s.tmp_1.arg5 = undefined;
    s.tmp_1.arg6 = undefined;
    s.callLocIdx = 95; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 96; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.lowerShiftText___5350;
    s.tmp_0.arg2 = globals.BOTTOM_BAR_SHIFT_X___5320;
    s.tmp_0.arg3 = globals.BOTTOM_BAR_TEXT_Y___5317;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 97; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 6:
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 2);
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.tmp_5 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 98; s.pc = 19; return s.tmp_5;
  case 19:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_7 = if_colorCursor_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "colorCursor");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["colorCursor"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["colorCursor"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 99; s.pc = 20; return s.tmp_7; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_4, s.tmp_6);
    { step = 10; continue; }
  case 9:
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 100; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = if_colorBottomBackground_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "colorBottomBackground");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["colorBottomBackground"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["colorBottomBackground"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 101; s.pc = 22; return s.tmp_3; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, s.tmp_2);
  case 10:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 102; s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.confirmText___5353;
    s.tmp_0.arg2 = globals.BOTTOM_BAR_CONFIRM_X___5323;
    s.tmp_0.arg3 = globals.BOTTOM_BAR_TEXT_Y___5317;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 103; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_updateButtons__P5359.info = {"start":8838,"length":946,"line":257,"column":8,"endLine":281,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"updateButtons","argumentNames":["this"]}

function game_Prompt_updateButtons__P5359_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_updateButtons__P5359, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function game_Prompt_moveHorizontal__P5366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 12);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorColumn"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 11);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 12);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorColumn"] = (s.tmp_1);
  case 2:
    s.tmp_0 = game_Prompt_updateCursor__P5360_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 140; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_moveHorizontal__P5366.info = {"start":13285,"length":346,"line":395,"column":8,"endLine":404,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"moveHorizontal","argumentNames":["this","right"]}

function game_Prompt_moveHorizontal__P5366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_moveHorizontal__P5366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Prompt_updateCursor__P5360(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 104; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_2, 0);
    s.tmp_0 = game_Prompt_updateButtons__P5359_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 105; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.ROW_LEFT___5296;
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * globals.CELL_WIDTH___5278);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 106; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.ALPHABET_TOP___5336;
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * globals.CELL_HEIGHT___5280);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 107; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_updateCursor__P5360.info = {"start":9794,"length":354,"line":283,"column":8,"endLine":292,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"updateCursor","argumentNames":["this"]}

function game_Prompt_updateCursor__P5360_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_updateCursor__P5360, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_Prompt_moveVertical__P5365(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 5; continue; }
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 134; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = if_colorCursor_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "colorCursor");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["colorCursor"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["colorCursor"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 135; s.pc = 12; return s.tmp_5; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_2, s.tmp_4);
    r0 = (s.arg0).fields["cursorRow"] = (2);
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 % 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["cursorColumn"] = (11);
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0).fields["cursorColumn"] = (0);
  case 2:
    s.tmp_0 = game_Prompt_updateButtons__P5359_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 136; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = 0;
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 137; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorRow"] = (s.tmp_1);
  case 4:
    { step = 10; continue; }
  case 5:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_min__P131_mk(s);
    s.tmp_2.arg0 = 3;
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 138; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorRow"] = (s.tmp_1);
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 5);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = 1;
    { step = 7; continue; }
  case 6:
    r0 = 0;
  case 7:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["cursorColumn"] = (s.tmp_4);
  case 8:
  case 9:
  case 10:
    s.tmp_0 = game_Prompt_updateCursor__P5360_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 139; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_moveVertical__P5365.info = {"start":12322,"length":953,"line":364,"column":8,"endLine":393,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"moveVertical","argumentNames":["this","up"]}

function game_Prompt_moveVertical__P5365_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_moveVertical__P5365, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Prompt_updateSelectedInput__P5361(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.u___144062 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["answerLength"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["inputs"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.u___144062 = (r0);
    r0 = s.arg0.fields["blink"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = game_Prompt_drawInput__P5363_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = Sprite_image__P2389_mk(s);
    s.tmp_2.arg0 = s.u___144062;
    s.callLocIdx = 108; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1.arg2 = r0;
    s.tmp_3 = if_colorInput_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "colorInput");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["colorInput"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["colorInput"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 109; s.pc = 7; return s.tmp_3; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_1.arg3 = r0;
    s.callLocIdx = 110; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = game_Prompt_drawInput__P5363_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_image__P2389_mk(s);
    s.tmp_1.arg0 = s.u___144062;
    s.callLocIdx = 111; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_0.arg2 = r0;
    s.tmp_2 = if_colorInputHighlighted_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorInputHighlighted");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorInputHighlighted"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorInputHighlighted"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 112; s.pc = 10; return s.tmp_2; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 113; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 2:
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_updateSelectedInput__P5361.info = {"start":10158,"length":413,"line":294,"column":8,"endLine":304,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"updateSelectedInput","argumentNames":["this"]}

function game_Prompt_updateSelectedInput__P5361_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_updateSelectedInput__P5361, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  u___144062: undefined,
  arg0: undefined,
} }





function controller_Button_onEvent__P2196(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.eventHandler___15862 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[898]) return breakpoint(s, 1, 898, r0);
  case 1:
    s.tmp_0 = controller_Button_getOrCreateHandlerForEvent__P5026_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 209; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.eventHandler___15862 = (r0);
    s.lastBrkId = 899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[899]) return breakpoint(s, 3, 899, r0);
  case 3:
    r0 = (s.eventHandler___15862).fields["callback"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_onEvent__P2196.info = {"start":3784,"length":188,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"onEvent","argumentNames":["this","event","handler"]}

function controller_Button_onEvent__P2196_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_onEvent__P2196, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  eventHandler___15862: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Button_getOrCreateHandlerForEvent__P5026(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.handlerState___15883 = undefined;
    s.eventHandler___15892 = undefined;
    s.unnamed12664___U2 = undefined;
    s.unnamed12665___U3 = undefined;
    s.newHandler___15908 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[937]) return breakpoint(s, 10, 937, r0);
  case 10:
    s.tmp_3 = controller_Button_handlerState__P5021_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 219; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[938]) return breakpoint(s, 12, 938, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(controller_ButtonEventHandlerState__C2185_VT);
    s.tmp_4 = r0;
    s.tmp_5 = controller_ButtonEventHandlerState_constructor__P2186_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    r0 = s.arg0.fields["id"];
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 221; s.pc = 13; return s.tmp_5;
  case 13:
    r0 = s.retval;
    s.tmp_7 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 220; s.pc = 14; return s.tmp_7;
  case 14:
    r0 = s.retval;
    r0 = r0.fields["buttonEventHandlers"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[939]) return breakpoint(s, 15, 939, r0);
  case 15:
    s.tmp_0 = controller_Button_handlerState__P5021_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 222; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.handlerState___15883 = (r0);
    s.lastBrkId = 940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[940]) return breakpoint(s, 17, 940, r0);
  case 17:
    r0 = s.handlerState___15883.fields["user"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[941]) return breakpoint(s, 18, 941, r0);
  case 18:
    s.tmp_3 = r0 = s.handlerState___15883;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["user"] = (s.tmp_4);
  case 3:
  case 4:
    s.lastBrkId = 942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[942]) return breakpoint(s, 19, 942, r0);
  case 19:
    s.eventHandler___15892 = (undefined);
    r0 = s.handlerState___15883.fields["user"];
    s.unnamed12664___U2 = (r0);
    s.unnamed12665___U3 = (0);
    s.lastBrkId = 943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[943]) return breakpoint(s, 20, 943, r0);
  case 20:
  case 5:
    s.tmp_0 = r0 = s.unnamed12665___U3;
    r0 = pxsim_Array__length(s.unnamed12664___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12664___U2, s.unnamed12665___U3);
    s.eventHandler___15892 = (r0);
    s.lastBrkId = 944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[944]) return breakpoint(s, 21, 944, r0);
  case 21:
    s.lastBrkId = 945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[945]) return breakpoint(s, 22, 945, r0);
  case 22:
    r0 = s.eventHandler___15892.fields["event"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[946]) return breakpoint(s, 23, 946, r0);
  case 23:
    r0 = s.eventHandler___15892;
    { step = 9; continue; }
  case 6:
  case 7:
    r0 = (s.unnamed12665___U3 + 1);
    s.unnamed12665___U3 = (r0);
    { step = 5; continue; }
  case 8:
    s.unnamed12664___U2 = (undefined);
    s.lastBrkId = 947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[947]) return breakpoint(s, 24, 947, r0);
  case 24:
    r0 = pxsim_pxtcore_mkAction(2, controller_Button_getOrCreateHandlerForEvent_inline__P15905);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.arg1);
    s.tmp_5 = control_onEvent__P391_mk(s);
    s.tmp_5.arg0 = s.arg1;
    r0 = s.arg0.fields["id"];
    s.tmp_5.arg1 = r0;
    s.tmp_5.arg2 = s.tmp_4;
    s.tmp_5.arg3 = 16;
    s.callLocIdx = 224; s.pc = 25; return s.tmp_5;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[948]) return breakpoint(s, 26, 948, r0);
  case 26:
    r0 = pxsim_pxtcore_mkClassInstance(controller_ButtonHandler__C2183_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_ButtonHandler_constructor__P2184_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 225; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.newHandler___15908 = (s.tmp_0);
    s.lastBrkId = 949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[949]) return breakpoint(s, 28, 949, r0);
  case 28:
    r0 = s.handlerState___15883.fields["user"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.newHandler___15908);
    s.lastBrkId = 950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[950]) return breakpoint(s, 29, 950, r0);
  case 29:
    r0 = s.newHandler___15908;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_getOrCreateHandlerForEvent__P5026.info = {"start":8550,"length":829,"line":250,"column":8,"endLine":270,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"getOrCreateHandlerForEvent","argumentNames":["this","event"]}

function controller_Button_getOrCreateHandlerForEvent__P5026_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_getOrCreateHandlerForEvent__P5026, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  handlerState___15883: undefined,
  eventHandler___15892: undefined,
  unnamed12664___U2: undefined,
  unnamed12665___U3: undefined,
  newHandler___15908: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_getOrCreateHandlerForEvent_inline__P15905(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_runButtonEvents__P5025_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.caps[1];
    s.callLocIdx = 223; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_getOrCreateHandlerForEvent_inline__P15905.info = {"start":9186,"length":33,"line":265,"column":44,"endLine":265,"endColumn":77,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_getOrCreateHandlerForEvent_inline__P15905_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_getOrCreateHandlerForEvent_inline__P15905, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_runButtonEvents__P5025(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.handlerState___15922 = undefined;
    s.userHandler___15926 = undefined;
    s.eventHandler___15937 = undefined;
    s.unnamed12662___U3 = undefined;
    s.unnamed12663___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[925]) return breakpoint(s, 14, 925, r0);
  case 14:
    s.tmp_0 = controller_Button_handlerState__P5021_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 215; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.handlerState___15922 = (r0);
    s.lastBrkId = 926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[926]) return breakpoint(s, 16, 926, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.handlerState___15922);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[927]) return breakpoint(s, 17, 927, r0);
  case 17:
    { step = 13; continue; }
  case 1:
  case 2:
    s.lastBrkId = 928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[928]) return breakpoint(s, 18, 928, r0);
  case 18:
    s.tmp_2 = controller_Button_getOrCreateHandlerForEvent__P5026_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 216; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.userHandler___15926 = (r0);
    s.lastBrkId = 929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[929]) return breakpoint(s, 20, 929, r0);
  case 20:
    r0 = s.userHandler___15926.fields["callback"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[930]) return breakpoint(s, 21, 930, r0);
  case 21:
    s.tmp_1 = if_callback_1_mk(s);
    s.tmp_1.arg0 = s.userHandler___15926;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "callback"), 1);
      s.callLocIdx = 217; s.pc = 22; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["callback"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["callback"], 1); s.callLocIdx = 217; s.pc = 22; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 217; s.pc = 22; return s.tmp_1;; }
     else { s.callLocIdx = 217; s.pc = 22; return s.tmp_1; }
    }
  case 22:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[931]) return breakpoint(s, 23, 931, r0);
  case 23:
    r0 = s.handlerState___15922.fields["system"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[932]) return breakpoint(s, 24, 932, r0);
  case 24:
    s.eventHandler___15937 = (undefined);
    r0 = s.handlerState___15922.fields["system"];
    s.unnamed12662___U3 = (r0);
    s.unnamed12663___U4 = (0);
    s.lastBrkId = 933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[933]) return breakpoint(s, 25, 933, r0);
  case 25:
  case 5:
    s.tmp_0 = r0 = s.unnamed12663___U4;
    r0 = pxsim_Array__length(s.unnamed12662___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12662___U3, s.unnamed12663___U4);
    s.eventHandler___15937 = (r0);
    s.lastBrkId = 934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[934]) return breakpoint(s, 26, 934, r0);
  case 26:
    s.lastBrkId = 935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[935]) return breakpoint(s, 27, 935, r0);
  case 27:
    r0 = s.eventHandler___15937.fields["event"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_2;
    { step = 7; continue; }
  case 6:
    r0 = s.eventHandler___15937.fields["callback"];
  case 7:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[936]) return breakpoint(s, 28, 936, r0);
  case 28:
    s.tmp_5 = if_callback_1_mk(s);
    s.tmp_5.arg0 = s.eventHandler___15937;
    if (!s.tmp_5.arg0.vtable.iface) {
      setupLambda(s.tmp_5, pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "callback"), 1);
      s.callLocIdx = 218; s.pc = 29; return s.tmp_5;
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["callback"];
      if (s.tmp_5.fn == null) { setupLambda(s.tmp_5, s.tmp_5.arg0.fields["callback"], 1); s.callLocIdx = 218; s.pc = 29; return s.tmp_5; }
      else if (s.tmp_5.fn.isGetter) { s.tmp_5.stage2Call = true; s.callLocIdx = 218; s.pc = 29; return s.tmp_5;; }
     else { s.callLocIdx = 218; s.pc = 29; return s.tmp_5; }
    }
  case 29:
    r0 = s.retval;
  case 8:
  case 9:
    r0 = (s.unnamed12663___U4 + 1);
    s.unnamed12663___U4 = (r0);
    { step = 5; continue; }
  case 10:
    s.unnamed12662___U3 = (undefined);
  case 11:
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_runButtonEvents__P5025.info = {"start":8005,"length":535,"line":236,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"runButtonEvents","argumentNames":["this","event"]}

function controller_Button_runButtonEvents__P5025_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_runButtonEvents__P5025, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  handlerState___15922: undefined,
  userHandler___15926: undefined,
  eventHandler___15937: undefined,
  unnamed12662___U3: undefined,
  unnamed12663___U4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_handlerState__P5021(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___15953 = undefined;
    s.unnamed12660___U1 = undefined;
    s.unnamed12661___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[872]) return breakpoint(s, 6, 872, r0);
  case 6:
    s.state___15953 = (undefined);
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 205; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["buttonEventHandlers"];
    s.unnamed12660___U1 = (r0);
    s.unnamed12661___U2 = (0);
    s.lastBrkId = 873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[873]) return breakpoint(s, 8, 873, r0);
  case 8:
  case 1:
    s.tmp_0 = r0 = s.unnamed12661___U2;
    r0 = pxsim_Array__length(s.unnamed12660___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12660___U1, s.unnamed12661___U2);
    s.state___15953 = (r0);
    s.lastBrkId = 874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[874]) return breakpoint(s, 9, 874, r0);
  case 9:
    s.lastBrkId = 875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[875]) return breakpoint(s, 10, 875, r0);
  case 10:
    r0 = s.state___15953.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 === s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[876]) return breakpoint(s, 11, 876, r0);
  case 11:
    r0 = s.state___15953;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed12661___U2 + 1);
    s.unnamed12661___U2 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed12660___U1 = (undefined);
    s.lastBrkId = 877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[877]) return breakpoint(s, 12, 877, r0);
  case 12:
    r0 = undefined;
  case 5:
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Button_handlerState__P5021.info = {"start":1644,"length":240,"line":66,"column":8,"endLine":71,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"handlerState","argumentNames":["this"]}
controller_Button_handlerState__P5021.isGetter = true;

function controller_Button_handlerState__P5021_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_handlerState__P5021, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  state___15953: undefined,
  unnamed12660___U1: undefined,
  unnamed12661___U2: undefined,
  arg0: undefined,
} }





function controller_ButtonEventHandlerState_constructor__P2186(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ButtonEventHandlerState__C2185_VT)) failedCast(r0);
    r0 = (s.arg0).fields["id"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ButtonEventHandlerState_constructor__P2186.info = {"start":1122,"length":33,"line":48,"column":8,"endLine":48,"endColumn":41,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","id"]}

function controller_ButtonEventHandlerState_constructor__P2186_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ButtonEventHandlerState_constructor__P2186, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_ButtonHandler_constructor__P2184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ButtonHandler__C2183_VT)) failedCast(r0);
    r0 = (s.arg0).fields["event"] = (s.arg1);
    r0 = (s.arg0).fields["callback"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ButtonHandler_constructor__P2184.info = {"start":997,"length":66,"line":44,"column":8,"endLine":44,"endColumn":74,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","event","callback"]}

function controller_ButtonHandler_constructor__P2184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ButtonHandler_constructor__P2184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function game_Prompt_draw__P5354(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    s.tmp_0 = game_Prompt_drawPromptText__P5355_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 53; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_drawKeyboard__P5357_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 54; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_drawInputarea__P5356_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 55; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_drawBottomBar__P5358_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 56; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_draw__P5354.info = {"start":5768,"length":162,"line":181,"column":8,"endLine":186,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"draw","argumentNames":["this"]}

function game_Prompt_draw__P5354_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_draw__P5354, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Prompt_drawBottomBar__P5358(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bg___144513 = undefined;
    s.bgSprite___144525 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = pxsim.image.create(s.tmp_0, globals.BOTTOM_BAR_HEIGHT___5304);
    s.bg___144513 = (r0);
    s.tmp_0 = r0 = s.bg___144513;
    s.tmp_2 = if_colorBottomBackground_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorBottomBackground");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorBottomBackground"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorBottomBackground"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 78; s.pc = 1; return s.tmp_2; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, s.tmp_1);
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_0.arg0 = s.bg___144513;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 79; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.bgSprite___144525 = (r0);
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.bgSprite___144525;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 80; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.bgSprite___144525;
    s.tmp_1 = r0 = globals.BOTTOM_BAR_TOP___5307;
    r0 = (globals.BOTTOM_BAR_HEIGHT___5304 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 81; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = if_z_2_mk(s);
    s.tmp_0.arg0 = s.bgSprite___144525;
    s.tmp_0.arg1 = -1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 82; s.pc = 5; return s.tmp_0; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2275_mk(s);
    r0 = pxsim.image.create(globals.BOTTOM_BAR_BUTTON_WIDTH___5314, globals.BOTTOM_BAR_HEIGHT___5304);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = -1;
    s.callLocIdx = 83; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["shiftButton"] = (s.tmp_1);
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_0.arg0 = r0;
    r0 = (globals.BOTTOM_BAR_BUTTON_WIDTH___5314 / 2);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.floor(s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 84; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.BOTTOM_BAR_TOP___5307;
    r0 = (globals.BOTTOM_BAR_HEIGHT___5304 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 85; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2275_mk(s);
    r0 = pxsim.image.create(globals.BOTTOM_BAR_BUTTON_WIDTH___5314, globals.BOTTOM_BAR_HEIGHT___5304);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = -1;
    s.callLocIdx = 86; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["confirmButton"] = (s.tmp_1);
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.CONFIRM_BUTTON_LEFT___5326;
    r0 = (globals.BOTTOM_BAR_BUTTON_WIDTH___5314 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 87; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.BOTTOM_BAR_TOP___5307;
    r0 = (globals.BOTTOM_BAR_HEIGHT___5304 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 88; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_updateButtons__P5359_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 89; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_drawBottomBar__P5358.info = {"start":7878,"length":950,"line":237,"column":8,"endLine":255,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"drawBottomBar","argumentNames":["this"]}

function game_Prompt_drawBottomBar__P5358_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_drawBottomBar__P5358, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  bg___144513: undefined,
  bgSprite___144525: undefined,
  arg0: undefined,
} }





function game_Prompt_drawKeyboard__P5357(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cursorImage___144681 = undefined;
    s.j___144707 = undefined;
    s.letter___144711 = undefined;
    s.col2___144716 = undefined;
    s.row2___144720 = undefined;
    s.t___144726 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = pxsim.image.create(globals.CELL_WIDTH___5278, globals.CELL_HEIGHT___5280);
    s.cursorImage___144681 = (r0);
    s.tmp_0 = r0 = s.cursorImage___144681;
    s.tmp_2 = if_colorCursor_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorCursor");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorCursor"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorCursor"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 70; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2275_mk(s);
    s.tmp_2.arg0 = s.cursorImage___144681;
    s.tmp_2.arg1 = -1;
    s.callLocIdx = 71; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursor"] = (s.tmp_1);
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = -1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 72; s.pc = 5; return s.tmp_0; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_0 = game_Prompt_updateCursor__P5360_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 73; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["letters"] = (s.tmp_1);
    s.j___144707 = (0);
  case 1:
    r0 = (s.j___144707 < 36);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim.image.create(globals.CELL_WIDTH___5278, globals.CELL_HEIGHT___5280);
    s.letter___144711 = (r0);
    r0 = (s.j___144707 % 12);
    s.col2___144716 = (r0);
    r0 = (s.j___144707 / 12);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.row2___144720 = (r0);
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_0.arg0 = s.letter___144711;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 74; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.t___144726 = (r0);
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.t___144726;
    s.tmp_1 = r0 = globals.ROW_LEFT___5296;
    r0 = (s.col2___144716 * globals.CELL_WIDTH___5278);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 75; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.t___144726;
    s.tmp_1 = r0 = globals.ALPHABET_TOP___5336;
    r0 = (s.row2___144720 * globals.CELL_HEIGHT___5280);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 76; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = s.arg0.fields["letters"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.t___144726);
    r0 = (s.j___144707 + 1);
    s.j___144707 = (r0);
    { step = 1; continue; }
  case 2:
    s.tmp_0 = game_Prompt_updateKeyboard__P5362_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 77; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_drawKeyboard__P5357.info = {"start":7067,"length":801,"line":214,"column":8,"endLine":235,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"drawKeyboard","argumentNames":["this"]}

function game_Prompt_drawKeyboard__P5357_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_drawKeyboard__P5357, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  cursorImage___144681: undefined,
  j___144707: undefined,
  letter___144711: undefined,
  col2___144716: undefined,
  row2___144720: undefined,
  t___144726: undefined,
  arg0: undefined,
} }





function game_Prompt_drawInputarea__P5356(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.answerLeft___144604 = undefined;
    s.i___144625 = undefined;
    s.blank___144631 = undefined;
    s.col___144641 = undefined;
    s.row___144645 = undefined;
    s.s___144651 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    s.tmp_0 = r0 = globals.ROW_LEFT___5296;
    r0 = (globals.CELL_WIDTH___5278 * 12);
    s.tmp_4 = r0;
    s.tmp_6 = r0 = globals.CELL_WIDTH___5278;
    s.tmp_8 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["answerLength"];
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 12;
    s.callLocIdx = 64; s.pc = 3; return s.tmp_8;
  case 3:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 * s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.answerLeft___144604 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["inputs"] = (s.tmp_1);
    s.i___144625 = (0);
  case 1:
    r0 = s.arg0.fields["answerLength"];
    s.tmp_1 = r0;
    r0 = (s.i___144625 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim.image.create(globals.CELL_WIDTH___5278, globals.CELL_HEIGHT___5280);
    s.blank___144631 = (r0);
    s.tmp_0 = game_Prompt_drawInput__P5363_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.blank___144631;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_0.arg2 = r0;
    s.tmp_1 = if_colorInput_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "colorInput");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["colorInput"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["colorInput"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 65; s.pc = 5; return s.tmp_1; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 66; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = (s.i___144625 % 12);
    s.col___144641 = (r0);
    r0 = (s.i___144625 / 12);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.row___144645 = (r0);
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_0.arg0 = s.blank___144631;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 67; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.s___144651 = (r0);
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.s___144651;
    s.tmp_1 = r0 = s.answerLeft___144604;
    r0 = (s.col___144641 * globals.CELL_WIDTH___5278);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 68; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.s___144651;
    s.tmp_1 = r0 = globals.INPUT_TOP___5346;
    r0 = (s.row___144645 * globals.CELL_HEIGHT___5280);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 69; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = s.arg0.fields["inputs"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.s___144651);
    r0 = (s.i___144625 + 1);
    s.i___144625 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_drawInputarea__P5356.info = {"start":6271,"length":786,"line":194,"column":8,"endLine":212,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"drawInputarea","argumentNames":["this"]}

function game_Prompt_drawInputarea__P5356_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_drawInputarea__P5356, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  answerLeft___144604: undefined,
  i___144625: undefined,
  blank___144631: undefined,
  col___144641: undefined,
  row___144645: undefined,
  s___144651: undefined,
  arg0: undefined,
} }





function game_Prompt_drawPromptText__P5355(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.prompt___144755 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_1 = game_layoutText__P5370_mk(s);
    r0 = s.arg0.fields["message"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = globals.CONTENT_WIDTH___5269;
    s.tmp_1.arg2 = globals.PROMPT_HEIGHT___5349;
    s.tmp_2 = if_colorPrompt_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorPrompt");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorPrompt"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorPrompt"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 57; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1.arg3 = r0;
    s.callLocIdx = 58; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 59; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.prompt___144755 = (r0);
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.prompt___144755;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 60; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.prompt___144755;
    s.tmp_5 = r0 = globals.PROMPT_HEIGHT___5349;
    s.tmp_7 = Sprite_height__P2397_mk(s);
    s.tmp_7.arg0 = s.prompt___144755;
    s.callLocIdx = 61; s.pc = 6; return s.tmp_7;
  case 6:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (4 + s.tmp_2);
    s.tmp_1 = r0;
    s.tmp_11 = Sprite_height__P2397_mk(s);
    s.tmp_11.arg0 = s.prompt___144755;
    s.callLocIdx = 62; s.pc = 7; return s.tmp_11;
  case 7:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 / 2);
    s.tmp_9 = r0;
    r0 = pxsim.Math_.floor(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_1 + s.tmp_8);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 63; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_drawPromptText__P5355.info = {"start":5940,"length":321,"line":188,"column":8,"endLine":192,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"drawPromptText","argumentNames":["this"]}

function game_Prompt_drawPromptText__P5355_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_drawPromptText__P5355, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  prompt___144755: undefined,
  arg0: undefined,
} }





function game_layoutText__P5370(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lineHeight___144796 = undefined;
    s.lineLength___144801 = undefined;
    s.numLines___144808 = undefined;
    s.lines___144814 = undefined;
    s.word___144816 = undefined;
    s.line___144817 = undefined;
    s.pushWord___144818 = undefined;
    s.l___144850 = undefined;
    s.char___144856 = undefined;
    s.maxLineWidth___144885 = undefined;
    s.m___144886 = undefined;
    s.actualWidth___144900 = undefined;
    s.actualHeight___144905 = undefined;
    s.res___144910 = undefined;
    s.n___144915 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = globals.font___5251;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 154; s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 2);
    s.lineHeight___144796 = (r0);
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = globals.font___5251;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 155; s.pc = 20; return s.tmp_3; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.lineLength___144801 = (r0);
    r0 = (s.arg2 / s.lineHeight___144796);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.numLines___144808 = (r0);
    r0 = pxsim_Array__mk();
    s.lines___144814 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.word___144816 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.line___144817 = (r0);
    r0 = pxsim_pxtcore_mkAction(4, pushWord_inline__P144819);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.line___144817);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.word___144816);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.lineLength___144801);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.lines___144814);
    s.pushWord___144818 = (s.tmp_0);
    s.l___144850 = (0);
  case 1:
    s.tmp_1 = r0 = s.l___144850;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_String_.charAt(s.arg0, s.l___144850);
    s.char___144856 = (r0);
    r0 = (s.char___144856 === " ");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_pxtrt_ldlocRef(s.word___144816);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.pushWord___144818;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 156; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_pxtrt_stlocRef(s.word___144816, " ");
  case 3:
    { step = 7; continue; }
  case 4:
    r0 = pxsim_pxtrt_ldlocRef(s.word___144816);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_pxtrt_stlocRef(s.word___144816, s.char___144856);
    { step = 6; continue; }
  case 5:
    s.tmp_0 = r0 = s.word___144816;
    r0 = pxsim_pxtrt_ldlocRef(s.word___144816);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.char___144856) && (s.char___144856).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.char___144856);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.char___144856) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 6:
  case 7:
    r0 = (s.l___144850 + 1);
    s.l___144850 = (r0);
    { step = 1; continue; }
  case 8:
    r0 = pxsim_pxtrt_ldlocRef(s.word___144816);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_1 = lambda_1_mk(s);
    s.tmp_1.argL = s.pushWord___144818;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 157; s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = pxsim_pxtrt_ldlocRef(s.line___144817);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.tmp_1 = r0 = s.lines___144814;
    r0 = pxsim_pxtrt_ldlocRef(s.line___144817);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
  case 11:
  case 12:
    s.maxLineWidth___144885 = (0);
    s.m___144886 = (0);
  case 13:
    s.tmp_1 = r0 = s.m___144886;
    r0 = pxsim_Array__length(s.lines___144814);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = s.maxLineWidth___144885;
    r0 = pxsim_Array__getAt(s.lines___144814, s.m___144886);
    s.tmp_4 = r0;
    r0 = pxsim_String_.length(s.tmp_4);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 158; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.maxLineWidth___144885 = (r0);
    r0 = (s.m___144886 + 1);
    s.m___144886 = (r0);
    { step = 13; continue; }
  case 14:
    s.tmp_0 = r0 = s.maxLineWidth___144885;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = globals.font___5251;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 159; s.pc = 26; return s.tmp_2; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.actualWidth___144900 = (r0);
    r0 = pxsim_Array__length(s.lines___144814);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.lineHeight___144796);
    s.actualHeight___144905 = (r0);
    r0 = pxsim.image.create(s.actualWidth___144900, s.actualHeight___144905);
    s.res___144910 = (r0);
    s.n___144915 = (0);
  case 15:
    s.tmp_1 = r0 = s.n___144915;
    r0 = pxsim_Array__length(s.lines___144814);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = (s.n___144915 + 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 > s.numLines___144808);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 16; continue; }
    { step = 18; continue; }
  case 16:
  case 17:
    s.tmp_5 = helpers_imagePrint__P1990_mk(s);
    s.tmp_5.arg0 = s.res___144910;
    r0 = pxsim_Array__getAt(s.lines___144814, s.n___144915);
    s.tmp_5.arg1 = r0;
    s.tmp_5.arg2 = 0;
    r0 = (s.n___144915 * s.lineHeight___144796);
    s.tmp_5.arg3 = r0;
    s.tmp_5.arg4 = s.arg3;
    s.tmp_5.arg5 = globals.font___5251;
    s.tmp_5.arg6 = undefined;
    s.callLocIdx = 160; s.pc = 27; return s.tmp_5;
  case 27:
    r0 = s.retval;
    r0 = (s.n___144915 + 1);
    s.n___144915 = (r0);
    { step = 15; continue; }
  case 18:
    r0 = s.res___144910;
    return leave(s, r0)
  default: oops()
} } }
game_layoutText__P5370.info = {"start":15201,"length":1856,"line":456,"column":4,"endLine":526,"endColumn":5,"fileName":"pxt_modules/game/prompt.ts","functionName":"layoutText","argumentNames":["message","width","height","color"]}

function game_layoutText__P5370_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_layoutText__P5370, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  lineHeight___144796: undefined,
  lineLength___144801: undefined,
  numLines___144808: undefined,
  lines___144814: undefined,
  word___144816: undefined,
  line___144817: undefined,
  pushWord___144818: undefined,
  l___144850: undefined,
  char___144856: undefined,
  maxLineWidth___144885: undefined,
  m___144886: undefined,
  actualWidth___144900: undefined,
  actualHeight___144905: undefined,
  res___144910: undefined,
  n___144915: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function pushWord_inline__P144819(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_5 = r0;
    r0 = pxsim_String_.length(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_7 = r0;
    r0 = pxsim_String_.length(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > s.caps[2]);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.tmp_8 = r0 = s.caps[3];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_9 = r0;
    r0 = pxsim_Array__push(s.tmp_8, s.tmp_9);
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, " ");
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_6);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 2:
    { step = 4; continue; }
  case 3:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 4:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], null);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pushWord_inline__P144819.info = {"start":15585,"length":385,"line":466,"column":23,"endLine":481,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":[]}

function pushWord_inline__P144819_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pushWord_inline__P144819, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
} }





function game_Prompt_constructor__P3042(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Prompt__C3037_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["theme"] = (s.arg1);
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorPrompt", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorInput", 3);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorInputHighlighted", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorInputText", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorAlphabet", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorCursor", 7);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorBackground", 15);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorBottomBackground", 3);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorBottomText", 1);
    r0 = (s.arg0).fields["theme"] = (s.tmp_0);
  case 2:
    r0 = (s.arg0).fields["cursorRow"] = (0);
    r0 = (s.arg0).fields["cursorColumn"] = (0);
    r0 = (s.arg0).fields["upper"] = (false);
    r0 = (s.arg0).fields["inputIndex"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Prompt_constructor__P3042.info = {"start":4533,"length":691,"line":138,"column":8,"endLine":159,"endColumn":9,"fileName":"pxt_modules/game/prompt.ts","functionName":"inline","argumentNames":["this","theme"]}

function game_Prompt_constructor__P3042_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Prompt_constructor__P3042, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_askPlayerForString__P4505(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.t___15156 = undefined;
    s.p___15177 = undefined;
    s.result___15182 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3774]) return breakpoint(s, 12, 3774, r0);
  case 12:
    r0 = (s.arg0 < 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 > 4);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_1;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg0 % 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 != 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3775]) return breakpoint(s, 13, 3775, r0);
  case 13:
    r0 = pxsim_pxtcore.throwValue("Player must be an integer between 1 and 4.");
  case 5:
  case 6:
    s.lastBrkId = 3776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3776]) return breakpoint(s, 14, 3776, r0);
  case 14:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorPrompt", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorInput", 3);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorInputHighlighted", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorInputText", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorAlphabet", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorCursor", 7);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorBackground", 15);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorBottomBackground", 3);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_4, "colorBottomText", 1);
    s.t___15156 = (s.tmp_4);
    s.lastBrkId = 3777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3777]) return breakpoint(s, 15, 3777, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 7:
    s.lastBrkId = 3778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3778]) return breakpoint(s, 16, 3778, r0);
  case 16:
    s.tmp_1 = if_colorInput_2_mk(s);
    s.tmp_1.arg0 = s.t___15156;
    s.tmp_1.arg1 = 2;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_1.arg0, "colorInput", s.tmp_1.arg1);
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["set/colorInput"];
      if (s.tmp_1.fn === null) { s.tmp_1.arg0.fields["colorInput"] = s.tmp_1.arg1; }
      else if (s.tmp_1.fn === undefined) { failedCast(s.tmp_1.arg0) } 
     else { s.callLocIdx = 1778; s.pc = 17; return s.tmp_1; }
    }
  case 17:
    r0 = s.retval;
    s.lastBrkId = 3779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3779]) return breakpoint(s, 18, 3779, r0);
  case 18:
    s.tmp_0 = if_colorBottomBackground_2_mk(s);
    s.tmp_0.arg0 = s.t___15156;
    s.tmp_0.arg1 = 2;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "colorBottomBackground", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/colorBottomBackground"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["colorBottomBackground"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1779; s.pc = 19; return s.tmp_0; }
    }
  case 19:
    r0 = s.retval;
    s.lastBrkId = 3780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3780]) return breakpoint(s, 20, 3780, r0);
  case 20:
    { step = 11; continue; }
  case 8:
    s.lastBrkId = 3781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3781]) return breakpoint(s, 21, 3781, r0);
  case 21:
    s.tmp_0 = if_colorInput_2_mk(s);
    s.tmp_0.arg0 = s.t___15156;
    s.tmp_0.arg1 = 8;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "colorInput", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/colorInput"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["colorInput"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1780; s.pc = 22; return s.tmp_0; }
    }
  case 22:
    r0 = s.retval;
    s.lastBrkId = 3782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3782]) return breakpoint(s, 23, 3782, r0);
  case 23:
    s.tmp_0 = if_colorBottomBackground_2_mk(s);
    s.tmp_0.arg0 = s.t___15156;
    s.tmp_0.arg1 = 8;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "colorBottomBackground", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/colorBottomBackground"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["colorBottomBackground"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1781; s.pc = 24; return s.tmp_0; }
    }
  case 24:
    r0 = s.retval;
    s.lastBrkId = 3783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3783]) return breakpoint(s, 25, 3783, r0);
  case 25:
    { step = 11; continue; }
  case 9:
    s.lastBrkId = 3784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3784]) return breakpoint(s, 26, 3784, r0);
  case 26:
    s.tmp_0 = if_colorInput_2_mk(s);
    s.tmp_0.arg0 = s.t___15156;
    s.tmp_0.arg1 = 4;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "colorInput", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/colorInput"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["colorInput"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1782; s.pc = 27; return s.tmp_0; }
    }
  case 27:
    r0 = s.retval;
    s.lastBrkId = 3785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3785]) return breakpoint(s, 28, 3785, r0);
  case 28:
    s.tmp_0 = if_colorBottomBackground_2_mk(s);
    s.tmp_0.arg0 = s.t___15156;
    s.tmp_0.arg1 = 4;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "colorBottomBackground", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/colorBottomBackground"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["colorBottomBackground"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1783; s.pc = 29; return s.tmp_0; }
    }
  case 29:
    r0 = s.retval;
    s.lastBrkId = 3786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3786]) return breakpoint(s, 30, 3786, r0);
  case 30:
    { step = 11; continue; }
  case 10:
    s.lastBrkId = 3787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3787]) return breakpoint(s, 31, 3787, r0);
  case 31:
    s.tmp_0 = if_colorInput_2_mk(s);
    s.tmp_0.arg0 = s.t___15156;
    s.tmp_0.arg1 = 7;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "colorInput", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/colorInput"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["colorInput"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1784; s.pc = 32; return s.tmp_0; }
    }
  case 32:
    r0 = s.retval;
    s.lastBrkId = 3788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3788]) return breakpoint(s, 33, 3788, r0);
  case 33:
    s.tmp_0 = if_colorBottomBackground_2_mk(s);
    s.tmp_0.arg0 = s.t___15156;
    s.tmp_0.arg1 = 7;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "colorBottomBackground", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/colorBottomBackground"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["colorBottomBackground"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1785; s.pc = 34; return s.tmp_0; }
    }
  case 34:
    r0 = s.retval;
    s.lastBrkId = 3789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3789]) return breakpoint(s, 35, 3789, r0);
  case 35:
    s.tmp_0 = if_colorCursor_2_mk(s);
    s.tmp_0.arg0 = s.t___15156;
    s.tmp_0.arg1 = 3;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "colorCursor", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/colorCursor"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["colorCursor"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1786; s.pc = 36; return s.tmp_0; }
    }
  case 36:
    r0 = s.retval;
    s.lastBrkId = 3790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3790]) return breakpoint(s, 37, 3790, r0);
  case 37:
  case 11:
    s.lastBrkId = 3791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3791]) return breakpoint(s, 38, 3791, r0);
  case 38:
    r0 = pxsim_pxtcore_mkClassInstance(game_MultiplayerPrompt__C4506_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_MultiplayerPrompt_constructor__P4511_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.t___15156;
    s.callLocIdx = 1787; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.p___15177 = (s.tmp_0);
    s.lastBrkId = 3792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3792]) return breakpoint(s, 40, 3792, r0);
  case 40:
    s.tmp_0 = game_MultiplayerPrompt_show__P4512_mk(s);
    s.tmp_0.arg0 = s.p___15177;
    s.tmp_1 = console_inspect__P382_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 20;
    s.callLocIdx = 1788; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 1789; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.result___15182 = (r0);
    s.lastBrkId = 3793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3793]) return breakpoint(s, 43, 3793, r0);
  case 43:
    r0 = s.result___15182;
    return leave(s, r0)
  default: oops()
} } }
game_askPlayerForString__P4505.info = {"start":675,"length":1252,"line":18,"column":4,"endLine":58,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"askPlayerForString","argumentNames":["player","message","answerLength"]}

function game_askPlayerForString__P4505_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_askPlayerForString__P4505, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  t___15156: undefined,
  p___15177: undefined,
  result___15182: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function game_MultiplayerPrompt_show__P4512(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3826]) return breakpoint(s, 1, 3826, r0);
  case 1:
    r0 = (s.arg0).fields["message"] = (s.arg1);
    s.lastBrkId = 3827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3827]) return breakpoint(s, 2, 3827, r0);
  case 2:
    r0 = (s.arg0).fields["answerLength"] = (s.arg2);
    s.lastBrkId = 3828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3828]) return breakpoint(s, 3, 3828, r0);
  case 3:
    r0 = (s.arg0).fields["inputIndex"] = (0);
    s.lastBrkId = 3829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3829]) return breakpoint(s, 4, 3829, r0);
  case 4:
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 1796; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 3830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3830]) return breakpoint(s, 6, 3830, r0);
  case 6:
    s.tmp_0 = game_pushScene__P3002_mk(s);
    s.callLocIdx = 1797; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 3831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3831]) return breakpoint(s, 8, 3831, r0);
  case 8:
    s.tmp_0 = game_MultiplayerPrompt_draw__P7430_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1798; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 3832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3832]) return breakpoint(s, 10, 3832, r0);
  case 10:
    s.tmp_0 = game_MultiplayerPrompt_registerHandlers__P7440_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1799; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3833]) return breakpoint(s, 12, 3833, r0);
  case 12:
    r0 = (s.arg0).fields["confirmPressed"] = (false);
    s.lastBrkId = 3834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3834]) return breakpoint(s, 13, 3834, r0);
  case 13:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_show_inline__P15211);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = pauseUntil__P367_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1800; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 3835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3835]) return breakpoint(s, 15, 3835, r0);
  case 15:
    s.tmp_0 = game_popScene__P3003_mk(s);
    s.callLocIdx = 1801; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 3836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3836]) return breakpoint(s, 17, 3836, r0);
  case 17:
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1802; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 3837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3837]) return breakpoint(s, 19, 3837, r0);
  case 19:
    r0 = s.arg0.fields["result"];
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_show__P4512.info = {"start":6182,"length":524,"line":191,"column":8,"endLine":209,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"show","argumentNames":["this","message","answerLength"]}

function game_MultiplayerPrompt_show__P4512_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_show__P4512, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function game_MultiplayerPrompt_show_inline__P15211(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["confirmPressed"];
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_show_inline__P15211.info = {"start":6554,"length":25,"line":203,"column":23,"endLine":203,"endColumn":48,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_show_inline__P15211_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_show_inline__P15211, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_MultiplayerPrompt_registerHandlers__P7440(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3922]) return breakpoint(s, 5, 3922, r0);
  case 5:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15222);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.up___2116;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1871; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3924]) return breakpoint(s, 7, 3924, r0);
  case 7:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15227);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.down___2118;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1873; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 3926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3926]) return breakpoint(s, 9, 3926, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15232);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.right___2117;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1875; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 3928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3928]) return breakpoint(s, 11, 3928, r0);
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15237);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.left___2115;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1877; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 3930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3930]) return breakpoint(s, 13, 3930, r0);
  case 13:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15242);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.A___2113;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1879; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 3932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3932]) return breakpoint(s, 15, 3932, r0);
  case 15:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15247);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.B___2114;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1881; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 3934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3934]) return breakpoint(s, 17, 3934, r0);
  case 17:
    r0 = s.arg0.fields["player"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 3935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3935]) return breakpoint(s, 18, 3935, r0);
  case 18:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15257);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_3 = controller_Controller_up__P2145_mk(s);
    s.tmp_3.arg0 = globals.player2___2120;
    s.callLocIdx = 1882; s.pc = 20; return s.tmp_3;
  case 20:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 2053;
    s.tmp_2.arg2 = s.tmp_1;
    s.callLocIdx = 1884; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 3937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3937]) return breakpoint(s, 21, 3937, r0);
  case 21:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15263);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_down__P2146_mk(s);
    s.tmp_2.arg0 = globals.player2___2120;
    s.callLocIdx = 1885; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1887; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 3939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3939]) return breakpoint(s, 24, 3939, r0);
  case 24:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15269);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_right__P2144_mk(s);
    s.tmp_2.arg0 = globals.player2___2120;
    s.callLocIdx = 1888; s.pc = 26; return s.tmp_2;
  case 26:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1890; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 3941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3941]) return breakpoint(s, 27, 3941, r0);
  case 27:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15275);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_left__P2143_mk(s);
    s.tmp_2.arg0 = globals.player2___2120;
    s.callLocIdx = 1891; s.pc = 29; return s.tmp_2;
  case 29:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1893; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.lastBrkId = 3943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3943]) return breakpoint(s, 30, 3943, r0);
  case 30:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15281);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_A__P2147_mk(s);
    s.tmp_2.arg0 = globals.player2___2120;
    s.callLocIdx = 1894; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1896; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 3945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3945]) return breakpoint(s, 33, 3945, r0);
  case 33:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15287);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_B__P2148_mk(s);
    s.tmp_2.arg0 = globals.player2___2120;
    s.callLocIdx = 1897; s.pc = 35; return s.tmp_2;
  case 35:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1899; s.pc = 34; return s.tmp_1;
  case 34:
    r0 = s.retval;
    s.lastBrkId = 3947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3947]) return breakpoint(s, 36, 3947, r0);
  case 36:
    { step = 4; continue; }
  case 2:
    s.lastBrkId = 3948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3948]) return breakpoint(s, 37, 3948, r0);
  case 37:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15293);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_up__P2145_mk(s);
    s.tmp_2.arg0 = globals.player3___2121;
    s.callLocIdx = 1900; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1902; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.lastBrkId = 3950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3950]) return breakpoint(s, 40, 3950, r0);
  case 40:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15299);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_down__P2146_mk(s);
    s.tmp_2.arg0 = globals.player3___2121;
    s.callLocIdx = 1903; s.pc = 42; return s.tmp_2;
  case 42:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1905; s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    s.lastBrkId = 3952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3952]) return breakpoint(s, 43, 3952, r0);
  case 43:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15305);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_right__P2144_mk(s);
    s.tmp_2.arg0 = globals.player3___2121;
    s.callLocIdx = 1906; s.pc = 45; return s.tmp_2;
  case 45:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1908; s.pc = 44; return s.tmp_1;
  case 44:
    r0 = s.retval;
    s.lastBrkId = 3954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3954]) return breakpoint(s, 46, 3954, r0);
  case 46:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15311);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_left__P2143_mk(s);
    s.tmp_2.arg0 = globals.player3___2121;
    s.callLocIdx = 1909; s.pc = 48; return s.tmp_2;
  case 48:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1911; s.pc = 47; return s.tmp_1;
  case 47:
    r0 = s.retval;
    s.lastBrkId = 3956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3956]) return breakpoint(s, 49, 3956, r0);
  case 49:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15317);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_A__P2147_mk(s);
    s.tmp_2.arg0 = globals.player3___2121;
    s.callLocIdx = 1912; s.pc = 51; return s.tmp_2;
  case 51:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1914; s.pc = 50; return s.tmp_1;
  case 50:
    r0 = s.retval;
    s.lastBrkId = 3958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3958]) return breakpoint(s, 52, 3958, r0);
  case 52:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15323);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_B__P2148_mk(s);
    s.tmp_2.arg0 = globals.player3___2121;
    s.callLocIdx = 1915; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1917; s.pc = 53; return s.tmp_1;
  case 53:
    r0 = s.retval;
    s.lastBrkId = 3960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3960]) return breakpoint(s, 55, 3960, r0);
  case 55:
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 3961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3961]) return breakpoint(s, 56, 3961, r0);
  case 56:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15329);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_up__P2145_mk(s);
    s.tmp_2.arg0 = globals.player4___2122;
    s.callLocIdx = 1918; s.pc = 58; return s.tmp_2;
  case 58:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1920; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
    s.lastBrkId = 3963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3963]) return breakpoint(s, 59, 3963, r0);
  case 59:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15335);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_down__P2146_mk(s);
    s.tmp_2.arg0 = globals.player4___2122;
    s.callLocIdx = 1921; s.pc = 61; return s.tmp_2;
  case 61:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1923; s.pc = 60; return s.tmp_1;
  case 60:
    r0 = s.retval;
    s.lastBrkId = 3965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3965]) return breakpoint(s, 62, 3965, r0);
  case 62:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15341);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_right__P2144_mk(s);
    s.tmp_2.arg0 = globals.player4___2122;
    s.callLocIdx = 1924; s.pc = 64; return s.tmp_2;
  case 64:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1926; s.pc = 63; return s.tmp_1;
  case 63:
    r0 = s.retval;
    s.lastBrkId = 3967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3967]) return breakpoint(s, 65, 3967, r0);
  case 65:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15347);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_left__P2143_mk(s);
    s.tmp_2.arg0 = globals.player4___2122;
    s.callLocIdx = 1927; s.pc = 67; return s.tmp_2;
  case 67:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1929; s.pc = 66; return s.tmp_1;
  case 66:
    r0 = s.retval;
    s.lastBrkId = 3969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3969]) return breakpoint(s, 68, 3969, r0);
  case 68:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15353);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_A__P2147_mk(s);
    s.tmp_2.arg0 = globals.player4___2122;
    s.callLocIdx = 1930; s.pc = 70; return s.tmp_2;
  case 70:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1932; s.pc = 69; return s.tmp_1;
  case 69:
    r0 = s.retval;
    s.lastBrkId = 3971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3971]) return breakpoint(s, 71, 3971, r0);
  case 71:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15359);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_2 = controller_Controller_B__P2148_mk(s);
    s.tmp_2.arg0 = globals.player4___2122;
    s.callLocIdx = 1933; s.pc = 73; return s.tmp_2;
  case 73:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1935; s.pc = 72; return s.tmp_1;
  case 72:
    r0 = s.retval;
    s.lastBrkId = 3973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3973]) return breakpoint(s, 74, 3973, r0);
  case 74:
  case 4:
    s.lastBrkId = 3974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3974]) return breakpoint(s, 75, 3974, r0);
  case 75:
    r0 = (s.arg0).fields["frameCount"] = (0);
    s.lastBrkId = 3975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3975]) return breakpoint(s, 76, 3975, r0);
  case 76:
    r0 = (s.arg0).fields["blink"] = (true);
    s.lastBrkId = 3976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3976]) return breakpoint(s, 77, 3976, r0);
  case 77:
    r0 = pxsim_pxtcore_mkAction(1, game_MultiplayerPrompt_registerHandlers_inline__P15368);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = game_onUpdate__P3022_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1937; s.pc = 78; return s.tmp_1;
  case 78:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers__P7440.info = {"start":12194,"length":4117,"line":354,"column":8,"endLine":475,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"registerHandlers","argumentNames":["this"]}

function game_MultiplayerPrompt_registerHandlers__P7440_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers__P7440, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15222(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3923]) return breakpoint(s, 1, 3923, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveVertical__P7441_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1870; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15222.info = {"start":12411,"length":62,"line":357,"column":51,"endLine":359,"endColumn":13,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15222_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15222, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15227(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3925]) return breakpoint(s, 1, 3925, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveVertical__P7441_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1872; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15227.info = {"start":12529,"length":63,"line":361,"column":53,"endLine":363,"endColumn":13,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15227_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15227, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15232(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3927]) return breakpoint(s, 1, 3927, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveHorizontal__P7442_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1874; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15232.info = {"start":12649,"length":64,"line":365,"column":54,"endLine":367,"endColumn":13,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15232_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15232, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15237(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3929]) return breakpoint(s, 1, 3929, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveHorizontal__P7442_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1876; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15237.info = {"start":12770,"length":65,"line":369,"column":53,"endLine":371,"endColumn":13,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15237_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15237, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15242(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3931]) return breakpoint(s, 1, 3931, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_confirm__P7443_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1878; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15242.info = {"start":12889,"length":53,"line":373,"column":50,"endLine":375,"endColumn":13,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15242_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15242, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15247(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3933]) return breakpoint(s, 1, 3933, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_delete__P7444_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1880; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15247.info = {"start":12996,"length":52,"line":377,"column":50,"endLine":379,"endColumn":13,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15247_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15247, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15257(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3936]) return breakpoint(s, 1, 3936, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveVertical__P7441_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1883; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15257.info = {"start":13241,"length":78,"line":384,"column":67,"endLine":386,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15257_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15257, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15263(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3938]) return breakpoint(s, 1, 3938, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveVertical__P7441_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1886; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15263.info = {"start":13391,"length":79,"line":388,"column":69,"endLine":390,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15263_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15263, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15269(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3940]) return breakpoint(s, 1, 3940, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveHorizontal__P7442_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1889; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15269.info = {"start":13543,"length":80,"line":392,"column":70,"endLine":394,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15269_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15269, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15275(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3942]) return breakpoint(s, 1, 3942, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveHorizontal__P7442_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1892; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15275.info = {"start":13696,"length":81,"line":396,"column":69,"endLine":398,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15275_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15275, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15281(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3944]) return breakpoint(s, 1, 3944, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_confirm__P7443_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1895; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15281.info = {"start":13847,"length":69,"line":400,"column":66,"endLine":402,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15281_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15281, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15287(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3946]) return breakpoint(s, 1, 3946, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_delete__P7444_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1898; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15287.info = {"start":13986,"length":68,"line":404,"column":66,"endLine":406,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15287_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15287, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15293(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3949]) return breakpoint(s, 1, 3949, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveVertical__P7441_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1901; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15293.info = {"start":14175,"length":78,"line":410,"column":67,"endLine":412,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15293_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15293, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15299(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3951]) return breakpoint(s, 1, 3951, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveVertical__P7441_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1904; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15299.info = {"start":14325,"length":79,"line":414,"column":69,"endLine":416,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15299_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15299, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15305(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3953]) return breakpoint(s, 1, 3953, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveHorizontal__P7442_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1907; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15305.info = {"start":14477,"length":80,"line":418,"column":70,"endLine":420,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15305_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15305, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15311(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3955]) return breakpoint(s, 1, 3955, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveHorizontal__P7442_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1910; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15311.info = {"start":14630,"length":81,"line":422,"column":69,"endLine":424,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15311_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15311, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15317(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3957]) return breakpoint(s, 1, 3957, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_confirm__P7443_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1913; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15317.info = {"start":14781,"length":69,"line":426,"column":66,"endLine":428,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15317_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15317, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15323(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3959]) return breakpoint(s, 1, 3959, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_delete__P7444_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1916; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15323.info = {"start":14920,"length":68,"line":430,"column":66,"endLine":432,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15323_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15323, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15329(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3962]) return breakpoint(s, 1, 3962, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveVertical__P7441_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1919; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15329.info = {"start":15109,"length":78,"line":436,"column":67,"endLine":438,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15329_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15329, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15335(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3964]) return breakpoint(s, 1, 3964, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveVertical__P7441_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1922; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15335.info = {"start":15259,"length":79,"line":440,"column":69,"endLine":442,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15335_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15335, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15341(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3966]) return breakpoint(s, 1, 3966, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveHorizontal__P7442_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1925; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15341.info = {"start":15411,"length":80,"line":444,"column":70,"endLine":446,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15341_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15341, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15347(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3968]) return breakpoint(s, 1, 3968, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_moveHorizontal__P7442_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1928; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15347.info = {"start":15564,"length":81,"line":448,"column":69,"endLine":450,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15347_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15347, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15353(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3970]) return breakpoint(s, 1, 3970, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_confirm__P7443_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1931; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15353.info = {"start":15715,"length":69,"line":452,"column":66,"endLine":454,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15353_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15353, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15359(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3972]) return breakpoint(s, 1, 3972, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_delete__P7444_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1934; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15359.info = {"start":15854,"length":68,"line":456,"column":66,"endLine":458,"endColumn":21,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15359_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15359, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_MultiplayerPrompt_registerHandlers_inline__P15368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 3977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3977]) return breakpoint(s, 3, 3977, r0);
  case 3:
    s.tmp_0 = r0 = s.caps[0];
    r0 = s.caps[0].fields["frameCount"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 30);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["frameCount"] = (s.tmp_1);
    s.lastBrkId = 3978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3978]) return breakpoint(s, 4, 3978, r0);
  case 4:
    r0 = s.caps[0].fields["frameCount"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3979]) return breakpoint(s, 5, 3979, r0);
  case 5:
    s.tmp_2 = r0 = s.caps[0];
    r0 = s.caps[0].fields["blink"];
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["blink"] = (s.tmp_3);
    s.lastBrkId = 3980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3980]) return breakpoint(s, 6, 3980, r0);
  case 6:
    s.tmp_0 = game_MultiplayerPrompt_updateSelectedInput__P7437_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1936; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_registerHandlers_inline__P15368.info = {"start":16058,"length":242,"line":466,"column":26,"endLine":474,"endColumn":13,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function game_MultiplayerPrompt_registerHandlers_inline__P15368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_registerHandlers_inline__P15368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
} }





function game_MultiplayerPrompt_delete__P7444(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 4014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4014]) return breakpoint(s, 6, 4014, r0);
  case 6:
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 4015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4015]) return breakpoint(s, 7, 4015, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 4016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4016]) return breakpoint(s, 8, 4016, r0);
  case 8:
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["answerLength"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 < s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 4017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4017]) return breakpoint(s, 9, 4017, r0);
  case 9:
    s.tmp_5 = game_MultiplayerPrompt_drawInput__P7439_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_6 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["inputs"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1952; s.pc = 11; return s.tmp_6;
  case 11:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_5.arg2 = r0;
    s.tmp_9 = if_colorInput_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_9.arg0 = r0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "colorInput");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["colorInput"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["colorInput"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 1953; s.pc = 12; return s.tmp_9; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_5.arg3 = r0;
    s.callLocIdx = 1954; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 4018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4018]) return breakpoint(s, 13, 4018, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_stringSubstr__P118_mk(s);
    r0 = s.arg0.fields["result"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 0;
    r0 = s.arg0.fields["result"];
    s.tmp_4 = r0;
    r0 = pxsim_String_.length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1955; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["result"] = (s.tmp_1);
    s.lastBrkId = 4019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4019]) return breakpoint(s, 15, 4019, r0);
  case 15:
    s.tmp_0 = game_MultiplayerPrompt_changeInputIndex__P7445_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 1956; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_delete__P7444.info = {"start":18632,"length":353,"line":549,"column":8,"endLine":559,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"delete","argumentNames":["this"]}

function game_MultiplayerPrompt_delete__P7444_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_delete__P7444, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_changeInputIndex__P7445(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 4020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4020]) return breakpoint(s, 1, 4020, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["inputIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["inputIndex"] = (s.tmp_1);
    s.lastBrkId = 4021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4021]) return breakpoint(s, 2, 4021, r0);
  case 2:
    r0 = (s.arg0).fields["frameCount"] = (0);
    s.lastBrkId = 4022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4022]) return breakpoint(s, 3, 4022, r0);
  case 3:
    r0 = (s.arg0).fields["blink"] = (false);
    s.lastBrkId = 4023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4023]) return breakpoint(s, 4, 4023, r0);
  case 4:
    s.tmp_0 = game_MultiplayerPrompt_updateSelectedInput__P7437_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1957; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_changeInputIndex__P7445.info = {"start":18995,"length":193,"line":561,"column":8,"endLine":566,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"changeInputIndex","argumentNames":["this","delta"]}

function game_MultiplayerPrompt_changeInputIndex__P7445_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_changeInputIndex__P7445, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_MultiplayerPrompt_drawInput__P7439(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3918]) return breakpoint(s, 3, 3918, r0);
  case 3:
    r0 = pxsim_ImageMethods.fill(s.arg1, 0);
    s.lastBrkId = 3919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3919]) return breakpoint(s, 4, 3919, r0);
  case 4:
    s.tmp_0 = helpers_imageFillRect__P1956_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    r0 = (globals.CELL_HEIGHT___7356 - 1);
    s.tmp_0.arg2 = r0;
    r0 = (globals.CELL_WIDTH___7354 - 2);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.arg3;
    s.callLocIdx = 1867; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 3920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3920]) return breakpoint(s, 6, 3920, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3921]) return breakpoint(s, 7, 3921, r0);
  case 7:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = globals.LETTER_OFFSET_X___7360;
    s.tmp_0.arg3 = globals.LETTER_OFFSET_Y___7364;
    s.tmp_1 = if_colorInputText_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "colorInputText");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["colorInputText"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["colorInputText"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1868; s.pc = 9; return s.tmp_1; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = globals.font___7327;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1869; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_drawInput__P7439.info = {"start":11851,"length":333,"line":345,"column":8,"endLine":352,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"drawInput","argumentNames":["this","img","char","color"]}

function game_MultiplayerPrompt_drawInput__P7439_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_drawInput__P7439, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function game_MultiplayerPrompt_confirm__P7443(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___15546 = undefined;
    s.letter___15554 = undefined;
    s.sprite___15573 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3998]) return breakpoint(s, 10, 3998, r0);
  case 10:
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3999]) return breakpoint(s, 11, 3999, r0);
  case 11:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 % 2);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 4000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4000]) return breakpoint(s, 12, 4000, r0);
  case 12:
    r0 = (s.arg0).fields["confirmPressed"] = (true);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 4001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4001]) return breakpoint(s, 13, 4001, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["upper"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["upper"] = (s.tmp_1);
    s.lastBrkId = 4002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4002]) return breakpoint(s, 14, 4002, r0);
  case 14:
    s.tmp_0 = game_MultiplayerPrompt_updateKeyboard__P7438_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1945; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 4003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4003]) return breakpoint(s, 16, 4003, r0);
  case 16:
    s.tmp_0 = game_MultiplayerPrompt_updateButtons__P7435_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1946; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 2:
    { step = 8; continue; }
  case 3:
    s.lastBrkId = 4004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4004]) return breakpoint(s, 18, 4004, r0);
  case 18:
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["answerLength"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 4005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4005]) return breakpoint(s, 19, 4005, r0);
  case 19:
    { step = 9; continue; }
  case 4:
  case 5:
    s.lastBrkId = 4006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4006]) return breakpoint(s, 20, 4006, r0);
  case 20:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * 12);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.index___15546 = (r0);
    s.lastBrkId = 4007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4007]) return breakpoint(s, 21, 4007, r0);
  case 21:
    s.tmp_0 = game_getCharForIndex__P7447_mk(s);
    s.tmp_0.arg0 = s.index___15546;
    r0 = s.arg0.fields["upper"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1947; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.letter___15554 = (r0);
    s.lastBrkId = 4008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4008]) return breakpoint(s, 23, 4008, r0);
  case 23:
    r0 = s.arg0.fields["result"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 4009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4009]) return breakpoint(s, 24, 4009, r0);
  case 24:
    r0 = (s.arg0).fields["result"] = (s.letter___15554);
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 4010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4010]) return breakpoint(s, 25, 4010, r0);
  case 25:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["result"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 26);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 26:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.letter___15554) && (s.letter___15554).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.letter___15554);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.letter___15554) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["result"] = (s.tmp_1);
  case 7:
    s.lastBrkId = 4011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4011]) return breakpoint(s, 28, 4011, r0);
  case 28:
    r0 = s.arg0.fields["inputs"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.sprite___15573 = (r0);
    s.lastBrkId = 4012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4012]) return breakpoint(s, 29, 4012, r0);
  case 29:
    s.tmp_0 = game_MultiplayerPrompt_changeInputIndex__P7445_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 1948; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 4013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4013]) return breakpoint(s, 31, 4013, r0);
  case 31:
    s.tmp_0 = game_MultiplayerPrompt_drawInput__P7439_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_image__P2389_mk(s);
    s.tmp_1.arg0 = s.sprite___15573;
    s.callLocIdx = 1949; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.letter___15554;
    s.tmp_2 = if_colorInput_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorInput");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorInput"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorInput"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1950; s.pc = 34; return s.tmp_2; }
    }
  case 34:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1951; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_confirm__P7443.info = {"start":17640,"length":982,"line":519,"column":8,"endLine":547,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"confirm","argumentNames":["this"]}

function game_MultiplayerPrompt_confirm__P7443_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_confirm__P7443, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  index___15546: undefined,
  letter___15554: undefined,
  sprite___15573: undefined,
  arg0: undefined,
} }





function game_getCharForIndex__P7447(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 4069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4069]) return breakpoint(s, 8, 4069, r0);
  case 8:
    r0 = (s.arg0 < 26);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 4070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4070]) return breakpoint(s, 9, 4070, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = 65;
    { step = 2; continue; }
  case 1:
    r0 = 97;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0 + s.tmp_1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.fromCharCode(s.tmp_2);
    { step = 7; continue; }
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 4071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4071]) return breakpoint(s, 10, 4071, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 4072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4072]) return breakpoint(s, 11, 4072, r0);
  case 11:
    s.tmp_3 = r0 = globals.digitsUpper___7428;
    r0 = (s.arg0 - 26);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    { step = 7; continue; }
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 4073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4073]) return breakpoint(s, 12, 4073, r0);
  case 12:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_5 = r0;
    r0 = (s.arg0 - 26);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    { step = 7; continue; }
  case 5:
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
game_getCharForIndex__P7447.info = {"start":21062,"length":353,"line":641,"column":4,"endLine":653,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"getCharForIndex","argumentNames":["index","upper"]}

function game_getCharForIndex__P7447_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_getCharForIndex__P7447, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_MultiplayerPrompt_updateKeyboard__P7438(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___15710 = undefined;
    s.k___15715 = undefined;
    s.img___15720 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3910]) return breakpoint(s, 3, 3910, r0);
  case 3:
    r0 = s.arg0.fields["letters"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    s.len___15710 = (r0);
    s.lastBrkId = 3911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3911]) return breakpoint(s, 4, 3911, r0);
  case 4:
    s.k___15715 = (0);
    s.lastBrkId = 3912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3912]) return breakpoint(s, 5, 3912, r0);
  case 5:
  case 1:
    s.lastBrkId = 3913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3913]) return breakpoint(s, 6, 3913, r0);
  case 6:
    r0 = (s.k___15715 < s.len___15710);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3914]) return breakpoint(s, 7, 3914, r0);
  case 7:
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["letters"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.k___15715);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1864; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.img___15720 = (r0);
    s.lastBrkId = 3915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3915]) return breakpoint(s, 9, 3915, r0);
  case 9:
    r0 = pxsim_ImageMethods.fill(s.img___15720, 0);
    s.lastBrkId = 3916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3916]) return breakpoint(s, 10, 3916, r0);
  case 10:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = s.img___15720;
    s.tmp_1 = game_getCharForIndex__P7447_mk(s);
    s.tmp_1.arg0 = s.k___15715;
    r0 = s.arg0.fields["upper"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1865; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = globals.LETTER_OFFSET_X___7360;
    s.tmp_0.arg3 = globals.LETTER_OFFSET_Y___7364;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1866; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3917]) return breakpoint(s, 13, 3917, r0);
  case 13:
    r0 = (s.k___15715 + 1);
    s.k___15715 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_updateKeyboard__P7438.info = {"start":11529,"length":312,"line":336,"column":8,"endLine":343,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"updateKeyboard","argumentNames":["this"]}

function game_MultiplayerPrompt_updateKeyboard__P7438_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_updateKeyboard__P7438, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___15710: undefined,
  k___15715: undefined,
  img___15720: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_updateButtons__P7435(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3890]) return breakpoint(s, 11, 3890, r0);
  case 11:
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 % 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3891]) return breakpoint(s, 12, 3891, r0);
  case 12:
    s.tmp_6 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1840; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = if_colorCursor_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "colorCursor");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["colorCursor"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["colorCursor"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 1841; s.pc = 14; return s.tmp_8; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_5, s.tmp_7);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 3892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3892]) return breakpoint(s, 15, 3892, r0);
  case 15:
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1842; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = if_colorBottomBackground_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "colorBottomBackground");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["colorBottomBackground"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["colorBottomBackground"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1843; s.pc = 17; return s.tmp_3; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, s.tmp_2);
  case 4:
    s.lastBrkId = 3893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3893]) return breakpoint(s, 18, 3893, r0);
  case 18:
    r0 = s.arg0.fields["upper"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3894]) return breakpoint(s, 19, 3894, r0);
  case 19:
    s.tmp_1 = helpers_imagePrint__P1990_mk(s);
    s.tmp_2 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1844; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = globals.upperShiftText___7427;
    s.tmp_1.arg2 = globals.BOTTOM_BAR_SHIFT_X___7396;
    s.tmp_1.arg3 = globals.BOTTOM_BAR_TEXT_Y___7393;
    s.tmp_1.arg4 = undefined;
    s.tmp_1.arg5 = undefined;
    s.tmp_1.arg6 = undefined;
    s.callLocIdx = 1845; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 3895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3895]) return breakpoint(s, 22, 3895, r0);
  case 22:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1846; s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.lowerShiftText___7426;
    s.tmp_0.arg2 = globals.BOTTOM_BAR_SHIFT_X___7396;
    s.tmp_0.arg3 = globals.BOTTOM_BAR_TEXT_Y___7393;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1847; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 6:
    s.lastBrkId = 3896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3896]) return breakpoint(s, 25, 3896, r0);
  case 25:
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 2);
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3897]) return breakpoint(s, 26, 3897, r0);
  case 26:
    s.tmp_5 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 1848; s.pc = 27; return s.tmp_5;
  case 27:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_7 = if_colorCursor_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "colorCursor");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["colorCursor"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["colorCursor"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1849; s.pc = 28; return s.tmp_7; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_4, s.tmp_6);
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 3898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3898]) return breakpoint(s, 29, 3898, r0);
  case 29:
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1850; s.pc = 30; return s.tmp_1;
  case 30:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = if_colorBottomBackground_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "colorBottomBackground");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["colorBottomBackground"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["colorBottomBackground"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1851; s.pc = 31; return s.tmp_3; }
    }
  case 31:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, s.tmp_2);
  case 10:
    s.lastBrkId = 3899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3899]) return breakpoint(s, 32, 3899, r0);
  case 32:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_1 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1852; s.pc = 34; return s.tmp_1;
  case 34:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.confirmText___7429;
    s.tmp_0.arg2 = globals.BOTTOM_BAR_CONFIRM_X___7399;
    s.tmp_0.arg3 = globals.BOTTOM_BAR_TEXT_Y___7393;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1853; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_updateButtons__P7435.info = {"start":9786,"length":946,"line":287,"column":8,"endLine":311,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"updateButtons","argumentNames":["this"]}

function game_MultiplayerPrompt_updateButtons__P7435_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_updateButtons__P7435, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_moveHorizontal__P7442(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3994]) return breakpoint(s, 3, 3994, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3995]) return breakpoint(s, 4, 3995, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 12);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorColumn"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3996]) return breakpoint(s, 5, 3996, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 11);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 12);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorColumn"] = (s.tmp_1);
  case 2:
    s.lastBrkId = 3997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3997]) return breakpoint(s, 6, 3997, r0);
  case 6:
    s.tmp_0 = game_MultiplayerPrompt_updateCursor__P7436_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1944; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_moveHorizontal__P7442.info = {"start":17284,"length":346,"line":508,"column":8,"endLine":517,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"moveHorizontal","argumentNames":["this","right"]}

function game_MultiplayerPrompt_moveHorizontal__P7442_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_moveHorizontal__P7442, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_MultiplayerPrompt_updateCursor__P7436(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3900]) return breakpoint(s, 3, 3900, r0);
  case 3:
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3901]) return breakpoint(s, 4, 3901, r0);
  case 4:
    s.tmp_3 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1854; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_2, 0);
    s.lastBrkId = 3902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3902]) return breakpoint(s, 6, 3902, r0);
  case 6:
    s.tmp_0 = game_MultiplayerPrompt_updateButtons__P7435_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1855; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3903]) return breakpoint(s, 8, 3903, r0);
  case 8:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.ROW_LEFT___7372;
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * globals.CELL_WIDTH___7354);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1856; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 3904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3904]) return breakpoint(s, 10, 3904, r0);
  case 10:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.ALPHABET_TOP___7412;
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * globals.CELL_HEIGHT___7356);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1857; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_updateCursor__P7436.info = {"start":10742,"length":354,"line":313,"column":8,"endLine":322,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"updateCursor","argumentNames":["this"]}

function game_MultiplayerPrompt_updateCursor__P7436_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_updateCursor__P7436, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_moveVertical__P7441(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3981]) return breakpoint(s, 11, 3981, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3982]) return breakpoint(s, 12, 3982, r0);
  case 12:
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3983]) return breakpoint(s, 13, 3983, r0);
  case 13:
    s.tmp_3 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1938; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = if_colorCursor_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "colorCursor");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["colorCursor"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["colorCursor"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1939; s.pc = 15; return s.tmp_5; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_2, s.tmp_4);
    s.lastBrkId = 3984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3984]) return breakpoint(s, 16, 3984, r0);
  case 16:
    r0 = (s.arg0).fields["cursorRow"] = (2);
    s.lastBrkId = 3985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3985]) return breakpoint(s, 17, 3985, r0);
  case 17:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 % 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3986]) return breakpoint(s, 18, 3986, r0);
  case 18:
    r0 = (s.arg0).fields["cursorColumn"] = (11);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3987]) return breakpoint(s, 19, 3987, r0);
  case 19:
    r0 = (s.arg0).fields["cursorColumn"] = (0);
  case 2:
    s.lastBrkId = 3988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3988]) return breakpoint(s, 20, 3988, r0);
  case 20:
    s.tmp_0 = game_MultiplayerPrompt_updateButtons__P7435_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1940; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 3989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3989]) return breakpoint(s, 22, 3989, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = 0;
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1941; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorRow"] = (s.tmp_1);
  case 4:
    { step = 10; continue; }
  case 5:
    s.lastBrkId = 3990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3990]) return breakpoint(s, 24, 3990, r0);
  case 24:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_min__P131_mk(s);
    s.tmp_2.arg0 = 3;
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1942; s.pc = 25; return s.tmp_2;
  case 25:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorRow"] = (s.tmp_1);
    s.lastBrkId = 3991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3991]) return breakpoint(s, 26, 3991, r0);
  case 26:
    r0 = s.arg0.fields["cursorRow"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 3992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3992]) return breakpoint(s, 27, 3992, r0);
  case 27:
    r0 = s.arg0.fields["cursorColumn"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 5);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = 1;
    { step = 7; continue; }
  case 6:
    r0 = 0;
  case 7:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["cursorColumn"] = (s.tmp_4);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 3993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3993]) return breakpoint(s, 28, 3993, r0);
  case 28:
    s.tmp_0 = game_MultiplayerPrompt_updateCursor__P7436_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1943; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_moveVertical__P7441.info = {"start":16321,"length":953,"line":477,"column":8,"endLine":506,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"moveVertical","argumentNames":["this","up"]}

function game_MultiplayerPrompt_moveVertical__P7441_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_moveVertical__P7441, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_MultiplayerPrompt_updateSelectedInput__P7437(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.u___15392 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3905]) return breakpoint(s, 5, 3905, r0);
  case 5:
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["answerLength"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3906]) return breakpoint(s, 6, 3906, r0);
  case 6:
    r0 = s.arg0.fields["inputs"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["inputIndex"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.u___15392 = (r0);
    s.lastBrkId = 3907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3907]) return breakpoint(s, 7, 3907, r0);
  case 7:
    r0 = s.arg0.fields["blink"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3908]) return breakpoint(s, 8, 3908, r0);
  case 8:
    s.tmp_1 = game_MultiplayerPrompt_drawInput__P7439_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = Sprite_image__P2389_mk(s);
    s.tmp_2.arg0 = s.u___15392;
    s.callLocIdx = 1858; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1.arg2 = r0;
    s.tmp_3 = if_colorInput_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "colorInput");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["colorInput"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["colorInput"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1859; s.pc = 11; return s.tmp_3; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_1.arg3 = r0;
    s.callLocIdx = 1860; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3909]) return breakpoint(s, 12, 3909, r0);
  case 12:
    s.tmp_0 = game_MultiplayerPrompt_drawInput__P7439_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_image__P2389_mk(s);
    s.tmp_1.arg0 = s.u___15392;
    s.callLocIdx = 1861; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_0.arg2 = r0;
    s.tmp_2 = if_colorInputHighlighted_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorInputHighlighted");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorInputHighlighted"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorInputHighlighted"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1862; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1863; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 2:
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_updateSelectedInput__P7437.info = {"start":11106,"length":413,"line":324,"column":8,"endLine":334,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"updateSelectedInput","argumentNames":["this"]}

function game_MultiplayerPrompt_updateSelectedInput__P7437_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_updateSelectedInput__P7437, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  u___15392: undefined,
  arg0: undefined,
} }





function controller_Controller_B__P2148(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[808]) return breakpoint(s, 1, 808, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P5018_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 6;
    s.callLocIdx = 169; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_B__P2148.info = {"start":4431,"length":71,"line":161,"column":8,"endLine":163,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"B","argumentNames":["this"]}
controller_Controller_B__P2148.isGetter = true;

function controller_Controller_B__P2148_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_B__P2148, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_A__P2147(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[807]) return breakpoint(s, 1, 807, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P5018_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 5;
    s.callLocIdx = 168; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_A__P2147.info = {"start":4284,"length":71,"line":153,"column":8,"endLine":155,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"A","argumentNames":["this"]}
controller_Controller_A__P2147.isGetter = true;

function controller_Controller_A__P2147_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_A__P2147, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_draw__P7430(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3838]) return breakpoint(s, 1, 3838, r0);
  case 1:
    s.tmp_0 = game_MultiplayerPrompt_drawPromptText__P7431_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1803; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3839]) return breakpoint(s, 3, 3839, r0);
  case 3:
    s.tmp_0 = game_MultiplayerPrompt_drawKeyboard__P7433_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1804; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3840]) return breakpoint(s, 5, 3840, r0);
  case 5:
    s.tmp_0 = game_MultiplayerPrompt_drawInputarea__P7432_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1805; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3841]) return breakpoint(s, 7, 3841, r0);
  case 7:
    s.tmp_0 = game_MultiplayerPrompt_drawBottomBar__P7434_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1806; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_draw__P7430.info = {"start":6716,"length":162,"line":211,"column":8,"endLine":216,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"draw","argumentNames":["this"]}

function game_MultiplayerPrompt_draw__P7430_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_draw__P7430, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_drawBottomBar__P7434(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bg___15970 = undefined;
    s.bgSprite___15982 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3877]) return breakpoint(s, 1, 3877, r0);
  case 1:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = pxsim.image.create(s.tmp_0, globals.BOTTOM_BAR_HEIGHT___7380);
    s.bg___15970 = (r0);
    s.lastBrkId = 3878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3878]) return breakpoint(s, 2, 3878, r0);
  case 2:
    s.tmp_0 = r0 = s.bg___15970;
    s.tmp_2 = if_colorBottomBackground_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorBottomBackground");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorBottomBackground"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorBottomBackground"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1828; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, s.tmp_1);
    s.lastBrkId = 3879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3879]) return breakpoint(s, 4, 3879, r0);
  case 4:
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_0.arg0 = s.bg___15970;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 1829; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.bgSprite___15982 = (r0);
    s.lastBrkId = 3880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3880]) return breakpoint(s, 6, 3880, r0);
  case 6:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.bgSprite___15982;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1830; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 3881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3881]) return breakpoint(s, 8, 3881, r0);
  case 8:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.bgSprite___15982;
    s.tmp_1 = r0 = globals.BOTTOM_BAR_TOP___7383;
    r0 = (globals.BOTTOM_BAR_HEIGHT___7380 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1831; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 3882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3882]) return breakpoint(s, 10, 3882, r0);
  case 10:
    s.tmp_0 = if_z_2_mk(s);
    s.tmp_0.arg0 = s.bgSprite___15982;
    s.tmp_0.arg1 = -1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1832; s.pc = 11; return s.tmp_0; }
    }
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3883]) return breakpoint(s, 12, 3883, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2275_mk(s);
    r0 = pxsim.image.create(globals.BOTTOM_BAR_BUTTON_WIDTH___7390, globals.BOTTOM_BAR_HEIGHT___7380);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = -1;
    s.callLocIdx = 1833; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["shiftButton"] = (s.tmp_1);
    s.lastBrkId = 3884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3884]) return breakpoint(s, 14, 3884, r0);
  case 14:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_0.arg0 = r0;
    r0 = (globals.BOTTOM_BAR_BUTTON_WIDTH___7390 / 2);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.floor(s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1834; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 3885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3885]) return breakpoint(s, 16, 3885, r0);
  case 16:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["shiftButton"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.BOTTOM_BAR_TOP___7383;
    r0 = (globals.BOTTOM_BAR_HEIGHT___7380 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1835; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 3886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3886]) return breakpoint(s, 18, 3886, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2275_mk(s);
    r0 = pxsim.image.create(globals.BOTTOM_BAR_BUTTON_WIDTH___7390, globals.BOTTOM_BAR_HEIGHT___7380);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = -1;
    s.callLocIdx = 1836; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["confirmButton"] = (s.tmp_1);
    s.lastBrkId = 3887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3887]) return breakpoint(s, 20, 3887, r0);
  case 20:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.CONFIRM_BUTTON_LEFT___7402;
    r0 = (globals.BOTTOM_BAR_BUTTON_WIDTH___7390 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1837; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 3888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3888]) return breakpoint(s, 22, 3888, r0);
  case 22:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["confirmButton"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = r0 = globals.BOTTOM_BAR_TOP___7383;
    r0 = (globals.BOTTOM_BAR_HEIGHT___7380 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1838; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.lastBrkId = 3889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3889]) return breakpoint(s, 24, 3889, r0);
  case 24:
    s.tmp_0 = game_MultiplayerPrompt_updateButtons__P7435_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1839; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_drawBottomBar__P7434.info = {"start":8826,"length":950,"line":267,"column":8,"endLine":285,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"drawBottomBar","argumentNames":["this"]}

function game_MultiplayerPrompt_drawBottomBar__P7434_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_drawBottomBar__P7434, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  bg___15970: undefined,
  bgSprite___15982: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_drawKeyboard__P7433(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cursorImage___16138 = undefined;
    s.j___16164 = undefined;
    s.letter___16168 = undefined;
    s.col2___16173 = undefined;
    s.row2___16177 = undefined;
    s.t___16183 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3859]) return breakpoint(s, 3, 3859, r0);
  case 3:
    r0 = pxsim.image.create(globals.CELL_WIDTH___7354, globals.CELL_HEIGHT___7356);
    s.cursorImage___16138 = (r0);
    s.lastBrkId = 3860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3860]) return breakpoint(s, 4, 3860, r0);
  case 4:
    s.tmp_0 = r0 = s.cursorImage___16138;
    s.tmp_2 = if_colorCursor_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorCursor");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorCursor"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorCursor"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1820; s.pc = 5; return s.tmp_2; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.fill(s.tmp_0, s.tmp_1);
    s.lastBrkId = 3861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3861]) return breakpoint(s, 6, 3861, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2275_mk(s);
    s.tmp_2.arg0 = s.cursorImage___16138;
    s.tmp_2.arg1 = -1;
    s.callLocIdx = 1821; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursor"] = (s.tmp_1);
    s.lastBrkId = 3862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3862]) return breakpoint(s, 8, 3862, r0);
  case 8:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["cursor"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = -1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1822; s.pc = 9; return s.tmp_0; }
    }
  case 9:
    r0 = s.retval;
    s.lastBrkId = 3863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3863]) return breakpoint(s, 10, 3863, r0);
  case 10:
    s.tmp_0 = game_MultiplayerPrompt_updateCursor__P7436_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1823; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3864]) return breakpoint(s, 12, 3864, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["letters"] = (s.tmp_1);
    s.lastBrkId = 3865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3865]) return breakpoint(s, 13, 3865, r0);
  case 13:
    s.j___16164 = (0);
    s.lastBrkId = 3866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3866]) return breakpoint(s, 14, 3866, r0);
  case 14:
  case 1:
    s.lastBrkId = 3867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3867]) return breakpoint(s, 15, 3867, r0);
  case 15:
    r0 = (s.j___16164 < 36);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3868]) return breakpoint(s, 16, 3868, r0);
  case 16:
    r0 = pxsim.image.create(globals.CELL_WIDTH___7354, globals.CELL_HEIGHT___7356);
    s.letter___16168 = (r0);
    s.lastBrkId = 3869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3869]) return breakpoint(s, 17, 3869, r0);
  case 17:
    r0 = (s.j___16164 % 12);
    s.col2___16173 = (r0);
    s.lastBrkId = 3870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3870]) return breakpoint(s, 18, 3870, r0);
  case 18:
    r0 = (s.j___16164 / 12);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.row2___16177 = (r0);
    s.lastBrkId = 3871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3871]) return breakpoint(s, 19, 3871, r0);
  case 19:
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_0.arg0 = s.letter___16168;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 1824; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.t___16183 = (r0);
    s.lastBrkId = 3872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3872]) return breakpoint(s, 21, 3872, r0);
  case 21:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.t___16183;
    s.tmp_1 = r0 = globals.ROW_LEFT___7372;
    r0 = (s.col2___16173 * globals.CELL_WIDTH___7354);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1825; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 3873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3873]) return breakpoint(s, 23, 3873, r0);
  case 23:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.t___16183;
    s.tmp_1 = r0 = globals.ALPHABET_TOP___7412;
    r0 = (s.row2___16177 * globals.CELL_HEIGHT___7356);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1826; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 3874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3874]) return breakpoint(s, 25, 3874, r0);
  case 25:
    r0 = s.arg0.fields["letters"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.t___16183);
    s.lastBrkId = 3875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3875]) return breakpoint(s, 26, 3875, r0);
  case 26:
    r0 = (s.j___16164 + 1);
    s.j___16164 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 3876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3876]) return breakpoint(s, 27, 3876, r0);
  case 27:
    s.tmp_0 = game_MultiplayerPrompt_updateKeyboard__P7438_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1827; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_drawKeyboard__P7433.info = {"start":8015,"length":801,"line":244,"column":8,"endLine":265,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"drawKeyboard","argumentNames":["this"]}

function game_MultiplayerPrompt_drawKeyboard__P7433_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_drawKeyboard__P7433, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  cursorImage___16138: undefined,
  j___16164: undefined,
  letter___16168: undefined,
  col2___16173: undefined,
  row2___16177: undefined,
  t___16183: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_drawInputarea__P7432(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.answerLeft___16061 = undefined;
    s.i___16082 = undefined;
    s.blank___16088 = undefined;
    s.col___16098 = undefined;
    s.row___16102 = undefined;
    s.s___16108 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3845]) return breakpoint(s, 3, 3845, r0);
  case 3:
    s.tmp_0 = r0 = globals.ROW_LEFT___7372;
    r0 = (globals.CELL_WIDTH___7354 * 12);
    s.tmp_4 = r0;
    s.tmp_6 = r0 = globals.CELL_WIDTH___7354;
    s.tmp_8 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["answerLength"];
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 12;
    s.callLocIdx = 1814; s.pc = 4; return s.tmp_8;
  case 4:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 * s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.answerLeft___16061 = (r0);
    s.lastBrkId = 3846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3846]) return breakpoint(s, 5, 3846, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["inputs"] = (s.tmp_1);
    s.lastBrkId = 3847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3847]) return breakpoint(s, 6, 3847, r0);
  case 6:
    s.i___16082 = (0);
    s.lastBrkId = 3848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3848]) return breakpoint(s, 7, 3848, r0);
  case 7:
  case 1:
    s.lastBrkId = 3849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3849]) return breakpoint(s, 8, 3849, r0);
  case 8:
    r0 = s.arg0.fields["answerLength"];
    s.tmp_1 = r0;
    r0 = (s.i___16082 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3850]) return breakpoint(s, 9, 3850, r0);
  case 9:
    r0 = pxsim.image.create(globals.CELL_WIDTH___7354, globals.CELL_HEIGHT___7356);
    s.blank___16088 = (r0);
    s.lastBrkId = 3851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3851]) return breakpoint(s, 10, 3851, r0);
  case 10:
    s.tmp_0 = game_MultiplayerPrompt_drawInput__P7439_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.blank___16088;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_0.arg2 = r0;
    s.tmp_1 = if_colorInput_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "colorInput");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["colorInput"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["colorInput"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1815; s.pc = 12; return s.tmp_1; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1816; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 3852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3852]) return breakpoint(s, 13, 3852, r0);
  case 13:
    r0 = (s.i___16082 % 12);
    s.col___16098 = (r0);
    s.lastBrkId = 3853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3853]) return breakpoint(s, 14, 3853, r0);
  case 14:
    r0 = (s.i___16082 / 12);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.row___16102 = (r0);
    s.lastBrkId = 3854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3854]) return breakpoint(s, 15, 3854, r0);
  case 15:
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_0.arg0 = s.blank___16088;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 1817; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.s___16108 = (r0);
    s.lastBrkId = 3855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3855]) return breakpoint(s, 17, 3855, r0);
  case 17:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.s___16108;
    s.tmp_1 = r0 = s.answerLeft___16061;
    r0 = (s.col___16098 * globals.CELL_WIDTH___7354);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1818; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 3856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3856]) return breakpoint(s, 19, 3856, r0);
  case 19:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.s___16108;
    s.tmp_1 = r0 = globals.INPUT_TOP___7422;
    r0 = (s.row___16102 * globals.CELL_HEIGHT___7356);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1819; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 3857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3857]) return breakpoint(s, 21, 3857, r0);
  case 21:
    r0 = s.arg0.fields["inputs"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.s___16108);
    s.lastBrkId = 3858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3858]) return breakpoint(s, 22, 3858, r0);
  case 22:
    r0 = (s.i___16082 + 1);
    s.i___16082 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_drawInputarea__P7432.info = {"start":7219,"length":786,"line":224,"column":8,"endLine":242,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"drawInputarea","argumentNames":["this"]}

function game_MultiplayerPrompt_drawInputarea__P7432_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_drawInputarea__P7432, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  answerLeft___16061: undefined,
  i___16082: undefined,
  blank___16088: undefined,
  col___16098: undefined,
  row___16102: undefined,
  s___16108: undefined,
  arg0: undefined,
} }





function game_MultiplayerPrompt_drawPromptText__P7431(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.prompt___16212 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3842]) return breakpoint(s, 1, 3842, r0);
  case 1:
    s.tmp_0 = sprites_create__P2275_mk(s);
    s.tmp_1 = game_layoutText__P7446_mk(s);
    r0 = s.arg0.fields["message"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = globals.CONTENT_WIDTH___7345;
    s.tmp_1.arg2 = globals.PROMPT_HEIGHT___7425;
    s.tmp_2 = if_colorPrompt_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "colorPrompt");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["colorPrompt"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["colorPrompt"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1807; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1.arg3 = r0;
    s.callLocIdx = 1808; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 1809; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.prompt___16212 = (r0);
    s.lastBrkId = 3843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3843]) return breakpoint(s, 5, 3843, r0);
  case 5:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    s.tmp_0.arg0 = s.prompt___16212;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1810; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 3844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3844]) return breakpoint(s, 7, 3844, r0);
  case 7:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    s.tmp_0.arg0 = s.prompt___16212;
    s.tmp_5 = r0 = globals.PROMPT_HEIGHT___7425;
    s.tmp_7 = Sprite_height__P2397_mk(s);
    s.tmp_7.arg0 = s.prompt___16212;
    s.callLocIdx = 1811; s.pc = 9; return s.tmp_7;
  case 9:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 2);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (4 + s.tmp_2);
    s.tmp_1 = r0;
    s.tmp_11 = Sprite_height__P2397_mk(s);
    s.tmp_11.arg0 = s.prompt___16212;
    s.callLocIdx = 1812; s.pc = 10; return s.tmp_11;
  case 10:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 / 2);
    s.tmp_9 = r0;
    r0 = pxsim.Math_.floor(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_1 + s.tmp_8);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1813; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_drawPromptText__P7431.info = {"start":6888,"length":321,"line":218,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"drawPromptText","argumentNames":["this"]}

function game_MultiplayerPrompt_drawPromptText__P7431_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_drawPromptText__P7431, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  prompt___16212: undefined,
  arg0: undefined,
} }





function game_layoutText__P7446(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lineHeight___16253 = undefined;
    s.lineLength___16258 = undefined;
    s.numLines___16265 = undefined;
    s.lines___16271 = undefined;
    s.word___16273 = undefined;
    s.line___16274 = undefined;
    s.pushWord___16275 = undefined;
    s.l___16307 = undefined;
    s.char___16313 = undefined;
    s.maxLineWidth___16342 = undefined;
    s.m___16343 = undefined;
    s.actualWidth___16357 = undefined;
    s.actualHeight___16362 = undefined;
    s.res___16367 = undefined;
    s.n___16372 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 4024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4024]) return breakpoint(s, 19, 4024, r0);
  case 19:
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = globals.font___7327;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1958; s.pc = 20; return s.tmp_1; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 2);
    s.lineHeight___16253 = (r0);
    s.lastBrkId = 4025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4025]) return breakpoint(s, 21, 4025, r0);
  case 21:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = globals.font___7327;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1959; s.pc = 22; return s.tmp_3; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.lineLength___16258 = (r0);
    s.lastBrkId = 4026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4026]) return breakpoint(s, 23, 4026, r0);
  case 23:
    r0 = (s.arg2 / s.lineHeight___16253);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.numLines___16265 = (r0);
    s.lastBrkId = 4027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4027]) return breakpoint(s, 24, 4027, r0);
  case 24:
    r0 = pxsim_Array__mk();
    s.lines___16271 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.word___16273 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.line___16274 = (r0);
    s.lastBrkId = 4028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4028]) return breakpoint(s, 25, 4028, r0);
  case 25:
    r0 = pxsim_pxtcore_mkAction(4, pushWord_inline__P16276);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.line___16274);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.word___16273);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.lineLength___16258);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.lines___16271);
    s.pushWord___16275 = (s.tmp_0);
    s.lastBrkId = 4036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4036]) return breakpoint(s, 26, 4036, r0);
  case 26:
    s.l___16307 = (0);
    s.lastBrkId = 4037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4037]) return breakpoint(s, 27, 4037, r0);
  case 27:
  case 1:
    s.lastBrkId = 4038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4038]) return breakpoint(s, 28, 4038, r0);
  case 28:
    s.tmp_1 = r0 = s.l___16307;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 4039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4039]) return breakpoint(s, 29, 4039, r0);
  case 29:
    r0 = pxsim_String_.charAt(s.arg0, s.l___16307);
    s.char___16313 = (r0);
    s.lastBrkId = 4040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4040]) return breakpoint(s, 30, 4040, r0);
  case 30:
    r0 = (s.char___16313 === " ");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 4041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4041]) return breakpoint(s, 31, 4041, r0);
  case 31:
    r0 = pxsim_pxtrt_ldlocRef(s.word___16273);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 4042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4042]) return breakpoint(s, 32, 4042, r0);
  case 32:
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.pushWord___16275;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 1960; s.pc = 33; return s.tmp_2;
  case 33:
    r0 = s.retval;
    { step = 3; continue; }
  case 2:
    s.lastBrkId = 4043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4043]) return breakpoint(s, 34, 4043, r0);
  case 34:
    r0 = pxsim_pxtrt_stlocRef(s.word___16273, " ");
  case 3:
    { step = 7; continue; }
  case 4:
    s.lastBrkId = 4044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4044]) return breakpoint(s, 35, 4044, r0);
  case 35:
    r0 = pxsim_pxtrt_ldlocRef(s.word___16273);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 4045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4045]) return breakpoint(s, 36, 4045, r0);
  case 36:
    r0 = pxsim_pxtrt_stlocRef(s.word___16273, s.char___16313);
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 4046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4046]) return breakpoint(s, 37, 4046, r0);
  case 37:
    s.tmp_0 = r0 = s.word___16273;
    r0 = pxsim_pxtrt_ldlocRef(s.word___16273);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 38);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 38:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.char___16313) && (s.char___16313).vtable) {
    setupResume(s, 39);
    pxsim_String__stringConv(s.char___16313);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.char___16313) + ""; }
  case 39:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 6:
  case 7:
    s.lastBrkId = 4047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4047]) return breakpoint(s, 40, 4047, r0);
  case 40:
    r0 = (s.l___16307 + 1);
    s.l___16307 = (r0);
    { step = 1; continue; }
  case 8:
    s.lastBrkId = 4048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4048]) return breakpoint(s, 41, 4048, r0);
  case 41:
    r0 = pxsim_pxtrt_ldlocRef(s.word___16273);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 4049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4049]) return breakpoint(s, 42, 4049, r0);
  case 42:
    s.tmp_1 = lambda_1_mk(s);
    s.tmp_1.argL = s.pushWord___16275;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 1961; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
  case 9:
  case 10:
    s.lastBrkId = 4050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4050]) return breakpoint(s, 44, 4050, r0);
  case 44:
    r0 = pxsim_pxtrt_ldlocRef(s.line___16274);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 4051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4051]) return breakpoint(s, 45, 4051, r0);
  case 45:
    s.tmp_1 = r0 = s.lines___16271;
    r0 = pxsim_pxtrt_ldlocRef(s.line___16274);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
  case 11:
  case 12:
    s.lastBrkId = 4052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4052]) return breakpoint(s, 46, 4052, r0);
  case 46:
    s.maxLineWidth___16342 = (0);
    s.lastBrkId = 4053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4053]) return breakpoint(s, 47, 4053, r0);
  case 47:
    s.m___16343 = (0);
    s.lastBrkId = 4054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4054]) return breakpoint(s, 48, 4054, r0);
  case 48:
  case 13:
    s.lastBrkId = 4055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4055]) return breakpoint(s, 49, 4055, r0);
  case 49:
    s.tmp_1 = r0 = s.m___16343;
    r0 = pxsim_Array__length(s.lines___16271);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 4056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4056]) return breakpoint(s, 50, 4056, r0);
  case 50:
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = s.maxLineWidth___16342;
    r0 = pxsim_Array__getAt(s.lines___16271, s.m___16343);
    s.tmp_4 = r0;
    r0 = pxsim_String_.length(s.tmp_4);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 1962; s.pc = 51; return s.tmp_3;
  case 51:
    r0 = s.retval;
    s.maxLineWidth___16342 = (r0);
    s.lastBrkId = 4057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4057]) return breakpoint(s, 52, 4057, r0);
  case 52:
    r0 = (s.m___16343 + 1);
    s.m___16343 = (r0);
    { step = 13; continue; }
  case 14:
    s.lastBrkId = 4058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4058]) return breakpoint(s, 53, 4058, r0);
  case 53:
    s.tmp_0 = r0 = s.maxLineWidth___16342;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = globals.font___7327;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1963; s.pc = 54; return s.tmp_2; }
    }
  case 54:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.actualWidth___16357 = (r0);
    s.lastBrkId = 4059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4059]) return breakpoint(s, 55, 4059, r0);
  case 55:
    r0 = pxsim_Array__length(s.lines___16271);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.lineHeight___16253);
    s.actualHeight___16362 = (r0);
    s.lastBrkId = 4060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4060]) return breakpoint(s, 56, 4060, r0);
  case 56:
    r0 = pxsim.image.create(s.actualWidth___16357, s.actualHeight___16362);
    s.res___16367 = (r0);
    s.lastBrkId = 4061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4061]) return breakpoint(s, 57, 4061, r0);
  case 57:
    s.n___16372 = (0);
    s.lastBrkId = 4062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4062]) return breakpoint(s, 58, 4062, r0);
  case 58:
  case 15:
    s.lastBrkId = 4063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4063]) return breakpoint(s, 59, 4063, r0);
  case 59:
    s.tmp_1 = r0 = s.n___16372;
    r0 = pxsim_Array__length(s.lines___16271);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 4064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4064]) return breakpoint(s, 60, 4064, r0);
  case 60:
    r0 = (s.n___16372 + 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 > s.numLines___16265);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 4065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4065]) return breakpoint(s, 61, 4065, r0);
  case 61:
    { step = 18; continue; }
  case 16:
  case 17:
    s.lastBrkId = 4066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4066]) return breakpoint(s, 62, 4066, r0);
  case 62:
    s.tmp_5 = helpers_imagePrint__P1990_mk(s);
    s.tmp_5.arg0 = s.res___16367;
    r0 = pxsim_Array__getAt(s.lines___16271, s.n___16372);
    s.tmp_5.arg1 = r0;
    s.tmp_5.arg2 = 0;
    r0 = (s.n___16372 * s.lineHeight___16253);
    s.tmp_5.arg3 = r0;
    s.tmp_5.arg4 = s.arg3;
    s.tmp_5.arg5 = globals.font___7327;
    s.tmp_5.arg6 = undefined;
    s.callLocIdx = 1964; s.pc = 63; return s.tmp_5;
  case 63:
    r0 = s.retval;
    s.lastBrkId = 4067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4067]) return breakpoint(s, 64, 4067, r0);
  case 64:
    r0 = (s.n___16372 + 1);
    s.n___16372 = (r0);
    { step = 15; continue; }
  case 18:
    s.lastBrkId = 4068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4068]) return breakpoint(s, 65, 4068, r0);
  case 65:
    r0 = s.res___16367;
    return leave(s, r0)
  default: oops()
} } }
game_layoutText__P7446.info = {"start":19200,"length":1856,"line":569,"column":4,"endLine":639,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"layoutText","argumentNames":["message","width","height","color"]}

function game_layoutText__P7446_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_layoutText__P7446, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  lineHeight___16253: undefined,
  lineLength___16258: undefined,
  numLines___16265: undefined,
  lines___16271: undefined,
  word___16273: undefined,
  line___16274: undefined,
  pushWord___16275: undefined,
  l___16307: undefined,
  char___16313: undefined,
  maxLineWidth___16342: undefined,
  m___16343: undefined,
  actualWidth___16357: undefined,
  actualHeight___16362: undefined,
  res___16367: undefined,
  n___16372: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function pushWord_inline__P16276(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 4029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4029]) return breakpoint(s, 5, 4029, r0);
  case 5:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 4030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4030]) return breakpoint(s, 6, 4030, r0);
  case 6:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_5 = r0;
    r0 = pxsim_String_.length(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_7 = r0;
    r0 = pxsim_String_.length(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > s.caps[2]);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 4031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4031]) return breakpoint(s, 7, 4031, r0);
  case 7:
    s.tmp_8 = r0 = s.caps[3];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_9 = r0;
    r0 = pxsim_Array__push(s.tmp_8, s.tmp_9);
    s.lastBrkId = 4032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4032]) return breakpoint(s, 8, 4032, r0);
  case 8:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 4033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4033]) return breakpoint(s, 9, 4033, r0);
  case 9:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, " ");
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_6);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 2:
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 4034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4034]) return breakpoint(s, 13, 4034, r0);
  case 13:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 4:
    s.lastBrkId = 4035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4035]) return breakpoint(s, 14, 4035, r0);
  case 14:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], null);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pushWord_inline__P16276.info = {"start":19584,"length":385,"line":579,"column":23,"endLine":594,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":[]}

function pushWord_inline__P16276_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pushWord_inline__P16276, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
} }





function game_MultiplayerPrompt_constructor__P4511(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_MultiplayerPrompt__C4506_VT)) failedCast(r0);
    s.lastBrkId = 3818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3818]) return breakpoint(s, 3, 3818, r0);
  case 3:
    r0 = (s.arg0).fields["player"] = (s.arg1);
    s.lastBrkId = 3819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3819]) return breakpoint(s, 4, 3819, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3820]) return breakpoint(s, 5, 3820, r0);
  case 5:
    r0 = (s.arg0).fields["theme"] = (s.arg2);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 3821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3821]) return breakpoint(s, 6, 3821, r0);
  case 6:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorPrompt", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorInput", 3);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorInputHighlighted", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorInputText", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorAlphabet", 1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorCursor", 7);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorBackground", 15);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorBottomBackground", 3);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "colorBottomText", 1);
    r0 = (s.arg0).fields["theme"] = (s.tmp_0);
  case 2:
    s.lastBrkId = 3822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3822]) return breakpoint(s, 7, 3822, r0);
  case 7:
    r0 = (s.arg0).fields["cursorRow"] = (0);
    s.lastBrkId = 3823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3823]) return breakpoint(s, 8, 3823, r0);
  case 8:
    r0 = (s.arg0).fields["cursorColumn"] = (0);
    s.lastBrkId = 3824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3824]) return breakpoint(s, 9, 3824, r0);
  case 9:
    r0 = (s.arg0).fields["upper"] = (false);
    s.lastBrkId = 3825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3825]) return breakpoint(s, 10, 3825, r0);
  case 10:
    r0 = (s.arg0).fields["inputIndex"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_MultiplayerPrompt_constructor__P4511.info = {"start":5432,"length":740,"line":167,"column":8,"endLine":189,"endColumn":9,"fileName":"pxt_modules/pxt-arcade-multiplayer-prompt/multiplayer-prompt.ts","functionName":"inline","argumentNames":["this","player","theme"]}

function game_MultiplayerPrompt_constructor__P4511_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_MultiplayerPrompt_constructor__P4511, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Avatar_startSelection__P149737(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    globals.gameMode___158120 = (2);
    s.tmp_0 = RotatingScreens_release__P4455_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    s.callLocIdx = 258; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Avatar_fixAvatars__P149874_mk(s);
    s.callLocIdx = 259; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    globals.gameMode___158120 = (4);
    s.tmp_0 = Avatar_initSelection__P149916_mk(s);
    s.callLocIdx = 260; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Player_promptForName__P143762_mk(s);
    s.tmp_1 = r0 = globals.players___158156;
    s.tmp_4 = if_currPlayer_1_mk(s);
    s.tmp_4.arg0 = globals.selection___149739;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "currPlayer");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["currPlayer"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["currPlayer"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 261; s.pc = 5; return s.tmp_4; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 262; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = Avatar_updateSelection__P150043_mk(s);
    s.callLocIdx = 263; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Avatar_startSelection__P149737.info = {"start":8173,"length":339,"line":229,"column":4,"endLine":237,"endColumn":5,"fileName":"avatars.ts","functionName":"startSelection","argumentNames":[]}

function Avatar_startSelection__P149737_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Avatar_startSelection__P149737, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function Avatar_initSelection__P149916(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = if_currPlayer_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "currPlayer", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/currPlayer"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["currPlayer"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 214; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_0 = if_selectedAvatar_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_0.arg1 = 0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "selectedAvatar", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/selectedAvatar"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["selectedAvatar"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 215; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_0 = if_header_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_1 = textsprite_create__P4343_mk(s);
    s.tmp_1.arg0 = " ";
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = 5;
    s.callLocIdx = 216; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "header", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/header"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["header"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 217; s.pc = 3; return s.tmp_0; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_1 = if_header_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "header");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["header"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["header"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 218; s.pc = 6; return s.tmp_1; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 80;
    s.tmp_0.arg2 = 4;
    s.callLocIdx = 219; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = if_footer1_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_1 = textsprite_create__P4343_mk(s);
    s.tmp_1.arg0 = "Left/Right = Change image";
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 220; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "footer1", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/footer1"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["footer1"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 221; s.pc = 7; return s.tmp_0; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_1 = if_footer1_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "footer1");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["footer1"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["footer1"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 222; s.pc = 10; return s.tmp_1; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 80;
    s.tmp_0.arg2 = 105;
    s.callLocIdx = 223; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = if_footer2_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_1 = textsprite_create__P4343_mk(s);
    s.tmp_1.arg0 = "Press A to select";
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 224; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "footer2", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/footer2"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["footer2"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 225; s.pc = 11; return s.tmp_0; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_1 = if_footer2_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "footer2");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["footer2"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["footer2"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 226; s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 80;
    s.tmp_0.arg2 = 115;
    s.callLocIdx = 227; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.tmp_0 = if_left_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_1 = sprites_create__P2275_mk(s);
    r0 = pxsim.image.ofBuffer(_hex149951);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = globals.Avatar___149752;
    s.callLocIdx = 228; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "left", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/left"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["left"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 229; s.pc = 15; return s.tmp_0; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_1 = if_left_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "left");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["left"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["left"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 230; s.pc = 18; return s.tmp_1; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 40;
    s.tmp_0.arg2 = 60;
    s.callLocIdx = 231; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_1 = if_left_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "left");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["left"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["left"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 232; s.pc = 20; return s.tmp_1; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 233; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.tmp_0 = if_front_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_1 = sprites_create__P2275_mk(s);
    r0 = pxsim.image.ofBuffer(_hex149965);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = globals.Avatar___149752;
    s.callLocIdx = 234; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "front", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/front"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["front"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 235; s.pc = 21; return s.tmp_0; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_1 = if_front_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "front");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["front"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["front"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 236; s.pc = 24; return s.tmp_1; }
    }
  case 24:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 80;
    s.tmp_0.arg2 = 60;
    s.callLocIdx = 237; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_1 = if_front_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "front");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["front"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["front"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 238; s.pc = 26; return s.tmp_1; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 239; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.tmp_0 = if_right_2_mk(s);
    s.tmp_0.arg0 = globals.selection___149739;
    s.tmp_1 = sprites_create__P2275_mk(s);
    r0 = pxsim.image.ofBuffer(_hex149979);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = globals.Avatar___149752;
    s.callLocIdx = 240; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "right", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/right"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["right"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 241; s.pc = 27; return s.tmp_0; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_1 = if_right_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "right");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["right"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["right"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 242; s.pc = 30; return s.tmp_1; }
    }
  case 30:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 120;
    s.tmp_0.arg2 = 60;
    s.callLocIdx = 243; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.tmp_0 = Sprite_setFlag__P2418_mk(s);
    s.tmp_1 = if_right_1_mk(s);
    s.tmp_1.arg0 = globals.selection___149739;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "right");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["right"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["right"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 244; s.pc = 32; return s.tmp_1; }
    }
  case 32:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 245; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.tmp_0 = scene_setBackgroundColor__P2882_mk(s);
    s.tmp_0.arg0 = 12;
    s.callLocIdx = 246; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Avatar_initSelection__P149916.info = {"start":6233,"length":1041,"line":180,"column":4,"endLine":199,"endColumn":5,"fileName":"avatars.ts","functionName":"initSelection","argumentNames":[]}

function Avatar_initSelection__P149916_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Avatar_initSelection__P149916, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex149951 = pxsim.BufferMethods.createBufferFromHex("870401000100000000000000")
const _hex149965 = pxsim.BufferMethods.createBufferFromHex("870401000100000000000000")
const _hex149979 = pxsim.BufferMethods.createBufferFromHex("870401000100000000000000")




function Avatar_fixAvatars__P149874(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.a___149876 = undefined;
    s.unnamed20264___U1 = undefined;
    s.unnamed20265___U2 = undefined;
    s.i___149900 = undefined;
    s.unnamed20266___U4 = undefined;
    s.unnamed20267___U5 = undefined;
    s.right_i___149904 = undefined;
    s.a___149876 = (undefined);
    s.unnamed20264___U1 = (globals.AVATARS___149757);
    s.unnamed20265___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed20265___U2;
    r0 = pxsim_Array__length(s.unnamed20264___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20264___U1, s.unnamed20265___U2);
    s.a___149876 = (r0);
    s.tmp_4 = if_rightImage_1_mk(s);
    s.tmp_4.arg0 = s.a___149876;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "rightImage");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["rightImage"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["rightImage"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 207; s.pc = 9; return s.tmp_4; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == null);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.tmp_5 = if_rightImage_2_mk(s);
    s.tmp_5.arg0 = s.a___149876;
    s.tmp_7 = if_leftImage_1_mk(s);
    s.tmp_7.arg0 = s.a___149876;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "leftImage");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["leftImage"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["leftImage"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 208; s.pc = 11; return s.tmp_7; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_6);
    s.tmp_5.arg1 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_5.arg0, "rightImage", s.tmp_5.arg1);
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["set/rightImage"];
      if (s.tmp_5.fn === null) { s.tmp_5.arg0.fields["rightImage"] = s.tmp_5.arg1; }
      else if (s.tmp_5.fn === undefined) { failedCast(s.tmp_5.arg0) } 
     else { s.callLocIdx = 209; s.pc = 10; return s.tmp_5; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_1 = if_rightImage_1_mk(s);
    s.tmp_1.arg0 = s.a___149876;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "rightImage");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["rightImage"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["rightImage"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 210; s.pc = 12; return s.tmp_1; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.flipX(s.tmp_0);
  case 2:
  case 3:
    s.tmp_3 = if_rightAnim_1_mk(s);
    s.tmp_3.arg0 = s.a___149876;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "rightAnim");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["rightAnim"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["rightAnim"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 211; s.pc = 13; return s.tmp_3; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.i___149900 = (undefined);
    s.tmp_0 = if_leftAnim_1_mk(s);
    s.tmp_0.arg0 = s.a___149876;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "leftAnim");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["leftAnim"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["leftAnim"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 212; s.pc = 14; return s.tmp_0; }
    }
  case 14:
    r0 = s.retval;
    s.unnamed20266___U4 = (r0);
    s.unnamed20267___U5 = (0);
  case 4:
    s.tmp_0 = r0 = s.unnamed20267___U5;
    r0 = pxsim_Array__length(s.unnamed20266___U4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array__getAt(s.unnamed20266___U4, s.unnamed20267___U5);
    s.i___149900 = (r0);
    r0 = pxsim_ImageMethods.clone(s.i___149900);
    s.right_i___149904 = (r0);
    r0 = pxsim_ImageMethods.flipX(s.right_i___149904);
    s.tmp_1 = if_rightAnim_1_mk(s);
    s.tmp_1.arg0 = s.a___149876;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "rightAnim");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["rightAnim"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["rightAnim"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 213; s.pc = 15; return s.tmp_1; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.right_i___149904);
    r0 = (s.unnamed20267___U5 + 1);
    s.unnamed20267___U5 = (r0);
    { step = 4; continue; }
  case 5:
    s.unnamed20266___U4 = (undefined);
  case 6:
  case 7:
    r0 = (s.unnamed20265___U2 + 1);
    s.unnamed20265___U2 = (r0);
    { step = 1; continue; }
  case 8:
    s.unnamed20264___U1 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Avatar_fixAvatars__P149874.info = {"start":5754,"length":473,"line":163,"column":4,"endLine":178,"endColumn":5,"fileName":"avatars.ts","functionName":"fixAvatars","argumentNames":[]}

function Avatar_fixAvatars__P149874_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Avatar_fixAvatars__P149874, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  a___149876: undefined,
  unnamed20264___U1: undefined,
  unnamed20265___U2: undefined,
  i___149900: undefined,
  unnamed20266___U4: undefined,
  unnamed20267___U5: undefined,
  right_i___149904: undefined,
} }





function GameSettings_collect__P158126(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_1 = OptionScreenCollection_getSelectionForScreen__P4498_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = 0;
    s.callLocIdx = 195; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    globals.numPlayers___158155 = (r0);
    s.tmp_1 = OptionScreenCollection_getSelectionForScreen__P4498_mk(s);
    s.tmp_1.arg0 = globals.settingsScreens___158123;
    s.tmp_1.arg1 = 1;
    s.tmp_1.arg2 = 0;
    s.callLocIdx = 196; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 1:
    globals.controllers___158150 = (0);
    { step = 3; continue; }
  case 2:
    globals.controllers___158150 = (1);
  case 3:
    s.tmp_0 = GameSettings_initPlayers__P158220_mk(s);
    s.callLocIdx = 197; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GameSettings_collect__P158126.info = {"start":2254,"length":400,"line":60,"column":4,"endLine":72,"endColumn":5,"fileName":"settings.ts","functionName":"collect","argumentNames":[]}

function GameSettings_collect__P158126_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GameSettings_collect__P158126, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function OptionScreenCollection_getSelectionForScreen__P4498(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3735]) return breakpoint(s, 1, 3735, r0);
  case 1:
    r0 = s.arg0.fields["_selectedOptionsColl"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg2);
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_getSelectionForScreen__P4498.info = {"start":54026,"length":135,"line":1638,"column":4,"endLine":1640,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"getSelectionForScreen","argumentNames":["this","screen","index"]}

function OptionScreenCollection_getSelectionForScreen__P4498_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_getSelectionForScreen__P4498, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function GameSettings_validate__P158125(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.toReturn___158247 = undefined;
    s.toReturn___158247 = (true);
    s.tmp_0 = r0 = globals.HARDWARE___175561;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = OptionScreenCollection_getSelectionForScreen__P4498_mk(s);
    s.tmp_2.arg0 = globals.settingsScreens___158123;
    s.tmp_2.arg1 = 1;
    s.tmp_2.arg2 = 0;
    s.callLocIdx = 201; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.tmp_4 = game_showLongText__P2959_mk(s);
    s.tmp_4.arg0 = globals.TEXT_HARDWARE_CONTROLLER___158130;
    s.tmp_4.arg1 = 5;
    s.callLocIdx = 202; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    s.toReturn___158247 = (false);
  case 3:
  case 4:
    s.tmp_2 = OptionScreenCollection_getSelectionForScreen__P4498_mk(s);
    s.tmp_2.arg0 = globals.settingsScreens___158123;
    s.tmp_2.arg1 = 0;
    s.tmp_2.arg2 = 0;
    s.callLocIdx = 203; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_3 = game_showLongText__P2959_mk(s);
    s.tmp_3.arg0 = globals.TEXT_ONE_PLAYER___158132;
    s.tmp_3.arg1 = 5;
    s.callLocIdx = 204; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
  case 5:
  case 6:
    s.tmp_0 = OptionScreen_done__P4468_mk(s);
    s.tmp_0.arg0 = globals.settingsScreens___158123;
    s.tmp_0.arg1 = s.toReturn___158247;
    s.callLocIdx = 205; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = s.toReturn___158247;
    return leave(s, r0)
  default: oops()
} } }
GameSettings_validate__P158125.info = {"start":3037,"length":474,"line":89,"column":4,"endLine":100,"endColumn":5,"fileName":"settings.ts","functionName":"validate","argumentNames":[]}

function GameSettings_validate__P158125_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GameSettings_validate__P158125, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  toReturn___158247: undefined,
} }





function OptionScreen_done__P4468(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3563]) return breakpoint(s, 3, 3563, r0);
  case 3:
    r0 = (s.arg0).fields["_isDone"] = (s.arg1);
    s.lastBrkId = 3564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3564]) return breakpoint(s, 4, 3564, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3565]) return breakpoint(s, 5, 3565, r0);
  case 5:
    s.tmp_2 = OptionScreen_createCursor__P7314_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1659; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_done__P4468.info = {"start":34958,"length":148,"line":1088,"column":4,"endLine":1093,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"done","argumentNames":["this","value"]}

function OptionScreen_done__P4468_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_done__P4468, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_showLongText__P2959(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.width___16663 = undefined;
    s.height___16664 = undefined;
    s.top___16665 = undefined;
    s.left___16666 = undefined;
    s.dialog___16777 = undefined;
    s.s___16785 = undefined;
    s.pressed___16801 = undefined;
    s.done___16802 = undefined;
    s.upPressed___16803 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2157]) return breakpoint(s, 8, 2157, r0);
  case 8:
    s.tmp_0 = console_inspect__P382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 20;
    s.callLocIdx = 1035; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.arg0 = (r0);
    s.lastBrkId = 2158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2158]) return breakpoint(s, 10, 2158, r0);
  case 10:
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 1036; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2159]) return breakpoint(s, 12, 2159, r0);
  case 12:
    s.tmp_0 = game_pushScene__P3002_mk(s);
    s.callLocIdx = 1037; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2160]) return breakpoint(s, 14, 2160, r0);
  case 14:
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1038; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_2);
    s.lastBrkId = 2161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2161]) return breakpoint(s, 16, 2161, r0);
  case 16:
    s.tmp_0 = r0 = s.arg1;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 1:
    s.lastBrkId = 2162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2162]) return breakpoint(s, 17, 2162, r0);
  case 17:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 4);
    s.width___16663 = (r0);
    s.lastBrkId = 2163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2163]) return breakpoint(s, 18, 2163, r0);
  case 18:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 5);
    s.height___16664 = (r0);
    s.lastBrkId = 2164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2164]) return breakpoint(s, 19, 2164, r0);
  case 19:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.height___16664);
    s.top___16665 = (r0);
    s.lastBrkId = 2165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2165]) return breakpoint(s, 20, 2165, r0);
  case 20:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.width___16663);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 1);
    s.left___16666 = (r0);
    s.lastBrkId = 2166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2166]) return breakpoint(s, 21, 2166, r0);
  case 21:
    { step = 7; continue; }
  case 2:
    s.lastBrkId = 2167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2167]) return breakpoint(s, 22, 2167, r0);
  case 22:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 4);
    s.width___16663 = (r0);
    s.lastBrkId = 2168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2168]) return breakpoint(s, 23, 2168, r0);
  case 23:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 5);
    s.height___16664 = (r0);
    s.lastBrkId = 2169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2169]) return breakpoint(s, 24, 2169, r0);
  case 24:
    s.top___16665 = (0);
    s.lastBrkId = 2170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2170]) return breakpoint(s, 25, 2170, r0);
  case 25:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.width___16663);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 1);
    s.left___16666 = (r0);
    s.lastBrkId = 2171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2171]) return breakpoint(s, 26, 2171, r0);
  case 26:
    { step = 7; continue; }
  case 3:
    s.lastBrkId = 2172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2172]) return breakpoint(s, 27, 2172, r0);
  case 27:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 5);
    s.width___16663 = (r0);
    s.lastBrkId = 2173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2173]) return breakpoint(s, 28, 2173, r0);
  case 28:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.height___16664 = (r0);
    s.lastBrkId = 2174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2174]) return breakpoint(s, 29, 2174, r0);
  case 29:
    s.top___16665 = (0);
    s.lastBrkId = 2175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2175]) return breakpoint(s, 30, 2175, r0);
  case 30:
    s.left___16666 = (0);
    s.lastBrkId = 2176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2176]) return breakpoint(s, 31, 2176, r0);
  case 31:
    { step = 7; continue; }
  case 4:
    s.lastBrkId = 2177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2177]) return breakpoint(s, 32, 2177, r0);
  case 32:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 5);
    s.width___16663 = (r0);
    s.lastBrkId = 2178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2178]) return breakpoint(s, 33, 2178, r0);
  case 33:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.height___16664 = (r0);
    s.lastBrkId = 2179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2179]) return breakpoint(s, 34, 2179, r0);
  case 34:
    s.top___16665 = (0);
    s.lastBrkId = 2180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2180]) return breakpoint(s, 35, 2180, r0);
  case 35:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.width___16663);
    s.left___16666 = (r0);
    s.lastBrkId = 2181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2181]) return breakpoint(s, 36, 2181, r0);
  case 36:
    { step = 7; continue; }
  case 5:
    s.lastBrkId = 2182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2182]) return breakpoint(s, 37, 2182, r0);
  case 37:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << 1);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, 3);
    s.width___16663 = (r0);
    s.lastBrkId = 2183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2183]) return breakpoint(s, 38, 2183, r0);
  case 38:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << 1);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, 3);
    s.height___16664 = (r0);
    s.lastBrkId = 2184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2184]) return breakpoint(s, 39, 2184, r0);
  case 39:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.height___16664);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 1);
    s.top___16665 = (r0);
    s.lastBrkId = 2185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2185]) return breakpoint(s, 40, 2185, r0);
  case 40:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.width___16663);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 1);
    s.left___16666 = (r0);
    s.lastBrkId = 2186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2186]) return breakpoint(s, 41, 2186, r0);
  case 41:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 2187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2187]) return breakpoint(s, 42, 2187, r0);
  case 42:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.width___16663 = (r0);
    s.lastBrkId = 2188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2188]) return breakpoint(s, 43, 2188, r0);
  case 43:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.height___16664 = (r0);
    s.lastBrkId = 2189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2189]) return breakpoint(s, 44, 2189, r0);
  case 44:
    s.top___16665 = (0);
    s.lastBrkId = 2190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2190]) return breakpoint(s, 45, 2190, r0);
  case 45:
    s.left___16666 = (0);
    s.lastBrkId = 2191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2191]) return breakpoint(s, 46, 2191, r0);
  case 46:
  case 7:
    s.lastBrkId = 2192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2192]) return breakpoint(s, 47, 2192, r0);
  case 47:
    r0 = pxsim_pxtcore_mkClassInstance(game_Dialog__C2920_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_Dialog_constructor__P2923_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.width___16663;
    s.tmp_1.arg2 = s.height___16664;
    s.tmp_1.arg3 = undefined;
    s.tmp_1.arg4 = undefined;
    s.tmp_1.arg5 = undefined;
    s.callLocIdx = 1039; s.pc = 48; return s.tmp_1;
  case 48:
    r0 = s.retval;
    s.dialog___16777 = (s.tmp_0);
    s.lastBrkId = 2193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2193]) return breakpoint(s, 49, 2193, r0);
  case 49:
    s.tmp_0 = sprites_create__P2275_mk(s);
    r0 = s.dialog___16777.fields["image"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 1040; s.pc = 50; return s.tmp_0;
  case 50:
    r0 = s.retval;
    s.s___16785 = (r0);
    s.lastBrkId = 2194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2194]) return breakpoint(s, 51, 2194, r0);
  case 51:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    s.tmp_0.arg0 = s.s___16785;
    s.tmp_0.arg1 = s.top___16665;
    s.callLocIdx = 1041; s.pc = 52; return s.tmp_0;
  case 52:
    r0 = s.retval;
    s.lastBrkId = 2195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2195]) return breakpoint(s, 53, 2195, r0);
  case 53:
    s.tmp_0 = Sprite_left__P2399_mk(s);
    s.tmp_0.arg0 = s.s___16785;
    s.tmp_0.arg1 = s.left___16666;
    s.callLocIdx = 1042; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.lastBrkId = 2196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2196]) return breakpoint(s, 55, 2196, r0);
  case 55:
    s.tmp_0 = game_Dialog__C2920_v1_2_mk(s);
    s.tmp_0.arg0 = s.dialog___16777;
    s.tmp_0.arg1 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, game_Dialog__C2920_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.setText;
    s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mklocRef();
    s.pressed___16801 = (r0);
    s.lastBrkId = 2197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2197]) return breakpoint(s, 57, 2197, r0);
  case 57:
    r0 = pxsim_pxtrt_stlocRef(s.pressed___16801, true);
    r0 = pxsim_pxtrt.mklocRef();
    s.done___16802 = (r0);
    s.lastBrkId = 2198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2198]) return breakpoint(s, 58, 2198, r0);
  case 58:
    r0 = pxsim_pxtrt_stlocRef(s.done___16802, false);
    r0 = pxsim_pxtrt.mklocRef();
    s.upPressed___16803 = (r0);
    s.lastBrkId = 2199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2199]) return breakpoint(s, 59, 2199, r0);
  case 59:
    r0 = pxsim_pxtrt_stlocRef(s.upPressed___16803, true);
    s.lastBrkId = 2200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2200]) return breakpoint(s, 60, 2200, r0);
  case 60:
    r0 = pxsim_pxtcore_mkAction(4, game_showLongText_inline__P16805);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.dialog___16777);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.pressed___16801);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.done___16802);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.upPressed___16803);
    s.tmp_1 = game_onUpdate__P3022_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1049; s.pc = 61; return s.tmp_1;
  case 61:
    r0 = s.retval;
    s.lastBrkId = 2219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2219]) return breakpoint(s, 62, 2219, r0);
  case 62:
    r0 = pxsim_pxtcore_mkAction(1, game_showLongText_inline__P16853);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.done___16802);
    s.tmp_1 = pauseUntil__P367_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1050; s.pc = 63; return s.tmp_1;
  case 63:
    r0 = s.retval;
    s.lastBrkId = 2220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2220]) return breakpoint(s, 64, 2220, r0);
  case 64:
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1051; s.pc = 65; return s.tmp_0;
  case 65:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_showLongText__P2959.info = {"start":24237,"length":3072,"line":649,"column":4,"endLine":742,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"showLongText","argumentNames":["str","layout"]}

function game_showLongText__P2959_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_showLongText__P2959, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  width___16663: undefined,
  height___16664: undefined,
  top___16665: undefined,
  left___16666: undefined,
  dialog___16777: undefined,
  s___16785: undefined,
  pressed___16801: undefined,
  done___16802: undefined,
  upPressed___16803: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_showLongText_inline__P16805(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currentState___16808 = undefined;
    s.moveBack___16833 = undefined;
    s.lastBrkId = 2201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2201]) return breakpoint(s, 23, 2201, r0);
  case 23:
    s.tmp_0 = game_BaseDialog__C2902_v0_1_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    if (!checkSubtype(s.tmp_0.arg0, game_BaseDialog__C2902_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.update;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2202]) return breakpoint(s, 25, 2202, r0);
  case 25:
    s.tmp_1 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_1.arg0 = globals.A___2113;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_2.arg0 = globals.down___2118;
    if (!checkSubtype(s.tmp_2.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.isPressed;
    s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.currentState___16808 = (s.tmp_3);
    s.lastBrkId = 2203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2203]) return breakpoint(s, 28, 2203, r0);
  case 28:
    s.tmp_0 = r0 = s.currentState___16808;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2204]) return breakpoint(s, 29, 2204, r0);
  case 29:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], true);
    s.lastBrkId = 2205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2205]) return breakpoint(s, 30, 2205, r0);
  case 30:
    s.tmp_1 = game_Dialog_hasNext__P2924_mk(s);
    s.tmp_1.arg0 = s.caps[0];
    s.callLocIdx = 1043; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2206]) return breakpoint(s, 32, 2206, r0);
  case 32:
    s.tmp_2 = game_Dialog_nextPage__P2926_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 1044; s.pc = 33; return s.tmp_2;
  case 33:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2207]) return breakpoint(s, 34, 2207, r0);
  case 34:
    s.tmp_0 = scene_setBackgroundImage__P2884_mk(s);
    s.tmp_0.arg0 = null;
    s.callLocIdx = 1045; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.lastBrkId = 2208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2208]) return breakpoint(s, 36, 2208, r0);
  case 36:
    s.tmp_0 = game_popScene__P3003_mk(s);
    s.callLocIdx = 1046; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    s.lastBrkId = 2209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2209]) return breakpoint(s, 38, 2209, r0);
  case 38:
    r0 = pxsim_pxtrt_stlocRef(s.caps[2], true);
  case 6:
    { step = 12; continue; }
  case 7:
    s.lastBrkId = 2210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2210]) return breakpoint(s, 39, 2210, r0);
  case 39:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = s.tmp_0;
    { step = 9; continue; }
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.currentState___16808);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 9:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2211]) return breakpoint(s, 40, 2211, r0);
  case 40:
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], false);
  case 10:
  case 11:
  case 12:
    s.lastBrkId = 2212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2212]) return breakpoint(s, 41, 2212, r0);
  case 41:
    s.tmp_0 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_0.arg0 = globals.up___2116;
    if (!checkSubtype(s.tmp_0.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.isPressed;
    s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.moveBack___16833 = (r0);
    s.lastBrkId = 2213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2213]) return breakpoint(s, 43, 2213, r0);
  case 43:
    s.tmp_0 = r0 = s.moveBack___16833;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = s.tmp_0;
    { step = 14; continue; }
  case 13:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 14:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 2214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2214]) return breakpoint(s, 44, 2214, r0);
  case 44:
    r0 = pxsim_pxtrt_stlocRef(s.caps[3], true);
    s.lastBrkId = 2215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2215]) return breakpoint(s, 45, 2215, r0);
  case 45:
    s.tmp_1 = game_Dialog_hasPrev__P2925_mk(s);
    s.tmp_1.arg0 = s.caps[0];
    s.callLocIdx = 1047; s.pc = 46; return s.tmp_1;
  case 46:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 2216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2216]) return breakpoint(s, 47, 2216, r0);
  case 47:
    s.tmp_2 = game_Dialog_prevPage__P2927_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 1048; s.pc = 48; return s.tmp_2;
  case 48:
    r0 = s.retval;
  case 15:
  case 16:
    { step = 22; continue; }
  case 17:
    s.lastBrkId = 2217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2217]) return breakpoint(s, 49, 2217, r0);
  case 49:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = pxsim_numops_toBoolDecr(s.moveBack___16833);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 19:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 2218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2218]) return breakpoint(s, 50, 2218, r0);
  case 50:
    r0 = pxsim_pxtrt_stlocRef(s.caps[3], false);
  case 20:
  case 21:
  case 22:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_showLongText_inline__P16805.info = {"start":26290,"length":931,"line":710,"column":22,"endLine":738,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":[]}

function game_showLongText_inline__P16805_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_showLongText_inline__P16805, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currentState___16808: undefined,
  moveBack___16833: undefined,
} }





function game_showLongText_inline__P16853(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
game_showLongText_inline__P16853.info = {"start":27243,"length":10,"line":740,"column":19,"endLine":740,"endColumn":29,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":[]}

function game_showLongText_inline__P16853_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_showLongText_inline__P16853, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_Dialog_setText__P2929(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Dialog__C2920_VT)) failedCast(r0);
    s.lastBrkId = 2100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2100]) return breakpoint(s, 1, 2100, r0);
  case 1:
    s.tmp_0 = game_BaseDialog_setFont__P5207_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = image_getFontForText__P1977_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 1002; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1003; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2101]) return breakpoint(s, 4, 2101, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = game_Dialog_chunkText__P2928_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 1004; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["chunks"] = (s.tmp_1);
    s.lastBrkId = 2102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2102]) return breakpoint(s, 6, 2102, r0);
  case 6:
    r0 = (s.arg0).fields["chunkIndex"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Dialog_setText__P2929.info = {"start":7674,"length":183,"line":241,"column":8,"endLine":245,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setText","argumentNames":["this","rawString"]}

function game_Dialog_setText__P2929_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Dialog_setText__P2929, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Dialog_chunkText__P2928(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.charactersPerRow___16907 = undefined;
    s.charactersPerCursorRow___16916 = undefined;
    s.rowsOfCharacters___16928 = undefined;
    s.rowsWithCursor___16935 = undefined;
    s.lineLengths___16943 = undefined;
    s.i___16945 = undefined;
    s.i___16958 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Dialog__C2920_VT)) failedCast(r0);
    s.lastBrkId = 2084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2084]) return breakpoint(s, 5, 2084, r0);
  case 5:
    s.tmp_2 = game_BaseDialog_textAreaWidth__P5205_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 995; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 996; s.pc = 7; return s.tmp_4; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 / s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.charactersPerRow___16907 = (r0);
    s.lastBrkId = 2085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2085]) return breakpoint(s, 8, 2085, r0);
  case 8:
    s.tmp_1 = r0 = s.charactersPerRow___16907;
    r0 = s.arg0.fields["cursor"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "charWidth");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["charWidth"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["charWidth"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 997; s.pc = 9; return s.tmp_6; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 / s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.charactersPerCursorRow___16916 = (r0);
    s.lastBrkId = 2086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2086]) return breakpoint(s, 10, 2086, r0);
  case 10:
    s.tmp_2 = game_BaseDialog_textAreaHeight__P5206_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 998; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = game_BaseDialog_rowHeight__P5204_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 999; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 / s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.rowsOfCharacters___16928 = (r0);
    s.lastBrkId = 2087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2087]) return breakpoint(s, 13, 2087, r0);
  case 13:
    r0 = s.arg0.fields["cursor"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_2);
    s.tmp_1 = r0;
    s.tmp_4 = game_BaseDialog_rowHeight__P5204_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 1000; s.pc = 14; return s.tmp_4;
  case 14:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 / s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_0);
    s.rowsWithCursor___16935 = (r0);
    s.lastBrkId = 2088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2088]) return breakpoint(s, 15, 2088, r0);
  case 15:
    r0 = pxsim_Array__mk();
    s.lineLengths___16943 = (r0);
    s.lastBrkId = 2089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2089]) return breakpoint(s, 16, 2089, r0);
  case 16:
    s.i___16945 = (0);
    s.lastBrkId = 2090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2090]) return breakpoint(s, 17, 2090, r0);
  case 17:
  case 1:
    s.lastBrkId = 2091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2091]) return breakpoint(s, 18, 2091, r0);
  case 18:
    s.tmp_1 = r0 = s.i___16945;
    r0 = (s.rowsOfCharacters___16928 - s.rowsWithCursor___16935);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2092]) return breakpoint(s, 19, 2092, r0);
  case 19:
    r0 = pxsim_Array__push(s.lineLengths___16943, s.charactersPerRow___16907);
    s.lastBrkId = 2093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2093]) return breakpoint(s, 20, 2093, r0);
  case 20:
    r0 = (s.i___16945 + 1);
    s.i___16945 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2094]) return breakpoint(s, 21, 2094, r0);
  case 21:
    s.i___16958 = (0);
    s.lastBrkId = 2095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2095]) return breakpoint(s, 22, 2095, r0);
  case 22:
  case 3:
    s.lastBrkId = 2096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2096]) return breakpoint(s, 23, 2096, r0);
  case 23:
    r0 = (s.i___16958 < s.rowsWithCursor___16935);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2097]) return breakpoint(s, 24, 2097, r0);
  case 24:
    r0 = pxsim_Array__push(s.lineLengths___16943, s.charactersPerCursorRow___16916);
    s.lastBrkId = 2098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2098]) return breakpoint(s, 25, 2098, r0);
  case 25:
    r0 = (s.i___16958 + 1);
    s.i___16958 = (r0);
    { step = 3; continue; }
  case 4:
    s.lastBrkId = 2099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2099]) return breakpoint(s, 26, 2099, r0);
  case 26:
    s.tmp_0 = game_breakIntoPages__P5225_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.lineLengths___16943;
    s.callLocIdx = 1001; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
game_Dialog_chunkText__P2928.info = {"start":6929,"length":735,"line":227,"column":8,"endLine":239,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"chunkText","argumentNames":["this","str"]}

function game_Dialog_chunkText__P2928_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Dialog_chunkText__P2928, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  charactersPerRow___16907: undefined,
  charactersPerCursorRow___16916: undefined,
  rowsOfCharacters___16928: undefined,
  rowsWithCursor___16935: undefined,
  lineLengths___16943: undefined,
  i___16945: undefined,
  i___16958: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_breakIntoPages__P5225(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.result___16974 = undefined;
    s.currentPage___16976 = undefined;
    s.lastBreakLocation___16978 = undefined;
    s.lastBreak___16979 = undefined;
    s.line___16980 = undefined;
    s.lineLength___16981 = undefined;
    s.nextLine___16984 = undefined;
    s.index___16990 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2249]) return breakpoint(s, 23, 2249, r0);
  case 23:
    r0 = pxsim_Array__mk();
    s.result___16974 = (r0);
    s.lastBrkId = 2250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2250]) return breakpoint(s, 24, 2250, r0);
  case 24:
    r0 = pxsim_Array__mk();
    s.currentPage___16976 = (r0);
    s.lastBrkId = 2251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2251]) return breakpoint(s, 25, 2251, r0);
  case 25:
    s.lastBreakLocation___16978 = (0);
    s.lastBrkId = 2252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2252]) return breakpoint(s, 26, 2252, r0);
  case 26:
    s.lastBreak___16979 = (0);
    r0 = pxsim_pxtrt.mklocRef();
    s.line___16980 = (r0);
    s.lastBrkId = 2253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2253]) return breakpoint(s, 27, 2253, r0);
  case 27:
    r0 = pxsim_pxtrt_stlocRef(s.line___16980, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.lineLength___16981 = (r0);
    s.lastBrkId = 2254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2254]) return breakpoint(s, 28, 2254, r0);
  case 28:
    s.tmp_0 = r0 = s.lineLength___16981;
    s.tmp_2 = r0 = s.arg1;
    r0 = pxsim_pxtrt_ldlocRef(s.line___16980);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtcore_mkAction(3, nextLine__P16984);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.line___16980);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.lineLength___16981);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg1);
    s.nextLine___16984 = (s.tmp_0);
    s.lastBrkId = 2257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2257]) return breakpoint(s, 29, 2257, r0);
  case 29:
    s.index___16990 = (0);
    s.lastBrkId = 2258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2258]) return breakpoint(s, 30, 2258, r0);
  case 30:
  case 1:
    s.lastBrkId = 2259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2259]) return breakpoint(s, 31, 2259, r0);
  case 31:
    s.tmp_1 = r0 = s.index___16990;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 2260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2260]) return breakpoint(s, 32, 2260, r0);
  case 32:
    r0 = pxsim_String_.charAt(s.arg0, s.index___16990);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 === "\n");
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2261]) return breakpoint(s, 33, 2261, r0);
  case 33:
    s.tmp_5 = r0 = s.currentPage___16976;
    s.tmp_7 = game_formatLine__P5226_mk(s);
    s.tmp_8 = helpers_stringSubstr__P118_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.tmp_8.arg1 = s.lastBreak___16979;
    r0 = (s.index___16990 - s.lastBreak___16979);
    s.tmp_8.arg2 = r0;
    s.callLocIdx = 1065; s.pc = 35; return s.tmp_8;
  case 35:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 1066; s.pc = 34; return s.tmp_7;
  case 34:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_5, s.tmp_6);
    s.lastBrkId = 2262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2262]) return breakpoint(s, 36, 2262, r0);
  case 36:
    r0 = (s.index___16990 + 1);
    s.index___16990 = (r0);
    s.lastBrkId = 2263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2263]) return breakpoint(s, 37, 2263, r0);
  case 37:
    s.lastBreak___16979 = (s.index___16990);
    s.lastBrkId = 2264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2264]) return breakpoint(s, 38, 2264, r0);
  case 38:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.nextLine___16984;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1067; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    { step = 9; continue; }
  case 2:
    s.lastBrkId = 2265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2265]) return breakpoint(s, 40, 2265, r0);
  case 40:
    r0 = pxsim_String_.charAt(s.arg0, s.index___16990);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === "\\");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_3 = r0 = s.arg0;
    r0 = (s.index___16990 + 1);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === "n");
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2266]) return breakpoint(s, 41, 2266, r0);
  case 41:
    s.tmp_6 = r0 = s.currentPage___16976;
    s.tmp_8 = game_formatLine__P5226_mk(s);
    s.tmp_9 = helpers_stringSubstr__P118_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.tmp_9.arg1 = s.lastBreak___16979;
    r0 = (s.index___16990 - s.lastBreak___16979);
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 1068; s.pc = 43; return s.tmp_9;
  case 43:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 1069; s.pc = 42; return s.tmp_8;
  case 42:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_Array__push(s.tmp_6, s.tmp_7);
    s.lastBrkId = 2267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2267]) return breakpoint(s, 44, 2267, r0);
  case 44:
    r0 = (s.index___16990 + 2);
    s.index___16990 = (r0);
    s.lastBrkId = 2268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2268]) return breakpoint(s, 45, 2268, r0);
  case 45:
    s.lastBreak___16979 = (s.index___16990);
    s.lastBrkId = 2269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2269]) return breakpoint(s, 46, 2269, r0);
  case 46:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.nextLine___16984;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1070; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    { step = 8; continue; }
  case 5:
    s.lastBrkId = 2270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2270]) return breakpoint(s, 48, 2270, r0);
  case 48:
    s.tmp_1 = game_isBreakCharacter__P5224_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.index___16990);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1071; s.pc = 49; return s.tmp_1;
  case 49:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2271]) return breakpoint(s, 50, 2271, r0);
  case 50:
    s.lastBreakLocation___16978 = (s.index___16990);
  case 6:
  case 7:
  case 8:
  case 9:
    s.lastBrkId = 2272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2272]) return breakpoint(s, 51, 2272, r0);
  case 51:
    r0 = (s.index___16990 - s.lastBreak___16979);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.lineLength___16981);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 2273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2273]) return breakpoint(s, 52, 2273, r0);
  case 52:
    r0 = (s.lastBreakLocation___16978 === s.index___16990);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_3;
    { step = 11; continue; }
  case 10:
    r0 = (s.lastBreakLocation___16978 < s.lastBreak___16979);
  case 11:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 2274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2274]) return breakpoint(s, 53, 2274, r0);
  case 53:
    s.tmp_5 = r0 = s.currentPage___16976;
    s.tmp_7 = game_formatLine__P5226_mk(s);
    s.tmp_8 = helpers_stringSubstr__P118_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.tmp_8.arg1 = s.lastBreak___16979;
    r0 = pxsim_pxtrt_ldlocRef(s.lineLength___16981);
    s.tmp_8.arg2 = r0;
    s.callLocIdx = 1072; s.pc = 55; return s.tmp_8;
  case 55:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 1073; s.pc = 54; return s.tmp_7;
  case 54:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_5, s.tmp_6);
    s.lastBrkId = 2275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2275]) return breakpoint(s, 56, 2275, r0);
  case 56:
    s.lastBreak___16979 = (s.index___16990);
    s.lastBrkId = 2276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2276]) return breakpoint(s, 57, 2276, r0);
  case 57:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.nextLine___16984;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1074; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    { step = 13; continue; }
  case 12:
    s.lastBrkId = 2277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2277]) return breakpoint(s, 59, 2277, r0);
  case 59:
    s.tmp_0 = r0 = s.currentPage___16976;
    s.tmp_2 = game_formatLine__P5226_mk(s);
    s.tmp_3 = helpers_stringSubstr__P118_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.lastBreak___16979;
    r0 = (s.lastBreakLocation___16978 - s.lastBreak___16979);
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1075; s.pc = 61; return s.tmp_3;
  case 61:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1076; s.pc = 60; return s.tmp_2;
  case 60:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 2278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2278]) return breakpoint(s, 62, 2278, r0);
  case 62:
    s.lastBreak___16979 = (s.lastBreakLocation___16978);
    s.lastBrkId = 2279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2279]) return breakpoint(s, 63, 2279, r0);
  case 63:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.nextLine___16984;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1077; s.pc = 64; return s.tmp_0;
  case 64:
    r0 = s.retval;
  case 13:
  case 14:
  case 15:
    s.lastBrkId = 2280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2280]) return breakpoint(s, 65, 2280, r0);
  case 65:
    r0 = pxsim_pxtrt_ldlocRef(s.line___16980);
    s.tmp_1 = r0;
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 2281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2281]) return breakpoint(s, 66, 2281, r0);
  case 66:
    r0 = pxsim_pxtrt_stlocRef(s.line___16980, 0);
    s.lastBrkId = 2282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2282]) return breakpoint(s, 67, 2282, r0);
  case 67:
    s.tmp_0 = r0 = s.lineLength___16981;
    s.tmp_2 = r0 = s.arg1;
    r0 = pxsim_pxtrt_ldlocRef(s.line___16980);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 2283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2283]) return breakpoint(s, 68, 2283, r0);
  case 68:
    r0 = pxsim_Array__push(s.result___16974, s.currentPage___16976);
    s.lastBrkId = 2284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2284]) return breakpoint(s, 69, 2284, r0);
  case 69:
    r0 = pxsim_Array__mk();
    s.currentPage___16976 = (r0);
  case 16:
  case 17:
    s.lastBrkId = 2285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2285]) return breakpoint(s, 70, 2285, r0);
  case 70:
    r0 = (s.index___16990 + 1);
    s.index___16990 = (r0);
    { step = 1; continue; }
  case 18:
    s.lastBrkId = 2286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2286]) return breakpoint(s, 71, 2286, r0);
  case 71:
    s.tmp_0 = r0 = s.currentPage___16976;
    s.tmp_2 = game_formatLine__P5226_mk(s);
    s.tmp_3 = helpers_stringSubstr__P118_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.lastBreak___16979;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.lastBreak___16979);
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1078; s.pc = 73; return s.tmp_3;
  case 73:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1079; s.pc = 72; return s.tmp_2;
  case 72:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 2287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2287]) return breakpoint(s, 74, 2287, r0);
  case 74:
    r0 = pxsim_Array__length(s.currentPage___16976);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 19; continue; }
    r0 = s.tmp_0;
    { step = 20; continue; }
  case 19:
    r0 = pxsim_Array__getAt(s.currentPage___16976, 0);
    s.tmp_2 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = (s.tmp_2 !== s.tmp_3);
  case 20:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 2288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2288]) return breakpoint(s, 75, 2288, r0);
  case 75:
    r0 = pxsim_Array__push(s.result___16974, s.currentPage___16976);
  case 21:
  case 22:
    s.lastBrkId = 2289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2289]) return breakpoint(s, 76, 2289, r0);
  case 76:
    r0 = s.result___16974;
    return leave(s, r0)
  default: oops()
} } }
game_breakIntoPages__P5225.info = {"start":32043,"length":2187,"line":908,"column":4,"endLine":969,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"breakIntoPages","argumentNames":["text","lineLengths"]}

function game_breakIntoPages__P5225_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_breakIntoPages__P5225, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  result___16974: undefined,
  currentPage___16976: undefined,
  lastBreakLocation___16978: undefined,
  lastBreak___16979: undefined,
  line___16980: undefined,
  lineLength___16981: undefined,
  nextLine___16984: undefined,
  index___16990: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function nextLine__P16984(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2255]) return breakpoint(s, 1, 2255, r0);
  case 1:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 2256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2256]) return breakpoint(s, 2, 2256, r0);
  case 2:
    s.tmp_0 = r0 = s.caps[1];
    s.tmp_2 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
nextLine__P16984.info = {"start":32336,"length":95,"line":918,"column":8,"endLine":921,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"nextLine","argumentNames":[]}

function nextLine__P16984_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: nextLine__P16984, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function game_formatLine__P5226(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___17162 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2290]) return breakpoint(s, 3, 2290, r0);
  case 3:
    s.i___17162 = (0);
    s.lastBrkId = 2291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2291]) return breakpoint(s, 4, 2291, r0);
  case 4:
  case 1:
    s.lastBrkId = 2292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2292]) return breakpoint(s, 5, 2292, r0);
  case 5:
    r0 = pxsim_String_.charAt(s.arg0, s.i___17162);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === " ");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2293]) return breakpoint(s, 6, 2293, r0);
  case 6:
    r0 = (s.i___17162 + 1);
    s.i___17162 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2294]) return breakpoint(s, 7, 2294, r0);
  case 7:
    s.tmp_0 = helpers_stringSubstr__P118_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.i___17162;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1080; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
game_formatLine__P5226.info = {"start":34236,"length":148,"line":971,"column":4,"endLine":975,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"formatLine","argumentNames":["text"]}

function game_formatLine__P5226_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_formatLine__P5226, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  i___17162: undefined,
  arg0: undefined,
} }





function game_isBreakCharacter__P5224(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2248]) return breakpoint(s, 21, 2248, r0);
  case 21:
    r0 = (s.arg0 <= 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 1:
    r0 = (s.arg0 >= 58);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_1;
    { step = 3; continue; }
  case 2:
    r0 = (s.arg0 <= 64);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_3;
    { step = 8; continue; }
  case 5:
    r0 = (s.arg0 >= 91);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_4;
    { step = 7; continue; }
  case 6:
    r0 = (s.arg0 <= 96);
  case 7:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
  case 8:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_6;
    { step = 12; continue; }
  case 9:
    r0 = (s.arg0 >= 123);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_7;
    { step = 11; continue; }
  case 10:
    r0 = (s.arg0 <= 126);
  case 11:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.tmp_8;
  case 12:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 13; continue; }
    r0 = s.tmp_9;
    { step = 16; continue; }
  case 13:
    r0 = (s.arg0 >= 19968);
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_10;
    { step = 15; continue; }
  case 14:
    r0 = (s.arg0 <= 40869);
  case 15:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = s.tmp_11;
  case 16:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBool(s.tmp_12);
    if (!r0) { step = 17; continue; }
    r0 = s.tmp_12;
    { step = 18; continue; }
  case 17:
    r0 = (s.arg0 == 12290);
  case 18:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBool(s.tmp_13);
    if (!r0) { step = 19; continue; }
    r0 = s.tmp_13;
    { step = 20; continue; }
  case 19:
    r0 = (s.arg0 == 65292);
  case 20:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = s.tmp_14;
    return leave(s, r0)
  default: oops()
} } }
game_isBreakCharacter__P5224.info = {"start":31679,"length":358,"line":898,"column":4,"endLine":906,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"isBreakCharacter","argumentNames":["charCode"]}

function game_isBreakCharacter__P5224_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_isBreakCharacter__P5224, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  arg0: undefined,
} }





function game_BaseDialog_rowHeight__P5204(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    s.lastBrkId = 2068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2068]) return breakpoint(s, 1, 2068, r0);
  case 1:
    s.tmp_1 = if_charHeight_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 989; s.pc = 2; return s.tmp_1; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_rowHeight__P5204.info = {"start":5601,"length":78,"line":178,"column":8,"endLine":180,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"rowHeight","argumentNames":["this"]}

function game_BaseDialog_rowHeight__P5204_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_rowHeight__P5204, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_Dialog_prevPage__P2927(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Dialog__C2920_VT)) failedCast(r0);
    s.lastBrkId = 2082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2082]) return breakpoint(s, 3, 2082, r0);
  case 3:
    s.tmp_1 = game_Dialog_hasPrev__P2925_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 994; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2083]) return breakpoint(s, 5, 2083, r0);
  case 5:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["chunkIndex"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["chunkIndex"] = (s.tmp_3);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Dialog_prevPage__P2927.info = {"start":6814,"length":105,"line":221,"column":8,"endLine":225,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"prevPage","argumentNames":["this"]}

function game_Dialog_prevPage__P2927_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Dialog_prevPage__P2927, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function game_Dialog_nextPage__P2926(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Dialog__C2920_VT)) failedCast(r0);
    s.lastBrkId = 2080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2080]) return breakpoint(s, 3, 2080, r0);
  case 3:
    s.tmp_1 = game_Dialog_hasNext__P2924_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 993; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2081]) return breakpoint(s, 5, 2081, r0);
  case 5:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["chunkIndex"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["chunkIndex"] = (s.tmp_3);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Dialog_nextPage__P2926.info = {"start":6699,"length":105,"line":215,"column":8,"endLine":219,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"nextPage","argumentNames":["this"]}

function game_Dialog_nextPage__P2926_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Dialog_nextPage__P2926, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function game_Dialog_hasPrev__P2925(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Dialog__C2920_VT)) failedCast(r0);
    s.lastBrkId = 2077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2077]) return breakpoint(s, 6, 2077, r0);
  case 6:
    r0 = s.arg0.fields["chunks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["chunks"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2078]) return breakpoint(s, 7, 2078, r0);
  case 7:
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2079]) return breakpoint(s, 8, 2079, r0);
  case 8:
    r0 = s.arg0.fields["chunkIndex"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 > 0);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
game_Dialog_hasPrev__P2925.info = {"start":6556,"length":133,"line":210,"column":8,"endLine":213,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"hasPrev","argumentNames":["this"]}

function game_Dialog_hasPrev__P2925_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Dialog_hasPrev__P2925, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function game_Dialog_hasNext__P2924(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Dialog__C2920_VT)) failedCast(r0);
    s.lastBrkId = 2074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2074]) return breakpoint(s, 6, 2074, r0);
  case 6:
    r0 = s.arg0.fields["chunks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["chunks"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2075]) return breakpoint(s, 7, 2075, r0);
  case 7:
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2076]) return breakpoint(s, 8, 2076, r0);
  case 8:
    r0 = s.arg0.fields["chunkIndex"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["chunks"];
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - 1);
    s.tmp_7 = r0;
    r0 = (s.tmp_6 < s.tmp_7);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
game_Dialog_hasNext__P2924.info = {"start":6392,"length":154,"line":205,"column":8,"endLine":208,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"hasNext","argumentNames":["this"]}

function game_Dialog_hasNext__P2924_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Dialog_hasNext__P2924, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function game_Dialog_constructor__P2923(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Dialog__C2920_VT)) failedCast(r0);
    s.lastBrkId = 2072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2072]) return breakpoint(s, 1, 2072, r0);
  case 1:
    s.tmp_0 = game_BaseDialog_constructor__P2914_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg3;
    s.tmp_0.arg4 = s.arg4;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 992; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2073]) return breakpoint(s, 3, 2073, r0);
  case 3:
    r0 = (s.arg0).fields["chunkIndex"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Dialog_constructor__P2923.info = {"start":6189,"length":193,"line":199,"column":8,"endLine":203,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":["this","width","height","frame","font","cursor"]}

function game_Dialog_constructor__P2923_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Dialog_constructor__P2923, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function OptionScreen_done__P4467(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3562]) return breakpoint(s, 1, 3562, r0);
  case 1:
    r0 = s.arg0.fields["_isDone"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
OptionScreen_done__P4467.info = {"start":34874,"length":62,"line":1084,"column":4,"endLine":1086,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"done","argumentNames":["this"]}
OptionScreen_done__P4467.isGetter = true;

function OptionScreen_done__P4467_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_done__P4467, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function OptionScreenCollection_select__P4499(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3736]) return breakpoint(s, 11, 3736, r0);
  case 11:
    s.tmp_0 = OptionScreen_select__P4486_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1763; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 3737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3737]) return breakpoint(s, 13, 3737, r0);
  case 13:
    s.tmp_1 = if_isInFooter_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "isInFooter");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["isInFooter"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["isInFooter"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1764; s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3738]) return breakpoint(s, 15, 3738, r0);
  case 15:
    s.tmp_2 = OptionScreenCollection_saveSelections__P7324_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1765; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 3739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3739]) return breakpoint(s, 17, 3739, r0);
  case 17:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1766; s.pc = 18; return s.tmp_2; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3740]) return breakpoint(s, 19, 3740, r0);
  case 19:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["_currOptScreen"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_currOptScreen"] = (s.tmp_4);
    s.lastBrkId = 3741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3741]) return breakpoint(s, 20, 3741, r0);
  case 20:
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_optionSets"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3742]) return breakpoint(s, 21, 3742, r0);
  case 21:
    r0 = (s.arg0).fields["_currOptScreen"] = (0);
  case 1:
  case 2:
    s.lastBrkId = 3743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3743]) return breakpoint(s, 22, 3743, r0);
  case 22:
    s.tmp_0 = OptionScreenCollection_changeScreen__P7321_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1767; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 3744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3744]) return breakpoint(s, 24, 3744, r0);
  case 24:
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1768; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3745]) return breakpoint(s, 26, 3745, r0);
  case 26:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["_currOptScreen"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_currOptScreen"] = (s.tmp_4);
    s.lastBrkId = 3746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3746]) return breakpoint(s, 27, 3746, r0);
  case 27:
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3747]) return breakpoint(s, 28, 3747, r0);
  case 28:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.arg0.fields["_optionSets"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__length(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["_currOptScreen"] = (s.tmp_3);
  case 5:
  case 6:
    s.lastBrkId = 3748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3748]) return breakpoint(s, 29, 3748, r0);
  case 29:
    s.tmp_0 = OptionScreenCollection_changeScreen__P7321_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1769; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
  case 7:
  case 8:
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_select__P4499.info = {"start":54242,"length":945,"line":1645,"column":4,"endLine":1665,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"select","argumentNames":["this"]}

function OptionScreenCollection_select__P4499_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_select__P4499, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function OptionScreenCollection_saveSelections__P7324(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.selections___18542 = undefined;
    s.index___18545 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3759]) return breakpoint(s, 3, 3759, r0);
  case 3:
    r0 = s.arg0.fields["_selectedOptions"];
    s.selections___18542 = (r0);
    s.lastBrkId = 3760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3760]) return breakpoint(s, 4, 3760, r0);
  case 4:
    s.index___18545 = (0);
    s.lastBrkId = 3761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3761]) return breakpoint(s, 5, 3761, r0);
  case 5:
  case 1:
    s.lastBrkId = 3762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3762]) return breakpoint(s, 6, 3762, r0);
  case 6:
    s.tmp_1 = r0 = s.index___18545;
    r0 = pxsim_Array__length(s.selections___18542);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 3763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3763]) return breakpoint(s, 7, 3763, r0);
  case 7:
    r0 = s.arg0.fields["_selectedOptionsColl"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_6 = r0 = s.index___18545;
    r0 = pxsim_Array__getAt(s.selections___18542, s.index___18545);
    s.tmp_7 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_3, s.tmp_6, s.tmp_7);
    s.lastBrkId = 3764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3764]) return breakpoint(s, 8, 3764, r0);
  case 8:
    r0 = (s.index___18545 + 1);
    s.index___18545 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_saveSelections__P7324.info = {"start":56645,"length":284,"line":1717,"column":4,"endLine":1722,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"saveSelections","argumentNames":["this"]}

function OptionScreenCollection_saveSelections__P7324_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_saveSelections__P7324, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  selections___18542: undefined,
  index___18545: undefined,
  arg0: undefined,
} }





function OptionScreenCollection_changeScreen__P7321(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3752]) return breakpoint(s, 1, 3752, r0);
  case 1:
    s.tmp_0 = OptionScreenCollection_setBase__P7325_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1771; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3753]) return breakpoint(s, 3, 3753, r0);
  case 3:
    s.tmp_0 = RotatingScreens_rebuild__P4453_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1772; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 3754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3754]) return breakpoint(s, 5, 3754, r0);
  case 5:
    s.tmp_0 = OptionScreen__C4464_v1_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, OptionScreen__C4464_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.refresh;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_changeScreen__P7321.info = {"start":56058,"length":107,"line":1692,"column":4,"endLine":1696,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"changeScreen","argumentNames":["this"]}

function OptionScreenCollection_changeScreen__P7321_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_changeScreen__P7321, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function OptionScreen_select__P4486(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3634]) return breakpoint(s, 5, 3634, r0);
  case 5:
    s.tmp_1 = if_isInFooter_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "isInFooter");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["isInFooter"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["isInFooter"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1717; s.pc = 6; return s.tmp_1; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3635]) return breakpoint(s, 7, 3635, r0);
  case 7:
    s.tmp_4 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "currGroup");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["currGroup"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["currGroup"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1718; s.pc = 8; return s.tmp_4; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === 1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3636]) return breakpoint(s, 9, 3636, r0);
  case 9:
    s.tmp_5 = OptionScreen_done__P4468_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = true;
    s.callLocIdx = 1719; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
  case 1:
  case 2:
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 3637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3637]) return breakpoint(s, 11, 3637, r0);
  case 11:
    r0 = s.arg0.fields["_selectedOptions"];
    s.tmp_0 = r0;
    s.tmp_2 = if_currGroup_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "currGroup");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["currGroup"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["currGroup"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1720; s.pc = 12; return s.tmp_2; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = if_currOption_1_mk(s);
    r0 = s.arg0.fields["_cursor"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "currOption");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["currOption"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["currOption"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1721; s.pc = 13; return s.tmp_4; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.tmp_3);
    s.lastBrkId = 3638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3638]) return breakpoint(s, 14, 3638, r0);
  case 14:
    s.tmp_0 = OptionScreen__C4464_v1_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, OptionScreen__C4464_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.refresh;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_select__P4486.info = {"start":42888,"length":402,"line":1321,"column":4,"endLine":1330,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"select","argumentNames":["this"]}

function OptionScreen_select__P4486_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_select__P4486, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function controller_Controller_onButtonEvent__P2153(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[810]) return breakpoint(s, 1, 810, r0);
  case 1:
    s.tmp_0 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1 = controller_Controller_button__P5018_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 170; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.callLocIdx = 171; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_onButtonEvent__P2153.info = {"start":7102,"length":153,"line":232,"column":8,"endLine":234,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"onButtonEvent","argumentNames":["this","btn","event","handler"]}

function controller_Controller_onButtonEvent__P2153_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_onButtonEvent__P2153, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function game_eventContext__P3001(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2319]) return breakpoint(s, 1, 2319, r0);
  case 1:
    s.tmp_0 = game_init__P5245_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1086; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2320]) return breakpoint(s, 3, 2320, r0);
  case 3:
    r0 = globals._scene___5237.fields["eventContext"];
    return leave(s, r0)
  default: oops()
} } }
game_eventContext__P3001.info = {"start":4442,"length":112,"line":136,"column":4,"endLine":139,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"eventContext","argumentNames":[]}

function game_eventContext__P3001_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_eventContext__P3001, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_pauseUntilAnyButtonIsPressed__P2205(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[951]) return breakpoint(s, 1, 951, r0);
  case 1:
    setupResume(s, 2);
    pxsim.control.waitForEvent(2049, 0);
    checkResumeConsumed();
    return;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_pauseUntilAnyButtonIsPressed__P2205.info = {"start":9968,"length":96,"line":287,"column":4,"endLine":289,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"pauseUntilAnyButtonIsPressed","argumentNames":[]}

function controller_pauseUntilAnyButtonIsPressed__P2205_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_pauseUntilAnyButtonIsPressed__P2205, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_setWaitAnyButton__P2999(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2318]) return breakpoint(s, 1, 2318, r0);
  case 1:
    globals.__waitAnyButton___5241 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_setWaitAnyButton__P2999.info = {"start":4236,"length":83,"line":127,"column":4,"endLine":129,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"setWaitAnyButton","argumentNames":["f"]}

function game_setWaitAnyButton__P2999_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_setWaitAnyButton__P2999, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Math_FastRandom_constructor__P3060(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C3058_VT)) failedCast(r0);
    s.lastBrkId = 2373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2373]) return breakpoint(s, 3, 2373, r0);
  case 3:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2374]) return breakpoint(s, 4, 2374, r0);
  case 4:
    r0 = pxsim.Math_.randomRange(1, 65535);
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2375]) return breakpoint(s, 5, 2375, r0);
  case 5:
    r0 = (s.arg0).fields["seed"] = (s.arg1);
    s.lastBrkId = 2376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2376]) return breakpoint(s, 6, 2376, r0);
  case 6:
    r0 = (s.arg0).fields["lfsr"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_constructor__P3060.info = {"start":1425,"length":175,"line":44,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"inline","argumentNames":["this","seed"]}

function Math_FastRandom_constructor__P3060_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_constructor__P3060, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_consoleOverlay_listener__P5571(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2582]) return breakpoint(s, 8, 2582, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___5536);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2583]) return breakpoint(s, 9, 2583, r0);
  case 9:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2584]) return breakpoint(s, 10, 2584, r0);
  case 10:
    s.tmp_4 = helpers_arrayForEach__P109_mk(s);
    s.tmp_5 = helpers_arrayFilter__P110_mk(s);
    s.tmp_6 = helpers_stringSplit__P122_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.tmp_6.arg1 = "\n";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1269; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = forEach_inline__P18860;
    s.callLocIdx = 1270; s.pc = 12; return s.tmp_5;
  case 12:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = game_consoleOverlay_listener_inline__P18865;
    s.callLocIdx = 1272; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2590]) return breakpoint(s, 14, 2590, r0);
  case 14:
    r0 = pxsim_Array__length(globals.consoleStrings___5536);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.consoleLines___5549);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2591]) return breakpoint(s, 15, 2591, r0);
  case 15:
    s.tmp_2 = helpers_arraySplice__P100_mk(s);
    s.tmp_2.arg0 = globals.consoleStrings___5536;
    s.tmp_2.arg1 = 0;
    r0 = pxsim_Array__length(globals.consoleStrings___5536);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - globals.consoleLines___5549);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1273; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener__P5571.info = {"start":787,"length":571,"line":26,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"listener","argumentNames":["priority","text"]}

function game_consoleOverlay_listener__P5571_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener__P5571, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function forEach_inline__P18860(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P18860.info = {"start":985,"length":14,"line":32,"column":20,"endLine":32,"endColumn":34,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function forEach_inline__P18860_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P18860, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_consoleOverlay_listener_inline__P18865(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.j___18867 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2585]) return breakpoint(s, 3, 2585, r0);
  case 3:
    s.j___18867 = (0);
    s.lastBrkId = 2586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2586]) return breakpoint(s, 4, 2586, r0);
  case 4:
  case 1:
    s.lastBrkId = 2587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2587]) return breakpoint(s, 5, 2587, r0);
  case 5:
    s.tmp_1 = r0 = s.j___18867;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2588]) return breakpoint(s, 6, 2588, r0);
  case 6:
    s.tmp_3 = r0 = globals.consoleStrings___5536;
    s.tmp_5 = helpers_stringSlice__P119_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.j___18867;
    r0 = (s.j___18867 + globals.consoleColumns___5559);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 1271; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_4);
    s.lastBrkId = 2589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2589]) return breakpoint(s, 8, 2589, r0);
  case 8:
    r0 = (s.j___18867 + globals.consoleColumns___5559);
    s.j___18867 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener_inline__P18865.info = {"start":1022,"length":189,"line":33,"column":21,"endLine":37,"endColumn":13,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function game_consoleOverlay_listener_inline__P18865_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener_inline__P18865, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  j___18867: undefined,
  arg0: undefined,
} }





function console_addListener__P383(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[371]) return breakpoint(s, 6, 371, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array_.indexOf(globals.listeners___4715, s.arg0, undefined);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > -1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[372]) return breakpoint(s, 7, 372, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[373]) return breakpoint(s, 8, 373, r0);
  case 8:
    r0 = pxsim_Array__push(globals.listeners___4715, s.arg0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_addListener__P383.info = {"start":3558,"length":197,"line":121,"column":4,"endLine":124,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"addListener","argumentNames":["listener"]}

function console_addListener__P383_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_addListener__P383, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function listeners_inline__P4714(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.__log(s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
listeners_inline__P4714.info = {"start":534,"length":85,"line":25,"column":8,"endLine":25,"endColumn":93,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["priority","text"]}

function listeners_inline__P4714_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: listeners_inline__P4714, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_register__P3105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2542]) return breakpoint(s, 4, 2542, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.instance___5490);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2543]) return breakpoint(s, 5, 2543, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2544]) return breakpoint(s, 6, 2544, r0);
  case 6:
    s.tmp_0 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_0.arg0 = globals.menu___2119;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = scene_systemMenu_showSystemMenu__P3106;
    s.callLocIdx = 1256; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_register__P3105.info = {"start":12793,"length":193,"line":382,"column":4,"endLine":386,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"register","argumentNames":[]}

function scene_systemMenu_register__P3105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_register__P3105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_showSystemMenu__P3106(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2545]) return breakpoint(s, 4, 2545, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.instance___5490);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2546]) return breakpoint(s, 5, 2546, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2547]) return breakpoint(s, 6, 2547, r0);
  case 6:
    s.tmp_0 = game_pushScene__P3002_mk(s);
    s.callLocIdx = 1257; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2548]) return breakpoint(s, 8, 2548, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_PauseMenu__C3094_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_PauseMenu_constructor__P3095_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = scene_systemMenu_buildOptionList__P3102;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1258; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.instance___5490 = (s.tmp_0);
    s.lastBrkId = 2549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2549]) return breakpoint(s, 10, 2549, r0);
  case 10:
    s.tmp_0 = scene_systemMenu_PauseMenu_show__P3096_mk(s);
    s.tmp_0.arg0 = globals.instance___5490;
    s.callLocIdx = 1259; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_showSystemMenu__P3106.info = {"start":12992,"length":172,"line":388,"column":4,"endLine":393,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"showSystemMenu","argumentNames":[]}

function scene_systemMenu_showSystemMenu__P3106_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_showSystemMenu__P3106, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_systemMenu_buildOptionList__P3102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.options___19580 = undefined;
    s.lastBrkId = 2525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2525]) return breakpoint(s, 5, 2525, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.options___19580 = (r0);
    s.lastBrkId = 2526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2526]) return breakpoint(s, 6, 2526, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3086_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3087_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_DOWN_ICON___3116;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P19588;
    s.tmp_1.arg3 = scene_systemMenu_volumeDown__P5496;
    s.callLocIdx = 1239; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___19580, s.tmp_0);
    s.lastBrkId = 2527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2527]) return breakpoint(s, 8, 2527, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3086_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3087_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_UP_ICON___3113;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P19602;
    s.tmp_1.arg3 = scene_systemMenu_volumeUp__P5495;
    s.callLocIdx = 1241; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___19580, s.tmp_0);
    s.lastBrkId = 2528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2528]) return breakpoint(s, 10, 2528, r0);
  case 10:
    s.tmp_1 = scene_systemMenu_setScreenBrightnessSupported__P5503_mk(s);
    s.callLocIdx = 1242; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2529]) return breakpoint(s, 12, 2529, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3086_VT);
    s.tmp_2 = r0;
    s.tmp_3 = scene_systemMenu_MenuOption_constructor__P3087_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = globals.BRIGHTNESS_DOWN_ICON___3114;
    s.tmp_3.arg2 = scene_systemMenu_buildOptionList_inline__P19617;
    s.tmp_3.arg3 = scene_systemMenu_brightnessDown__P5498;
    s.callLocIdx = 1244; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___19580, s.tmp_2);
    s.lastBrkId = 2530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2530]) return breakpoint(s, 14, 2530, r0);
  case 14:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3086_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3087_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.BRIGHTNESS_UP_ICON___3119;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P19632;
    s.tmp_1.arg3 = scene_systemMenu_brightnessUp__P5497;
    s.callLocIdx = 1246; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___19580, s.tmp_0);
  case 1:
  case 2:
    s.lastBrkId = 2531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2531]) return breakpoint(s, 16, 2531, r0);
  case 16:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3086_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3087_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.STATS_ICON___3120;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P19647;
    s.tmp_1.arg3 = scene_systemMenu_toggleStats__P5500;
    s.callLocIdx = 1247; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___19580, s.tmp_0);
    s.lastBrkId = 2532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2532]) return breakpoint(s, 18, 2532, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3086_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3087_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CONSOLE_ICON___3118;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P19656;
    s.tmp_1.arg3 = scene_systemMenu_toggleConsole__P5501;
    s.callLocIdx = 1249; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___19580, s.tmp_0);
    s.lastBrkId = 2533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2533]) return breakpoint(s, 20, 2533, r0);
  case 20:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3086_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3087_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.SLEEP_ICON___3117;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P19665;
    s.tmp_1.arg3 = scene_systemMenu_sleep__P5502;
    s.callLocIdx = 1250; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___19580, s.tmp_0);
    s.lastBrkId = 2534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2534]) return breakpoint(s, 22, 2534, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(globals.customMenuOptions___5491);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2535]) return breakpoint(s, 23, 2535, r0);
  case 23:
    s.tmp_0 = helpers_arrayConcat__P113_mk(s);
    s.tmp_0.arg0 = s.options___19580;
    s.tmp_0.arg1 = globals.customMenuOptions___5491;
    s.callLocIdx = 1251; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.options___19580 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 2536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2536]) return breakpoint(s, 25, 2536, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3086_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3087_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CLOSE_MENU_ICON___3115;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P19678;
    s.tmp_1.arg3 = scene_systemMenu_closeMenu__P3101;
    s.callLocIdx = 1252; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___19580, s.tmp_0);
    s.lastBrkId = 2537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2537]) return breakpoint(s, 27, 2537, r0);
  case 27:
    r0 = s.options___19580;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList__P3102.info = {"start":10499,"length":1149,"line":334,"column":4,"endLine":354,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildOptionList","argumentNames":[]}

function scene_systemMenu_buildOptionList__P3102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList__P3102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  options___19580: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P19588(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P1621_mk(s);
    s.callLocIdx = 1238; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P19588.info = {"start":10644,"length":39,"line":337,"column":54,"endLine":337,"endColumn":93,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P19588_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P19588, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P19602(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P1621_mk(s);
    s.callLocIdx = 1240; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P19602.info = {"start":10751,"length":37,"line":338,"column":52,"endLine":338,"endColumn":89,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P19602_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P19602, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P19617(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = helpers_screenBrightness__P1966_mk(s);
    s.tmp_3.arg0 = globals.screen___2032;
    s.callLocIdx = 1243; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P19617.info = {"start":10910,"length":48,"line":340,"column":62,"endLine":340,"endColumn":110,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P19617_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P19617, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P19632(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = helpers_screenBrightness__P1966_mk(s);
    s.tmp_3.arg0 = globals.screen___2032;
    s.callLocIdx = 1245; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P19632.info = {"start":11038,"length":46,"line":341,"column":60,"endLine":341,"endColumn":106,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P19632_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P19632, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P19647(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.stats___2967);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE STATS";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW STATS";
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P19647.info = {"start":11160,"length":46,"line":343,"column":48,"endLine":343,"endColumn":94,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P19647_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P19647, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P19656(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_1 = game_consoleOverlay_isVisible__P3123_mk(s);
    s.callLocIdx = 1248; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE CONSOLE";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW CONSOLE";
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P19656.info = {"start":11273,"length":71,"line":344,"column":50,"endLine":344,"endColumn":121,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P19656_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P19656, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P19665(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "SLEEP";
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P19665.info = {"start":11411,"length":13,"line":345,"column":48,"endLine":345,"endColumn":61,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P19665_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P19665, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_buildOptionList_inline__P19678(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "CLOSE";
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P19678.info = {"start":11590,"length":13,"line":351,"column":53,"endLine":351,"endColumn":66,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P19678_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P19678, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_setScreenBrightnessSupported__P5503(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2524]) return breakpoint(s, 1, 2524, r0);
  case 1:
    r0 = 0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightnessSupported__P5503.info = {"start":10398,"length":95,"line":330,"column":4,"endLine":332,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightnessSupported","argumentNames":[]}

function scene_systemMenu_setScreenBrightnessSupported__P5503_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightnessSupported__P5503, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_sleep__P5502(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2518]) return breakpoint(s, 1, 2518, r0);
  case 1:
    r0 = pxsim_pxtcore.deepSleep();
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_sleep__P5502.info = {"start":10072,"length":51,"line":316,"column":4,"endLine":318,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"sleep","argumentNames":[]}

function scene_systemMenu_sleep__P5502_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_sleep__P5502, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_toggleConsole__P5501(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2514]) return breakpoint(s, 3, 2514, r0);
  case 3:
    s.tmp_1 = game_consoleOverlay_isVisible__P3123_mk(s);
    s.callLocIdx = 1231; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2515]) return breakpoint(s, 5, 2515, r0);
  case 5:
    s.tmp_2 = game_consoleOverlay_setVisible__P3125_mk(s);
    s.tmp_2.arg0 = false;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 1232; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2516]) return breakpoint(s, 7, 2516, r0);
  case 7:
    s.tmp_0 = game_consoleOverlay_setVisible__P3125_mk(s);
    s.tmp_0.arg0 = true;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 1233; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2517]) return breakpoint(s, 9, 2517, r0);
  case 9:
    s.tmp_0 = console_log__P380_mk(s);
    s.tmp_0.arg0 = "console";
    s.callLocIdx = 1234; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleConsole__P5501.info = {"start":9827,"length":239,"line":307,"column":4,"endLine":314,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleConsole","argumentNames":[]}

function scene_systemMenu_toggleConsole__P5501_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleConsole__P5501, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function game_consoleOverlay_setVisible__P3125(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2578]) return breakpoint(s, 7, 2578, r0);
  case 7:
    s.tmp_1 = r0 = s.arg0;
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___5536);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2579]) return breakpoint(s, 8, 2579, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    globals.consoleStrings___5536 = (s.tmp_6);
  case 3:
  case 4:
    s.lastBrkId = 2580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2580]) return breakpoint(s, 9, 2580, r0);
  case 9:
    r0 = (s.arg1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2581]) return breakpoint(s, 10, 2581, r0);
  case 10:
    globals.consoleColor___5535 = (s.arg1);
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_setVisible__P3125.info = {"start":562,"length":219,"line":19,"column":4,"endLine":24,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"setVisible","argumentNames":["value","col"]}

function game_consoleOverlay_setVisible__P3125_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_setVisible__P3125, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_log__P380(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[353]) return breakpoint(s, 1, 353, r0);
  case 1:
    s.tmp_0 = console_add__P376_mk(s);
    s.tmp_0.arg0 = 1;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 36; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_log__P380.info = {"start":1450,"length":86,"line":58,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"log","argumentNames":["value"]}

function console_log__P380_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_log__P380, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function console_add__P376(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.text___19717 = undefined;
    s.i___19726 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[344]) return breakpoint(s, 6, 344, r0);
  case 6:
    r0 = (s.arg0 < globals.minPriority___375);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[345]) return breakpoint(s, 7, 345, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[346]) return breakpoint(s, 8, 346, r0);
  case 8:
    s.tmp_1 = console_inspect__P382_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 20;
    s.callLocIdx = 34; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.text___19717 = (r0);
    s.lastBrkId = 347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[347]) return breakpoint(s, 10, 347, r0);
  case 10:
    if ((s.text___19717) && (s.text___19717).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.text___19717);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.text___19717) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\n");
    s.text___19717 = (r0);
    s.lastBrkId = 348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[348]) return breakpoint(s, 12, 348, r0);
  case 12:
    s.i___19726 = (0);
    s.lastBrkId = 349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[349]) return breakpoint(s, 13, 349, r0);
  case 13:
  case 3:
    s.lastBrkId = 350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[350]) return breakpoint(s, 14, 350, r0);
  case 14:
    s.tmp_1 = r0 = s.i___19726;
    r0 = pxsim_Array__length(globals.listeners___4715);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[351]) return breakpoint(s, 15, 351, r0);
  case 15:
    s.tmp_3 = lambda_3_mk(s);
    r0 = pxsim_Array__getAt(globals.listeners___4715, s.i___19726);
    s.tmp_3.argL = r0;
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.text___19717;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 35; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[352]) return breakpoint(s, 17, 352, r0);
  case 17:
    r0 = (s.i___19726 + 1);
    s.i___19726 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_add__P376.info = {"start":632,"length":317,"line":28,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"add","argumentNames":["priority","message"]}

function console_add__P376_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_add__P376, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  text___19717: undefined,
  i___19726: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_toggleStats__P5500(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2511]) return breakpoint(s, 5, 2511, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2967);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    globals.stats___2967 = (r0);
    s.lastBrkId = 2512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2512]) return breakpoint(s, 6, 2512, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2967);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___398;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2513]) return breakpoint(s, 7, 2513, r0);
  case 7:
    s.tmp_3 = lambda_2_mk(s);
    s.tmp_3.argL = globals.control_EventContext_onStats___398;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3.arg0 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 1230; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleStats__P5500.info = {"start":9642,"length":179,"line":300,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleStats","argumentNames":[]}

function scene_systemMenu_toggleStats__P5500_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleStats__P5500, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_brightnessDown__P5498(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2508]) return breakpoint(s, 1, 2508, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_setScreenBrightness__P5499_mk(s);
    s.tmp_2 = helpers_screenBrightness__P1966_mk(s);
    s.tmp_2.arg0 = globals.screen___2032;
    s.callLocIdx = 1225; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1226; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessDown__P5498.info = {"start":9198,"length":87,"line":289,"column":4,"endLine":291,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessDown","argumentNames":[]}

function scene_systemMenu_brightnessDown__P5498_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessDown__P5498, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_setScreenBrightness__P5499(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2509]) return breakpoint(s, 1, 2509, r0);
  case 1:
    s.tmp_0 = helpers_setScreenBrightness__P1965_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1227; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2510]) return breakpoint(s, 3, 2510, r0);
  case 3:
    s.tmp_0 = settings_writeNumber__P2063_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.tmp_1 = helpers_screenBrightness__P1966_mk(s);
    s.tmp_1.arg0 = globals.screen___2032;
    s.callLocIdx = 1228; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1229; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightness__P5499.info = {"start":9291,"length":345,"line":293,"column":4,"endLine":298,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightness","argumentNames":["b"]}

function scene_systemMenu_setScreenBrightness__P5499_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightness__P5499, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function settings_writeNumber__P2063(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[719]) return breakpoint(s, 1, 719, r0);
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_1 = settings_writeBuffer__P2060_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = msgpack_packNumberArray__P184_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.callLocIdx = 127; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 128; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeNumber__P2063.info = {"start":2265,"length":122,"line":89,"column":4,"endLine":91,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeNumber","argumentNames":["key","value"]}

function settings_writeNumber__P2063_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeNumber__P2063, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_writeBuffer__P2060(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[715]) return breakpoint(s, 3, 715, r0);
  case 3:
    r0 = pxsim.settings._set(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[716]) return breakpoint(s, 4, 716, r0);
  case 4:
    r0 = pxsim.settings._userClean();
    s.lastBrkId = 717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[717]) return breakpoint(s, 5, 717, r0);
  case 5:
    r0 = pxsim_pxtrt.panic(920);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeBuffer__P2060.info = {"start":1538,"length":290,"line":63,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeBuffer","argumentNames":["key","value"]}

function settings_writeBuffer__P2060_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeBuffer__P2060, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_packNumberArray__P184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.off___19788 = undefined;
    s.n___19790 = undefined;
    s.unnamed12646___U2 = undefined;
    s.unnamed12647___U3 = undefined;
    s.buf___19800 = undefined;
    s.n___19806 = undefined;
    s.unnamed12648___U6 = undefined;
    s.unnamed12649___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[285]) return breakpoint(s, 5, 285, r0);
  case 5:
    s.off___19788 = (0);
    s.lastBrkId = 286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[286]) return breakpoint(s, 6, 286, r0);
  case 6:
    s.n___19790 = (undefined);
    s.unnamed12646___U2 = (s.arg0);
    s.unnamed12647___U3 = (0);
    s.lastBrkId = 287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[287]) return breakpoint(s, 7, 287, r0);
  case 7:
  case 1:
    s.tmp_0 = r0 = s.unnamed12647___U3;
    r0 = pxsim_Array__length(s.unnamed12646___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12646___U2, s.unnamed12647___U3);
    s.n___19790 = (r0);
    s.lastBrkId = 288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[288]) return breakpoint(s, 8, 288, r0);
  case 8:
    s.lastBrkId = 289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[289]) return breakpoint(s, 9, 289, r0);
  case 9:
    s.tmp_2 = r0 = s.off___19788;
    s.tmp_4 = msgpack_packNumberCore__P4674_mk(s);
    s.tmp_4.arg0 = null;
    s.tmp_4.arg1 = s.off___19788;
    s.tmp_4.arg2 = s.n___19790;
    s.callLocIdx = 24; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___19788 = (r0);
    r0 = (s.unnamed12647___U3 + 1);
    s.unnamed12647___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12646___U2 = (undefined);
    s.lastBrkId = 290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[290]) return breakpoint(s, 11, 290, r0);
  case 11:
    r0 = pxsim.control.createBuffer(s.off___19788);
    s.buf___19800 = (r0);
    s.lastBrkId = 291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[291]) return breakpoint(s, 12, 291, r0);
  case 12:
    s.off___19788 = (0);
    s.lastBrkId = 292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[292]) return breakpoint(s, 13, 292, r0);
  case 13:
    s.n___19806 = (undefined);
    s.unnamed12648___U6 = (s.arg0);
    s.unnamed12649___U7 = (0);
    s.lastBrkId = 293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[293]) return breakpoint(s, 14, 293, r0);
  case 14:
  case 3:
    s.tmp_0 = r0 = s.unnamed12649___U7;
    r0 = pxsim_Array__length(s.unnamed12648___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12648___U6, s.unnamed12649___U7);
    s.n___19806 = (r0);
    s.lastBrkId = 294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[294]) return breakpoint(s, 15, 294, r0);
  case 15:
    s.lastBrkId = 295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[295]) return breakpoint(s, 16, 295, r0);
  case 16:
    s.tmp_2 = r0 = s.off___19788;
    s.tmp_4 = msgpack_packNumberCore__P4674_mk(s);
    s.tmp_4.arg0 = s.buf___19800;
    s.tmp_4.arg1 = s.off___19788;
    s.tmp_4.arg2 = s.n___19806;
    s.callLocIdx = 25; s.pc = 17; return s.tmp_4;
  case 17:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___19788 = (r0);
    r0 = (s.unnamed12649___U7 + 1);
    s.unnamed12649___U7 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed12648___U6 = (undefined);
    s.lastBrkId = 296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[296]) return breakpoint(s, 18, 296, r0);
  case 18:
    r0 = s.buf___19800;
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberArray__P184.info = {"start":3427,"length":330,"line":117,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberArray","argumentNames":["nums"]}

function msgpack_packNumberArray__P184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberArray__P184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  off___19788: undefined,
  n___19790: undefined,
  unnamed12646___U2: undefined,
  unnamed12647___U3: undefined,
  buf___19800: undefined,
  n___19806: undefined,
  unnamed12648___U6: undefined,
  unnamed12649___U7: undefined,
  arg0: undefined,
} }





function msgpack_packNumberCore__P4674(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tag___19820 = undefined;
    s.fmt___19863 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[248]) return breakpoint(s, 24, 248, r0);
  case 24:
    s.tag___19820 = (203);
    s.lastBrkId = 249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[249]) return breakpoint(s, 25, 249, r0);
  case 25:
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.arg2 << 0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = s.arg2;
    r0 = (s.arg2 >>> 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 == s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[250]) return breakpoint(s, 26, 250, r0);
  case 26:
    r0 = (-31 <= s.arg2);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_6;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 <= 127);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[251]) return breakpoint(s, 27, 251, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[252]) return breakpoint(s, 28, 252, r0);
  case 28:
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.arg2);
  case 5:
  case 6:
    s.lastBrkId = 253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[253]) return breakpoint(s, 29, 253, r0);
  case 29:
    r0 = 1;
    { step = 23; continue; }
    { step = 18; continue; }
  case 7:
    s.lastBrkId = 254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[254]) return breakpoint(s, 30, 254, r0);
  case 30:
    r0 = (0 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[255]) return breakpoint(s, 31, 255, r0);
  case 31:
    r0 = (s.arg2 <= 255);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[256]) return breakpoint(s, 32, 256, r0);
  case 32:
    s.tag___19820 = (204);
    { step = 11; continue; }
  case 8:
    s.lastBrkId = 257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[257]) return breakpoint(s, 33, 257, r0);
  case 33:
    r0 = (s.arg2 <= 65535);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[258]) return breakpoint(s, 34, 258, r0);
  case 34:
    s.tag___19820 = (205);
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[259]) return breakpoint(s, 35, 259, r0);
  case 35:
    s.tag___19820 = (206);
  case 10:
  case 11:
    { step = 17; continue; }
  case 12:
    s.lastBrkId = 260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[260]) return breakpoint(s, 36, 260, r0);
  case 36:
    r0 = (-127 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[261]) return breakpoint(s, 37, 261, r0);
  case 37:
    s.tag___19820 = (208);
    { step = 16; continue; }
  case 13:
    s.lastBrkId = 262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[262]) return breakpoint(s, 38, 262, r0);
  case 38:
    r0 = (-32767 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[263]) return breakpoint(s, 39, 263, r0);
  case 39:
    s.tag___19820 = (209);
    { step = 15; continue; }
  case 14:
    s.lastBrkId = 264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[264]) return breakpoint(s, 40, 264, r0);
  case 40:
    s.tag___19820 = (210);
  case 15:
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.lastBrkId = 265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[265]) return breakpoint(s, 41, 265, r0);
  case 41:
    s.tmp_0 = msgpack_tagFormat__P4673_mk(s);
    s.tmp_0.arg0 = s.tag___19820;
    s.callLocIdx = 20; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.fmt___19863 = (r0);
    s.lastBrkId = 266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[266]) return breakpoint(s, 43, 266, r0);
  case 43:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[267]) return breakpoint(s, 44, 267, r0);
  case 44:
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.tag___19820);
    s.lastBrkId = 268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[268]) return breakpoint(s, 45, 268, r0);
  case 45:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.fmt___19863;
    r0 = (s.arg1 + 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, s.tmp_1, s.tmp_2, s.arg2);
  case 21:
  case 22:
    s.lastBrkId = 269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[269]) return breakpoint(s, 46, 269, r0);
  case 46:
    s.tmp_1 = pins_sizeOf__P175_mk(s);
    s.tmp_1.arg0 = s.fmt___19863;
    s.callLocIdx = 21; s.pc = 47; return s.tmp_1;
  case 47:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
  case 23:
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberCore__P4674.info = {"start":1632,"length":951,"line":56,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberCore","argumentNames":["buf","offset","num"]}

function msgpack_packNumberCore__P4674_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberCore__P4674, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tag___19820: undefined,
  fmt___19863: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function msgpack_tagFormat__P4673(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[239]) return breakpoint(s, 10, 239, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(203, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(204, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(205, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(206, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(208, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(209, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(210, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[240]) return breakpoint(s, 11, 240, r0);
  case 11:
    r0 = 16;
    { step = 9; continue; }
  case 2:
    s.lastBrkId = 241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[241]) return breakpoint(s, 12, 241, r0);
  case 12:
    r0 = 7;
    { step = 9; continue; }
  case 3:
    s.lastBrkId = 242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[242]) return breakpoint(s, 13, 242, r0);
  case 13:
    r0 = 9;
    { step = 9; continue; }
  case 4:
    s.lastBrkId = 243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[243]) return breakpoint(s, 14, 243, r0);
  case 14:
    r0 = 12;
    { step = 9; continue; }
  case 5:
    s.lastBrkId = 244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[244]) return breakpoint(s, 15, 244, r0);
  case 15:
    r0 = 6;
    { step = 9; continue; }
  case 6:
    s.lastBrkId = 245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[245]) return breakpoint(s, 16, 245, r0);
  case 16:
    r0 = 8;
    { step = 9; continue; }
  case 7:
    s.lastBrkId = 246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[246]) return breakpoint(s, 17, 246, r0);
  case 17:
    r0 = 10;
    { step = 9; continue; }
  case 8:
    s.lastBrkId = 247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[247]) return breakpoint(s, 18, 247, r0);
  case 18:
    r0 = null;
    { step = 9; continue; }
    r0 = undefined;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
msgpack_tagFormat__P4673.info = {"start":1145,"length":481,"line":42,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"tagFormat","argumentNames":["tag"]}

function msgpack_tagFormat__P4673_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_tagFormat__P4673, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function pins_sizeOf__P175(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[238]) return breakpoint(s, 1, 238, r0);
  case 1:
    s.tmp_0 = Buffer_sizeOfNumberFormat__P215_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 19; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_sizeOf__P175.info = {"start":42,"length":101,"line":2,"column":4,"endLine":4,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOf","argumentNames":["format"]}

function pins_sizeOf__P175_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_sizeOf__P175, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_sizeOfNumberFormat__P215(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[297]) return breakpoint(s, 19, 297, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(15, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq(16, s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq(14, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[298]) return breakpoint(s, 20, 298, r0);
  case 20:
    r0 = 1;
    { step = 18; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[299]) return breakpoint(s, 21, 299, r0);
  case 21:
    r0 = 2;
    { step = 18; continue; }
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[300]) return breakpoint(s, 22, 300, r0);
  case 22:
    r0 = 4;
    { step = 18; continue; }
  case 15:
  case 16:
    s.lastBrkId = 301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[301]) return breakpoint(s, 23, 301, r0);
  case 23:
    r0 = 8;
    { step = 18; continue; }
  case 17:
    s.lastBrkId = 302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[302]) return breakpoint(s, 24, 302, r0);
  case 24:
    r0 = 0;
  case 18:
    return leave(s, r0)
  default: oops()
} } }
Buffer_sizeOfNumberFormat__P215.info = {"start":14912,"length":856,"line":508,"column":4,"endLine":532,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOfNumberFormat","argumentNames":["format"]}

function Buffer_sizeOfNumberFormat__P215_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_sizeOfNumberFormat__P215, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_setScreenBrightness__P1965(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[575]) return breakpoint(s, 1, 575, r0);
  case 1:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 10;
    s.tmp_0.arg1 = 100;
    r0 = (s.arg1 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 90; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.arg1 = (r0);
    s.lastBrkId = 576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[576]) return breakpoint(s, 3, 576, r0);
  case 3:
    globals.brightness___1951 = (s.arg1);
    s.lastBrkId = 577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[577]) return breakpoint(s, 4, 577, r0);
  case 4:
    r0 = pxsim_pxtcore.setScreenBrightness(globals.brightness___1951);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_setScreenBrightness__P1965.info = {"start":8945,"length":210,"line":282,"column":4,"endLine":286,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"setScreenBrightness","argumentNames":["img","b"]}

function helpers_setScreenBrightness__P1965_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_setScreenBrightness__P1965, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_brightnessUp__P5497(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2507]) return breakpoint(s, 1, 2507, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_setScreenBrightness__P5499_mk(s);
    s.tmp_2 = helpers_screenBrightness__P1966_mk(s);
    s.tmp_2.arg0 = globals.screen___2032;
    s.callLocIdx = 1223; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1224; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessUp__P5497.info = {"start":9107,"length":85,"line":285,"column":4,"endLine":287,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessUp","argumentNames":[]}

function scene_systemMenu_brightnessUp__P5497_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessUp__P5497, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_volumeDown__P5496(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___20136 = undefined;
    s.remainder___20139 = undefined;
    s.newVolume___20142 = undefined;
    s.lastBrkId = 2503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2503]) return breakpoint(s, 3, 2503, r0);
  case 3:
    s.tmp_0 = music_volume__P1621_mk(s);
    s.callLocIdx = 1221; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.v___20136 = (r0);
    s.lastBrkId = 2504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2504]) return breakpoint(s, 5, 2504, r0);
  case 5:
    r0 = (s.v___20136 % 32);
    s.remainder___20139 = (r0);
    s.lastBrkId = 2505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2505]) return breakpoint(s, 6, 2505, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.remainder___20139);
    if (!r0) { step = 1; continue; }
    r0 = s.remainder___20139;
    { step = 2; continue; }
  case 1:
    r0 = 32;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.v___20136 - s.tmp_0);
    s.newVolume___20142 = (r0);
    s.lastBrkId = 2506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2506]) return breakpoint(s, 7, 2506, r0);
  case 7:
    s.tmp_0 = scene_systemMenu_setVolume__P5494_mk(s);
    s.tmp_0.arg0 = s.newVolume___20142;
    s.callLocIdx = 1222; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeDown__P5496.info = {"start":8914,"length":187,"line":278,"column":4,"endLine":283,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeDown","argumentNames":[]}

function scene_systemMenu_volumeDown__P5496_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeDown__P5496, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___20136: undefined,
  remainder___20139: undefined,
  newVolume___20142: undefined,
} }





function scene_systemMenu_setVolume__P5494(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2496]) return breakpoint(s, 1, 2496, r0);
  case 1:
    s.tmp_0 = music_setVolume__P1620_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1216; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2497]) return breakpoint(s, 3, 2497, r0);
  case 3:
    s.tmp_0 = music_playTone__P1622_mk(s);
    s.tmp_0.arg0 = 440;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 1217; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2498]) return breakpoint(s, 5, 2498, r0);
  case 5:
    s.tmp_0 = settings_writeNumber__P2063_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1218; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setVolume__P5494.info = {"start":8565,"length":166,"line":265,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setVolume","argumentNames":["newVolume"]}

function scene_systemMenu_setVolume__P5494_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setVolume__P5494, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_playTone__P1622(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.id___19977 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[501]) return breakpoint(s, 5, 501, r0);
  case 5:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[502]) return breakpoint(s, 6, 502, r0);
  case 6:
    r0 = pxsim_pxtrt_stlocRef(s.arg1, 86400000);
  case 1:
  case 2:
    s.lastBrkId = 503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[503]) return breakpoint(s, 7, 503, r0);
  case 7:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 2000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[504]) return breakpoint(s, 8, 504, r0);
  case 8:
    s.tmp_2 = music_playNoteCore__P4773_mk(s);
    s.tmp_2.arg0 = 0;
    s.tmp_2.arg1 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 67; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[505]) return breakpoint(s, 10, 505, r0);
  case 10:
    s.tmp_0 = pause__P413_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 68; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[506]) return breakpoint(s, 12, 506, r0);
  case 12:
    r0 = (globals.playToneID___4775 + 1);
    s.tmp_0 = r0;
    globals.playToneID___4775 = (r0);
    s.id___19977 = (s.tmp_0);
    s.lastBrkId = 507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[507]) return breakpoint(s, 13, 507, r0);
  case 13:
    r0 = pxsim_pxtcore_mkAction(3, music_playTone_inline__P19983);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.id___19977);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone__P1622.info = {"start":2612,"length":831,"line":84,"column":4,"endLine":109,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playTone","argumentNames":["frequency","ms"]}

function music_playTone__P1622_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone__P1622, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  id___19977: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function music_playTone_inline__P19983(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pos___19984 = undefined;
    s.now___19994 = undefined;
    s.d___19997 = undefined;
    s.t___20001 = undefined;
    s.lastBrkId = 508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[508]) return breakpoint(s, 7, 508, r0);
  case 7:
    r0 = pxsim.control.millis();
    s.pos___19984 = (r0);
    s.lastBrkId = 509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[509]) return breakpoint(s, 8, 509, r0);
  case 8:
  case 1:
    s.lastBrkId = 510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[510]) return breakpoint(s, 9, 510, r0);
  case 9:
    r0 = (s.caps[0] == globals.playToneID___4775);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[511]) return breakpoint(s, 10, 511, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.now___19994 = (r0);
    s.lastBrkId = 512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[512]) return breakpoint(s, 11, 512, r0);
  case 11:
    r0 = (s.pos___19984 - s.now___19994);
    s.d___19997 = (r0);
    s.lastBrkId = 513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[513]) return breakpoint(s, 12, 513, r0);
  case 12:
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 69; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.t___20001 = (r0);
    s.lastBrkId = 514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[514]) return breakpoint(s, 14, 514, r0);
  case 14:
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.t___20001);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[515]) return breakpoint(s, 15, 515, r0);
  case 15:
    r0 = (s.pos___19984 + s.t___20001);
    s.pos___19984 = (r0);
    s.lastBrkId = 516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[516]) return breakpoint(s, 16, 516, r0);
  case 16:
    s.tmp_0 = music_playNoteCore__P4773_mk(s);
    r0 = (s.d___19997 - 1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.caps[2];
    s.tmp_0.arg2 = s.t___20001;
    s.callLocIdx = 70; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[517]) return breakpoint(s, 18, 517, r0);
  case 18:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[518]) return breakpoint(s, 19, 518, r0);
  case 19:
    s.tmp_2 = pause__P413_mk(s);
    r0 = (s.d___19997 + s.t___20001);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 71; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[519]) return breakpoint(s, 21, 519, r0);
  case 21:
    s.tmp_0 = pause__P413_mk(s);
    r0 = (s.d___19997 + s.t___20001);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 100);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 72; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 5:
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone_inline__P19983.info = {"start":2911,"length":515,"line":93,"column":34,"endLine":107,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function music_playTone_inline__P19983_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone_inline__P19983, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  pos___19984: undefined,
  now___19994: undefined,
  d___19997: undefined,
  t___20001: undefined,
} }





function music_playNoteCore__P4773(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___20031 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[498]) return breakpoint(s, 1, 498, r0);
  case 1:
    r0 = pxsim.control.createBuffer(12);
    s.buf___20031 = (r0);
    s.lastBrkId = 499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[499]) return breakpoint(s, 2, 499, r0);
  case 2:
    s.tmp_0 = music_addNote__P1636_mk(s);
    s.tmp_0.arg0 = s.buf___20031;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 255;
    s.tmp_0.arg4 = 255;
    s.tmp_0.arg5 = 3;
    s.tmp_0.arg6 = s.arg1;
    s.tmp_1 = music_volume__P1621_mk(s);
    s.callLocIdx = 65; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg7 = r0;
    s.tmp_0.arg8 = s.arg1;
    s.callLocIdx = 66; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[500]) return breakpoint(s, 5, 500, r0);
  case 5:
    r0 = pxsim.music.queuePlayInstructions(s.arg0, s.buf___20031);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playNoteCore__P4773.info = {"start":1877,"length":240,"line":66,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playNoteCore","argumentNames":["when","frequency","ms"]}

function music_playNoteCore__P4773_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playNoteCore__P4773, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___20031: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function music_addNote__P1636(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[523]) return breakpoint(s, 3, 523, r0);
  case 3:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[524]) return breakpoint(s, 4, 524, r0);
  case 4:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, s.arg5);
    s.lastBrkId = 525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[525]) return breakpoint(s, 5, 525, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 1);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 2, s.tmp_1, 0);
    s.lastBrkId = 526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[526]) return breakpoint(s, 6, 526, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 2);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg6);
    s.lastBrkId = 527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[527]) return breakpoint(s, 7, 527, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 4);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg2);
    s.lastBrkId = 528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[528]) return breakpoint(s, 8, 528, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 6);
    s.tmp_1 = r0;
    r0 = (s.arg3 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.lastBrkId = 529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[529]) return breakpoint(s, 9, 529, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.arg4 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.lastBrkId = 530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[530]) return breakpoint(s, 10, 530, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 10);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg8);
    s.lastBrkId = 531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[531]) return breakpoint(s, 11, 531, r0);
  case 11:
    r0 = (s.arg1 + 12);
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[532]) return breakpoint(s, 12, 532, r0);
  case 12:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, 0);
    s.lastBrkId = 533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[533]) return breakpoint(s, 13, 533, r0);
  case 13:
    r0 = s.arg1;
    return leave(s, r0)
  default: oops()
} } }
music_addNote__P1636.info = {"start":10288,"length":911,"line":323,"column":4,"endLine":336,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"addNote","argumentNames":["sndInstr","sndInstrPtr","ms","beg","end","soundWave","hz","volume","endHz"]}

function music_addNote__P1636_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_addNote__P1636, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
} }





function music_setVolume__P1620(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[494]) return breakpoint(s, 3, 494, r0);
  case 3:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = 255;
    r0 = (s.arg0 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 62; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    globals.globalVolume___4768 = (r0);
    s.lastBrkId = 495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[495]) return breakpoint(s, 5, 495, r0);
  case 5:
    r0 = (globals.globalVolume___4768 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = music_enableAmp__P4771_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.callLocIdx = 63; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_setVolume__P1620.info = {"start":1533,"length":153,"line":51,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"setVolume","argumentNames":["volume"]}

function music_setVolume__P1620_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_setVolume__P1620, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function music_enableAmp__P4771(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[490]) return breakpoint(s, 1, 490, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_enableAmp__P4771.info = {"start":944,"length":64,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"enableAmp","argumentNames":["en"]}

function music_enableAmp__P4771_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_enableAmp__P4771, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_systemMenu_volumeUp__P5495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___19945 = undefined;
    s.remainder___19948 = undefined;
    s.newVolume___19951 = undefined;
    s.lastBrkId = 2499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2499]) return breakpoint(s, 1, 2499, r0);
  case 1:
    s.tmp_0 = music_volume__P1621_mk(s);
    s.callLocIdx = 1219; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.v___19945 = (r0);
    s.lastBrkId = 2500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2500]) return breakpoint(s, 3, 2500, r0);
  case 3:
    r0 = (s.v___19945 % 32);
    s.remainder___19948 = (r0);
    s.lastBrkId = 2501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2501]) return breakpoint(s, 4, 2501, r0);
  case 4:
    r0 = (s.v___19945 + 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.remainder___19948);
    s.newVolume___19951 = (r0);
    s.lastBrkId = 2502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2502]) return breakpoint(s, 5, 2502, r0);
  case 5:
    s.tmp_0 = scene_systemMenu_setVolume__P5494_mk(s);
    s.tmp_0.arg0 = s.newVolume___19951;
    s.callLocIdx = 1220; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeUp__P5495.info = {"start":8737,"length":171,"line":271,"column":4,"endLine":276,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeUp","argumentNames":[]}

function scene_systemMenu_volumeUp__P5495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeUp__P5495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___19945: undefined,
  remainder___19948: undefined,
  newVolume___19951: undefined,
} }





function game_consoleOverlay_isVisible__P3123(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2577]) return breakpoint(s, 1, 2577, r0);
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___5536);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_isVisible__P3123.info = {"start":422,"length":68,"line":11,"column":4,"endLine":13,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"isVisible","argumentNames":[]}

function game_consoleOverlay_isVisible__P3123_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_isVisible__P3123, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_closeMenu__P3101(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2519]) return breakpoint(s, 3, 2519, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.instance___5490);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2520]) return breakpoint(s, 4, 2520, r0);
  case 4:
    s.tmp_0 = scene_systemMenu_PauseMenu_dispose__P3100_mk(s);
    s.tmp_0.arg0 = globals.instance___5490;
    s.callLocIdx = 1235; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2521]) return breakpoint(s, 6, 2521, r0);
  case 6:
    globals.instance___5490 = (undefined);
    s.lastBrkId = 2522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2522]) return breakpoint(s, 7, 2522, r0);
  case 7:
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1236; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2523]) return breakpoint(s, 9, 2523, r0);
  case 9:
    s.tmp_0 = game_popScene__P3003_mk(s);
    s.callLocIdx = 1237; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_closeMenu__P3101.info = {"start":10129,"length":216,"line":320,"column":4,"endLine":327,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"closeMenu","argumentNames":[]}

function scene_systemMenu_closeMenu__P3101_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_closeMenu__P3101, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose__P3100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3094_VT)) failedCast(r0);
    s.lastBrkId = 2486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2486]) return breakpoint(s, 3, 2486, r0);
  case 3:
    r0 = s.arg0.fields["options"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2487]) return breakpoint(s, 4, 2487, r0);
  case 4:
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = scene_systemMenu_PauseMenu_dispose_inline__P19443;
    s.callLocIdx = 1212; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2488]) return breakpoint(s, 6, 2488, r0);
  case 6:
    r0 = (s.arg0).fields["options"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose__P3100.info = {"start":7732,"length":165,"line":243,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_dispose__P3100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose__P3100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose_inline__P19443(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = scene_systemMenu_MenuOption_dispose__P3093_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1211; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose_inline__P19443.info = {"start":7813,"length":16,"line":245,"column":37,"endLine":245,"endColumn":53,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["o"]}

function scene_systemMenu_PauseMenu_dispose_inline__P19443_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose_inline__P19443, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_dispose__P3093(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3086_VT)) failedCast(r0);
    s.lastBrkId = 2400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2400]) return breakpoint(s, 3, 2400, r0);
  case 3:
    r0 = s.arg0.fields["card"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2401]) return breakpoint(s, 4, 2401, r0);
  case 4:
    s.tmp_1 = Sprite_destroy__P2427_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1131; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2402]) return breakpoint(s, 6, 2402, r0);
  case 6:
    s.tmp_0 = Sprite_destroy__P2427_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 1132; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2403]) return breakpoint(s, 8, 2403, r0);
  case 8:
    r0 = (s.arg0).fields["card"] = (undefined);
    s.lastBrkId = 2404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2404]) return breakpoint(s, 9, 2404, r0);
  case 9:
    r0 = (s.arg0).fields["icon"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_dispose__P3093.info = {"start":1812,"length":216,"line":77,"column":8,"endLine":84,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_MenuOption_dispose__P3093_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_dispose__P3093, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_constructor__P3087(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3086_VT)) failedCast(r0);
    r0 = (s.arg0).fields["iconImage"] = (s.arg1);
    r0 = (s.arg0).fields["getText"] = (s.arg2);
    r0 = (s.arg0).fields["action"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_constructor__P3087.info = {"start":786,"length":108,"line":38,"column":8,"endLine":39,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","iconImage","getText","action"]}

function scene_systemMenu_MenuOption_constructor__P3087_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_constructor__P3087, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function helpers_screenBrightness__P1966(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[578]) return breakpoint(s, 1, 578, r0);
  case 1:
    r0 = globals.brightness___1951;
    return leave(s, r0)
  default: oops()
} } }
helpers_screenBrightness__P1966.info = {"start":9161,"length":98,"line":288,"column":4,"endLine":290,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"screenBrightness","argumentNames":["img"]}

function helpers_screenBrightness__P1966_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_screenBrightness__P1966, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_volume__P1621(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[496]) return breakpoint(s, 1, 496, r0);
  case 1:
    s.tmp_0 = music_initVolume__P4772_mk(s);
    s.callLocIdx = 64; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[497]) return breakpoint(s, 3, 497, r0);
  case 3:
    r0 = globals.globalVolume___4768;
    return leave(s, r0)
  default: oops()
} } }
music_volume__P1621.info = {"start":1781,"length":90,"line":61,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"volume","argumentNames":[]}

function music_volume__P1621_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_volume__P1621, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function music_initVolume__P4772(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[491]) return breakpoint(s, 3, 491, r0);
  case 3:
    r0 = (globals.globalVolume___4768 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[492]) return breakpoint(s, 4, 492, r0);
  case 4:
    globals.globalVolume___4768 = (0);
    s.lastBrkId = 493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[493]) return breakpoint(s, 5, 493, r0);
  case 5:
    s.tmp_0 = music_setVolume__P1620_mk(s);
    r0 = pxsim_pxtcore.getConfig(59, 128);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 61; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_initVolume__P4772.info = {"start":1014,"length":180,"line":33,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"initVolume","argumentNames":[]}

function music_initVolume__P4772_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_initVolume__P4772, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function helpers_arrayConcat__P113(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.out___19683 = undefined;
    s.value___19686 = undefined;
    s.unnamed12642___U2 = undefined;
    s.unnamed12643___U3 = undefined;
    s.value___19693 = undefined;
    s.unnamed12644___U5 = undefined;
    s.unnamed12645___U6 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 98;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[98]) return breakpoint(s, 5, 98, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.out___19683 = (r0);
    s.lastBrkId = 99;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[99]) return breakpoint(s, 6, 99, r0);
  case 6:
    s.value___19686 = (undefined);
    s.unnamed12642___U2 = (s.arg0);
    s.unnamed12643___U3 = (0);
    s.lastBrkId = 100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[100]) return breakpoint(s, 7, 100, r0);
  case 7:
  case 1:
    s.tmp_0 = r0 = s.unnamed12643___U3;
    r0 = pxsim_Array__length(s.unnamed12642___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12642___U2, s.unnamed12643___U3);
    s.value___19686 = (r0);
    s.lastBrkId = 101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[101]) return breakpoint(s, 8, 101, r0);
  case 8:
    s.lastBrkId = 102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[102]) return breakpoint(s, 9, 102, r0);
  case 9:
    r0 = pxsim_Array__push(s.out___19683, s.value___19686);
    r0 = (s.unnamed12643___U3 + 1);
    s.unnamed12643___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed12642___U2 = (undefined);
    s.lastBrkId = 103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[103]) return breakpoint(s, 10, 103, r0);
  case 10:
    s.value___19693 = (undefined);
    s.unnamed12644___U5 = (s.arg1);
    s.unnamed12645___U6 = (0);
    s.lastBrkId = 104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[104]) return breakpoint(s, 11, 104, r0);
  case 11:
  case 3:
    s.tmp_0 = r0 = s.unnamed12645___U6;
    r0 = pxsim_Array__length(s.unnamed12644___U5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12644___U5, s.unnamed12645___U6);
    s.value___19693 = (r0);
    s.lastBrkId = 105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[105]) return breakpoint(s, 12, 105, r0);
  case 12:
    s.lastBrkId = 106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[106]) return breakpoint(s, 13, 106, r0);
  case 13:
    r0 = pxsim_Array__push(s.out___19683, s.value___19693);
    r0 = (s.unnamed12645___U6 + 1);
    s.unnamed12645___U6 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed12644___U5 = (undefined);
    s.lastBrkId = 107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[107]) return breakpoint(s, 14, 107, r0);
  case 14:
    r0 = s.out___19683;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayConcat__P113.info = {"start":8639,"length":264,"line":288,"column":4,"endLine":297,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayConcat","argumentNames":["arr","otherArr"]}

function helpers_arrayConcat__P113_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayConcat__P113, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  out___19683: undefined,
  value___19686: undefined,
  unnamed12642___U2: undefined,
  unnamed12643___U3: undefined,
  value___19693: undefined,
  unnamed12644___U5: undefined,
  unnamed12645___U6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_show__P3096(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___18944 = undefined;
    s.i___18945 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3094_VT)) failedCast(r0);
    s.lastBrkId = 2420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2420]) return breakpoint(s, 3, 2420, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = if_generator_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "generator"), 1);
      s.callLocIdx = 1144; s.pc = 4; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["generator"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["generator"], 1); s.callLocIdx = 1144; s.pc = 4; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1144; s.pc = 4; return s.tmp_2;; }
     else { s.callLocIdx = 1144; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["options"] = (s.tmp_1);
    s.lastBrkId = 2421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2421]) return breakpoint(s, 5, 2421, r0);
  case 5:
    r0 = (s.arg0).fields["selection"] = (0);
    s.lastBrkId = 2422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2422]) return breakpoint(s, 6, 2422, r0);
  case 6:
    s.i___18945 = (0);
    s.lastBrkId = 2423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2423]) return breakpoint(s, 7, 2423, r0);
  case 7:
  case 1:
    s.lastBrkId = 2424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2424]) return breakpoint(s, 8, 2424, r0);
  case 8:
    s.tmp_1 = r0 = s.i___18945;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2425]) return breakpoint(s, 9, 2425, r0);
  case 9:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.i___18945);
    s.current___18944 = (r0);
    s.lastBrkId = 2426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2426]) return breakpoint(s, 10, 2426, r0);
  case 10:
    s.tmp_0 = scene_systemMenu_MenuOption_show__P3088_mk(s);
    s.tmp_0.arg0 = s.current___18944;
    s.callLocIdx = 1145; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2427]) return breakpoint(s, 12, 2427, r0);
  case 12:
    s.tmp_0 = scene_systemMenu_MenuOption_setTheme__P3091_mk(s);
    s.tmp_0.arg0 = s.current___18944;
    r0 = s.arg0.fields["theme"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1146; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2428]) return breakpoint(s, 14, 2428, r0);
  case 14:
    s.tmp_0 = scene_systemMenu_MenuOption_position__P3089_mk(s);
    s.tmp_0.arg0 = s.current___18944;
    s.tmp_2 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "padding");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["padding"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["padding"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1147; s.pc = 16; return s.tmp_2; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = r0 = s.i___18945;
    s.tmp_7 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardsPerRow");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1148; s.pc = 17; return s.tmp_7; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 % s.tmp_6);
    s.tmp_4 = r0;
    s.tmp_10 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "cardWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["cardWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["cardWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 1149; s.pc = 18; return s.tmp_10; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_9 = r0;
    s.tmp_12 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_12.arg0 = r0;
    if (!s.tmp_12.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "cardSpacing");
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_12.fn == null) { s.retval = s.tmp_12.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_12.fn.isGetter) { s.retval = bind(s.tmp_12); }
     else { s.callLocIdx = 1150; s.pc = 19; return s.tmp_12; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_9 + s.tmp_11);
    s.tmp_8 = r0;
    r0 = (s.tmp_4 * s.tmp_8);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.tmp_14 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_14.arg0 = r0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "cardsTop");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["cardsTop"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["cardsTop"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 1151; s.pc = 20; return s.tmp_14; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_13 = r0;
    s.tmp_17 = r0 = s.i___18945;
    s.tmp_19 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_19.arg0 = r0;
    if (!s.tmp_19.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_19.arg0, "cardsPerRow");
    } else {
      s.tmp_19.fn = s.tmp_19.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_19.fn == null) { s.retval = s.tmp_19.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_19.fn.isGetter) { s.retval = bind(s.tmp_19); }
     else { s.callLocIdx = 1152; s.pc = 21; return s.tmp_19; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_17, s.tmp_18);
    s.tmp_16 = r0;
    s.tmp_22 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_22.arg0 = r0;
    if (!s.tmp_22.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_22.arg0, "cardWidth");
    } else {
      s.tmp_22.fn = s.tmp_22.arg0.vtable.iface["cardWidth"];
      if (s.tmp_22.fn == null) { s.retval = s.tmp_22.arg0.fields["cardWidth"]; }
      else if (!s.tmp_22.fn.isGetter) { s.retval = bind(s.tmp_22); }
     else { s.callLocIdx = 1153; s.pc = 22; return s.tmp_22; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_21 = r0;
    s.tmp_24 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_24.arg0 = r0;
    if (!s.tmp_24.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_24.arg0, "cardSpacing");
    } else {
      s.tmp_24.fn = s.tmp_24.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_24.fn == null) { s.retval = s.tmp_24.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_24.fn.isGetter) { s.retval = bind(s.tmp_24); }
     else { s.callLocIdx = 1154; s.pc = 23; return s.tmp_24; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_23 = r0;
    r0 = (s.tmp_21 + s.tmp_23);
    s.tmp_20 = r0;
    r0 = (s.tmp_16 * s.tmp_20);
    s.tmp_15 = r0;
    r0 = (s.tmp_13 + s.tmp_15);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1155; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2429]) return breakpoint(s, 24, 2429, r0);
  case 24:
    r0 = (s.i___18945 + 1);
    s.i___18945 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2430]) return breakpoint(s, 25, 2430, r0);
  case 25:
    s.tmp_0 = controller__setUserEventsEnabled__P2206_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 1156; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2431]) return breakpoint(s, 27, 2431, r0);
  case 27:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P19008);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.A___2113;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1158; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.lastBrkId = 2435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2435]) return breakpoint(s, 29, 2435, r0);
  case 29:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P19028);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.A___2113;
    s.tmp_1.arg1 = 2052;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1160; s.pc = 30; return s.tmp_1;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 2440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2440]) return breakpoint(s, 31, 2440, r0);
  case 31:
    s.tmp_0 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_0.arg0 = globals.B___2114;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = scene_systemMenu_PauseMenu_show_inline__P19057;
    s.callLocIdx = 1162; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.lastBrkId = 2442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2442]) return breakpoint(s, 33, 2442, r0);
  case 33:
    s.tmp_0 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_0.arg0 = globals.menu___2119;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = scene_systemMenu_PauseMenu_show_inline__P19062;
    s.callLocIdx = 1164; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.lastBrkId = 2444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2444]) return breakpoint(s, 35, 2444, r0);
  case 35:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P19067);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.up___2116;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1168; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 2446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2446]) return breakpoint(s, 37, 2446, r0);
  case 37:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P19079);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.left___2115;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1171; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.lastBrkId = 2448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2448]) return breakpoint(s, 39, 2448, r0);
  case 39:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P19088);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.down___2118;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1175; s.pc = 40; return s.tmp_1;
  case 40:
    r0 = s.retval;
    s.lastBrkId = 2450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2450]) return breakpoint(s, 41, 2450, r0);
  case 41:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P19104);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2196_mk(s);
    s.tmp_1.arg0 = globals.right___2117;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1178; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.lastBrkId = 2452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2452]) return breakpoint(s, 43, 2452, r0);
  case 43:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P19116);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = game_onShade__P3016_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1181; s.pc = 44; return s.tmp_1;
  case 44:
    r0 = s.retval;
    s.lastBrkId = 2455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2455]) return breakpoint(s, 45, 2455, r0);
  case 45:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3098_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1182; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show__P3096.info = {"start":3296,"length":2241,"line":123,"column":8,"endLine":181,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_show__P3096_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show__P3096, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  current___18944: undefined,
  i___18945: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19008(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2432]) return breakpoint(s, 6, 2432, r0);
  case 6:
    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2433]) return breakpoint(s, 7, 2433, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2434]) return breakpoint(s, 8, 2434, r0);
  case 8:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P3092_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 1;
    s.callLocIdx = 1157; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19008.info = {"start":4025,"length":170,"line":140,"column":50,"endLine":143,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19008_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19008, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19028(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2436]) return breakpoint(s, 6, 2436, r0);
  case 6:
    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2437]) return breakpoint(s, 7, 2437, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2438]) return breakpoint(s, 8, 2438, r0);
  case 8:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P3092_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 0;
    s.callLocIdx = 1159; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 2439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2439]) return breakpoint(s, 10, 2439, r0);
  case 10:
    r0 = s.caps[0].fields["options"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    r0 = r0.fields["action"];
    s.tmp_0 = r0;
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19028.info = {"start":4247,"length":247,"line":145,"column":48,"endLine":149,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19028_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19028, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19057(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2441]) return breakpoint(s, 1, 2441, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_closeMenu__P3101_mk(s);
    s.callLocIdx = 1161; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19057.info = {"start":4548,"length":50,"line":151,"column":50,"endLine":153,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19057_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19057, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19062(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2443]) return breakpoint(s, 1, 2443, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_closeMenu__P3101_mk(s);
    s.callLocIdx = 1163; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19062.info = {"start":4655,"length":50,"line":155,"column":53,"endLine":157,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19062_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19062, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19067(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2445]) return breakpoint(s, 1, 2445, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3098_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    s.tmp_4 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "cardsPerRow");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1165; s.pc = 4; return s.tmp_4; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1166; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1167; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19067.info = {"start":4760,"length":110,"line":159,"column":51,"endLine":161,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19067_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19067, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19079(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2447]) return breakpoint(s, 1, 2447, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3098_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1169; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1170; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19079.info = {"start":4927,"length":89,"line":163,"column":53,"endLine":165,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19079_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19079, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19088(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2449]) return breakpoint(s, 1, 2449, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3098_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P131_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    s.tmp_6 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "cardsPerRow");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1172; s.pc = 4; return s.tmp_6; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1173; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1174; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19088.info = {"start":5073,"length":132,"line":167,"column":53,"endLine":169,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19088_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19088, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19104(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2451]) return breakpoint(s, 1, 2451, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3098_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P131_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1176; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1177; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19104.info = {"start":5263,"length":111,"line":171,"column":54,"endLine":173,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19104_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19104, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P19116(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2453]) return breakpoint(s, 1, 2453, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_onUpdate__P3097_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1179; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2454]) return breakpoint(s, 3, 2454, r0);
  case 3:
    s.tmp_0 = scene_systemMenu_PauseMenu_drawText__P3099_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1180; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P19116.info = {"start":5403,"length":87,"line":175,"column":25,"endLine":178,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P19116_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P19116, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_drawText__P3099(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3094_VT)) failedCast(r0);
    s.lastBrkId = 2479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2479]) return breakpoint(s, 4, 2479, r0);
  case 4:
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2480]) return breakpoint(s, 5, 2480, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2481]) return breakpoint(s, 6, 2481, r0);
  case 6:
    s.tmp_3 = helpers_imageFillRect__P1956_mk(s);
    s.tmp_3.arg0 = globals.screen___2032;
    s.tmp_3.arg1 = 0;
    s.tmp_3.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_3.arg3 = r0;
    s.tmp_5 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardsTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardsTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardsTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1193; s.pc = 8; return s.tmp_5; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 2);
    s.tmp_3.arg4 = r0;
    s.tmp_3.arg5 = 15;
    s.callLocIdx = 1194; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2482]) return breakpoint(s, 9, 2482, r0);
  case 9:
    s.tmp_0 = helpers_imagePrintCenter__P1989_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_1 = if_headerText_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "headerText");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["headerText"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["headerText"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1195; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 2;
    s.tmp_0.arg3 = 1;
    s.tmp_2 = if_headerFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "headerFont");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["headerFont"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["headerFont"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1196; s.pc = 12; return s.tmp_2; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1197; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2483]) return breakpoint(s, 13, 2483, r0);
  case 13:
    s.tmp_0 = helpers_imageFillRect__P1956_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_0.arg1 = 0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1198; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0.arg3 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_4 = r0;
    s.tmp_6 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoTop");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoTop"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoTop"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1199; s.pc = 16; return s.tmp_6; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 6);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 15;
    s.callLocIdx = 1200; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 2484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2484]) return breakpoint(s, 17, 2484, r0);
  case 17:
    s.tmp_0 = helpers_imageFillRect__P1956_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_1 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "padding");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["padding"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["padding"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1201; s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1202; s.pc = 20; return s.tmp_2; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_3 = r0;
    s.tmp_6 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "padding");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["padding"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["padding"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1203; s.pc = 21; return s.tmp_6; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 << 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_0.arg3 = r0;
    s.tmp_8 = if_charHeight_1_mk(s);
    s.tmp_9 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_9.arg0 = r0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "infoFont");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["infoFont"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["infoFont"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 1204; s.pc = 23; return s.tmp_9; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "charHeight");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["charHeight"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["charHeight"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 1205; s.pc = 22; return s.tmp_8; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 1);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1206; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2485]) return breakpoint(s, 24, 2485, r0);
  case 24:
    s.tmp_0 = helpers_imagePrintCenter__P1989_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_1 = if_getText_1_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "getText"), 1);
      s.callLocIdx = 1207; s.pc = 26; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["getText"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["getText"], 1); s.callLocIdx = 1207; s.pc = 26; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 1207; s.pc = 26; return s.tmp_1;; }
     else { s.callLocIdx = 1207; s.pc = 26; return s.tmp_1; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_5 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "infoTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["infoTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["infoTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1208; s.pc = 27; return s.tmp_5; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 15;
    s.tmp_6 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoFont");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoFont"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoFont"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1209; s.pc = 28; return s.tmp_6; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1210; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_drawText__P3099.info = {"start":6927,"length":795,"line":224,"column":8,"endLine":241,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"drawText","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_drawText__P3099_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_drawText__P3099, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function helpers_imagePrintCenter__P1989(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___19203 = undefined;
    s.x___19209 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[594]) return breakpoint(s, 3, 594, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[595]) return breakpoint(s, 4, 595, r0);
  case 4:
    s.tmp_2 = image_getFontForText__P1977_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 97; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.arg4 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[596]) return breakpoint(s, 6, 596, r0);
  case 6:
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_0 = r0;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg4;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 98; s.pc = 7; return s.tmp_2; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.w___19203 = (r0);
    s.lastBrkId = 597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[597]) return breakpoint(s, 8, 597, r0);
  case 8:
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.w___19203);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    s.x___19209 = (r0);
    s.lastBrkId = 598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[598]) return breakpoint(s, 9, 598, r0);
  case 9:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.x___19209;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.tmp_0.arg5 = s.arg4;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 99; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrintCenter__P1989.info = {"start":15025,"length":295,"line":206,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"imagePrintCenter","argumentNames":["img","text","y","color","font"]}

function helpers_imagePrintCenter__P1989_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrintCenter__P1989, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  w___19203: undefined,
  x___19209: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function scene_systemMenu_PauseMenu_setSelection__P3098(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3094_VT)) failedCast(r0);
    s.lastBrkId = 2471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2471]) return breakpoint(s, 10, 2471, r0);
  case 10:
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2472]) return breakpoint(s, 11, 2472, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2473]) return breakpoint(s, 12, 2473, r0);
  case 12:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2474]) return breakpoint(s, 13, 2474, r0);
  case 13:
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P3092_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 2;
    s.callLocIdx = 1190; s.pc = 14; return s.tmp_6;
  case 14:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 2475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2475]) return breakpoint(s, 15, 2475, r0);
  case 15:
    r0 = (s.arg0).fields["selection"] = (s.arg1);
    s.lastBrkId = 2476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2476]) return breakpoint(s, 16, 2476, r0);
  case 16:
    r0 = s.arg0.fields["options"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2477]) return breakpoint(s, 17, 2477, r0);
  case 17:
    s.tmp_4 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_4.arg0 = globals.A___2113;
    if (!checkSubtype(s.tmp_4.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.isPressed;
    s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P3092_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 1191; s.pc = 19; return s.tmp_6;
  case 19:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 2478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2478]) return breakpoint(s, 20, 2478, r0);
  case 20:
    s.tmp_0 = scene_systemMenu_PauseMenu_updateScrollTarget__P5493_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1192; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_setSelection__P3098.info = {"start":6436,"length":481,"line":208,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setSelection","argumentNames":["this","selection"]}

function scene_systemMenu_PauseMenu_setSelection__P3098_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_setSelection__P3098, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_updateScrollTarget__P5493(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.row___19389 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3094_VT)) failedCast(r0);
    s.lastBrkId = 2489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2489]) return breakpoint(s, 8, 2489, r0);
  case 8:
    r0 = s.arg0.fields["selection"];
    s.tmp_0 = r0;
    s.tmp_2 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "cardsPerRow");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1213; s.pc = 9; return s.tmp_2; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.row___19389 = (r0);
    s.lastBrkId = 2490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2490]) return breakpoint(s, 10, 2490, r0);
  case 10:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_1 = r0;
    r0 = (s.row___19389 === s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.row___19389 - 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 === s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2491]) return breakpoint(s, 11, 2491, r0);
  case 11:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2492]) return breakpoint(s, 12, 2492, r0);
  case 12:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_6 = r0;
    r0 = (s.row___19389 > s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2493]) return breakpoint(s, 13, 2493, r0);
  case 13:
    s.tmp_7 = r0 = s.arg0;
    r0 = s.tmp_7.fields["scrollRow"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["scrollRow"] = (s.tmp_8);
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2494]) return breakpoint(s, 14, 2494, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["scrollRow"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollRow"] = (s.tmp_1);
  case 6:
    s.lastBrkId = 2495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2495]) return breakpoint(s, 15, 2495, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_2 = r0;
    s.tmp_5 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardSpacing");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1214; s.pc = 16; return s.tmp_5; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_7 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardWidth");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardWidth"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardWidth"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1215; s.pc = 17; return s.tmp_7; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollTarget"] = (s.tmp_1);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_updateScrollTarget__P5493.info = {"start":7907,"length":458,"line":250,"column":8,"endLine":260,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateScrollTarget","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_updateScrollTarget__P5493_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_updateScrollTarget__P5493, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  row___19389: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_onUpdate__P3097(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.t___19225 = undefined;
    s.i___19229 = undefined;
    s.dt___19258 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3094_VT)) failedCast(r0);
    s.lastBrkId = 2456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2456]) return breakpoint(s, 10, 2456, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 250);
    s.t___19225 = (r0);
    s.lastBrkId = 2457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2457]) return breakpoint(s, 11, 2457, r0);
  case 11:
    s.i___19229 = (0);
    s.lastBrkId = 2458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2458]) return breakpoint(s, 12, 2458, r0);
  case 12:
  case 1:
    s.lastBrkId = 2459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2459]) return breakpoint(s, 13, 2459, r0);
  case 13:
    s.tmp_1 = r0 = s.i___19229;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2460]) return breakpoint(s, 14, 2460, r0);
  case 14:
    s.tmp_4 = scene_systemMenu_MenuOption_setOffset__P3090_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___19229);
    s.tmp_4.arg0 = r0;
    s.tmp_8 = r0 = s.t___19225;
    s.tmp_11 = r0 = s.i___19229;
    s.tmp_13 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_13.arg0 = r0;
    if (!s.tmp_13.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_13.arg0, "cardsPerRow");
    } else {
      s.tmp_13.fn = s.tmp_13.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_13.fn == null) { s.retval = s.tmp_13.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_13.fn.isGetter) { s.retval = bind(s.tmp_13); }
     else { s.callLocIdx = 1183; s.pc = 16; return s.tmp_13; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = (s.tmp_11 % s.tmp_12);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 * 1.5707963267948966);
    s.tmp_9 = r0;
    r0 = (s.tmp_8 - s.tmp_9);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.sin(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (2 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1184; s.pc = 15; return s.tmp_4;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2461]) return breakpoint(s, 17, 2461, r0);
  case 17:
    r0 = (s.i___19229 + 1);
    s.i___19229 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2462]) return breakpoint(s, 18, 2462, r0);
  case 18:
    s.tmp_0 = control_EventContext_deltaTime__P400_mk(s);
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1185; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    r0 = r0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1186; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.dt___19258 = (r0);
    s.lastBrkId = 2463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2463]) return breakpoint(s, 21, 2463, r0);
  case 21:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2464]) return breakpoint(s, 22, 2464, r0);
  case 22:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___19258 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2465]) return breakpoint(s, 23, 2465, r0);
  case 23:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2466]) return breakpoint(s, 24, 2466, r0);
  case 24:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___19258 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 2467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2467]) return breakpoint(s, 25, 2467, r0);
  case 25:
    { step = 9; continue; }
  case 5:
  case 6:
    s.lastBrkId = 2468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2468]) return breakpoint(s, 26, 2468, r0);
  case 26:
    s.tmp_2 = Math_abs__P128_mk(s);
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1187; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2469]) return breakpoint(s, 28, 2469, r0);
  case 28:
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_5 = r0;
    r0 = (s.arg0).fields["scrollOffset"] = (s.tmp_5);
  case 7:
  case 8:
    s.lastBrkId = 2470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2470]) return breakpoint(s, 29, 2470, r0);
  case 29:
    s.tmp_0 = scene_Camera_offsetY__P2788_mk(s);
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1188; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    r0 = r0.fields["camera"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1189; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_onUpdate__P3097.info = {"start":5547,"length":879,"line":183,"column":8,"endLine":206,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"onUpdate","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_onUpdate__P3097_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_onUpdate__P3097, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  t___19225: undefined,
  i___19229: undefined,
  dt___19258: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setOffset__P3090(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3086_VT)) failedCast(r0);
    s.lastBrkId = 2392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2392]) return breakpoint(s, 1, 2392, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["top"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1126; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2393]) return breakpoint(s, 3, 2393, r0);
  case 3:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2355_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1127; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1128; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setOffset__P3090.info = {"start":1411,"length":123,"line":61,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setOffset","argumentNames":["this","offset"]}

function scene_systemMenu_MenuOption_setOffset__P3090_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setOffset__P3090, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_abs__P128(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[202]) return breakpoint(s, 3, 202, r0);
  case 3:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (0 - s.arg0);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_abs__P128.info = {"start":16120,"length":77,"line":539,"column":4,"endLine":541,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"abs","argumentNames":["x"]}

function Math_abs__P128_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_abs__P128, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setState__P3092(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3086_VT)) failedCast(r0);
    s.lastBrkId = 2396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2396]) return breakpoint(s, 4, 2396, r0);
  case 4:
    r0 = s.arg0.fields["state"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2397]) return breakpoint(s, 5, 2397, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2398]) return breakpoint(s, 6, 2398, r0);
  case 6:
    r0 = (s.arg0).fields["state"] = (s.arg1);
    s.lastBrkId = 2399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2399]) return breakpoint(s, 7, 2399, r0);
  case 7:
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P5492_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1130; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setState__P3092.info = {"start":1655,"length":147,"line":71,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setState","argumentNames":["this","state"]}

function scene_systemMenu_MenuOption_setState__P3092_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setState__P3092, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_updateCard__P5492(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3086_VT)) failedCast(r0);
    s.lastBrkId = 2405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2405]) return breakpoint(s, 8, 2405, r0);
  case 8:
    r0 = s.arg0.fields["theme"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2406]) return breakpoint(s, 9, 2406, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2407]) return breakpoint(s, 10, 2407, r0);
  case 10:
    r0 = s.arg0.fields["state"];
    s.tmp_3 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_3);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_3);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2408]) return breakpoint(s, 11, 2408, r0);
  case 11:
    s.tmp_4 = Sprite_setImage__P2390_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_4.arg0 = r0;
    s.tmp_5 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "basicCard");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["basicCard"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["basicCard"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1133; s.pc = 13; return s.tmp_5; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1134; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2409]) return breakpoint(s, 14, 2409, r0);
  case 14:
    { step = 6; continue; }
  case 4:
    s.lastBrkId = 2410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2410]) return breakpoint(s, 15, 2410, r0);
  case 15:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_selectedCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "selectedCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["selectedCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["selectedCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1135; s.pc = 17; return s.tmp_1; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1136; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 2411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2411]) return breakpoint(s, 18, 2411, r0);
  case 18:
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2412]) return breakpoint(s, 19, 2412, r0);
  case 19:
    s.tmp_0 = Sprite_setImage__P2390_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_activeCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "activeCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["activeCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["activeCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1137; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1138; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 2413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2413]) return breakpoint(s, 22, 2413, r0);
  case 22:
  case 6:
    s.lastBrkId = 2414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2414]) return breakpoint(s, 23, 2414, r0);
  case 23:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P2353_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1139; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1140; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2415]) return breakpoint(s, 26, 2415, r0);
  case 26:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2355_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1141; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1142; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_updateCard__P5492.info = {"start":2038,"length":497,"line":86,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateCard","argumentNames":["this"]}

function scene_systemMenu_MenuOption_updateCard__P5492_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_updateCard__P5492, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setTheme__P3091(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3086_VT)) failedCast(r0);
    s.lastBrkId = 2394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2394]) return breakpoint(s, 1, 2394, r0);
  case 1:
    r0 = (s.arg0).fields["theme"] = (s.arg1);
    s.lastBrkId = 2395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2395]) return breakpoint(s, 2, 2395, r0);
  case 2:
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P5492_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1129; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setTheme__P3091.info = {"start":1544,"length":101,"line":66,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setTheme","argumentNames":["this","theme"]}

function scene_systemMenu_MenuOption_setTheme__P3091_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setTheme__P3091, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_position__P3089(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3086_VT)) failedCast(r0);
    s.lastBrkId = 2387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2387]) return breakpoint(s, 1, 2387, r0);
  case 1:
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.lastBrkId = 2388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2388]) return breakpoint(s, 2, 2388, r0);
  case 2:
    s.tmp_0 = Sprite_left__P2399_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1120; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 2389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2389]) return breakpoint(s, 4, 2389, r0);
  case 4:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 1121; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2390]) return breakpoint(s, 6, 2390, r0);
  case 6:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P2353_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1122; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1123; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2391]) return breakpoint(s, 9, 2391, r0);
  case 9:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2355_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1124; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1125; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_position__P3089.info = {"start":1178,"length":223,"line":51,"column":8,"endLine":59,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"position","argumentNames":["this","left","top"]}

function scene_systemMenu_MenuOption_position__P3089_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_position__P3089, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_MenuOption_show__P3088(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3086_VT)) failedCast(r0);
    s.lastBrkId = 2382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2382]) return breakpoint(s, 3, 2382, r0);
  case 3:
    r0 = s.arg0.fields["theme"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "basicCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["basicCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["basicCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1115; s.pc = 4; return s.tmp_1; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = globals.CARD_NORMAL___3110;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = sprites_create__P2275_mk(s);
    s.tmp_5.arg0 = s.tmp_2;
    s.tmp_5.arg1 = undefined;
    s.callLocIdx = 1116; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["card"] = (s.tmp_4);
    s.lastBrkId = 2383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2383]) return breakpoint(s, 6, 2383, r0);
  case 6:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1117; s.pc = 7; return s.tmp_0; }
    }
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2384]) return breakpoint(s, 8, 2384, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2275_mk(s);
    r0 = s.arg0.fields["iconImage"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 1118; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["icon"] = (s.tmp_1);
    s.lastBrkId = 2385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2385]) return breakpoint(s, 10, 2385, r0);
  case 10:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 2;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1119; s.pc = 11; return s.tmp_0; }
    }
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2386]) return breakpoint(s, 12, 2386, r0);
  case 12:
    r0 = (s.arg0).fields["state"] = (2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_show__P3088.info = {"start":904,"length":264,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_MenuOption_show__P3088_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_show__P3088, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function game_onShade__P3016(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2344]) return breakpoint(s, 4, 2344, r0);
  case 4:
    s.tmp_0 = game_init__P5245_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1102; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2345]) return breakpoint(s, 6, 2345, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2346]) return breakpoint(s, 7, 2346, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2347]) return breakpoint(s, 8, 2347, r0);
  case 8:
    s.tmp_2 = scene_createRenderable__P2804_mk(s);
    s.tmp_2.arg0 = 80;
    s.tmp_2.arg1 = s.arg0;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1103; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onShade__P3016.info = {"start":15517,"length":145,"line":464,"column":4,"endLine":468,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"onShade","argumentNames":["a"]}

function game_onShade__P3016_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onShade__P3016, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_createRenderable__P2804(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.renderable___19341 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1909]) return breakpoint(s, 3, 1909, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Renderable__C2799_VT);
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = renderable_inline__P19347;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = scene_Renderable_constructor__P2800_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.arg1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = s.arg0;
    s.callLocIdx = 922; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.renderable___19341 = (s.tmp_0);
    s.lastBrkId = 1910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1910]) return breakpoint(s, 5, 1910, r0);
  case 5:
    r0 = s.renderable___19341;
    return leave(s, r0)
  default: oops()
} } }
scene_createRenderable__P2804.info = {"start":608,"length":339,"line":24,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/game/renderable.ts","functionName":"createRenderable","argumentNames":["z","handler","shouldBeVisible"]}

function scene_createRenderable__P2804_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_createRenderable__P2804, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  renderable___19341: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function renderable_inline__P19347(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
renderable_inline__P19347.info = {"start":875,"length":10,"line":31,"column":32,"endLine":31,"endColumn":42,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":[]}

function renderable_inline__P19347_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: renderable_inline__P19347, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_Renderable_constructor__P2800(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2799_VT)) failedCast(r0);
    r0 = (s.arg0).fields["handler"] = (s.arg1);
    r0 = (s.arg0).fields["shouldBeVisible"] = (s.arg2);
    s.lastBrkId = 1906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1906]) return breakpoint(s, 1, 1906, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_constructor__P2096_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 919; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable_constructor__P2800.info = {"start":83,"length":212,"line":2,"column":8,"endLine":8,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":["this","handler","shouldBeVisible","z"]}

function scene_Renderable_constructor__P2800_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable_constructor__P2800, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_systemMenu_PauseMenu_constructor__P3095(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3094_VT)) failedCast(r0);
    r0 = (s.arg0).fields["generator"] = (s.arg1);
    s.lastBrkId = 2416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2416]) return breakpoint(s, 3, 2416, r0);
  case 3:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = scene_systemMenu_buildMenuTheme__P3103_mk(s);
    r0 = pxsim_ImageMethods.width(globals.CARD_NORMAL___3110);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = undefined;
    s.tmp_1.arg3 = undefined;
    s.callLocIdx = 1143; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["theme"] = (s.tmp_2);
    s.lastBrkId = 2417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2417]) return breakpoint(s, 5, 2417, r0);
  case 5:
    r0 = (s.arg0).fields["scrollRow"] = (0);
    s.lastBrkId = 2418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2418]) return breakpoint(s, 6, 2418, r0);
  case 6:
    r0 = (s.arg0).fields["scrollOffset"] = (0);
    s.lastBrkId = 2419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2419]) return breakpoint(s, 7, 2419, r0);
  case 7:
    r0 = (s.arg0).fields["scrollTarget"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_constructor__P3095.info = {"start":3029,"length":257,"line":116,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","generator","theme"]}

function scene_systemMenu_PauseMenu_constructor__P3095_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_constructor__P3095, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_buildMenuTheme__P3103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cardsPerRow___20181 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2538]) return breakpoint(s, 5, 2538, r0);
  case 5:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_0 = r0;
    r0 = (s.arg0 + s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.cardsPerRow___20181 = (r0);
    s.lastBrkId = 2539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2539]) return breakpoint(s, 6, 2539, r0);
  case 6:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.font8___1975;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg2 = (s.tmp_1);
    s.lastBrkId = 2540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2540]) return breakpoint(s, 7, 2540, r0);
  case 7:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = image_doubledFont__P1978_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 1253; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    s.lastBrkId = 2541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2541]) return breakpoint(s, 9, 2541, r0);
  case 9:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardSpacing", s.arg1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardWidth", s.arg0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsPerRow", s.cardsPerRow___20181);
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_3 = r0;
    r0 = (s.cardsPerRow___20181 * s.arg0);
    s.tmp_5 = r0;
    r0 = (s.cardsPerRow___20181 - 1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 * s.arg1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "padding", s.tmp_1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoFont", s.arg2);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerFont", s.arg3);
    s.tmp_11 = if_charHeight_1_mk(s);
    s.tmp_11.arg0 = s.arg3;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "charHeight");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["charHeight"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["charHeight"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 1254; s.pc = 10; return s.tmp_11; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + 2);
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + s.arg1);
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsTop", s.tmp_8);
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_14 = r0;
    s.tmp_16 = if_charHeight_1_mk(s);
    s.tmp_16.arg0 = s.arg2;
    if (!s.tmp_16.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_16.arg0, "charHeight");
    } else {
      s.tmp_16.fn = s.tmp_16.arg0.vtable.iface["charHeight"];
      if (s.tmp_16.fn == null) { s.retval = s.tmp_16.arg0.fields["charHeight"]; }
      else if (!s.tmp_16.fn.isGetter) { s.retval = bind(s.tmp_16); }
     else { s.callLocIdx = 1255; s.pc = 11; return s.tmp_16; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_14 - s.tmp_15);
    s.tmp_13 = r0;
    r0 = (s.tmp_13 - 2);
    s.tmp_12 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoTop", s.tmp_12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerText", "PAUSED");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "selectedCard", globals.CARD_SELECTED___3111);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "activeCard", globals.CARD_ACTIVE___3112);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "basicCard", globals.CARD_NORMAL___3110);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildMenuTheme__P3103.info = {"start":11654,"length":906,"line":356,"column":4,"endLine":375,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildMenuTheme","argumentNames":["cardWidth","cardSpacing","infoFont","headerFont"]}

function scene_systemMenu_buildMenuTheme__P3103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildMenuTheme__P3103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  cardsPerRow___20181: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function image_doubledFont__P1978(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[588]) return breakpoint(s, 1, 588, r0);
  case 1:
    s.tmp_0 = image_scaledFont__P1979_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 91; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
image_doubledFont__P1978.info = {"start":12008,"length":82,"line":146,"column":4,"endLine":148,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"doubledFont","argumentNames":["f"]}

function image_doubledFont__P1978_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_doubledFont__P1978, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_initScreen__P5505(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.brightness___20236 = undefined;
    s.lastBrkId = 2554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2554]) return breakpoint(s, 3, 2554, r0);
  case 3:
    s.tmp_0 = settings_readNumber__P2068_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.callLocIdx = 1262; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.brightness___20236 = (r0);
    s.lastBrkId = 2555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2555]) return breakpoint(s, 5, 2555, r0);
  case 5:
    r0 = (s.brightness___20236 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2556]) return breakpoint(s, 6, 2556, r0);
  case 6:
    s.tmp_1 = helpers_setScreenBrightness__P1965_mk(s);
    s.tmp_1.arg0 = globals.screen___2032;
    s.tmp_1.arg1 = s.brightness___20236;
    s.callLocIdx = 1263; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initScreen__P5505.info = {"start":13388,"length":175,"line":405,"column":4,"endLine":409,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initScreen","argumentNames":[]}

function scene_systemMenu_initScreen__P5505_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initScreen__P5505, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  brightness___20236: undefined,
} }





function settings_readNumber__P2068(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___20247 = undefined;
    s.nums___20254 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[725]) return breakpoint(s, 8, 725, r0);
  case 8:
    s.tmp_0 = settings_readBuffer__P2065_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 130; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.buf___20247 = (r0);
    s.lastBrkId = 726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[726]) return breakpoint(s, 10, 726, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.buf___20247);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[727]) return breakpoint(s, 11, 727, r0);
  case 11:
    r0 = undefined;
    { step = 7; continue; }
    { step = 6; continue; }
  case 1:
    s.lastBrkId = 728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[728]) return breakpoint(s, 12, 728, r0);
  case 12:
    s.tmp_2 = msgpack_unpackNumberArray__P183_mk(s);
    s.tmp_2.arg0 = s.buf___20247;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 131; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.nums___20254 = (r0);
    s.lastBrkId = 729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[729]) return breakpoint(s, 14, 729, r0);
  case 14:
    s.tmp_0 = r0 = s.nums___20254;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__length(s.nums___20254);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 1);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[730]) return breakpoint(s, 15, 730, r0);
  case 15:
    r0 = pxsim_Array__getAt(s.nums___20254, 0);
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[731]) return breakpoint(s, 16, 731, r0);
  case 16:
    r0 = undefined;
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_readNumber__P2068.info = {"start":3283,"length":313,"line":131,"column":4,"endLine":141,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readNumber","argumentNames":["key"]}

function settings_readNumber__P2068_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readNumber__P2068, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___20247: undefined,
  nums___20254: undefined,
  arg0: undefined,
} }





function settings_readBuffer__P2065(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[720]) return breakpoint(s, 1, 720, r0);
  case 1:
    r0 = pxsim.settings._get(s.arg0);
    return leave(s, r0)
  default: oops()
} } }
settings_readBuffer__P2065.info = {"start":2694,"length":72,"line":103,"column":4,"endLine":105,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readBuffer","argumentNames":["key"]}

function settings_readBuffer__P2065_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readBuffer__P2065, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function msgpack_unpackNumberArray__P183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___20267 = undefined;
    s.fmt___20274 = undefined;
    s.v___20283 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[270]) return breakpoint(s, 12, 270, r0);
  case 12:
    r0 = pxsim_Array__mk();
    s.res___20267 = (r0);
    s.lastBrkId = 271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[271]) return breakpoint(s, 13, 271, r0);
  case 13:
  case 1:
    s.lastBrkId = 272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[272]) return breakpoint(s, 14, 272, r0);
  case 14:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[273]) return breakpoint(s, 15, 273, r0);
  case 15:
    s.tmp_3 = r0 = s.arg1;
    r0 = (s.tmp_3 + 1);
    s.arg1 = (r0);
    s.tmp_4 = msgpack_tagFormat__P4673_mk(s);
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.tmp_3);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 22; s.pc = 16; return s.tmp_4;
  case 16:
    r0 = s.retval;
    s.fmt___20274 = (r0);
    s.lastBrkId = 274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[274]) return breakpoint(s, 17, 274, r0);
  case 17:
    r0 = (s.fmt___20274 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[275]) return breakpoint(s, 18, 275, r0);
  case 18:
    s.tmp_1 = r0 = s.arg0;
    r0 = (s.arg1 - 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 6, s.tmp_2);
    s.v___20283 = (r0);
    s.lastBrkId = 276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[276]) return breakpoint(s, 19, 276, r0);
  case 19:
    r0 = (-31 <= s.v___20283);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.v___20283 <= 127);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[277]) return breakpoint(s, 20, 277, r0);
  case 20:
    r0 = pxsim_Array__push(s.res___20267, s.v___20283);
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[278]) return breakpoint(s, 21, 278, r0);
  case 21:
    r0 = null;
    { step = 11; continue; }
  case 5:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[279]) return breakpoint(s, 22, 279, r0);
  case 22:
    s.tmp_0 = r0 = s.res___20267;
    r0 = pxsim.BufferMethods.getNumber(s.arg0, s.fmt___20274, s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[280]) return breakpoint(s, 23, 280, r0);
  case 23:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = pins_sizeOf__P175_mk(s);
    s.tmp_2.arg0 = s.fmt___20274;
    s.callLocIdx = 23; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg1 = (r0);
  case 7:
    s.lastBrkId = 281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[281]) return breakpoint(s, 25, 281, r0);
  case 25:
  case 8:
    s.lastBrkId = 282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[282]) return breakpoint(s, 26, 282, r0);
  case 26:
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[283]) return breakpoint(s, 27, 283, r0);
  case 27:
    r0 = (s.arg1 + 1);
    s.arg1 = (r0);
    { step = 8; continue; }
  case 9:
    { step = 1; continue; }
  case 10:
    s.lastBrkId = 284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[284]) return breakpoint(s, 28, 284, r0);
  case 28:
    r0 = s.res___20267;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
msgpack_unpackNumberArray__P183.info = {"start":2650,"length":669,"line":91,"column":4,"endLine":111,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackNumberArray","argumentNames":["buf","offset"]}

function msgpack_unpackNumberArray__P183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_unpackNumberArray__P183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  res___20267: undefined,
  fmt___20274: undefined,
  v___20283: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_initVolume__P5504(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.vol___20328 = undefined;
    s.lastBrkId = 2551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2551]) return breakpoint(s, 3, 2551, r0);
  case 3:
    s.tmp_0 = settings_readNumber__P2068_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.callLocIdx = 1260; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.vol___20328 = (r0);
    s.lastBrkId = 2552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2552]) return breakpoint(s, 5, 2552, r0);
  case 5:
    r0 = (s.vol___20328 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2553]) return breakpoint(s, 6, 2553, r0);
  case 6:
    s.tmp_1 = music_setVolume__P1620_mk(s);
    s.tmp_1.arg0 = s.vol___20328;
    s.callLocIdx = 1261; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initVolume__P5504.info = {"start":13238,"length":144,"line":399,"column":4,"endLine":403,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initVolume","argumentNames":[]}

function scene_systemMenu_initVolume__P5504_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initVolume__P5504, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  vol___20328: undefined,
} }





function game_GameOverConfig_constructor__P2987(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverConfig__C2972_VT)) failedCast(r0);
    s.lastBrkId = 2297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2297]) return breakpoint(s, 1, 2297, r0);
  case 1:
    s.tmp_0 = game_GameOverConfig_init__P2988_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1081; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverConfig_constructor__P2987.info = {"start":893,"length":50,"line":35,"column":8,"endLine":37,"endColumn":9,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["this"]}

function game_GameOverConfig_constructor__P2987_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverConfig_constructor__P2987, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_GameOverConfig_init__P2988(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverConfig__C2972_VT)) failedCast(r0);
    s.lastBrkId = 2298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2298]) return breakpoint(s, 1, 2298, r0);
  case 1:
    r0 = (s.arg0).fields["scoringType"] = (0);
    s.lastBrkId = 2299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2299]) return breakpoint(s, 2, 2299, r0);
  case 2:
    r0 = (s.arg0).fields["winEffect"] = (globals.confetti___3273);
    s.lastBrkId = 2300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2300]) return breakpoint(s, 3, 2300, r0);
  case 3:
    r0 = (s.arg0).fields["loseEffect"] = (globals.melt___3295);
    s.lastBrkId = 2301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2301]) return breakpoint(s, 4, 2301, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = music_melodyPlayable__P1923_mk(s);
    s.tmp_2.arg0 = globals.powerUp___1650;
    s.callLocIdx = 1082; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["winSound"] = (s.tmp_1);
    s.lastBrkId = 2302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2302]) return breakpoint(s, 6, 2302, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = music_melodyPlayable__P1923_mk(s);
    s.tmp_2.arg0 = globals.wawawawaa___1647;
    s.callLocIdx = 1083; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["loseSound"] = (s.tmp_1);
    s.lastBrkId = 2303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2303]) return breakpoint(s, 8, 2303, r0);
  case 8:
    r0 = (s.arg0).fields["winSoundLooping"] = (false);
    s.lastBrkId = 2304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2304]) return breakpoint(s, 9, 2304, r0);
  case 9:
    r0 = (s.arg0).fields["loseSoundLooping"] = (false);
    s.lastBrkId = 2305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2305]) return breakpoint(s, 10, 2305, r0);
  case 10:
    r0 = (s.arg0).fields["winMessage"] = ("YOU WIN!");
    s.lastBrkId = 2306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2306]) return breakpoint(s, 11, 2306, r0);
  case 11:
    r0 = (s.arg0).fields["winMessageMultiplayer"] = ("${WINNER} WINS!");
    s.lastBrkId = 2307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2307]) return breakpoint(s, 12, 2307, r0);
  case 12:
    r0 = (s.arg0).fields["loseMessage"] = ("GAME OVER");
    s.lastBrkId = 2308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2308]) return breakpoint(s, 13, 2308, r0);
  case 13:
    r0 = (s.arg0).fields["effectSetByUser"] = (false);
    s.lastBrkId = 2309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2309]) return breakpoint(s, 14, 2309, r0);
  case 14:
    r0 = (s.arg0).fields["soundSetByUser"] = (false);
    s.lastBrkId = 2310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2310]) return breakpoint(s, 15, 2310, r0);
  case 15:
    r0 = (s.arg0).fields["messageSetByUser"] = (false);
    s.lastBrkId = 2311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2311]) return breakpoint(s, 16, 2311, r0);
  case 16:
    r0 = (s.arg0).fields["scoringTypeSetByUser"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverConfig_init__P2988.info = {"start":953,"length":701,"line":39,"column":8,"endLine":54,"endColumn":9,"fileName":"pxt_modules/game/game.ts","functionName":"init","argumentNames":["this"]}

function game_GameOverConfig_init__P2988_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverConfig_init__P2988, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function melt_inline__P20391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rounds___20394 = undefined;
    s.j___20402 = undefined;
    s.x___20407 = undefined;
    s.y___20413 = undefined;
    s.c___20419 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.rounds___20394 = (r0);
    s.j___20402 = (0);
  case 1:
    r0 = (s.j___20402 < s.rounds___20394);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P3062_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 64; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___20407 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P3062_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 65; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___20413 = (r0);
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.x___20407, s.y___20413);
    s.c___20419 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___20407;
    r0 = (s.y___20413 + 1);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___20419);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___20407;
    r0 = (s.y___20413 + 2);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___20419);
    r0 = (s.j___20402 + 1);
    s.j___20402 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
melt_inline__P20391.info = {"start":2652,"length":386,"line":72,"column":45,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function melt_inline__P20391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: melt_inline__P20391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  rounds___20394: undefined,
  j___20402: undefined,
  x___20407: undefined,
  y___20413: undefined,
  c___20419: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function confetti_inline__P20445(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.factory___20448 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(particles_ConfettiFactory__C3217_VT);
    s.tmp_0 = r0;
    s.tmp_2 = if_width_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "width");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["width"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["width"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 52; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_width_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "width");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["width"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["width"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 53; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = 16;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = particles_ConfettiFactory_constructor__P3218_mk(s);
    s.tmp_5.arg0 = s.tmp_0;
    s.tmp_5.arg1 = s.tmp_4;
    s.tmp_5.arg2 = 16;
    s.callLocIdx = 54; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.factory___20448 = (s.tmp_0);
    s.tmp_0 = particles_SprayFactory_setSpeed__P3194_mk(s);
    s.tmp_0.arg0 = s.factory___20448;
    s.tmp_0.arg1 = 30;
    s.callLocIdx = 55; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(particles_ParticleSource__C3150_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_ParticleSource_constructor__P3155_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.factory___20448;
    s.callLocIdx = 56; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
confetti_inline__P20445.info = {"start":7534,"length":284,"line":191,"column":59,"endLine":195,"endColumn":5,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["anchor","particlesPerSecond"]}

function confetti_inline__P20445_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: confetti_inline__P20445, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  factory___20448: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_constructor__P3155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___20469 = undefined;
    s.removedSource___20478 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2617]) return breakpoint(s, 5, 2617, r0);
  case 5:
    s.tmp_0 = sprites_BaseSprite_constructor__P2096_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1282; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2618]) return breakpoint(s, 7, 2618, r0);
  case 7:
    s.tmp_0 = particles_init__P5581_mk(s);
    s.callLocIdx = 1283; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2619]) return breakpoint(s, 9, 2619, r0);
  case 9:
    s.tmp_0 = particles_particleSources__P5587_mk(s);
    s.callLocIdx = 1284; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.sources___20469 = (r0);
    s.lastBrkId = 2620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2620]) return breakpoint(s, 11, 2620, r0);
  case 11:
    r0 = pxsim_Array__length(s.sources___20469);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= globals.MAX_SOURCES___5573);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2621]) return breakpoint(s, 12, 2621, r0);
  case 12:
    s.tmp_2 = particles_sortSources__P5584_mk(s);
    s.tmp_2.arg0 = s.sources___20469;
    s.callLocIdx = 1285; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2622]) return breakpoint(s, 14, 2622, r0);
  case 14:
    s.tmp_0 = helpers_arrayShift__P102_mk(s);
    s.tmp_0.arg0 = s.sources___20469;
    s.callLocIdx = 1286; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.removedSource___20478 = (r0);
    s.lastBrkId = 2623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2623]) return breakpoint(s, 16, 2623, r0);
  case 16:
    s.tmp_0 = particles_ParticleSource_clear__P3165_mk(s);
    s.tmp_0.arg0 = s.removedSource___20478;
    s.callLocIdx = 1287; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2624]) return breakpoint(s, 18, 2624, r0);
  case 18:
    s.tmp_0 = particles_ParticleSource_destroy__P3164_mk(s);
    s.tmp_0.arg0 = s.removedSource___20478;
    s.callLocIdx = 1288; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 2625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2625]) return breakpoint(s, 20, 2625, r0);
  case 20:
    r0 = (s.arg0).fields["pFlags"] = (0);
    s.lastBrkId = 2626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2626]) return breakpoint(s, 21, 2626, r0);
  case 21:
    s.tmp_0 = particles_ParticleSource_setRate__P3167_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 1289; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 2627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2627]) return breakpoint(s, 23, 2627, r0);
  case 23:
    s.tmp_0 = particles_ParticleSource_setAcceleration__P3159_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 1290; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2628]) return breakpoint(s, 25, 2628, r0);
  case 25:
    s.tmp_0 = particles_ParticleSource_setAnchor__P3166_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1291; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2629]) return breakpoint(s, 27, 2629, r0);
  case 27:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 2630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2630]) return breakpoint(s, 28, 2630, r0);
  case 28:
    r0 = (s.arg0).fields["_dt"] = (0);
    s.lastBrkId = 2631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2631]) return breakpoint(s, 29, 2631, r0);
  case 29:
    r0 = (s.arg0).fields["priority"] = (0);
    s.lastBrkId = 2632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2632]) return breakpoint(s, 30, 2632, r0);
  case 30:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = globals.defaultFactory___3170;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = particles_ParticleSource_setFactory__P3169_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 1292; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 2633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2633]) return breakpoint(s, 32, 2633, r0);
  case 32:
    r0 = pxsim_Array__push(s.sources___20469, s.arg0);
    s.lastBrkId = 2634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2634]) return breakpoint(s, 33, 2634, r0);
  case 33:
    s.tmp_0 = particles_ParticleSource_enabled__P3163_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1293; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_constructor__P3155.info = {"start":2307,"length":899,"line":87,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["this","anchor","particlesPerSecond","factory"]}

function particles_ParticleSource_constructor__P3155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_constructor__P3155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  sources___20469: undefined,
  removedSource___20478: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_sortSources__P5584(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2739]) return breakpoint(s, 1, 2739, r0);
  case 1:
    s.tmp_0 = helpers_arraySort__P105_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = particles_sortSources_inline__P20676;
    s.callLocIdx = 1331; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources__P5584.info = {"start":10026,"length":129,"line":332,"column":4,"endLine":334,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"sortSources","argumentNames":["sources"]}

function particles_sortSources__P5584_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources__P5584, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_sortSources_inline__P20676(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["priority"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["priority"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg1.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources_inline__P20676.info = {"start":10097,"length":50,"line":333,"column":21,"endLine":333,"endColumn":71,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["a","b"]}

function particles_sortSources_inline__P20676_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources_inline__P20676, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_init__P5581(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___20705 = undefined;
    s.lastBrkId = 2717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2717]) return breakpoint(s, 4, 2717, r0);
  case 4:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1321; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.scene___20705 = (r0);
    s.lastBrkId = 2718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2718]) return breakpoint(s, 6, 2718, r0);
  case 6:
    r0 = s.scene___20705.fields["particleSources"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2719]) return breakpoint(s, 7, 2719, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2720]) return breakpoint(s, 8, 2720, r0);
  case 8:
    s.tmp_1 = r0 = s.scene___20705;
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["particleSources"] = (s.tmp_2);
    s.lastBrkId = 2721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2721]) return breakpoint(s, 9, 2721, r0);
  case 9:
    r0 = pxsim.control.millis();
    globals.lastUpdate___5576 = (r0);
    s.lastBrkId = 2722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2722]) return breakpoint(s, 10, 2722, r0);
  case 10:
    s.tmp_0 = game_onUpdate__P3022_mk(s);
    s.tmp_0.arg0 = particles_updateParticles__P5582;
    s.callLocIdx = 1322; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2723]) return breakpoint(s, 12, 2723, r0);
  case 12:
    s.tmp_0 = game_onUpdateInterval__P3023_mk(s);
    s.tmp_0.arg0 = 250;
    s.tmp_0.arg1 = particles_pruneParticles__P5583;
    s.callLocIdx = 1323; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_init__P5581.info = {"start":9236,"length":276,"line":304,"column":4,"endLine":311,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"init","argumentNames":[]}

function particles_init__P5581_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_init__P5581, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  scene___20705: undefined,
} }





function particles_updateParticles__P5582(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___20744 = undefined;
    s.time___20751 = undefined;
    s.dt___20754 = undefined;
    s.i___20760 = undefined;
    s.lastBrkId = 2724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2724]) return breakpoint(s, 6, 2724, r0);
  case 6:
    s.tmp_0 = particles_particleSources__P5587_mk(s);
    s.callLocIdx = 1324; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.sources___20744 = (r0);
    s.lastBrkId = 2725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2725]) return breakpoint(s, 8, 2725, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.sources___20744);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2726]) return breakpoint(s, 9, 2726, r0);
  case 9:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2727]) return breakpoint(s, 10, 2727, r0);
  case 10:
    s.tmp_2 = particles_sortSources__P5584_mk(s);
    s.tmp_2.arg0 = s.sources___20744;
    s.callLocIdx = 1325; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2728]) return breakpoint(s, 12, 2728, r0);
  case 12:
    r0 = pxsim.control.millis();
    s.time___20751 = (r0);
    s.lastBrkId = 2729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2729]) return breakpoint(s, 13, 2729, r0);
  case 13:
    r0 = (s.time___20751 - globals.lastUpdate___5576);
    s.dt___20754 = (r0);
    s.lastBrkId = 2730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2730]) return breakpoint(s, 14, 2730, r0);
  case 14:
    globals.lastUpdate___5576 = (s.time___20751);
    s.lastBrkId = 2731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2731]) return breakpoint(s, 15, 2731, r0);
  case 15:
    s.i___20760 = (0);
    s.lastBrkId = 2732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2732]) return breakpoint(s, 16, 2732, r0);
  case 16:
  case 3:
    s.lastBrkId = 2733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2733]) return breakpoint(s, 17, 2733, r0);
  case 17:
    s.tmp_1 = r0 = s.i___20760;
    r0 = pxsim_Array__length(s.sources___20744);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2734]) return breakpoint(s, 18, 2734, r0);
  case 18:
    s.tmp_3 = particles_ParticleSource__update__P3157_mk(s);
    r0 = pxsim_Array__getAt(s.sources___20744, s.i___20760);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.dt___20754;
    s.callLocIdx = 1326; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 2735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2735]) return breakpoint(s, 20, 2735, r0);
  case 20:
    r0 = (s.i___20760 + 1);
    s.i___20760 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_updateParticles__P5582.info = {"start":9518,"length":340,"line":313,"column":4,"endLine":325,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticles","argumentNames":[]}

function particles_updateParticles__P5582_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_updateParticles__P5582, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  sources___20744: undefined,
  time___20751: undefined,
  dt___20754: undefined,
  i___20760: undefined,
} }





function particles_ParticleSource__update__P3157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___20823 = undefined;
    s.current___20842 = undefined;
    s.fixedDt___20850 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2643]) return breakpoint(s, 28, 2643, r0);
  case 28:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timer"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timer"] = (s.tmp_1);
    s.lastBrkId = 2644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2644]) return breakpoint(s, 29, 2644, r0);
  case 29:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2645]) return breakpoint(s, 30, 2645, r0);
  case 30:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 2646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2646]) return breakpoint(s, 31, 2646, r0);
  case 31:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2647]) return breakpoint(s, 32, 2647, r0);
  case 32:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 2648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2648]) return breakpoint(s, 33, 2648, r0);
  case 33:
    s.tmp_0 = particles_ParticleSource_destroy__P3164_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1297; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
  case 1:
  case 2:
    { step = 10; continue; }
  case 3:
    s.lastBrkId = 2649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2649]) return breakpoint(s, 35, 2649, r0);
  case 35:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    s.tmp_2 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "flags");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["flags"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["flags"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1298; s.pc = 36; return s.tmp_2; }
    }
  case 36:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_3;
    { step = 7; continue; }
  case 6:
    s.tmp_5 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "flags");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["flags"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["flags"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1299; s.pc = 37; return s.tmp_5; }
    }
  case 37:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 2);
  case 7:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2650]) return breakpoint(s, 38, 2650, r0);
  case 38:
    r0 = (s.arg0).fields["lifespan"] = (750);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 2651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2651]) return breakpoint(s, 39, 2651, r0);
  case 39:
  case 11:
    s.lastBrkId = 2652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2652]) return breakpoint(s, 40, 2652, r0);
  case 40:
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 12:
    s.tmp_2 = particles_ParticleSource_enabled__P3162_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1300; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
  case 13:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 2653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2653]) return breakpoint(s, 42, 2653, r0);
  case 42:
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["timer"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["period"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["timer"] = (s.tmp_5);
    s.lastBrkId = 2654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2654]) return breakpoint(s, 43, 2654, r0);
  case 43:
    s.tmp_0 = particles_ParticleFactory__C3186_v0_2_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["anchor"];
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C3186_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.createParticle;
    s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.p___20823 = (r0);
    s.lastBrkId = 2655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2655]) return breakpoint(s, 45, 2655, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.p___20823);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 2656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2656]) return breakpoint(s, 46, 2656, r0);
  case 46:
    { step = 11; continue; }
  case 14:
  case 15:
    s.lastBrkId = 2657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2657]) return breakpoint(s, 47, 2657, r0);
  case 47:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = (s.p___20823).fields["next"] = (s.tmp_2);
    s.lastBrkId = 2658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2658]) return breakpoint(s, 48, 2658, r0);
  case 48:
    r0 = (s.arg0).fields["head"] = (s.p___20823);
    { step = 11; continue; }
  case 16:
    s.lastBrkId = 2659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2659]) return breakpoint(s, 49, 2659, r0);
  case 49:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 2660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2660]) return breakpoint(s, 50, 2660, r0);
  case 50:
    { step = 27; continue; }
  case 17:
  case 18:
    s.lastBrkId = 2661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2661]) return breakpoint(s, 51, 2661, r0);
  case 51:
    r0 = s.arg0.fields["head"];
    s.current___20842 = (r0);
    s.lastBrkId = 2662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2662]) return breakpoint(s, 52, 2662, r0);
  case 52:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["_dt"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_dt"] = (s.tmp_1);
    s.lastBrkId = 2663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2663]) return breakpoint(s, 53, 2663, r0);
  case 53:
    s.tmp_0 = Fx8__P149_mk(s);
    r0 = s.arg0.fields["_dt"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1301; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.fixedDt___20850 = (r0);
    s.lastBrkId = 2664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2664]) return breakpoint(s, 55, 2664, r0);
  case 55:
    r0 = pxsim_numops_toBoolDecr(s.fixedDt___20850);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 2665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2665]) return breakpoint(s, 56, 2665, r0);
  case 56:
  case 19:
    s.lastBrkId = 2666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2666]) return breakpoint(s, 57, 2666, r0);
  case 57:
    r0 = s.current___20842.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 2667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2667]) return breakpoint(s, 58, 2667, r0);
  case 58:
    s.tmp_2 = r0 = s.current___20842;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 2668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2668]) return breakpoint(s, 59, 2668, r0);
  case 59:
    s.tmp_0 = particles_ParticleSource__C3150_v4_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.current___20842;
    s.tmp_0.arg2 = s.fixedDt___20850;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleSource__C3150_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.updateParticle;
    s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
  case 20:
  case 21:
    s.lastBrkId = 2669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2669]) return breakpoint(s, 61, 2669, r0);
  case 61:
    r0 = s.current___20842.fields["next"];
    s.tmp_0 = r0;
    s.current___20842 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    { step = 19; continue; }
  case 22:
    s.lastBrkId = 2670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2670]) return breakpoint(s, 62, 2670, r0);
  case 62:
    r0 = (s.arg0).fields["_dt"] = (0);
    { step = 26; continue; }
  case 23:
    s.lastBrkId = 2671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2671]) return breakpoint(s, 63, 2671, r0);
  case 63:
  case 24:
    s.lastBrkId = 2672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2672]) return breakpoint(s, 64, 2672, r0);
  case 64:
    s.tmp_0 = r0 = s.current___20842;
    r0 = s.tmp_0.fields["lifespan"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2673]) return breakpoint(s, 65, 2673, r0);
  case 65:
    r0 = s.current___20842.fields["next"];
    s.tmp_0 = r0;
    s.current___20842 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 25; continue; }
    { step = 24; continue; }
  case 25:
  case 26:
  case 27:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__update__P3157.info = {"start":3694,"length":1400,"line":124,"column":8,"endLine":164,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_update","argumentNames":["this","dt"]}

function particles_ParticleSource__update__P3157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__update__P3157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  p___20823: undefined,
  current___20842: undefined,
  fixedDt___20850: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_updateParticle__P5578(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2710]) return breakpoint(s, 1, 2710, r0);
  case 1:
    s.tmp_0 = Fx_rightShift__P171_mk(s);
    s.tmp_0.arg0 = s.arg2;
    s.tmp_0.arg1 = 10;
    s.callLocIdx = 1309; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.arg2 = (r0);
    s.lastBrkId = 2711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2711]) return breakpoint(s, 3, 2711, r0);
  case 3:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["vx"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P160_mk(s);
    r0 = s.arg0.fields["ax"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1310; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1311; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.lastBrkId = 2712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2712]) return breakpoint(s, 6, 2712, r0);
  case 6:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["vy"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P160_mk(s);
    r0 = s.arg0.fields["ay"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1312; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1313; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 2713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2713]) return breakpoint(s, 9, 2713, r0);
  case 9:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P160_mk(s);
    r0 = s.arg1.fields["vx"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1314; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1315; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2714]) return breakpoint(s, 12, 2714, r0);
  case 12:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P160_mk(s);
    r0 = s.arg1.fields["vy"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1316; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1317; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_updateParticle__P5578.info = {"start":8248,"length":357,"line":277,"column":8,"endLine":285,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticle","argumentNames":["this","p","fixedDt"]}

function particles_ParticleSource_updateParticle__P5578_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_updateParticle__P5578, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Fx_rightShift__P171(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[235]) return breakpoint(s, 1, 235, r0);
  case 1:
    r0 = (s.arg0 >> s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_rightShift__P171.info = {"start":2266,"length":108,"line":71,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"rightShift","argumentNames":["a","n"]}

function Fx_rightShift__P171_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_rightShift__P171, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleFactory_createParticle__P3188(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___20933 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C3186_VT)) failedCast(r0);
    s.lastBrkId = 2779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2779]) return breakpoint(s, 1, 2779, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(particles_Particle__C3131_VT);
    s.p___20933 = (r0);
    s.lastBrkId = 2780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2780]) return breakpoint(s, 2, 2780, r0);
  case 2:
    s.tmp_0 = r0 = s.p___20933;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_3 = if_x_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "x");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["x"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["x"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1351; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1352; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2781]) return breakpoint(s, 5, 2781, r0);
  case 5:
    s.tmp_0 = r0 = s.p___20933;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_3 = if_y_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "y");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["y"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["y"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1353; s.pc = 7; return s.tmp_3; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1354; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 2782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2782]) return breakpoint(s, 8, 2782, r0);
  case 8:
    r0 = (s.p___20933).fields["vx"] = (0);
    s.lastBrkId = 2783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2783]) return breakpoint(s, 9, 2783, r0);
  case 9:
    r0 = (s.p___20933).fields["vy"] = (0);
    s.lastBrkId = 2784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2784]) return breakpoint(s, 10, 2784, r0);
  case 10:
    r0 = (s.p___20933).fields["lifespan"] = (500);
    s.lastBrkId = 2785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2785]) return breakpoint(s, 11, 2785, r0);
  case 11:
    r0 = s.p___20933;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_createParticle__P3188.info = {"start":1822,"length":282,"line":67,"column":8,"endLine":77,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ParticleFactory_createParticle__P3188_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_createParticle__P3188, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___20933: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdateInterval__P3023(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.timer___20727 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2359]) return breakpoint(s, 6, 2359, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2360]) return breakpoint(s, 7, 2360, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = pxsim_pxtrt.mklocRef();
    s.timer___20727 = (r0);
    s.lastBrkId = 2361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2361]) return breakpoint(s, 8, 2361, r0);
  case 8:
    r0 = pxsim_pxtrt_stlocRef(s.timer___20727, 0);
    s.lastBrkId = 2362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2362]) return breakpoint(s, 9, 2362, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(3, game_onUpdateInterval_inline__P20731);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.timer___20727);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg1);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_2 = game_eventContext__P3001_mk(s);
    s.callLocIdx = 1106; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 19;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1110; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval__P3023.info = {"start":813,"length":401,"line":26,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"onUpdateInterval","argumentNames":["period","a"]}

function game_onUpdateInterval__P3023_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval__P3023, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  timer___20727: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdateInterval_inline__P20731(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.time___20732 = undefined;
    s.lastBrkId = 2363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2363]) return breakpoint(s, 3, 2363, r0);
  case 3:
    s.tmp_0 = scene_Scene_millis__P2868_mk(s);
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 1107; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1108; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.time___20732 = (r0);
    s.lastBrkId = 2364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2364]) return breakpoint(s, 6, 2364, r0);
  case 6:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.time___20732);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2365]) return breakpoint(s, 7, 2365, r0);
  case 7:
    s.tmp_2 = r0 = s.caps[0];
    r0 = (s.time___20732 + s.caps[1]);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
    s.lastBrkId = 2366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2366]) return breakpoint(s, 8, 2366, r0);
  case 8:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.caps[2];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1109; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval_inline__P20731.info = {"start":1027,"length":179,"line":29,"column":81,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/gameutil.ts","functionName":"inline","argumentNames":[]}

function game_onUpdateInterval_inline__P20731_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval_inline__P20731, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  time___20732: undefined,
} }





function MAX_SOURCES_inline__P20691(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sz___20692 = undefined;
    s.tmp_0 = control_ramSize__P346_mk(s);
    s.callLocIdx = 48; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.sz___20692 = (r0);
    r0 = (s.sz___20692 <= 102400);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 8;
    { step = 5; continue; }
    { step = 4; continue; }
  case 1:
    r0 = (s.sz___20692 <= 204800);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = 16;
    { step = 5; continue; }
    { step = 3; continue; }
  case 2:
    r0 = 50;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
MAX_SOURCES_inline__P20691.info = {"start":240,"length":217,"line":9,"column":25,"endLine":18,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":[]}

function MAX_SOURCES_inline__P20691_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MAX_SOURCES_inline__P20691, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sz___20692: undefined,
} }





function particles_SprayFactory_constructor__P3191(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3190_VT)) failedCast(r0);
    s.lastBrkId = 2787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2787]) return breakpoint(s, 1, 2787, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_constructor__P3187_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1357; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2788]) return breakpoint(s, 3, 2788, r0);
  case 3:
    s.tmp_0 = particles_initTrig__P5602_mk(s);
    s.callLocIdx = 1358; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2789]) return breakpoint(s, 5, 2789, r0);
  case 5:
    s.tmp_0 = particles_SprayFactory_setSpeed__P3194_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1359; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2790]) return breakpoint(s, 7, 2790, r0);
  case 7:
    s.tmp_0 = particles_SprayFactory_setDirection__P3195_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.callLocIdx = 1360; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_constructor__P3191.info = {"start":2623,"length":218,"line":98,"column":8,"endLine":103,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","speed","centerDegrees","arcDegrees"]}

function particles_SprayFactory_constructor__P3191_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_constructor__P3191, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_initTrig__P5602(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2756]) return breakpoint(s, 3, 2756, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.cachedSin___5588);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2757]) return breakpoint(s, 4, 2757, r0);
  case 4:
    s.tmp_2 = particles_cacheSin__P3184_mk(s);
    s.tmp_2.arg0 = 100;
    s.callLocIdx = 1346; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    globals.cachedSin___5588 = (r0);
    s.lastBrkId = 2758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2758]) return breakpoint(s, 6, 2758, r0);
  case 6:
    s.tmp_0 = particles_cacheCos__P3185_mk(s);
    s.tmp_0.arg0 = 100;
    s.callLocIdx = 1347; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    globals.cachedCos___5589 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_initTrig__P5602.info = {"start":291,"length":155,"line":11,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"initTrig","argumentNames":[]}

function particles_initTrig__P5602_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_initTrig__P5602, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function particles_cacheCos__P3185(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cos___20572 = undefined;
    s.anglePerSlice___20574 = undefined;
    s.i___20580 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2767]) return breakpoint(s, 3, 2767, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.cos___20572 = (r0);
    s.lastBrkId = 2768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2768]) return breakpoint(s, 4, 2768, r0);
  case 4:
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___20574 = (r0);
    s.lastBrkId = 2769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2769]) return breakpoint(s, 5, 2769, r0);
  case 5:
    s.i___20580 = (0);
    s.lastBrkId = 2770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2770]) return breakpoint(s, 6, 2770, r0);
  case 6:
  case 1:
    s.lastBrkId = 2771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2771]) return breakpoint(s, 7, 2771, r0);
  case 7:
    r0 = (s.i___20580 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2772]) return breakpoint(s, 8, 2772, r0);
  case 8:
    s.tmp_1 = r0 = s.cos___20572;
    s.tmp_3 = Fx8__P149_mk(s);
    r0 = (s.i___20580 * s.anglePerSlice___20574);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.cos(s.tmp_4);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1349; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 2773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2773]) return breakpoint(s, 10, 2773, r0);
  case 10:
    r0 = (s.i___20580 + 1);
    s.i___20580 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2774]) return breakpoint(s, 11, 2774, r0);
  case 11:
    r0 = s.cos___20572;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheCos__P3185.info = {"start":1005,"length":263,"line":35,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheCos","argumentNames":["slices"]}

function particles_cacheCos__P3185_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheCos__P3185, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  cos___20572: undefined,
  anglePerSlice___20574: undefined,
  i___20580: undefined,
  arg0: undefined,
} }





function particles_cacheSin__P3184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sin___20598 = undefined;
    s.anglePerSlice___20600 = undefined;
    s.i___20606 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2759]) return breakpoint(s, 3, 2759, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.sin___20598 = (r0);
    s.lastBrkId = 2760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2760]) return breakpoint(s, 4, 2760, r0);
  case 4:
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___20600 = (r0);
    s.lastBrkId = 2761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2761]) return breakpoint(s, 5, 2761, r0);
  case 5:
    s.i___20606 = (0);
    s.lastBrkId = 2762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2762]) return breakpoint(s, 6, 2762, r0);
  case 6:
  case 1:
    s.lastBrkId = 2763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2763]) return breakpoint(s, 7, 2763, r0);
  case 7:
    r0 = (s.i___20606 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2764]) return breakpoint(s, 8, 2764, r0);
  case 8:
    s.tmp_1 = r0 = s.sin___20598;
    s.tmp_3 = Fx8__P149_mk(s);
    r0 = (s.i___20606 * s.anglePerSlice___20600);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.sin(s.tmp_4);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1348; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 2765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2765]) return breakpoint(s, 10, 2765, r0);
  case 10:
    r0 = (s.i___20606 + 1);
    s.i___20606 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2766]) return breakpoint(s, 11, 2766, r0);
  case 11:
    r0 = s.sin___20598;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheSin__P3184.info = {"start":594,"length":263,"line":22,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheSin","argumentNames":["slices"]}

function particles_cacheSin__P3184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheSin__P3184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  sin___20598: undefined,
  anglePerSlice___20600: undefined,
  i___20606: undefined,
  arg0: undefined,
} }





function particles_SprayFactory_setDirection__P3195(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3190_VT)) failedCast(r0);
    s.lastBrkId = 2798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2798]) return breakpoint(s, 1, 2798, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P5607_mk(s);
    s.tmp_5 = r0 = s.arg1;
    r0 = (s.arg2 >> 1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1368; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___5601);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minAngle"] = (s.tmp_1);
    s.lastBrkId = 2799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2799]) return breakpoint(s, 3, 2799, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P5607_mk(s);
    s.tmp_4.arg0 = s.arg2;
    s.callLocIdx = 1369; s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___5601);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spread"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setDirection__P3195.info = {"start":3424,"length":228,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setDirection","argumentNames":["this","centerDegrees","arcDegrees"]}

function particles_SprayFactory_setDirection__P3195_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setDirection__P3195, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_toRadians__P5607(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2775]) return breakpoint(s, 3, 2775, r0);
  case 3:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2776]) return breakpoint(s, 4, 2776, r0);
  case 4:
    s.tmp_3 = Math_abs__P128_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1350; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 360);
    s.tmp_1 = r0;
    r0 = (360 - s.tmp_1);
    s.arg0 = (r0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2777]) return breakpoint(s, 6, 2777, r0);
  case 6:
    r0 = (s.arg0 % 360);
    s.arg0 = (r0);
  case 2:
    s.lastBrkId = 2778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2778]) return breakpoint(s, 7, 2778, r0);
  case 7:
    r0 = (s.arg0 * 0.017453292519943295);
    return leave(s, r0)
  default: oops()
} } }
particles_toRadians__P5607.info = {"start":1307,"length":206,"line":45,"column":4,"endLine":52,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"toRadians","argumentNames":["degrees"]}

function particles_toRadians__P5607_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_toRadians__P5607, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function particles_ParticleFactory_constructor__P3187(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C3186_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_constructor__P3187.info = {"start":1617,"length":78,"line":59,"column":8,"endLine":61,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this"]}

function particles_ParticleFactory_constructor__P3187_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_constructor__P3187, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ParticleSource_setFactory__P3169(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2708]) return breakpoint(s, 3, 2708, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2709]) return breakpoint(s, 4, 2709, r0);
  case 4:
    r0 = (s.arg0).fields["_factory"] = (s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setFactory__P3169.info = {"start":8124,"length":114,"line":272,"column":8,"endLine":275,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setFactory","argumentNames":["this","factory"]}

function particles_ParticleSource_setFactory__P3169_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setFactory__P3169, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setRate__P3167(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2705]) return breakpoint(s, 1, 2705, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = (1000 / s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["period"] = (s.tmp_1);
    s.lastBrkId = 2706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2706]) return breakpoint(s, 2, 2706, r0);
  case 2:
    r0 = (s.arg0).fields["timer"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRate__P3167.info = {"start":7802,"length":139,"line":259,"column":8,"endLine":262,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRate","argumentNames":["this","particlesPerSecond"]}

function particles_ParticleSource_setRate__P3167_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRate__P3167, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setAnchor__P3166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2704]) return breakpoint(s, 1, 2704, r0);
  case 1:
    r0 = (s.arg0).fields["anchor"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAnchor__P3166.info = {"start":7594,"length":79,"line":251,"column":8,"endLine":253,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAnchor","argumentNames":["this","anchor"]}

function particles_ParticleSource_setAnchor__P3166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAnchor__P3166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_destroy__P3164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2700]) return breakpoint(s, 1, 2700, r0);
  case 1:
    s.tmp_0 = particles_ParticleSource_enabled__P3163_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1307; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2701]) return breakpoint(s, 3, 2701, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    s.lastBrkId = 2702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2702]) return breakpoint(s, 4, 2702, r0);
  case 4:
    s.tmp_0 = particles_ParticleSource__prune__P3158_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1308; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_destroy__P3164.info = {"start":7094,"length":240,"line":233,"column":8,"endLine":238,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"destroy","argumentNames":["this"]}

function particles_ParticleSource_destroy__P3164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_destroy__P3164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_setAcceleration__P3159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2691]) return breakpoint(s, 1, 2691, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1304; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ax"] = (s.tmp_1);
    s.lastBrkId = 2692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2692]) return breakpoint(s, 3, 2692, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1305; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAcceleration__P3159.info = {"start":6026,"length":113,"line":194,"column":8,"endLine":197,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAcceleration","argumentNames":["this","ax","ay"]}

function particles_ParticleSource_setAcceleration__P3159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAcceleration__P3159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayShift__P102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 9;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[9]) return breakpoint(s, 1, 9, r0);
  case 1:
    r0 = pxsim_Array_.removeAt(s.arg0, 0);
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayShift__P102.info = {"start":4045,"length":82,"line":153,"column":4,"endLine":155,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayShift","argumentNames":["arr"]}

function helpers_arrayShift__P102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayShift__P102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_SprayFactory_setSpeed__P3194(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3190_VT)) failedCast(r0);
    s.lastBrkId = 2797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2797]) return breakpoint(s, 1, 2797, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1367; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["speed"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setSpeed__P3194.info = {"start":3322,"length":92,"line":119,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setSpeed","argumentNames":["this","pixelsPerSecond"]}

function particles_SprayFactory_setSpeed__P3194_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setSpeed__P3194, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ConfettiFactory_constructor__P3218(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.confetti___20965 = undefined;
    s.i___20981 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ConfettiFactory__C3217_VT)) failedCast(r0);
    s.lastBrkId = 2825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2825]) return breakpoint(s, 3, 2825, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim.image.ofBuffer(_hex20968);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim.image.ofBuffer(_hex20970);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_2);
    r0 = pxsim.image.ofBuffer(_hex20972);
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    r0 = pxsim.image.ofBuffer(_hex20974);
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_4);
    r0 = pxsim.image.ofBuffer(_hex20976);
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_5);
    s.confetti___20965 = (s.tmp_0);
    s.lastBrkId = 2826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2826]) return breakpoint(s, 4, 2826, r0);
  case 4:
    s.tmp_0 = particles_ShapeFactory_constructor__P3213_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = pxsim_Array__getAt(s.confetti___20965, 0);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1392; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2827]) return breakpoint(s, 6, 2827, r0);
  case 6:
    s.i___20981 = (1);
    s.lastBrkId = 2828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2828]) return breakpoint(s, 7, 2828, r0);
  case 7:
  case 1:
    s.lastBrkId = 2829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2829]) return breakpoint(s, 8, 2829, r0);
  case 8:
    s.tmp_1 = r0 = s.i___20981;
    r0 = pxsim_Array__length(s.confetti___20965);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2830]) return breakpoint(s, 9, 2830, r0);
  case 9:
    s.tmp_3 = particles_ShapeFactory_addShape__P3214_mk(s);
    s.tmp_3.arg0 = s.arg0;
    r0 = pxsim_Array__getAt(s.confetti___20965, s.i___20981);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 1393; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2831]) return breakpoint(s, 11, 2831, r0);
  case 11:
    r0 = (s.i___20981 + 1);
    s.i___20981 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2832]) return breakpoint(s, 12, 2832, r0);
  case 12:
    r0 = (s.arg0).fields["minLifespan"] = (1000);
    s.lastBrkId = 2833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2833]) return breakpoint(s, 13, 2833, r0);
  case 13:
    r0 = (s.arg0).fields["maxLifespan"] = (4500);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ConfettiFactory_constructor__P3218.info = {"start":7755,"length":706,"line":247,"column":8,"endLine":274,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange"]}

function particles_ConfettiFactory_constructor__P3218_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ConfettiFactory_constructor__P3218, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  confetti___20965: undefined,
  i___20981: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }

const _hex20968 = pxsim.BufferMethods.createBufferFromHex("87040100010000000f000000")
const _hex20970 = pxsim.BufferMethods.createBufferFromHex("8704010002000000ff000000")
const _hex20972 = pxsim.BufferMethods.createBufferFromHex("87040200010000000f0000000f000000")
const _hex20974 = pxsim.BufferMethods.createBufferFromHex("8704020002000000ff0000000f000000")
const _hex20976 = pxsim.BufferMethods.createBufferFromHex("87040200020000000f000000ff000000")




function particles_ShapeFactory_addShape__P3214(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C3212_VT)) failedCast(r0);
    s.lastBrkId = 2817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2817]) return breakpoint(s, 3, 2817, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2818]) return breakpoint(s, 4, 2818, r0);
  case 4:
    r0 = s.arg0.fields["sources"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_addShape__P3214.info = {"start":7079,"length":83,"line":225,"column":8,"endLine":227,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"addShape","argumentNames":["this","shape"]}

function particles_ShapeFactory_addShape__P3214_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_addShape__P3214, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ShapeFactory_constructor__P3213(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C3212_VT)) failedCast(r0);
    s.lastBrkId = 2813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2813]) return breakpoint(s, 1, 2813, r0);
  case 1:
    s.tmp_0 = particles_AreaFactory_constructor__P3201_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.tmp_0.arg4 = undefined;
    s.callLocIdx = 1382; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2814]) return breakpoint(s, 3, 2814, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg3);
    r0 = (s.arg0).fields["sources"] = (s.tmp_0);
    s.lastBrkId = 2815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2815]) return breakpoint(s, 4, 2815, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.width(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1383; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ox"] = (s.tmp_1);
    s.lastBrkId = 2816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2816]) return breakpoint(s, 6, 2816, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.height(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1384; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["oy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_constructor__P3213.info = {"start":6668,"length":285,"line":212,"column":8,"endLine":219,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","source"]}

function particles_ShapeFactory_constructor__P3213_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_constructor__P3213, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_AreaFactory_constructor__P3201(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C3196_VT)) failedCast(r0);
    s.lastBrkId = 2800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2800]) return breakpoint(s, 5, 2800, r0);
  case 5:
    s.tmp_0 = particles_SprayFactory_constructor__P3191_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 40;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 90;
    s.callLocIdx = 1370; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2801]) return breakpoint(s, 7, 2801, r0);
  case 7:
    r0 = (s.arg0).fields["xRange"] = (s.arg1);
    s.lastBrkId = 2802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2802]) return breakpoint(s, 8, 2802, r0);
  case 8:
    r0 = (s.arg0).fields["yRange"] = (s.arg2);
    s.lastBrkId = 2803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2803]) return breakpoint(s, 9, 2803, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 1; continue; }
    r0 = s.arg3;
    { step = 2; continue; }
  case 1:
    r0 = 150;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["minLifespan"] = (s.tmp_0);
    s.lastBrkId = 2804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2804]) return breakpoint(s, 10, 2804, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    if (!r0) { step = 3; continue; }
    r0 = s.arg4;
    { step = 4; continue; }
  case 3:
    r0 = 850;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["maxLifespan"] = (s.tmp_0);
    s.lastBrkId = 2805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2805]) return breakpoint(s, 11, 2805, r0);
  case 11:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C3058_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P3060_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1371; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    r0 = (s.arg0).fields["galois"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_constructor__P3201.info = {"start":3950,"length":374,"line":139,"column":8,"endLine":146,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","minLifespan","maxLifespan"]}

function particles_AreaFactory_constructor__P3201_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_constructor__P3201, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function effects_ScreenEffect_constructor__P3266(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C3265_VT)) failedCast(r0);
    s.lastBrkId = 2847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2847]) return breakpoint(s, 1, 2847, r0);
  case 1:
    s.tmp_0 = effects_ParticleEffect_constructor__P3262_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg4;
    s.callLocIdx = 1399; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2848]) return breakpoint(s, 3, 2848, r0);
  case 3:
    r0 = (s.arg0).fields["sceneDefaultRate"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_constructor__P3266.info = {"start":2911,"length":332,"line":81,"column":8,"endLine":85,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","anchorDefault","sceneDefault","defaultLifespan","sourceFactory"]}

function effects_ScreenEffect_constructor__P3266_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_constructor__P3266, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function effects_ParticleEffect_constructor__P3262(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C3261_VT)) failedCast(r0);
    s.lastBrkId = 2834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2834]) return breakpoint(s, 1, 2834, r0);
  case 1:
    r0 = (s.arg0).fields["sourceFactory"] = (s.arg3);
    s.lastBrkId = 2835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2835]) return breakpoint(s, 2, 2835, r0);
  case 2:
    r0 = (s.arg0).fields["defaultRate"] = (s.arg1);
    s.lastBrkId = 2836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2836]) return breakpoint(s, 3, 2836, r0);
  case 3:
    r0 = (s.arg0).fields["defaultLifespan"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_constructor__P3262.info = {"start":384,"length":364,"line":13,"column":8,"endLine":18,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","defaultParticlesPerSecond","defaultLifespan","sourceFactory"]}

function effects_ParticleEffect_constructor__P3262_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_constructor__P3262, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function music_melodyPlayable__P1923(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[537]) return breakpoint(s, 1, 537, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(music_MelodyPlayable__C1916_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_MelodyPlayable_constructor__P1917_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 76; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
music_melodyPlayable__P1923.info = {"start":3172,"length":107,"line":121,"column":4,"endLine":123,"endColumn":5,"fileName":"pxt_modules/mixer/playable.ts","functionName":"melodyPlayable","argumentNames":["melody"]}

function music_melodyPlayable__P1923_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_melodyPlayable__P1923, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function music_MelodyPlayable_constructor__P1917(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayable__C1916_VT)) failedCast(r0);
    r0 = (s.arg0).fields["melody"] = (s.arg1);
    s.lastBrkId = 536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[536]) return breakpoint(s, 1, 536, r0);
  case 1:
    s.tmp_0 = music_Playable_constructor__P1913_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 75; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayable_constructor__P1917.info = {"start":1531,"length":67,"line":68,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/mixer/playable.ts","functionName":"inline","argumentNames":["this","melody"]}

function music_MelodyPlayable_constructor__P1917_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayable_constructor__P1917, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function music_Playable_constructor__P1913(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Playable__C1911_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Playable_constructor__P1913.info = {"start":1086,"length":26,"line":47,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/mixer/playable.ts","functionName":"inline","argumentNames":["this"]}

function music_Playable_constructor__P1913_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Playable_constructor__P1913, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_Melody_constructor__P1629(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1626_VT)) failedCast(r0);
    s.lastBrkId = 521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[521]) return breakpoint(s, 1, 521, r0);
  case 1:
    r0 = (s.arg0).fields["_text"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_constructor__P1629.info = {"start":6430,"length":67,"line":203,"column":8,"endLine":205,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":["this","text"]}

function music_Melody_constructor__P1629_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_constructor__P1629, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Fx8__P149(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[214]) return breakpoint(s, 1, 214, r0);
  case 1:
    r0 = (s.arg0 * 256);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    return leave(s, r0)
  default: oops()
} } }
Fx8__P149.info = {"start":42,"length":68,"line":4,"column":0,"endLine":6,"endColumn":1,"fileName":"pxt_modules/base/fixed.ts","functionName":"Fx8","argumentNames":["v"]}

function Fx8__P149_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx8__P149, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function SpriteKind_create__P2478(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1317]) return breakpoint(s, 3, 1317, r0);
  case 3:
    r0 = (globals.nextKind___5056 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1318]) return breakpoint(s, 4, 1318, r0);
  case 4:
    globals.nextKind___5056 = (1000);
  case 1:
  case 2:
    s.lastBrkId = 1319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1319]) return breakpoint(s, 5, 1319, r0);
  case 5:
    s.tmp_0 = r0 = globals.nextKind___5056;
    r0 = (s.tmp_0 + 1);
    globals.nextKind___5056 = (r0);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
SpriteKind_create__P2478.info = {"start":783,"length":112,"line":26,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/game/spritekind.ts","functionName":"create","argumentNames":[]}

function SpriteKind_create__P2478_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: SpriteKind_create__P2478, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_constructor__P2195(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[879]) return breakpoint(s, 5, 879, r0);
  case 5:
    r0 = (s.arg0).fields["id"] = (s.arg1);
    s.lastBrkId = 880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[880]) return breakpoint(s, 6, 880, r0);
  case 6:
    r0 = (s.arg0).fields["_pressed"] = (false);
    s.lastBrkId = 881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[881]) return breakpoint(s, 7, 881, r0);
  case 7:
    r0 = (s.arg0).fields["repeatDelay"] = (undefined);
    s.lastBrkId = 882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[882]) return breakpoint(s, 8, 882, r0);
  case 8:
    r0 = (s.arg0).fields["repeatInterval"] = (undefined);
    s.lastBrkId = 883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[883]) return breakpoint(s, 9, 883, r0);
  case 9:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.lastBrkId = 884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[884]) return breakpoint(s, 10, 884, r0);
  case 10:
    r0 = (s.arg1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[885]) return breakpoint(s, 11, 885, r0);
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, controller_Button_inline__P21118);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(2050, s.tmp_2, s.tmp_1, 16);
    s.lastBrkId = 886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[886]) return breakpoint(s, 12, 886, r0);
  case 12:
    r0 = pxsim_pxtcore_mkAction(1, controller_Button_inline__P21125);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim.control.internalOnEvent(2051, s.tmp_1, s.tmp_0, 16);
    s.lastBrkId = 887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[887]) return breakpoint(s, 13, 887, r0);
  case 13:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[888]) return breakpoint(s, 14, 888, r0);
  case 14:
    s.tmp_1 = controller_setupButton__P5039_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 208; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_constructor__P2195.info = {"start":2004,"length":864,"line":77,"column":8,"endLine":94,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","id","configKey"]}

function controller_Button_constructor__P2195_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_constructor__P2195, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Button_inline__P21118(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P2202_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 206; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_inline__P21118.info = {"start":2627,"length":28,"line":88,"column":66,"endLine":88,"endColumn":94,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_inline__P21118_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_inline__P21118, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_inline__P21125(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P2202_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 207; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_inline__P21125.info = {"start":2729,"length":27,"line":89,"column":68,"endLine":89,"endColumn":95,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_inline__P21125_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_inline__P21125, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_setupButton__P5039(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[871]) return breakpoint(s, 1, 871, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_setupButton__P5039.info = {"start":861,"length":93,"line":39,"column":4,"endLine":41,"endColumn":6,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setupButton","argumentNames":["buttonId","key"]}

function controller_setupButton__P5039_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_setupButton__P5039, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_setPressed__P2202(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[904]) return breakpoint(s, 7, 904, r0);
  case 7:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[905]) return breakpoint(s, 8, 905, r0);
  case 8:
    s.tmp_2 = power_poke__P1929_mk(s);
    s.callLocIdx = 210; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[906]) return breakpoint(s, 10, 906, r0);
  case 10:
    r0 = s.arg0.fields["_owner"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[907]) return breakpoint(s, 11, 907, r0);
  case 11:
    s.tmp_1 = controller_Controller_connected__P2156_mk(s);
    r0 = s.arg0.fields["_owner"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = true;
    s.callLocIdx = 211; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[908]) return breakpoint(s, 13, 908, r0);
  case 13:
    r0 = (s.arg0).fields["_pressed"] = (s.arg1);
    s.lastBrkId = 909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[909]) return breakpoint(s, 14, 909, r0);
  case 14:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[910]) return breakpoint(s, 15, 910, r0);
  case 15:
    r0 = (s.arg0).fields["_pressedElasped"] = (0);
    s.lastBrkId = 911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[911]) return breakpoint(s, 16, 911, r0);
  case 16:
    s.tmp_0 = controller_Button_raiseButtonDown__P5023_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 212; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[912]) return breakpoint(s, 18, 912, r0);
  case 18:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.lastBrkId = 913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[913]) return breakpoint(s, 19, 913, r0);
  case 19:
    s.tmp_0 = controller_Button_raiseButtonUp__P5022_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 213; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_setPressed__P2202.info = {"start":6774,"length":507,"line":201,"column":8,"endLine":215,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setPressed","argumentNames":["this","pressed"]}

function controller_Button_setPressed__P2202_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_setPressed__P2202, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonDown__P5023(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[892]) return breakpoint(s, 3, 892, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___5033);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[893]) return breakpoint(s, 4, 893, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2049, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[894]) return breakpoint(s, 5, 894, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2053, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonDown__P5023.info = {"start":3088,"length":205,"line":103,"column":8,"endLine":108,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonDown","argumentNames":["this"]}

function controller_Button_raiseButtonDown__P5023_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonDown__P5023, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button_raiseButtonUp__P5022(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[889]) return breakpoint(s, 3, 889, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___5033);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[890]) return breakpoint(s, 4, 890, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2048, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[891]) return breakpoint(s, 5, 891, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2052, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonUp__P5022.info = {"start":2878,"length":200,"line":96,"column":8,"endLine":101,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonUp","argumentNames":["this"]}

function controller_Button_raiseButtonUp__P5022_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonUp__P5022, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_addScenePushHandler__P3017(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2348]) return breakpoint(s, 5, 2348, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___5239);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2349]) return breakpoint(s, 6, 2349, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals._scenePushHandlers___5239 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2350]) return breakpoint(s, 7, 2350, r0);
  case 7:
    r0 = pxsim_Array_.indexOf(globals._scenePushHandlers___5239, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2351]) return breakpoint(s, 8, 2351, r0);
  case 8:
    r0 = pxsim_Array__push(globals._scenePushHandlers___5239, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePushHandler__P3017.info = {"start":16044,"length":242,"line":479,"column":4,"endLine":483,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePushHandler","argumentNames":["handler"]}

function game_addScenePushHandler__P3017_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePushHandler__P3017, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_Controller_id__P2141(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[802]) return breakpoint(s, 1, 802, r0);
  case 1:
    r0 = s.arg0.fields["_id"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_id__P2141.info = {"start":3444,"length":49,"line":109,"column":8,"endLine":111,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"id","argumentNames":["this"]}
controller_Controller_id__P2141.isGetter = true;

function controller_Controller_id__P2141_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_id__P2141, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Controller_connected__P2155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2134_VT)) failedCast(r0);
    s.lastBrkId = 811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[811]) return breakpoint(s, 1, 811, r0);
  case 1:
    r0 = s.arg0.fields["_connected"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_connected__P2155.info = {"start":7723,"length":63,"line":250,"column":8,"endLine":252,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this"]}
controller_Controller_connected__P2155.isGetter = true;

function controller_Controller_connected__P2155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P2155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_currentScene__P2998(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2316]) return breakpoint(s, 1, 2316, r0);
  case 1:
    s.tmp_0 = game_init__P5245_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1085; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2317]) return breakpoint(s, 3, 2317, r0);
  case 3:
    r0 = globals._scene___5237;
    return leave(s, r0)
  default: oops()
} } }
game_currentScene__P2998.info = {"start":4025,"length":90,"line":118,"column":4,"endLine":121,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"currentScene","argumentNames":[]}

function game_currentScene__P2998_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_currentScene__P2998, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_addScenePopHandler__P3019(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2352]) return breakpoint(s, 5, 2352, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___5240);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2353]) return breakpoint(s, 6, 2353, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals._scenePopHandlers___5240 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2354]) return breakpoint(s, 7, 2354, r0);
  case 7:
    r0 = pxsim_Array_.indexOf(globals._scenePopHandlers___5240, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2355]) return breakpoint(s, 8, 2355, r0);
  case 8:
    r0 = pxsim_Array__push(globals._scenePopHandlers___5240, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePopHandler__P3019.info = {"start":17045,"length":237,"line":503,"column":4,"endLine":507,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePopHandler","argumentNames":["handler"]}

function game_addScenePopHandler__P3019_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePopHandler__P3019, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function settings_initScopes__P4927(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rn___21220 = undefined;
    s.lastBrkId = 709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[709]) return breakpoint(s, 1, 709, r0);
  case 1:
    s.tmp_1 = settings_runNumber__P2058_mk(s);
    s.callLocIdx = 122; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.rn___21220 = (r0);
    s.lastBrkId = 710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[710]) return breakpoint(s, 3, 710, r0);
  case 3:
    s.tmp_0 = settings_writeNumber__P2063_mk(s);
    s.tmp_0.arg0 = globals.RUN_KEY___4915;
    s.tmp_0.arg1 = s.rn___21220;
    s.callLocIdx = 123; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[711]) return breakpoint(s, 5, 711, r0);
  case 5:
    r0 = pxsim.control.deviceSerialNumber();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2147483647);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.seedAddRandom(s.tmp_0);
    s.lastBrkId = 712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[712]) return breakpoint(s, 6, 712, r0);
  case 6:
    r0 = pxsim_pxtcore.seedAddRandom(s.rn___21220);
    s.lastBrkId = 713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[713]) return breakpoint(s, 7, 713, r0);
  case 7:
    s.tmp_0 = settings_setScope__P4926_mk(s);
    r0 = pxsim_pxtcore.programName();
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 124; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_initScopes__P4927.info = {"start":1104,"length":230,"line":41,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"initScopes","argumentNames":[]}

function settings_initScopes__P4927_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_initScopes__P4927, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  rn___21220: undefined,
} }





function settings_setScope__P4926(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currScope___21249 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[703]) return breakpoint(s, 7, 703, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 100);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[704]) return breakpoint(s, 8, 704, r0);
  case 8:
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    s.lastBrkId = 705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[705]) return breakpoint(s, 9, 705, r0);
  case 9:
    s.tmp_0 = settings_readString__P2066_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___4916;
    s.callLocIdx = 120; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.currScope___21249 = (r0);
    s.lastBrkId = 706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[706]) return breakpoint(s, 11, 706, r0);
  case 11:
    r0 = (s.currScope___21249 != s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[707]) return breakpoint(s, 12, 707, r0);
  case 12:
    r0 = pxsim.settings._userClean();
    s.lastBrkId = 708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[708]) return breakpoint(s, 13, 708, r0);
  case 13:
    s.tmp_0 = settings_writeString__P2061_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___4916;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 121; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_setScope__P4926.info = {"start":826,"length":272,"line":31,"column":4,"endLine":39,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"setScope","argumentNames":["scope"]}

function settings_setScope__P4926_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_setScope__P4926, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currScope___21249: undefined,
  arg0: undefined,
} }





function settings_readString__P2066(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___21270 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[721]) return breakpoint(s, 4, 721, r0);
  case 4:
    s.tmp_0 = settings_readBuffer__P2065_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 129; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.buf___21270 = (r0);
    s.lastBrkId = 722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[722]) return breakpoint(s, 6, 722, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.buf___21270);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[723]) return breakpoint(s, 7, 723, r0);
  case 7:
    r0 = undefined;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[724]) return breakpoint(s, 8, 724, r0);
  case 8:
    r0 = pxsim.BufferMethods.toString(s.buf___21270);
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
settings_readString__P2066.info = {"start":2827,"length":177,"line":110,"column":4,"endLine":116,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readString","argumentNames":["key"]}

function settings_readString__P2066_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readString__P2066, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___21270: undefined,
  arg0: undefined,
} }





function settings_writeString__P2061(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[718]) return breakpoint(s, 1, 718, r0);
  case 1:
    s.tmp_0 = settings_writeBuffer__P2060_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 126; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeString__P2061.info = {"start":1895,"length":125,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeString","argumentNames":["key","value"]}

function settings_writeString__P2061_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeString__P2061, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_runNumber__P2058(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[702]) return breakpoint(s, 3, 702, r0);
  case 3:
    s.tmp_1 = settings_readNumber__P2068_mk(s);
    s.tmp_1.arg0 = globals.RUN_KEY___4915;
    s.callLocIdx = 119; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
settings_runNumber__P2058.info = {"start":745,"length":75,"line":27,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"runNumber","argumentNames":[]}

function settings_runNumber__P2058_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_runNumber__P2058, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control___screen_setupUpdate__P1994(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[682]) return breakpoint(s, 1, 682, r0);
  case 1:
    globals.__updated___4882 = (true);
    s.lastBrkId = 683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[683]) return breakpoint(s, 2, 683, r0);
  case 2:
    globals.__update___4880 = (s.arg0);
    s.lastBrkId = 684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[684]) return breakpoint(s, 3, 684, r0);
  case 3:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 113; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_setupUpdate__P1994.info = {"start":198,"length":125,"line":10,"column":4,"endLine":14,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"setupUpdate","argumentNames":["update"]}

function control___screen_setupUpdate__P1994_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_setupUpdate__P1994, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function _screen_internal_getScreenHeight__P2037(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[696]) return breakpoint(s, 1, 696, r0);
  case 1:
    r0 = pxsim_pxtcore.getConfig(2103, s.arg0);
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_getScreenHeight__P2037.info = {"start":960,"length":127,"line":28,"column":4,"endLine":30,"endColumn":5,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"getScreenHeight","argumentNames":["defl"]}

function _screen_internal_getScreenHeight__P2037_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_getScreenHeight__P2037, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function _screen_internal_getScreenWidth__P2036(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[695]) return breakpoint(s, 1, 695, r0);
  case 1:
    r0 = pxsim_pxtcore.getConfig(2102, s.arg0);
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_getScreenWidth__P2036.info = {"start":810,"length":125,"line":23,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"getScreenWidth","argumentNames":["defl"]}

function _screen_internal_getScreenWidth__P2036_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_getScreenWidth__P2036, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function control___screen_update__P1993(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[679]) return breakpoint(s, 3, 679, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.__update___4880);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[680]) return breakpoint(s, 4, 680, r0);
  case 4:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = globals.__update___4880;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 112; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[681]) return breakpoint(s, 6, 681, r0);
  case 6:
    globals.__updated___4882 = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_update__P1993.info = {"start":90,"length":102,"line":4,"column":4,"endLine":8,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"update","argumentNames":[]}

function control___screen_update__P1993_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_update__P1993, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function pause__P413(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[488]) return breakpoint(s, 1, 488, r0);
  case 1:
    setupResume(s, 2);
    pxsim.loops.pause(s.arg0);
    checkResumeConsumed();
    return;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pause__P413.info = {"start":246,"length":57,"line":7,"column":0,"endLine":9,"endColumn":1,"fileName":"pxt_modules/base/pause.ts","functionName":"pause","argumentNames":["ms"]}

function pause__P413_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pause__P413, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_Melody_toString__P1635(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1626_VT)) failedCast(r0);
    s.lastBrkId = 522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[522]) return breakpoint(s, 1, 522, r0);
  case 1:
    r0 = s.arg0.fields["_text"];
    return leave(s, r0)
  default: oops()
} } }
music_Melody_toString__P1635.info = {"start":10223,"length":53,"line":318,"column":8,"endLine":320,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"toString","argumentNames":["this"]}

function music_Melody_toString__P1635_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_toString__P1635, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ShapeFactory_createParticle__P3216(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___21308 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C3212_VT)) failedCast(r0);
    s.lastBrkId = 2822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2822]) return breakpoint(s, 1, 2822, r0);
  case 1:
    s.tmp_0 = particles_AreaFactory_createParticle__P3202_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1390; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___21308 = (r0);
    s.lastBrkId = 2823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2823]) return breakpoint(s, 3, 2823, r0);
  case 3:
    s.tmp_0 = r0 = s.p___21308;
    s.tmp_2 = Math_FastRandom_randomRange__P3062_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 1;
    s.tmp_2.arg2 = 14;
    s.callLocIdx = 1391; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.tmp_1);
    s.lastBrkId = 2824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2824]) return breakpoint(s, 5, 2824, r0);
  case 5:
    r0 = s.p___21308;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_createParticle__P3216.info = {"start":7505,"length":178,"line":239,"column":8,"endLine":243,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ShapeFactory_createParticle__P3216_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_createParticle__P3216, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  p___21308: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_createParticle__P3202(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___21320 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C3196_VT)) failedCast(r0);
    s.lastBrkId = 2806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2806]) return breakpoint(s, 3, 2806, r0);
  case 3:
    s.tmp_0 = particles_SprayFactory_createParticle__P3192_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1372; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.p___21320 = (r0);
    s.lastBrkId = 2807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2807]) return breakpoint(s, 5, 2807, r0);
  case 5:
    s.tmp_0 = r0 = s.p___21320;
    s.tmp_2 = Math_FastRandom_randomRange__P3062_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["minLifespan"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["maxLifespan"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1373; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2808]) return breakpoint(s, 7, 2808, r0);
  case 7:
    s.tmp_0 = r0 = s.p___21320;
    s.tmp_2 = Fx_iadd__P158_mk(s);
    s.tmp_4 = Math_FastRandom_randomRange__P3062_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 1374; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2.arg0 = r0;
    r0 = s.p___21320.fields["_x"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1375; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2809]) return breakpoint(s, 10, 2809, r0);
  case 10:
    s.tmp_1 = if_height_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "height");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["height"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["height"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1377; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_height_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "height");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["height"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["height"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1378; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.p___21320;
    s.tmp_7 = Fx_iadd__P158_mk(s);
    s.tmp_9 = Math_FastRandom_randomRange__P3062_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = 0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 1376; s.pc = 14; return s.tmp_9;
  case 14:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.tmp_4);
    s.tmp_7.arg0 = r0;
    r0 = s.p___21320.fields["_y"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 1379; s.pc = 13; return s.tmp_7;
  case 13:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    s.lastBrkId = 2810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2810]) return breakpoint(s, 15, 2810, r0);
  case 15:
    r0 = s.p___21320;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_createParticle__P3202.info = {"start":4334,"length":426,"line":148,"column":8,"endLine":156,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_AreaFactory_createParticle__P3202_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_createParticle__P3202, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  p___21320: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_iadd__P158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[218]) return breakpoint(s, 1, 218, r0);
  case 1:
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_iadd__P158.info = {"start":634,"length":110,"line":23,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"iadd","argumentNames":["a","b"]}

function Fx_iadd__P158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_iadd__P158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_SprayFactory_createParticle__P3192(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___21376 = undefined;
    s.angle___21380 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3190_VT)) failedCast(r0);
    s.lastBrkId = 2791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2791]) return breakpoint(s, 1, 2791, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_createParticle__P3188_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1361; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___21376 = (r0);
    s.lastBrkId = 2792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2792]) return breakpoint(s, 3, 2792, r0);
  case 3:
    r0 = s.arg0.fields["minAngle"];
    s.tmp_1 = r0;
    s.tmp_3 = Math_FastRandom_randomRange__P3062_mk(s);
    s.tmp_3.arg0 = globals.galois___5593;
    s.tmp_3.arg1 = 0;
    r0 = s.arg0.fields["spread"];
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1362; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % 100);
    s.angle___21380 = (r0);
    s.lastBrkId = 2793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2793]) return breakpoint(s, 5, 2793, r0);
  case 5:
    s.tmp_0 = r0 = s.p___21376;
    s.tmp_2 = Fx_mul__P160_mk(s);
    r0 = pxsim_Array__getAt(globals.cachedSin___5588, s.angle___21380);
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1363; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.lastBrkId = 2794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2794]) return breakpoint(s, 7, 2794, r0);
  case 7:
    s.tmp_0 = r0 = s.p___21376;
    s.tmp_2 = Fx_mul__P160_mk(s);
    r0 = pxsim_Array__getAt(globals.cachedCos___5589, s.angle___21380);
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1364; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 2795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2795]) return breakpoint(s, 9, 2795, r0);
  case 9:
    r0 = s.p___21376;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_createParticle__P3192.info = {"start":2851,"length":333,"line":105,"column":8,"endLine":113,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_SprayFactory_createParticle__P3192_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_createParticle__P3192, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___21376: undefined,
  angle___21380: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Dialog_drawTextCore__P2930(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lines___21419 = undefined;
    s.availableWidth___21425 = undefined;
    s.availableHeight___21428 = undefined;
    s.charactersPerRow___21431 = undefined;
    s.rowsOfCharacters___21439 = undefined;
    s.textLeft___21450 = undefined;
    s.textTop___21472 = undefined;
    s.row___21487 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Dialog__C2920_VT)) failedCast(r0);
    s.lastBrkId = 2103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2103]) return breakpoint(s, 10, 2103, r0);
  case 10:
    r0 = s.arg0.fields["chunks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["chunks"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2104]) return breakpoint(s, 11, 2104, r0);
  case 11:
    { step = 9; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2105]) return breakpoint(s, 12, 2105, r0);
  case 12:
    r0 = s.arg0.fields["chunks"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["chunkIndex"];
    s.tmp_7 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.tmp_7);
    s.lines___21419 = (r0);
    s.lastBrkId = 2106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2106]) return breakpoint(s, 13, 2106, r0);
  case 13:
    s.tmp_0 = game_BaseDialog_textAreaWidth__P5205_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1005; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.availableWidth___21425 = (r0);
    s.lastBrkId = 2107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2107]) return breakpoint(s, 15, 2107, r0);
  case 15:
    s.tmp_0 = game_BaseDialog_textAreaHeight__P5206_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1006; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.availableHeight___21428 = (r0);
    s.lastBrkId = 2108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2108]) return breakpoint(s, 17, 2108, r0);
  case 17:
    s.tmp_1 = r0 = s.availableWidth___21425;
    s.tmp_3 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1007; s.pc = 18; return s.tmp_3; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.charactersPerRow___21431 = (r0);
    s.lastBrkId = 2109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2109]) return breakpoint(s, 19, 2109, r0);
  case 19:
    s.tmp_1 = r0 = s.availableHeight___21428;
    s.tmp_3 = game_BaseDialog_rowHeight__P5204_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1008; s.pc = 20; return s.tmp_3;
  case 20:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.rowsOfCharacters___21439 = (r0);
    s.lastBrkId = 2110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2110]) return breakpoint(s, 21, 2110, r0);
  case 21:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 12);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2111]) return breakpoint(s, 22, 2111, r0);
  case 22:
    s.tmp_2 = game_BaseDialog_drawBorder__P5199_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1009; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 2112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2112]) return breakpoint(s, 24, 2112, r0);
  case 24:
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_2 = r0;
    r0 = (1 + s.tmp_2);
    s.tmp_1 = r0;
    s.tmp_4 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["unit"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 12;
    s.callLocIdx = 1010; s.pc = 25; return s.tmp_4;
  case 25:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0 = r0;
    s.tmp_7 = r0 = s.availableWidth___21425;
    s.tmp_9 = r0 = s.charactersPerRow___21431;
    s.tmp_11 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_11.arg0 = r0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "charWidth");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["charWidth"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["charWidth"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 1011; s.pc = 26; return s.tmp_11; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9 * s.tmp_10);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 - s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_0 + s.tmp_5);
    s.textLeft___21450 = (r0);
    s.lastBrkId = 2113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2113]) return breakpoint(s, 27, 2113, r0);
  case 27:
    r0 = s.arg0.fields["image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (1 + s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.lines___21419);
    s.tmp_6 = r0;
    s.tmp_8 = game_BaseDialog_rowHeight__P5204_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 1012; s.pc = 28; return s.tmp_8;
  case 28:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 * s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_0 - s.tmp_4);
    s.textTop___21472 = (r0);
    s.lastBrkId = 2114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2114]) return breakpoint(s, 29, 2114, r0);
  case 29:
    s.row___21487 = (0);
    s.lastBrkId = 2115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2115]) return breakpoint(s, 30, 2115, r0);
  case 30:
  case 7:
    s.lastBrkId = 2116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2116]) return breakpoint(s, 31, 2116, r0);
  case 31:
    s.tmp_1 = r0 = s.row___21487;
    r0 = pxsim_Array__length(s.lines___21419);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2117]) return breakpoint(s, 32, 2117, r0);
  case 32:
    s.tmp_3 = helpers_imagePrint__P1990_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_3.arg0 = r0;
    r0 = pxsim_Array__getAt(s.lines___21419, s.row___21487);
    s.tmp_3.arg1 = r0;
    s.tmp_3.arg2 = s.textLeft___21450;
    s.tmp_4 = r0 = s.textTop___21472;
    s.tmp_6 = r0 = s.row___21487;
    s.tmp_8 = game_BaseDialog_rowHeight__P5204_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 1013; s.pc = 34; return s.tmp_8;
  case 34:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 * s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3.arg3 = r0;
    r0 = s.arg0.fields["textColor"];
    s.tmp_3.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_3.arg5 = r0;
    s.tmp_3.arg6 = undefined;
    s.callLocIdx = 1014; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.lastBrkId = 2118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2118]) return breakpoint(s, 35, 2118, r0);
  case 35:
    r0 = (s.row___21487 + 1);
    s.row___21487 = (r0);
    { step = 7; continue; }
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Dialog_drawTextCore__P2930.info = {"start":7867,"length":1045,"line":247,"column":8,"endLine":269,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawTextCore","argumentNames":["this"]}

function game_Dialog_drawTextCore__P2930_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Dialog_drawTextCore__P2930, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  lines___21419: undefined,
  availableWidth___21425: undefined,
  availableHeight___21428: undefined,
  charactersPerRow___21431: undefined,
  rowsOfCharacters___21439: undefined,
  textLeft___21450: undefined,
  textTop___21472: undefined,
  row___21487: undefined,
  arg0: undefined,
} }





function OptionScreenCollection_createBase__P7322(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3755]) return breakpoint(s, 1, 3755, r0);
  case 1:
    s.tmp_0 = OptionScreen_createBase__P7313_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1773; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3756]) return breakpoint(s, 3, 3756, r0);
  case 3:
    s.tmp_0 = OptionScreenCollection_drawTabs__P7323_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1774; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_createBase__P7322.info = {"start":56251,"length":87,"line":1701,"column":4,"endLine":1704,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"createBase","argumentNames":["this"]}

function OptionScreenCollection_createBase__P7322_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_createBase__P7322, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function OptionScreenCollection_drawTabs__P7323(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreenCollection__C4488_VT)) failedCast(r0);
    s.lastBrkId = 3757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3757]) return breakpoint(s, 1, 3757, r0);
  case 1:
    s.tmp_0 = StringArrayTextSpriteFactory_DrawHorizontal__P4416_mk(s);
    r0 = s.arg0.fields["_tabs"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1775; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3758]) return breakpoint(s, 3, 3758, r0);
  case 3:
    s.tmp_0 = StringArrayTextSpriteFactory_Redraw__P4419_mk(s);
    r0 = s.arg0.fields["_tabs"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_currOptScreen"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1776; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreenCollection_drawTabs__P7323.info = {"start":56415,"length":130,"line":1709,"column":4,"endLine":1712,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"drawTabs","argumentNames":["this"]}

function OptionScreenCollection_drawTabs__P7323_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreenCollection_drawTabs__P7323, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function StringArrayTextSpriteFactory_Redraw__P4419(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ts___26064 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringArrayTextSpriteFactory__C4412_VT)) failedCast(r0);
    s.lastBrkId = 3345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3345]) return breakpoint(s, 7, 3345, r0);
  case 7:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.arg1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3346]) return breakpoint(s, 8, 3346, r0);
  case 8:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.arg1);
    s.ts___26064 = (r0);
    s.lastBrkId = 3347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3347]) return breakpoint(s, 9, 3347, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3348]) return breakpoint(s, 10, 3348, r0);
  case 10:
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = (s.ts___26064).fields["bg"] = (s.tmp_0);
    s.lastBrkId = 3349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3349]) return breakpoint(s, 11, 3349, r0);
  case 11:
    r0 = (s.ts___26064).fields["fg"] = (15);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 3350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3350]) return breakpoint(s, 12, 3350, r0);
  case 12:
    r0 = (s.ts___26064).fields["bg"] = (0);
    s.lastBrkId = 3351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3351]) return breakpoint(s, 13, 3351, r0);
  case 13:
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = (s.ts___26064).fields["fg"] = (s.tmp_0);
  case 4:
    s.lastBrkId = 3352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3352]) return breakpoint(s, 14, 3352, r0);
  case 14:
    s.tmp_0 = TextSprite_update__P4334_mk(s);
    s.tmp_0.arg0 = s.ts___26064;
    s.callLocIdx = 1557; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StringArrayTextSpriteFactory_Redraw__P4419.info = {"start":7000,"length":385,"line":294,"column":4,"endLine":306,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"Redraw","argumentNames":["this","item","reverse"]}

function StringArrayTextSpriteFactory_Redraw__P4419_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringArrayTextSpriteFactory_Redraw__P4419, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ts___26064: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function StringArrayTextSpriteFactory_DrawHorizontal__P4416(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currLeft___26087 = undefined;
    s.s___26090 = undefined;
    s.unnamed12694___U2 = undefined;
    s.unnamed12695___U3 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, StringArrayTextSpriteFactory__C4412_VT)) failedCast(r0);
    s.lastBrkId = 3336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3336]) return breakpoint(s, 7, 3336, r0);
  case 7:
    s.tmp_0 = StringArrayTextSpriteFactory_CreateSprites__P7304_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1552; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 3337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3337]) return breakpoint(s, 9, 3337, r0);
  case 9:
    s.currLeft___26087 = (s.arg1);
    s.lastBrkId = 3338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3338]) return breakpoint(s, 10, 3338, r0);
  case 10:
    s.s___26090 = (undefined);
    r0 = s.arg0.fields["_sprites"];
    s.unnamed12694___U2 = (r0);
    s.unnamed12695___U3 = (0);
    s.lastBrkId = 3339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3339]) return breakpoint(s, 11, 3339, r0);
  case 11:
  case 1:
    s.tmp_0 = r0 = s.unnamed12695___U3;
    r0 = pxsim_Array__length(s.unnamed12694___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12694___U2, s.unnamed12695___U3);
    s.s___26090 = (r0);
    s.lastBrkId = 3340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3340]) return breakpoint(s, 12, 3340, r0);
  case 12:
    s.lastBrkId = 3341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3341]) return breakpoint(s, 13, 3341, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 2; continue; }
    r0 = s.arg0.fields["borderWidth"];
    { step = 3; continue; }
  case 2:
    r0 = 0;
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 4; continue; }
    r0 = s.arg0.fields["color"];
    { step = 5; continue; }
  case 4:
    r0 = 0;
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = TextSprite_setBorder__P4338_mk(s);
    s.tmp_4.arg0 = s.s___26090;
    s.tmp_4.arg1 = s.tmp_2;
    s.tmp_4.arg2 = s.tmp_3;
    r0 = s.arg0.fields["padding"];
    s.tmp_4.arg3 = r0;
    s.callLocIdx = 1553; s.pc = 14; return s.tmp_4;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 3342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3342]) return breakpoint(s, 15, 3342, r0);
  case 15:
    s.tmp_0 = Sprite_left__P2399_mk(s);
    s.tmp_0.arg0 = s.s___26090;
    s.tmp_0.arg1 = s.currLeft___26087;
    s.callLocIdx = 1554; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 3343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3343]) return breakpoint(s, 17, 3343, r0);
  case 17:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    s.tmp_0.arg0 = s.s___26090;
    r0 = s.arg0.fields["y"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1555; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 3344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3344]) return breakpoint(s, 19, 3344, r0);
  case 19:
    s.tmp_0 = r0 = s.currLeft___26087;
    s.tmp_3 = Sprite_width__P2396_mk(s);
    s.tmp_3.arg0 = s.s___26090;
    s.callLocIdx = 1556; s.pc = 20; return s.tmp_3;
  case 20:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.currLeft___26087 = (r0);
    r0 = (s.unnamed12695___U3 + 1);
    s.unnamed12695___U3 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed12694___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
StringArrayTextSpriteFactory_DrawHorizontal__P4416.info = {"start":6281,"length":393,"line":269,"column":4,"endLine":278,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"DrawHorizontal","argumentNames":["this","left","borders"]}

function StringArrayTextSpriteFactory_DrawHorizontal__P4416_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: StringArrayTextSpriteFactory_DrawHorizontal__P4416, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  currLeft___26087: undefined,
  s___26090: undefined,
  unnamed12694___U2: undefined,
  unnamed12695___U3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function animation_MovementAnimation_constructor__P3359(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_MovementAnimation__C3358_VT)) failedCast(r0);
    r0 = (s.arg0).fields["path"] = (s.arg2);
    r0 = (s.arg0).fields["nodeInterval"] = (s.arg3);
    s.lastBrkId = 3102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3102]) return breakpoint(s, 1, 3102, r0);
  case 1:
    s.tmp_0 = animation_SpriteAnimation_constructor__P3352_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg4;
    s.callLocIdx = 1484; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 3103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3103]) return breakpoint(s, 3, 3103, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_x__P2353_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1485; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["startX"] = (s.tmp_1);
    s.lastBrkId = 3104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3104]) return breakpoint(s, 5, 3104, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_y__P2355_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1486; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["startY"] = (s.tmp_1);
    s.lastBrkId = 3105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3105]) return breakpoint(s, 7, 3105, r0);
  case 7:
    r0 = (s.arg0).fields["elapsedTime"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_MovementAnimation_constructor__P3359.info = {"start":20275,"length":244,"line":555,"column":8,"endLine":560,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"inline","argumentNames":["this","sprite","path","nodeInterval","loop"]}

function animation_MovementAnimation_constructor__P3359_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_MovementAnimation_constructor__P3359, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function animation_MovementAnimation_update__P3360(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.result___21564 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_MovementAnimation__C3358_VT)) failedCast(r0);
    s.lastBrkId = 3106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3106]) return breakpoint(s, 6, 3106, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["elapsedTime"];
    s.tmp_2 = r0;
    s.tmp_4 = game_eventContext__P3001_mk(s);
    s.callLocIdx = 1487; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["deltaTimeMillis"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["elapsedTime"] = (s.tmp_1);
    s.lastBrkId = 3107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3107]) return breakpoint(s, 8, 3107, r0);
  case 8:
    s.tmp_0 = animation_Path_run__P3350_mk(s);
    r0 = s.arg0.fields["path"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["nodeInterval"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["sprite"];
    s.tmp_0.arg2 = r0;
    r0 = s.arg0.fields["elapsedTime"];
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1488; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.result___21564 = (r0);
    s.lastBrkId = 3108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3108]) return breakpoint(s, 10, 3108, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.result___21564);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 3109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3109]) return breakpoint(s, 11, 3109, r0);
  case 11:
    r0 = s.arg0.fields["loop"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3110]) return breakpoint(s, 12, 3110, r0);
  case 12:
    r0 = true;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3111]) return breakpoint(s, 13, 3111, r0);
  case 13:
    r0 = (s.arg0).fields["elapsedTime"] = (0);
    s.lastBrkId = 3112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3112]) return breakpoint(s, 14, 3112, r0);
  case 14:
    s.tmp_0 = animation_Path_reset__P3349_mk(s);
    r0 = s.arg0.fields["path"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1489; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 3113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3113]) return breakpoint(s, 16, 3113, r0);
  case 16:
    s.tmp_0 = Sprite_x__P2354_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["startX"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1490; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 3114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3114]) return breakpoint(s, 18, 3114, r0);
  case 18:
    s.tmp_0 = Sprite_y__P2356_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["startY"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1491; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 3115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3115]) return breakpoint(s, 20, 3115, r0);
  case 20:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
animation_MovementAnimation_update__P3360.info = {"start":20529,"length":470,"line":562,"column":8,"endLine":574,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"update","argumentNames":["this"]}

function animation_MovementAnimation_update__P3360_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_MovementAnimation_update__P3360, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  result___21564: undefined,
  arg0: undefined,
} }





function animation_Path_run__P3350(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.nodeIndex___21636 = undefined;
    s.nodeTime___21642 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3346_VT)) failedCast(r0);
    s.lastBrkId = 2961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2961]) return breakpoint(s, 10, 2961, r0);
  case 10:
    r0 = (s.arg3 / s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.nodeIndex___21636 = (r0);
    s.lastBrkId = 2962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2962]) return breakpoint(s, 11, 2962, r0);
  case 11:
    r0 = (s.arg3 % s.arg1);
    s.nodeTime___21642 = (r0);
    s.lastBrkId = 2963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2963]) return breakpoint(s, 12, 2963, r0);
  case 12:
    r0 = s.arg0.fields["startX"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2964]) return breakpoint(s, 13, 2964, r0);
  case 13:
    s.tmp_2 = r0 = s.arg0;
    s.tmp_4 = Sprite_x__P2353_mk(s);
    s.tmp_4.arg0 = s.arg2;
    s.callLocIdx = 1432; s.pc = 14; return s.tmp_4;
  case 14:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["startX"] = (s.tmp_3);
    s.lastBrkId = 2965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2965]) return breakpoint(s, 15, 2965, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_y__P2355_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1433; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["startY"] = (s.tmp_1);
    s.lastBrkId = 2966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2966]) return breakpoint(s, 17, 2966, r0);
  case 17:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_x__P2353_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1434; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastX"] = (s.tmp_1);
    s.lastBrkId = 2967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2967]) return breakpoint(s, 19, 2967, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_y__P2355_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1435; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastY"] = (s.tmp_1);
    s.lastBrkId = 2968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2968]) return breakpoint(s, 21, 2968, r0);
  case 21:
    r0 = (s.arg0).fields["commandIndex"] = (0);
    s.lastBrkId = 2969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2969]) return breakpoint(s, 22, 2969, r0);
  case 22:
    s.tmp_0 = animation_Path_readNextCommand__P5659_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1436; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 2970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2970]) return breakpoint(s, 24, 2970, r0);
  case 24:
  case 3:
    s.lastBrkId = 2971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2971]) return breakpoint(s, 25, 2971, r0);
  case 25:
    r0 = s.arg0.fields["commandIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.nodeIndex___21636);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2972]) return breakpoint(s, 26, 2972, r0);
  case 26:
    r0 = s.arg0.fields["currentCommand"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2973]) return breakpoint(s, 27, 2973, r0);
  case 27:
    s.tmp_3 = animation_Path_runCurrentCommand__P5662_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.arg2;
    s.tmp_3.arg2 = s.arg1;
    s.tmp_3.arg3 = s.arg1;
    s.callLocIdx = 1437; s.pc = 28; return s.tmp_3;
  case 28:
    r0 = s.retval;
    s.lastBrkId = 2974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2974]) return breakpoint(s, 29, 2974, r0);
  case 29:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_x__P2353_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1438; s.pc = 30; return s.tmp_2;
  case 30:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastX"] = (s.tmp_1);
    s.lastBrkId = 2975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2975]) return breakpoint(s, 31, 2975, r0);
  case 31:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_y__P2355_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1439; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastY"] = (s.tmp_1);
  case 4:
  case 5:
    s.lastBrkId = 2976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2976]) return breakpoint(s, 33, 2976, r0);
  case 33:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["commandIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["commandIndex"] = (s.tmp_1);
    s.lastBrkId = 2977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2977]) return breakpoint(s, 34, 2977, r0);
  case 34:
    s.tmp_0 = animation_Path_readNextCommand__P5659_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1440; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 2978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2978]) return breakpoint(s, 36, 2978, r0);
  case 36:
    r0 = s.arg0.fields["length"];
    s.tmp_1 = r0;
    r0 = (s.nodeIndex___21636 >= s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2979]) return breakpoint(s, 37, 2979, r0);
  case 37:
    r0 = true;
    { step = 9; continue; }
  case 7:
  case 8:
    s.lastBrkId = 2980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2980]) return breakpoint(s, 38, 2980, r0);
  case 38:
    s.tmp_2 = animation_Path_runCurrentCommand__P5662_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg2;
    s.tmp_2.arg2 = s.nodeTime___21642;
    s.tmp_2.arg3 = s.arg1;
    s.callLocIdx = 1441; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
    s.lastBrkId = 2981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2981]) return breakpoint(s, 40, 2981, r0);
  case 40:
    r0 = false;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
animation_Path_run__P3350.info = {"start":4368,"length":1111,"line":150,"column":8,"endLine":179,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"run","argumentNames":["this","interval","target","runningTime"]}

function animation_Path_run__P3350_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_run__P3350, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  nodeIndex___21636: undefined,
  nodeTime___21642: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function animation_Path_runCurrentCommand__P5662(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3346_VT)) failedCast(r0);
    s.lastBrkId = 2982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2982]) return breakpoint(s, 28, 2982, r0);
  case 28:
    r0 = s.arg0.fields["currentCommand"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("M", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq("m", s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq("L", s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq("l", s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq("H", s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq("h", s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq("V", s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq("v", s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq("Q", s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq("q", s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq("T", s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq("t", s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq("C", s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = pxsim_pxtcore.switch_eq("c", s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = pxsim_pxtcore.switch_eq("S", s.tmp_0);
    if (r0) { step = 19; continue; }
    r0 = pxsim_pxtcore.switch_eq("s", s.tmp_0);
    if (r0) { step = 22; continue; }
    r0 = pxsim_pxtcore.switch_eq("Z", s.tmp_0);
    if (r0) { step = 25; continue; }
    r0 = pxsim_pxtcore.switch_eq("z", s.tmp_0);
    if (r0) { step = 26; continue; }
    r0 = s.tmp_0;
    { step = 27; continue; }
  case 1:
    s.lastBrkId = 2983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2983]) return breakpoint(s, 29, 2983, r0);
  case 29:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 2984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2984]) return breakpoint(s, 30, 2984, r0);
  case 30:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 2985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2985]) return breakpoint(s, 31, 2985, r0);
  case 31:
    s.tmp_0 = animation_moveTo__P5664_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["args"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 1);
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1442; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.lastBrkId = 2986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2986]) return breakpoint(s, 33, 2986, r0);
  case 33:
    { step = 27; continue; }
  case 2:
    s.lastBrkId = 2987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2987]) return breakpoint(s, 34, 2987, r0);
  case 34:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 2988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2988]) return breakpoint(s, 35, 2988, r0);
  case 35:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 2989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2989]) return breakpoint(s, 36, 2989, r0);
  case 36:
    s.tmp_0 = animation_moveTo__P5664_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, 1);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1443; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    s.lastBrkId = 2990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2990]) return breakpoint(s, 38, 2990, r0);
  case 38:
    { step = 27; continue; }
  case 3:
    s.lastBrkId = 2991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2991]) return breakpoint(s, 39, 2991, r0);
  case 39:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 2992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2992]) return breakpoint(s, 40, 2992, r0);
  case 40:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 2993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2993]) return breakpoint(s, 41, 2993, r0);
  case 41:
    s.tmp_0 = animation_lineTo__P5665_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 1);
    s.tmp_0.arg6 = r0;
    s.callLocIdx = 1444; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.lastBrkId = 2994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2994]) return breakpoint(s, 43, 2994, r0);
  case 43:
    { step = 27; continue; }
  case 4:
    s.lastBrkId = 2995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2995]) return breakpoint(s, 44, 2995, r0);
  case 44:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 2996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2996]) return breakpoint(s, 45, 2996, r0);
  case 45:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 2997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2997]) return breakpoint(s, 46, 2997, r0);
  case 46:
    s.tmp_0 = animation_lineTo__P5665_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, 1);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_0.arg6 = r0;
    s.callLocIdx = 1445; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    s.lastBrkId = 2998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2998]) return breakpoint(s, 48, 2998, r0);
  case 48:
    { step = 27; continue; }
  case 5:
    s.lastBrkId = 2999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2999]) return breakpoint(s, 49, 2999, r0);
  case 49:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 3000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3000]) return breakpoint(s, 50, 3000, r0);
  case 50:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 3001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3001]) return breakpoint(s, 51, 3001, r0);
  case 51:
    s.tmp_0 = animation_lineTo__P5665_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg6 = r0;
    s.callLocIdx = 1446; s.pc = 52; return s.tmp_0;
  case 52:
    r0 = s.retval;
    s.lastBrkId = 3002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3002]) return breakpoint(s, 53, 3002, r0);
  case 53:
    { step = 27; continue; }
  case 6:
    s.lastBrkId = 3003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3003]) return breakpoint(s, 54, 3003, r0);
  case 54:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 3004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3004]) return breakpoint(s, 55, 3004, r0);
  case 55:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 3005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3005]) return breakpoint(s, 56, 3005, r0);
  case 56:
    s.tmp_0 = animation_lineTo__P5665_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg6 = r0;
    s.callLocIdx = 1447; s.pc = 57; return s.tmp_0;
  case 57:
    r0 = s.retval;
    s.lastBrkId = 3006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3006]) return breakpoint(s, 58, 3006, r0);
  case 58:
    { step = 27; continue; }
  case 7:
    s.lastBrkId = 3007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3007]) return breakpoint(s, 59, 3007, r0);
  case 59:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 3008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3008]) return breakpoint(s, 60, 3008, r0);
  case 60:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 3009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3009]) return breakpoint(s, 61, 3009, r0);
  case 61:
    s.tmp_0 = animation_lineTo__P5665_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0.arg6 = r0;
    s.callLocIdx = 1448; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
    s.lastBrkId = 3010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3010]) return breakpoint(s, 63, 3010, r0);
  case 63:
    { step = 27; continue; }
  case 8:
    s.lastBrkId = 3011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3011]) return breakpoint(s, 64, 3011, r0);
  case 64:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 3012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3012]) return breakpoint(s, 65, 3012, r0);
  case 65:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 3013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3013]) return breakpoint(s, 66, 3013, r0);
  case 66:
    s.tmp_0 = animation_lineTo__P5665_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg6 = r0;
    s.callLocIdx = 1449; s.pc = 67; return s.tmp_0;
  case 67:
    r0 = s.retval;
    s.lastBrkId = 3014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3014]) return breakpoint(s, 68, 3014, r0);
  case 68:
    { step = 27; continue; }
  case 9:
    s.lastBrkId = 3015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3015]) return breakpoint(s, 69, 3015, r0);
  case 69:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlX"] = (s.tmp_1);
    s.lastBrkId = 3016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3016]) return breakpoint(s, 70, 3016, r0);
  case 70:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlY"] = (s.tmp_1);
    s.lastBrkId = 3017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3017]) return breakpoint(s, 71, 3017, r0);
  case 71:
    s.tmp_0 = animation_quadraticCurveTo__P5666_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 1);
    s.tmp_0.arg6 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 2);
    s.tmp_0.arg7 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, 3);
    s.tmp_0.arg8 = r0;
    s.callLocIdx = 1450; s.pc = 72; return s.tmp_0;
  case 72:
    r0 = s.retval;
    s.lastBrkId = 3018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3018]) return breakpoint(s, 73, 3018, r0);
  case 73:
    { step = 27; continue; }
  case 10:
    s.lastBrkId = 3019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3019]) return breakpoint(s, 74, 3019, r0);
  case 74:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 0);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlX"] = (s.tmp_1);
    s.lastBrkId = 3020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3020]) return breakpoint(s, 75, 3020, r0);
  case 75:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlY"] = (s.tmp_1);
    s.lastBrkId = 3021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3021]) return breakpoint(s, 76, 3021, r0);
  case 76:
    s.tmp_0 = animation_quadraticCurveTo__P5666_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, 1);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_0.arg6 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_8, 2);
    s.tmp_7 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_9 = r0;
    r0 = (s.tmp_7 + s.tmp_9);
    s.tmp_0.arg7 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_11 = r0;
    r0 = pxsim_Array__getAt(s.tmp_11, 3);
    s.tmp_10 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_12 = r0;
    r0 = (s.tmp_10 + s.tmp_12);
    s.tmp_0.arg8 = r0;
    s.callLocIdx = 1451; s.pc = 77; return s.tmp_0;
  case 77:
    r0 = s.retval;
    s.lastBrkId = 3022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3022]) return breakpoint(s, 78, 3022, r0);
  case 78:
    { step = 27; continue; }
  case 11:
    s.lastBrkId = 3023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3023]) return breakpoint(s, 79, 3023, r0);
  case 79:
    s.tmp_0 = animation_Path_ensureControlPoint__P5663_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1452; s.pc = 80; return s.tmp_0;
  case 80:
    r0 = s.retval;
    s.lastBrkId = 3024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3024]) return breakpoint(s, 81, 3024, r0);
  case 81:
    s.tmp_0 = animation_quadraticCurveTo__P5666_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastControlX"];
    s.tmp_4 = r0;
    r0 = (s.tmp_1 - s.tmp_4);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["lastControlY"];
    s.tmp_8 = r0;
    r0 = (s.tmp_5 - s.tmp_8);
    s.tmp_0.arg6 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_9 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, 0);
    s.tmp_0.arg7 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_10, 1);
    s.tmp_0.arg8 = r0;
    s.callLocIdx = 1453; s.pc = 82; return s.tmp_0;
  case 82:
    r0 = s.retval;
    s.lastBrkId = 3025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3025]) return breakpoint(s, 83, 3025, r0);
  case 83:
    r0 = (s.arg2 === s.arg3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 3026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3026]) return breakpoint(s, 84, 3026, r0);
  case 84:
    s.tmp_1 = r0 = s.arg0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["lastControlX"];
    s.tmp_6 = r0;
    r0 = (s.tmp_3 - s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["lastControlX"] = (s.tmp_2);
    s.lastBrkId = 3027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3027]) return breakpoint(s, 85, 3027, r0);
  case 85:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastControlY"];
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlY"] = (s.tmp_1);
  case 12:
  case 13:
    s.lastBrkId = 3028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3028]) return breakpoint(s, 86, 3028, r0);
  case 86:
    { step = 27; continue; }
  case 14:
    s.lastBrkId = 3029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3029]) return breakpoint(s, 87, 3029, r0);
  case 87:
    s.tmp_0 = animation_Path_ensureControlPoint__P5663_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1454; s.pc = 88; return s.tmp_0;
  case 88:
    r0 = s.retval;
    s.lastBrkId = 3030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3030]) return breakpoint(s, 89, 3030, r0);
  case 89:
    s.tmp_0 = animation_quadraticCurveTo__P5666_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastControlX"];
    s.tmp_4 = r0;
    r0 = (s.tmp_1 - s.tmp_4);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["lastControlY"];
    s.tmp_8 = r0;
    r0 = (s.tmp_5 - s.tmp_8);
    s.tmp_0.arg6 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_10, 0);
    s.tmp_9 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_11 = r0;
    r0 = (s.tmp_9 + s.tmp_11);
    s.tmp_0.arg7 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_13 = r0;
    r0 = pxsim_Array__getAt(s.tmp_13, 1);
    s.tmp_12 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_14 = r0;
    r0 = (s.tmp_12 + s.tmp_14);
    s.tmp_0.arg8 = r0;
    s.callLocIdx = 1455; s.pc = 90; return s.tmp_0;
  case 90:
    r0 = s.retval;
    s.lastBrkId = 3031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3031]) return breakpoint(s, 91, 3031, r0);
  case 91:
    r0 = (s.arg2 === s.arg3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 3032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3032]) return breakpoint(s, 92, 3032, r0);
  case 92:
    s.tmp_1 = r0 = s.arg0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["lastControlX"];
    s.tmp_6 = r0;
    r0 = (s.tmp_3 - s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["lastControlX"] = (s.tmp_2);
    s.lastBrkId = 3033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3033]) return breakpoint(s, 93, 3033, r0);
  case 93:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastControlY"];
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlY"] = (s.tmp_1);
  case 15:
  case 16:
    s.lastBrkId = 3034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3034]) return breakpoint(s, 94, 3034, r0);
  case 94:
    { step = 27; continue; }
  case 17:
    s.lastBrkId = 3035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3035]) return breakpoint(s, 95, 3035, r0);
  case 95:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlX"] = (s.tmp_1);
    s.lastBrkId = 3036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3036]) return breakpoint(s, 96, 3036, r0);
  case 96:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlY"] = (s.tmp_1);
    s.lastBrkId = 3037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3037]) return breakpoint(s, 97, 3037, r0);
  case 97:
    s.tmp_0 = animation_cubicCurveTo__P5667_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 1);
    s.tmp_0.arg6 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 2);
    s.tmp_0.arg7 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, 3);
    s.tmp_0.arg8 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, 4);
    s.tmp_0.arg9 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, 5);
    s.tmp_0.arg10 = r0;
    s.callLocIdx = 1456; s.pc = 98; return s.tmp_0;
  case 98:
    r0 = s.retval;
    s.lastBrkId = 3038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3038]) return breakpoint(s, 99, 3038, r0);
  case 99:
    { step = 27; continue; }
  case 18:
    s.lastBrkId = 3039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3039]) return breakpoint(s, 100, 3039, r0);
  case 100:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 2);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlX"] = (s.tmp_1);
    s.lastBrkId = 3040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3040]) return breakpoint(s, 101, 3040, r0);
  case 101:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 3);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlY"] = (s.tmp_1);
    s.lastBrkId = 3041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3041]) return breakpoint(s, 102, 3041, r0);
  case 102:
    s.tmp_0 = animation_cubicCurveTo__P5667_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, 1);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_0.arg6 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_8, 2);
    s.tmp_7 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_9 = r0;
    r0 = (s.tmp_7 + s.tmp_9);
    s.tmp_0.arg7 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_11 = r0;
    r0 = pxsim_Array__getAt(s.tmp_11, 3);
    s.tmp_10 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_12 = r0;
    r0 = (s.tmp_10 + s.tmp_12);
    s.tmp_0.arg8 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_14 = r0;
    r0 = pxsim_Array__getAt(s.tmp_14, 4);
    s.tmp_13 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_15 = r0;
    r0 = (s.tmp_13 + s.tmp_15);
    s.tmp_0.arg9 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_17 = r0;
    r0 = pxsim_Array__getAt(s.tmp_17, 5);
    s.tmp_16 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_18 = r0;
    r0 = (s.tmp_16 + s.tmp_18);
    s.tmp_0.arg10 = r0;
    s.callLocIdx = 1457; s.pc = 103; return s.tmp_0;
  case 103:
    r0 = s.retval;
    s.lastBrkId = 3042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3042]) return breakpoint(s, 104, 3042, r0);
  case 104:
    { step = 27; continue; }
  case 19:
    s.lastBrkId = 3043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3043]) return breakpoint(s, 105, 3043, r0);
  case 105:
    s.tmp_0 = animation_Path_ensureControlPoint__P5663_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1458; s.pc = 106; return s.tmp_0;
  case 106:
    r0 = s.retval;
    s.lastBrkId = 3044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3044]) return breakpoint(s, 107, 3044, r0);
  case 107:
    s.tmp_0 = animation_cubicCurveTo__P5667_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastControlX"];
    s.tmp_4 = r0;
    r0 = (s.tmp_1 - s.tmp_4);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["lastControlY"];
    s.tmp_8 = r0;
    r0 = (s.tmp_5 - s.tmp_8);
    s.tmp_0.arg6 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_9 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, 0);
    s.tmp_0.arg7 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_10, 1);
    s.tmp_0.arg8 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_11 = r0;
    r0 = pxsim_Array__getAt(s.tmp_11, 2);
    s.tmp_0.arg9 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_12 = r0;
    r0 = pxsim_Array__getAt(s.tmp_12, 3);
    s.tmp_0.arg10 = r0;
    s.callLocIdx = 1459; s.pc = 108; return s.tmp_0;
  case 108:
    r0 = s.retval;
    s.lastBrkId = 3045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3045]) return breakpoint(s, 109, 3045, r0);
  case 109:
    r0 = (s.arg2 === s.arg3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 3046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3046]) return breakpoint(s, 110, 3046, r0);
  case 110:
    s.tmp_1 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["lastControlX"] = (s.tmp_2);
    s.lastBrkId = 3047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3047]) return breakpoint(s, 111, 3047, r0);
  case 111:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlY"] = (s.tmp_1);
  case 20:
  case 21:
    s.lastBrkId = 3048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3048]) return breakpoint(s, 112, 3048, r0);
  case 112:
    { step = 27; continue; }
  case 22:
    s.lastBrkId = 3049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3049]) return breakpoint(s, 113, 3049, r0);
  case 113:
    s.tmp_0 = animation_Path_ensureControlPoint__P5663_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1460; s.pc = 114; return s.tmp_0;
  case 114:
    r0 = s.retval;
    s.lastBrkId = 3050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3050]) return breakpoint(s, 115, 3050, r0);
  case 115:
    s.tmp_0 = animation_cubicCurveTo__P5667_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["lastControlX"];
    s.tmp_4 = r0;
    r0 = (s.tmp_1 - s.tmp_4);
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["lastControlY"];
    s.tmp_8 = r0;
    r0 = (s.tmp_5 - s.tmp_8);
    s.tmp_0.arg6 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_10, 0);
    s.tmp_9 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_11 = r0;
    r0 = (s.tmp_9 + s.tmp_11);
    s.tmp_0.arg7 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_13 = r0;
    r0 = pxsim_Array__getAt(s.tmp_13, 1);
    s.tmp_12 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_14 = r0;
    r0 = (s.tmp_12 + s.tmp_14);
    s.tmp_0.arg8 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_16 = r0;
    r0 = pxsim_Array__getAt(s.tmp_16, 2);
    s.tmp_15 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_17 = r0;
    r0 = (s.tmp_15 + s.tmp_17);
    s.tmp_0.arg9 = r0;
    r0 = s.arg0.fields["args"];
    s.tmp_19 = r0;
    r0 = pxsim_Array__getAt(s.tmp_19, 3);
    s.tmp_18 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_20 = r0;
    r0 = (s.tmp_18 + s.tmp_20);
    s.tmp_0.arg10 = r0;
    s.callLocIdx = 1461; s.pc = 116; return s.tmp_0;
  case 116:
    r0 = s.retval;
    s.lastBrkId = 3051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3051]) return breakpoint(s, 117, 3051, r0);
  case 117:
    r0 = (s.arg2 === s.arg3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 3052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3052]) return breakpoint(s, 118, 3052, r0);
  case 118:
    s.tmp_1 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, 0);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["lastX"];
    s.tmp_5 = r0;
    r0 = (s.tmp_3 + s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["lastControlX"] = (s.tmp_2);
    s.lastBrkId = 3053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3053]) return breakpoint(s, 119, 3053, r0);
  case 119:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["args"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lastControlY"] = (s.tmp_1);
  case 23:
  case 24:
    s.lastBrkId = 3054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3054]) return breakpoint(s, 120, 3054, r0);
  case 120:
    { step = 27; continue; }
  case 25:
  case 26:
    s.lastBrkId = 3055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3055]) return breakpoint(s, 121, 3055, r0);
  case 121:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 3056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3056]) return breakpoint(s, 122, 3056, r0);
  case 122:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 3057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3057]) return breakpoint(s, 123, 3057, r0);
  case 123:
    s.tmp_0 = animation_lineTo__P5665_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    r0 = s.arg0.fields["lastX"];
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["lastY"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["startX"];
    s.tmp_0.arg5 = r0;
    r0 = s.arg0.fields["startY"];
    s.tmp_0.arg6 = r0;
    s.callLocIdx = 1462; s.pc = 124; return s.tmp_0;
  case 124:
    r0 = s.retval;
    s.lastBrkId = 3058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3058]) return breakpoint(s, 125, 3058, r0);
  case 125:
  case 27:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_Path_runCurrentCommand__P5662.info = {"start":5489,"length":10309,"line":181,"column":8,"endLine":438,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"runCurrentCommand","argumentNames":["this","target","nodeTime","intervalTime"]}

function animation_Path_runCurrentCommand__P5662_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_runCurrentCommand__P5662, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function animation_cubicCurveTo__P5667(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.progress___22280 = undefined;
    s.diff___22284 = undefined;
    s.a___22288 = undefined;
    s.b___22294 = undefined;
    s.c___22302 = undefined;
    s.d___22310 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.arg10 = (s.lambdaArgs[10]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3070]) return breakpoint(s, 1, 3070, r0);
  case 1:
    r0 = (s.arg1 / s.arg2);
    s.progress___22280 = (r0);
    s.lastBrkId = 3071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3071]) return breakpoint(s, 2, 3071, r0);
  case 2:
    r0 = (1 - s.progress___22280);
    s.diff___22284 = (r0);
    s.lastBrkId = 3072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3072]) return breakpoint(s, 3, 3072, r0);
  case 3:
    r0 = (s.diff___22284 * s.diff___22284);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.diff___22284);
    s.a___22288 = (r0);
    s.lastBrkId = 3073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3073]) return breakpoint(s, 4, 3073, r0);
  case 4:
    r0 = (3 * s.diff___22284);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.diff___22284);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.progress___22280);
    s.b___22294 = (r0);
    s.lastBrkId = 3074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3074]) return breakpoint(s, 5, 3074, r0);
  case 5:
    r0 = (3 * s.diff___22284);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.progress___22280);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.progress___22280);
    s.c___22302 = (r0);
    s.lastBrkId = 3075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3075]) return breakpoint(s, 6, 3075, r0);
  case 6:
    r0 = (s.progress___22280 * s.progress___22280);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.progress___22280);
    s.d___22310 = (r0);
    s.lastBrkId = 3076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3076]) return breakpoint(s, 7, 3076, r0);
  case 7:
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.a___22288 * s.arg3);
    s.tmp_4 = r0;
    r0 = (s.b___22294 * s.arg5);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.c___22302 * s.arg7);
    s.tmp_6 = r0;
    r0 = (s.tmp_3 + s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.d___22310 * s.arg9);
    s.tmp_7 = r0;
    r0 = (s.tmp_2 + s.tmp_7);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.round(s.tmp_1);
    s.tmp_0.arg1 = r0;
    r0 = (s.a___22288 * s.arg4);
    s.tmp_11 = r0;
    r0 = (s.b___22294 * s.arg6);
    s.tmp_12 = r0;
    r0 = (s.tmp_11 + s.tmp_12);
    s.tmp_10 = r0;
    r0 = (s.c___22302 * s.arg8);
    s.tmp_13 = r0;
    r0 = (s.tmp_10 + s.tmp_13);
    s.tmp_9 = r0;
    r0 = (s.d___22310 * s.arg10);
    s.tmp_14 = r0;
    r0 = (s.tmp_9 + s.tmp_14);
    s.tmp_8 = r0;
    r0 = pxsim.Math_.round(s.tmp_8);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1466; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_cubicCurveTo__P5667.info = {"start":16933,"length":599,"line":469,"column":4,"endLine":481,"endColumn":5,"fileName":"pxt_modules/game/animation.ts","functionName":"cubicCurveTo","argumentNames":["target","nodeTime","interval","x0","y0","x1","y1","x2","y2","x3","y3"]}

function animation_cubicCurveTo__P5667_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_cubicCurveTo__P5667, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  progress___22280: undefined,
  diff___22284: undefined,
  a___22288: undefined,
  b___22294: undefined,
  c___22302: undefined,
  d___22310: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
  arg10: undefined,
} }





function animation_quadraticCurveTo__P5666(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.progress___22366 = undefined;
    s.diff___22370 = undefined;
    s.a___22374 = undefined;
    s.b___22378 = undefined;
    s.c___22384 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3064]) return breakpoint(s, 1, 3064, r0);
  case 1:
    r0 = (s.arg1 / s.arg2);
    s.progress___22366 = (r0);
    s.lastBrkId = 3065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3065]) return breakpoint(s, 2, 3065, r0);
  case 2:
    r0 = (1 - s.progress___22366);
    s.diff___22370 = (r0);
    s.lastBrkId = 3066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3066]) return breakpoint(s, 3, 3066, r0);
  case 3:
    r0 = (s.diff___22370 * s.diff___22370);
    s.a___22374 = (r0);
    s.lastBrkId = 3067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3067]) return breakpoint(s, 4, 3067, r0);
  case 4:
    r0 = (2 * s.diff___22370);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.progress___22366);
    s.b___22378 = (r0);
    s.lastBrkId = 3068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3068]) return breakpoint(s, 5, 3068, r0);
  case 5:
    r0 = (s.progress___22366 * s.progress___22366);
    s.c___22384 = (r0);
    s.lastBrkId = 3069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3069]) return breakpoint(s, 6, 3069, r0);
  case 6:
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.a___22374 * s.arg3);
    s.tmp_3 = r0;
    r0 = (s.b___22378 * s.arg5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.c___22384 * s.arg7);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 + s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.round(s.tmp_1);
    s.tmp_0.arg1 = r0;
    r0 = (s.a___22374 * s.arg4);
    s.tmp_8 = r0;
    r0 = (s.b___22378 * s.arg6);
    s.tmp_9 = r0;
    r0 = (s.tmp_8 + s.tmp_9);
    s.tmp_7 = r0;
    r0 = (s.c___22384 * s.arg8);
    s.tmp_10 = r0;
    r0 = (s.tmp_7 + s.tmp_10);
    s.tmp_6 = r0;
    r0 = pxsim.Math_.round(s.tmp_6);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1465; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_quadraticCurveTo__P5666.info = {"start":16441,"length":486,"line":456,"column":4,"endLine":467,"endColumn":5,"fileName":"pxt_modules/game/animation.ts","functionName":"quadraticCurveTo","argumentNames":["target","nodeTime","interval","x0","y0","x1","y1","x2","y2"]}

function animation_quadraticCurveTo__P5666_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_quadraticCurveTo__P5666, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  progress___22366: undefined,
  diff___22370: undefined,
  a___22374: undefined,
  b___22378: undefined,
  c___22384: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
} }





function animation_lineTo__P5665(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3063]) return breakpoint(s, 1, 3063, r0);
  case 1:
    s.tmp_0 = Sprite_setPosition__P2408_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg5 - s.arg3);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / s.arg2);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.round(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg6 - s.arg4);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 / s.arg2);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 * s.arg1);
    s.tmp_6 = r0;
    r0 = pxsim.Math_.round(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + s.arg4);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1464; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_lineTo__P5665.info = {"start":16146,"length":289,"line":449,"column":4,"endLine":454,"endColumn":5,"fileName":"pxt_modules/game/animation.ts","functionName":"lineTo","argumentNames":["target","nodeTime","interval","x0","y0","x1","y1"]}

function animation_lineTo__P5665_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_lineTo__P5665, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function animation_moveTo__P5664(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 3061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3061]) return breakpoint(s, 3, 3061, r0);
  case 3:
    r0 = (s.arg1 >= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3062]) return breakpoint(s, 4, 3062, r0);
  case 4:
    s.tmp_1 = Sprite_setPosition__P2408_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg3;
    s.tmp_1.arg2 = s.arg4;
    s.callLocIdx = 1463; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_moveTo__P5664.info = {"start":15983,"length":157,"line":445,"column":4,"endLine":447,"endColumn":5,"fileName":"pxt_modules/game/animation.ts","functionName":"moveTo","argumentNames":["target","nodeTime","interval","x","y"]}

function animation_moveTo__P5664_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_moveTo__P5664, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function animation_Path_ensureControlPoint__P5663(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3346_VT)) failedCast(r0);
    s.lastBrkId = 3059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3059]) return breakpoint(s, 3, 3059, r0);
  case 3:
    r0 = s.arg0.fields["lastControlX"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 3060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3060]) return breakpoint(s, 4, 3060, r0);
  case 4:
    r0 = pxsim_pxtcore.throwValue("Invalid path command. S/s and T/t must follow either Q/q or C/c");
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_Path_ensureControlPoint__P5663.info = {"start":15808,"length":163,"line":440,"column":8,"endLine":442,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"ensureControlPoint","argumentNames":["this"]}

function animation_Path_ensureControlPoint__P5663_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_ensureControlPoint__P5663, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function animation_Path_readNextCommand__P5659(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.numArgs___22483 = undefined;
    s.i___22502 = undefined;
    s.arg___22517 = undefined;
    s.unnamed12690___U3 = undefined;
    s.unnamed12691___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3346_VT)) failedCast(r0);
    s.lastBrkId = 2909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2909]) return breakpoint(s, 14, 2909, r0);
  case 14:
    r0 = s.arg0.fields["strIndex"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["path"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2910]) return breakpoint(s, 15, 2910, r0);
  case 15:
    r0 = (s.arg0).fields["currentCommand"] = (undefined);
    s.lastBrkId = 2911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2911]) return breakpoint(s, 16, 2911, r0);
  case 16:
    { step = 13; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2912]) return breakpoint(s, 17, 2912, r0);
  case 17:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = animation_Path_readNextToken__P5660_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1427; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["currentCommand"] = (s.tmp_1);
    s.lastBrkId = 2913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2913]) return breakpoint(s, 19, 2913, r0);
  case 19:
    r0 = s.arg0.fields["currentCommand"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2914]) return breakpoint(s, 20, 2914, r0);
  case 20:
    { step = 13; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2915]) return breakpoint(s, 21, 2915, r0);
  case 21:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["args"] = (s.tmp_4);
    s.lastBrkId = 2916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2916]) return breakpoint(s, 22, 2916, r0);
  case 22:
    s.tmp_0 = animation_Path_commandToArgCount__P5661_mk(s);
    r0 = s.arg0.fields["currentCommand"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1428; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.numArgs___22483 = (r0);
    s.lastBrkId = 2917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2917]) return breakpoint(s, 24, 2917, r0);
  case 24:
    r0 = (s.numArgs___22483 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2918]) return breakpoint(s, 25, 2918, r0);
  case 25:
    r0 = s.arg0.fields["currentCommand"];
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 26);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 26:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("Unknown path command '", s.tmp_4);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "'");
    s.tmp_1 = r0;
    r0 = pxsim_pxtcore.throwValue(s.tmp_1);
  case 5:
  case 6:
    s.lastBrkId = 2919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2919]) return breakpoint(s, 28, 2919, r0);
  case 28:
    s.i___22502 = (0);
    s.lastBrkId = 2920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2920]) return breakpoint(s, 29, 2920, r0);
  case 29:
  case 7:
    s.lastBrkId = 2921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2921]) return breakpoint(s, 30, 2921, r0);
  case 30:
    r0 = (s.i___22502 < s.numArgs___22483);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2922]) return breakpoint(s, 31, 2922, r0);
  case 31:
    r0 = s.arg0.fields["args"];
    s.tmp_1 = r0;
    s.tmp_4 = animation_Path_readNextToken__P5660_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 1429; s.pc = 32; return s.tmp_4;
  case 32:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String_.toNumber(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 2923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2923]) return breakpoint(s, 33, 2923, r0);
  case 33:
    r0 = (s.i___22502 + 1);
    s.i___22502 = (r0);
    { step = 7; continue; }
  case 8:
    s.lastBrkId = 2924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2924]) return breakpoint(s, 34, 2924, r0);
  case 34:
    s.arg___22517 = (undefined);
    r0 = s.arg0.fields["args"];
    s.unnamed12690___U3 = (r0);
    s.unnamed12691___U4 = (0);
    s.lastBrkId = 2925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2925]) return breakpoint(s, 35, 2925, r0);
  case 35:
  case 9:
    s.tmp_0 = r0 = s.unnamed12691___U4;
    r0 = pxsim_Array__length(s.unnamed12690___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12690___U3, s.unnamed12691___U4);
    s.arg___22517 = (r0);
    s.lastBrkId = 2926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2926]) return breakpoint(s, 36, 2926, r0);
  case 36:
    s.lastBrkId = 2927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2927]) return breakpoint(s, 37, 2927, r0);
  case 37:
    s.tmp_3 = Number_isNaN__P95_mk(s);
    s.tmp_3.arg0 = s.arg___22517;
    s.callLocIdx = 1430; s.pc = 38; return s.tmp_3;
  case 38:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2928]) return breakpoint(s, 39, 2928, r0);
  case 39:
    r0 = s.arg0.fields["currentCommand"];
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 40);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 40:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat("Invalid argument for path command '", s.tmp_7);
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 41);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 41:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_5, "'");
    s.tmp_4 = r0;
    r0 = pxsim_pxtcore.throwValue(s.tmp_4);
  case 10:
  case 11:
    r0 = (s.unnamed12691___U4 + 1);
    s.unnamed12691___U4 = (r0);
    { step = 9; continue; }
  case 12:
    s.unnamed12690___U3 = (undefined);
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_Path_readNextCommand__P5659.info = {"start":1471,"length":776,"line":59,"column":8,"endLine":82,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"readNextCommand","argumentNames":["this"]}

function animation_Path_readNextCommand__P5659_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_readNextCommand__P5659, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  numArgs___22483: undefined,
  i___22502: undefined,
  arg___22517: undefined,
  unnamed12690___U3: undefined,
  unnamed12691___U4: undefined,
  arg0: undefined,
} }





function animation_Path_commandToArgCount__P5661(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2949]) return breakpoint(s, 23, 2949, r0);
  case 23:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq("M", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq("m", s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq("L", s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq("l", s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq("H", s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq("h", s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq("V", s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq("v", s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq("Q", s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq("q", s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq("T", s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq("t", s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq("C", s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq("c", s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq("S", s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq("s", s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = pxsim_pxtcore.switch_eq("A", s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = pxsim_pxtcore.switch_eq("a", s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = pxsim_pxtcore.switch_eq("Z", s.tmp_0);
    if (r0) { step = 19; continue; }
    r0 = pxsim_pxtcore.switch_eq("z", s.tmp_0);
    if (r0) { step = 20; continue; }
    r0 = s.tmp_0;
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2950]) return breakpoint(s, 24, 2950, r0);
  case 24:
    r0 = 2;
    { step = 22; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2951]) return breakpoint(s, 25, 2951, r0);
  case 25:
    r0 = 2;
    { step = 22; continue; }
  case 5:
  case 6:
    s.lastBrkId = 2952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2952]) return breakpoint(s, 26, 2952, r0);
  case 26:
    r0 = 1;
    { step = 22; continue; }
  case 7:
  case 8:
    s.lastBrkId = 2953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2953]) return breakpoint(s, 27, 2953, r0);
  case 27:
    r0 = 1;
    { step = 22; continue; }
  case 9:
  case 10:
    s.lastBrkId = 2954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2954]) return breakpoint(s, 28, 2954, r0);
  case 28:
    r0 = 4;
    { step = 22; continue; }
  case 11:
  case 12:
    s.lastBrkId = 2955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2955]) return breakpoint(s, 29, 2955, r0);
  case 29:
    r0 = 2;
    { step = 22; continue; }
  case 13:
  case 14:
    s.lastBrkId = 2956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2956]) return breakpoint(s, 30, 2956, r0);
  case 30:
    r0 = 6;
    { step = 22; continue; }
  case 15:
  case 16:
    s.lastBrkId = 2957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2957]) return breakpoint(s, 31, 2957, r0);
  case 31:
    r0 = 4;
    { step = 22; continue; }
  case 17:
  case 18:
    s.lastBrkId = 2958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2958]) return breakpoint(s, 32, 2958, r0);
  case 32:
    r0 = 7;
    { step = 22; continue; }
  case 19:
  case 20:
    s.lastBrkId = 2959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2959]) return breakpoint(s, 33, 2959, r0);
  case 33:
    r0 = 0;
    { step = 22; continue; }
  case 21:
    s.lastBrkId = 2960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2960]) return breakpoint(s, 34, 2960, r0);
  case 34:
    r0 = -1;
    { step = 22; continue; }
    r0 = undefined;
  case 22:
    return leave(s, r0)
  default: oops()
} } }
animation_Path_commandToArgCount__P5661.info = {"start":3204,"length":1154,"line":113,"column":8,"endLine":148,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"commandToArgCount","argumentNames":["command"]}

function animation_Path_commandToArgCount__P5661_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_commandToArgCount__P5661, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function animation_Path_readNextToken__P5660(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tokenStart___22571 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3346_VT)) failedCast(r0);
    s.lastBrkId = 2939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2939]) return breakpoint(s, 12, 2939, r0);
  case 12:
  case 1:
    s.lastBrkId = 2940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2940]) return breakpoint(s, 13, 2940, r0);
  case 13:
    r0 = s.arg0.fields["path"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["strIndex"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.charCodeAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = s.arg0.fields["strIndex"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["path"];
    s.tmp_6 = r0;
    r0 = pxsim_String_.length(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 < s.tmp_5);
  case 3:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2941]) return breakpoint(s, 14, 2941, r0);
  case 14:
    s.tmp_8 = r0 = s.arg0;
    r0 = s.tmp_8.fields["strIndex"];
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + 1);
    s.tmp_9 = r0;
    r0 = (s.tmp_8).fields["strIndex"] = (s.tmp_9);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 2942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2942]) return breakpoint(s, 15, 2942, r0);
  case 15:
    r0 = s.arg0.fields["strIndex"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["path"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2943]) return breakpoint(s, 16, 2943, r0);
  case 16:
    r0 = undefined;
    { step = 11; continue; }
  case 5:
  case 6:
    s.lastBrkId = 2944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2944]) return breakpoint(s, 17, 2944, r0);
  case 17:
    r0 = s.arg0.fields["strIndex"];
    s.tokenStart___22571 = (r0);
    s.lastBrkId = 2945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2945]) return breakpoint(s, 18, 2945, r0);
  case 18:
  case 7:
    s.lastBrkId = 2946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2946]) return breakpoint(s, 19, 2946, r0);
  case 19:
    r0 = s.arg0.fields["path"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["strIndex"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.charCodeAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = s.tmp_0;
    { step = 9; continue; }
  case 8:
    r0 = s.arg0.fields["strIndex"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["path"];
    s.tmp_6 = r0;
    r0 = pxsim_String_.length(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 < s.tmp_5);
  case 9:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2947]) return breakpoint(s, 20, 2947, r0);
  case 20:
    s.tmp_8 = r0 = s.arg0;
    r0 = s.tmp_8.fields["strIndex"];
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + 1);
    s.tmp_9 = r0;
    r0 = (s.tmp_8).fields["strIndex"] = (s.tmp_9);
    { step = 7; continue; }
  case 10:
    s.lastBrkId = 2948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2948]) return breakpoint(s, 21, 2948, r0);
  case 21:
    s.tmp_0 = helpers_stringSubstr__P118_mk(s);
    r0 = s.arg0.fields["path"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.tokenStart___22571;
    r0 = s.arg0.fields["strIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.tokenStart___22571);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1431; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
animation_Path_readNextToken__P5660.info = {"start":2664,"length":530,"line":97,"column":8,"endLine":111,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"readNextToken","argumentNames":["this"]}

function animation_Path_readNextToken__P5660_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_readNextToken__P5660, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tokenStart___22571: undefined,
  arg0: undefined,
} }





function Number_isNaN__P95(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1]) return breakpoint(s, 3, 1, r0);
  case 3:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "number");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 !== s.arg0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
Number_isNaN__P95.info = {"start":355,"length":93,"line":21,"column":4,"endLine":23,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"isNaN","argumentNames":["x"]}

function Number_isNaN__P95_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Number_isNaN__P95, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function animation_Path_reset__P3349(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3346_VT)) failedCast(r0);
    s.lastBrkId = 2929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2929]) return breakpoint(s, 1, 2929, r0);
  case 1:
    r0 = (s.arg0).fields["args"] = (undefined);
    s.lastBrkId = 2930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2930]) return breakpoint(s, 2, 2930, r0);
  case 2:
    r0 = (s.arg0).fields["currentCommand"] = (undefined);
    s.lastBrkId = 2931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2931]) return breakpoint(s, 3, 2931, r0);
  case 3:
    r0 = (s.arg0).fields["lastControlX"] = (undefined);
    s.lastBrkId = 2932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2932]) return breakpoint(s, 4, 2932, r0);
  case 4:
    r0 = (s.arg0).fields["lastControlY"] = (undefined);
    s.lastBrkId = 2933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2933]) return breakpoint(s, 5, 2933, r0);
  case 5:
    r0 = (s.arg0).fields["startX"] = (undefined);
    s.lastBrkId = 2934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2934]) return breakpoint(s, 6, 2934, r0);
  case 6:
    r0 = (s.arg0).fields["startY"] = (undefined);
    s.lastBrkId = 2935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2935]) return breakpoint(s, 7, 2935, r0);
  case 7:
    r0 = (s.arg0).fields["lastX"] = (undefined);
    s.lastBrkId = 2936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2936]) return breakpoint(s, 8, 2936, r0);
  case 8:
    r0 = (s.arg0).fields["lastY"] = (undefined);
    s.lastBrkId = 2937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2937]) return breakpoint(s, 9, 2937, r0);
  case 9:
    r0 = (s.arg0).fields["strIndex"] = (0);
    s.lastBrkId = 2938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2938]) return breakpoint(s, 10, 2938, r0);
  case 10:
    r0 = (s.arg0).fields["commandIndex"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_Path_reset__P3349.info = {"start":2257,"length":397,"line":84,"column":8,"endLine":95,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"reset","argumentNames":["this"]}

function animation_Path_reset__P3349_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_reset__P3349, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function animation_ImageAnimation_update__P3357(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.frameIndex___22608 = undefined;
    s.newImage___22633 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_ImageAnimation__C3355_VT)) failedCast(r0);
    s.lastBrkId = 3092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3092]) return breakpoint(s, 12, 3092, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["elapsedTime"];
    s.tmp_2 = r0;
    s.tmp_4 = game_eventContext__P3001_mk(s);
    s.callLocIdx = 1481; s.pc = 13; return s.tmp_4;
  case 13:
    r0 = s.retval;
    r0 = r0.fields["deltaTimeMillis"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["elapsedTime"] = (s.tmp_1);
    s.lastBrkId = 3093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3093]) return breakpoint(s, 14, 3093, r0);
  case 14:
    r0 = s.arg0.fields["elapsedTime"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["frameInterval"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.frameIndex___22608 = (r0);
    s.lastBrkId = 3094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3094]) return breakpoint(s, 15, 3094, r0);
  case 15:
    r0 = s.arg0.fields["lastFrame"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != s.frameIndex___22608);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["frames"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3095]) return breakpoint(s, 16, 3095, r0);
  case 16:
    r0 = s.arg0.fields["loop"];
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    s.tmp_7 = r0 = s.frameIndex___22608;
    r0 = s.arg0.fields["frames"];
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 >= s.tmp_8);
  case 4:
    // jmp value (already in r0)
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 3096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3096]) return breakpoint(s, 17, 3096, r0);
  case 17:
    r0 = true;
    { step = 11; continue; }
  case 5:
  case 6:
    s.lastBrkId = 3097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3097]) return breakpoint(s, 18, 3097, r0);
  case 18:
    r0 = s.arg0.fields["frames"];
    s.tmp_11 = r0;
    s.tmp_13 = r0 = s.frameIndex___22608;
    r0 = s.arg0.fields["frames"];
    s.tmp_15 = r0;
    r0 = pxsim_Array__length(s.tmp_15);
    s.tmp_14 = r0;
    r0 = (s.tmp_13 % s.tmp_14);
    s.tmp_12 = r0;
    r0 = pxsim_Array__getAt(s.tmp_11, s.tmp_12);
    s.newImage___22633 = (r0);
    s.lastBrkId = 3098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3098]) return breakpoint(s, 19, 3098, r0);
  case 19:
    s.tmp_2 = Sprite_image__P2389_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1482; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== s.newImage___22633);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3099]) return breakpoint(s, 21, 3099, r0);
  case 21:
    s.tmp_3 = Sprite_setImage__P2390_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.newImage___22633;
    s.callLocIdx = 1483; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 3100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3100]) return breakpoint(s, 23, 3100, r0);
  case 23:
    r0 = (s.arg0).fields["lastFrame"] = (s.frameIndex___22608);
    s.lastBrkId = 3101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3101]) return breakpoint(s, 24, 3101, r0);
  case 24:
    r0 = false;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
animation_ImageAnimation_update__P3357.info = {"start":19465,"length":664,"line":532,"column":8,"endLine":548,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"update","argumentNames":["this"]}

function animation_ImageAnimation_update__P3357_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_ImageAnimation_update__P3357, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  frameIndex___22608: undefined,
  newImage___22633: undefined,
  arg0: undefined,
} }





function OptionScreen_createBase__P7313(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___26130 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3647]) return breakpoint(s, 13, 3647, r0);
  case 13:
    s.tmp_0 = RotatingScreens_createBase__P7309_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1722; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 3648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3648]) return breakpoint(s, 15, 3648, r0);
  case 15:
    r0 = s.arg0.fields["_midText"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_midText"];
    r0 = r0.fields["data"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 3649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3649]) return breakpoint(s, 16, 3649, r0);
  case 16:
    s.index___26130 = (0);
    s.lastBrkId = 3650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3650]) return breakpoint(s, 17, 3650, r0);
  case 17:
  case 3:
    s.lastBrkId = 3651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3651]) return breakpoint(s, 18, 3651, r0);
  case 18:
    s.tmp_1 = r0 = s.index___26130;
    r0 = s.arg0.fields["_selectedOptions"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 3652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3652]) return breakpoint(s, 19, 3652, r0);
  case 19:
    r0 = s.arg0.fields["_selectedOptions"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.index___26130);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > -1);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 3653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3653]) return breakpoint(s, 20, 3653, r0);
  case 20:
    s.tmp_7 = OptionScreen_drawSelection__P7315_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.tmp_7.arg1 = s.index___26130;
    r0 = s.arg0.fields["_selectedOptions"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_8, s.index___26130);
    s.tmp_7.arg2 = r0;
    s.callLocIdx = 1723; s.pc = 21; return s.tmp_7;
  case 21:
    r0 = s.retval;
  case 4:
  case 5:
    s.lastBrkId = 3654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3654]) return breakpoint(s, 22, 3654, r0);
  case 22:
    r0 = (s.index___26130 + 1);
    s.index___26130 = (r0);
    { step = 3; continue; }
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 3655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3655]) return breakpoint(s, 23, 3655, r0);
  case 23:
    r0 = s.arg0.fields["_showNext"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 3656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3656]) return breakpoint(s, 24, 3656, r0);
  case 24:
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = textsprite_create__P4343_mk(s);
    s.tmp_3.arg0 = globals.TEXT_NEXT___4380;
    s.tmp_3.arg1 = 0;
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["color"];
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1724; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_nextSprite"] = (s.tmp_2);
    s.lastBrkId = 3657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3657]) return breakpoint(s, 26, 3657, r0);
  case 26:
    s.tmp_0 = TextSprite_setMaxFontHeight__P4335_mk(s);
    r0 = s.arg0.fields["_nextSprite"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["fontSize"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1725; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 3658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3658]) return breakpoint(s, 28, 3658, r0);
  case 28:
    s.tmp_0 = Sprite_right__P2401_mk(s);
    r0 = s.arg0.fields["_nextSprite"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 158;
    s.callLocIdx = 1726; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.lastBrkId = 3659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3659]) return breakpoint(s, 30, 3659, r0);
  case 30:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    r0 = s.arg0.fields["_nextSprite"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["y"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1727; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 3660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3660]) return breakpoint(s, 32, 3660, r0);
  case 32:
    s.tmp_0 = TextSprite_setBorder__P4338_mk(s);
    r0 = s.arg0.fields["_nextSprite"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 1728; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
  case 9:
  case 10:
    s.lastBrkId = 3661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3661]) return breakpoint(s, 34, 3661, r0);
  case 34:
    r0 = s.arg0.fields["_showPrevious"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 3662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3662]) return breakpoint(s, 35, 3662, r0);
  case 35:
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = textsprite_create__P4343_mk(s);
    s.tmp_3.arg0 = globals.TEXT_PREVIOUS___4381;
    s.tmp_3.arg1 = 0;
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["color"];
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1729; s.pc = 36; return s.tmp_3;
  case 36:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_prevSprite"] = (s.tmp_2);
    s.lastBrkId = 3663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3663]) return breakpoint(s, 37, 3663, r0);
  case 37:
    s.tmp_0 = TextSprite_setMaxFontHeight__P4335_mk(s);
    r0 = s.arg0.fields["_prevSprite"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["fontSize"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1730; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    s.lastBrkId = 3664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3664]) return breakpoint(s, 39, 3664, r0);
  case 39:
    s.tmp_0 = Sprite_left__P2399_mk(s);
    r0 = s.arg0.fields["_prevSprite"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 1731; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    s.lastBrkId = 3665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3665]) return breakpoint(s, 41, 3665, r0);
  case 41:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    r0 = s.arg0.fields["_prevSprite"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_footer"];
    r0 = r0.fields["y"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1732; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.lastBrkId = 3666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3666]) return breakpoint(s, 43, 3666, r0);
  case 43:
    s.tmp_0 = TextSprite_setBorder__P4338_mk(s);
    r0 = s.arg0.fields["_prevSprite"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 1733; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_createBase__P7313.info = {"start":44100,"length":1191,"line":1359,"column":4,"endLine":1382,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"createBase","argumentNames":["this"]}

function OptionScreen_createBase__P7313_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_createBase__P7313, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  index___26130: undefined,
  arg0: undefined,
} }





function OptionScreen_drawSelection__P7315(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, OptionScreen__C4464_VT)) failedCast(r0);
    s.lastBrkId = 3668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3668]) return breakpoint(s, 1, 3668, r0);
  case 1:
    s.tmp_0 = String2dArrayTextSpriteFactory_Redraw__P4426_mk(s);
    r0 = s.arg0.fields["_midText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = true;
    s.callLocIdx = 1735; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
OptionScreen_drawSelection__P7315.info = {"start":45695,"length":112,"line":1396,"column":4,"endLine":1398,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"drawSelection","argumentNames":["this","group","option"]}

function OptionScreen_drawSelection__P7315_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: OptionScreen_drawSelection__P7315, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_SpriteMap_toString__P2453(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1300]) return breakpoint(s, 1, 1300, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = s.arg0.fields["buckets"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__length(s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " buckets, ");
    s.tmp_1 = r0;
    s.tmp_10 = helpers_arrayFilter__P110_mk(s);
    r0 = s.arg0.fields["buckets"];
    s.tmp_10.arg0 = r0;
    s.tmp_10.arg1 = length_inline__P22668;
    s.callLocIdx = 527; s.pc = 3; return s.tmp_10;
  case 3:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " filled");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_toString__P2453.info = {"start":4109,"length":123,"line":112,"column":8,"endLine":114,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteMap_toString__P2453_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_toString__P2453, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  arg0: undefined,
} }





function length_inline__P22668(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
length_inline__P22668.info = {"start":4196,"length":8,"line":113,"column":74,"endLine":113,"endColumn":82,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["b"]}

function length_inline__P22668_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: length_inline__P22668, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_moveSprite__P2540(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___22700 = undefined;
    s.maxDist___22708 = undefined;
    s.ms___22728 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1604]) return breakpoint(s, 13, 1604, r0);
  case 13:
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1605]) return breakpoint(s, 14, 1605, r0);
  case 14:
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1606]) return breakpoint(s, 15, 1606, r0);
  case 15:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 764; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1607]) return breakpoint(s, 17, 1607, r0);
  case 17:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg3;
    s.callLocIdx = 765; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1608]) return breakpoint(s, 19, 1608, r0);
  case 19:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 766; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___22700 = (r0);
    s.lastBrkId = 1609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1609]) return breakpoint(s, 21, 1609, r0);
  case 21:
    s.tmp_0 = r0 = s.tm___22700;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2746_mk(s);
    s.tmp_1.arg0 = s.tm___22700;
    s.callLocIdx = 767; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1610]) return breakpoint(s, 23, 1610, r0);
  case 23:
    s.tmp_3 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 768; s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
    s.maxDist___22708 = (r0);
    s.lastBrkId = 1611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1611]) return breakpoint(s, 25, 1611, r0);
  case 25:
    s.tmp_2 = Math_abs__P128_mk(s);
    s.tmp_3 = Fx_toInt__P172_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.callLocIdx = 769; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 770; s.pc = 26; return s.tmp_2;
  case 26:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.maxDist___22708);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_5 = Math_abs__P128_mk(s);
    s.tmp_6 = Fx_toInt__P172_mk(s);
    s.tmp_6.arg0 = s.arg3;
    s.callLocIdx = 771; s.pc = 29; return s.tmp_6;
  case 29:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 772; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 <= s.maxDist___22708);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1612]) return breakpoint(s, 30, 1612, r0);
  case 30:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C2524_VT);
    s.tmp_8 = r0;
    s.tmp_9 = MovingSprite_constructor__P2525_mk(s);
    s.tmp_9.arg0 = s.tmp_8;
    s.tmp_9.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_9.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_9.arg3 = r0;
    s.tmp_9.arg4 = s.arg2;
    s.tmp_9.arg5 = s.arg3;
    s.tmp_9.arg6 = s.arg2;
    s.tmp_9.arg7 = s.arg3;
    s.callLocIdx = 773; s.pc = 31; return s.tmp_9;
  case 31:
    r0 = s.retval;
    s.ms___22728 = (s.tmp_8);
    s.lastBrkId = 1613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1613]) return breakpoint(s, 32, 1613, r0);
  case 32:
    s.tmp_0 = ArcadePhysicsEngine_tilemapCollisions__P5093_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ms___22728;
    s.tmp_0.arg2 = s.tm___22700;
    s.callLocIdx = 774; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    { step = 10; continue; }
  case 5:
    s.lastBrkId = 1614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1614]) return breakpoint(s, 34, 1614, r0);
  case 34:
    s.tmp_1 = tiles_TileMap_isOnWall__P2757_mk(s);
    s.tmp_1.arg0 = s.tm___22700;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 775; s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    s.tmp_4 = ArcadePhysicsEngine_canResolveClipping__P5095_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tm___22700;
    s.callLocIdx = 776; s.pc = 36; return s.tmp_4;
  case 36:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 7:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1615]) return breakpoint(s, 37, 1615, r0);
  case 37:
    s.tmp_6 = r0 = s.arg1;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 | 256);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
    { step = 9; continue; }
  case 8:
    s.lastBrkId = 1616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1616]) return breakpoint(s, 38, 1616, r0);
  case 38:
    s.tmp_0 = r0 = s.arg1;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -257);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 9:
  case 10:
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_moveSprite__P2540.info = {"start":23898,"length":1208,"line":654,"column":4,"endLine":685,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function ArcadePhysicsEngine_moveSprite__P2540_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_moveSprite__P2540, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tm___22700: undefined,
  maxDist___22708: undefined,
  ms___22728: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_canResolveClipping__P5095(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___22773 = undefined;
    s.sz___22776 = undefined;
    s.maxMove___22781 = undefined;
    s.origY___22783 = undefined;
    s.origX___22786 = undefined;
    s.l___22789 = undefined;
    s.r___22794 = undefined;
    s.t___22799 = undefined;
    s.b___22804 = undefined;
    s.offset___22809 = undefined;
    s.offset___22834 = undefined;
    s.offset___22865 = undefined;
    s.offset___22890 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1617]) return breakpoint(s, 20, 1617, r0);
  case 20:
    s.tmp_3 = Sprite_isStatic__P2394_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 777; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1618]) return breakpoint(s, 22, 1618, r0);
  case 22:
    s.tmp_4 = Sprite__C2340_v4_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!checkSubtype(s.tmp_4.arg0, Sprite__C2340_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.setHitbox;
    s.pc = 23; return s.tmp_4;
  case 23:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1619]) return breakpoint(s, 24, 1619, r0);
  case 24:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___22773 = (r0);
    s.lastBrkId = 1620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1620]) return breakpoint(s, 25, 1620, r0);
  case 25:
    s.tmp_1 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 778; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.sz___22776 = (r0);
    s.lastBrkId = 1621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1621]) return breakpoint(s, 27, 1621, r0);
  case 27:
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P2532_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 779; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.maxMove___22781 = (r0);
    s.lastBrkId = 1622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1622]) return breakpoint(s, 29, 1622, r0);
  case 29:
    r0 = s.arg1.fields["_y"];
    s.origY___22783 = (r0);
    s.lastBrkId = 1623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1623]) return breakpoint(s, 30, 1623, r0);
  case 30:
    r0 = s.arg1.fields["_x"];
    s.origX___22786 = (r0);
    s.lastBrkId = 1624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1624]) return breakpoint(s, 31, 1624, r0);
  case 31:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = game_Hitbox_left__P2216_mk(s);
    s.tmp_1.arg0 = s.hbox___22773;
    s.callLocIdx = 780; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 781; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.l___22789 = (r0);
    s.lastBrkId = 1625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1625]) return breakpoint(s, 34, 1625, r0);
  case 34:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = game_Hitbox_right__P2218_mk(s);
    s.tmp_1.arg0 = s.hbox___22773;
    s.callLocIdx = 782; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 783; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.r___22794 = (r0);
    s.lastBrkId = 1626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1626]) return breakpoint(s, 37, 1626, r0);
  case 37:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = game_Hitbox_top__P2217_mk(s);
    s.tmp_1.arg0 = s.hbox___22773;
    s.callLocIdx = 784; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 785; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    s.t___22799 = (r0);
    s.lastBrkId = 1627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1627]) return breakpoint(s, 40, 1627, r0);
  case 40:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_1.arg0 = s.hbox___22773;
    s.callLocIdx = 786; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 787; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.b___22804 = (r0);
    s.lastBrkId = 1628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1628]) return breakpoint(s, 43, 1628, r0);
  case 43:
    r0 = (s.b___22804 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___22776);
    s.offset___22809 = (r0);
    s.lastBrkId = 1629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1629]) return breakpoint(s, 44, 1629, r0);
  case 44:
    r0 = (s.offset___22809 <= s.maxMove___22781);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1630]) return breakpoint(s, 45, 1630, r0);
  case 45:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P149_mk(s);
    s.tmp_4.arg0 = s.offset___22809;
    s.callLocIdx = 788; s.pc = 47; return s.tmp_4;
  case 47:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 789; s.pc = 46; return s.tmp_3;
  case 46:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.lastBrkId = 1631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1631]) return breakpoint(s, 48, 1631, r0);
  case 48:
    s.tmp_3 = tiles_TileMap_isOnWall__P2757_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 790; s.pc = 49; return s.tmp_3;
  case 49:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1632]) return breakpoint(s, 50, 1632, r0);
  case 50:
    r0 = true;
    { step = 19; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1633]) return breakpoint(s, 51, 1633, r0);
  case 51:
    r0 = (s.arg1).fields["_y"] = (s.origY___22783);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 1634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1634]) return breakpoint(s, 52, 1634, r0);
  case 52:
    r0 = (s.t___22799 / s.sz___22776);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___22776);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.t___22799);
    s.offset___22834 = (r0);
    s.lastBrkId = 1635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1635]) return breakpoint(s, 53, 1635, r0);
  case 53:
    r0 = (s.offset___22834 <= s.maxMove___22781);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1636]) return breakpoint(s, 54, 1636, r0);
  case 54:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P149_mk(s);
    s.tmp_4.arg0 = s.offset___22834;
    s.callLocIdx = 791; s.pc = 56; return s.tmp_4;
  case 56:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 792; s.pc = 55; return s.tmp_3;
  case 55:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.lastBrkId = 1637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1637]) return breakpoint(s, 57, 1637, r0);
  case 57:
    s.tmp_3 = tiles_TileMap_isOnWall__P2757_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 793; s.pc = 58; return s.tmp_3;
  case 58:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1638]) return breakpoint(s, 59, 1638, r0);
  case 59:
    r0 = true;
    { step = 19; continue; }
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 1639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1639]) return breakpoint(s, 60, 1639, r0);
  case 60:
    r0 = (s.arg1).fields["_y"] = (s.origY___22783);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 1640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1640]) return breakpoint(s, 61, 1640, r0);
  case 61:
    r0 = (s.r___22794 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___22776);
    s.offset___22865 = (r0);
    s.lastBrkId = 1641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1641]) return breakpoint(s, 62, 1641, r0);
  case 62:
    r0 = (s.offset___22865 <= s.maxMove___22781);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1642]) return breakpoint(s, 63, 1642, r0);
  case 63:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P149_mk(s);
    s.tmp_4.arg0 = s.offset___22865;
    s.callLocIdx = 794; s.pc = 65; return s.tmp_4;
  case 65:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 795; s.pc = 64; return s.tmp_3;
  case 64:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.lastBrkId = 1643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1643]) return breakpoint(s, 66, 1643, r0);
  case 66:
    s.tmp_3 = tiles_TileMap_isOnWall__P2757_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 796; s.pc = 67; return s.tmp_3;
  case 67:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1644]) return breakpoint(s, 68, 1644, r0);
  case 68:
    r0 = true;
    { step = 19; continue; }
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 1645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1645]) return breakpoint(s, 69, 1645, r0);
  case 69:
    r0 = (s.arg1).fields["_x"] = (s.origX___22786);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 1646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1646]) return breakpoint(s, 70, 1646, r0);
  case 70:
    r0 = (s.l___22789 / s.sz___22776);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___22776);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.l___22789);
    s.offset___22890 = (r0);
    s.lastBrkId = 1647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1647]) return breakpoint(s, 71, 1647, r0);
  case 71:
    r0 = (s.offset___22890 <= s.maxMove___22781);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1648]) return breakpoint(s, 72, 1648, r0);
  case 72:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P149_mk(s);
    s.tmp_4.arg0 = s.offset___22890;
    s.callLocIdx = 797; s.pc = 74; return s.tmp_4;
  case 74:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 798; s.pc = 73; return s.tmp_3;
  case 73:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.lastBrkId = 1649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1649]) return breakpoint(s, 75, 1649, r0);
  case 75:
    s.tmp_3 = tiles_TileMap_isOnWall__P2757_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 799; s.pc = 76; return s.tmp_3;
  case 76:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1650]) return breakpoint(s, 77, 1650, r0);
  case 77:
    r0 = true;
    { step = 19; continue; }
    { step = 16; continue; }
  case 15:
    s.lastBrkId = 1651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1651]) return breakpoint(s, 78, 1651, r0);
  case 78:
    r0 = (s.arg1).fields["_x"] = (s.origX___22786);
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 1652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1652]) return breakpoint(s, 79, 1652, r0);
  case 79:
    r0 = false;
  case 19:
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_canResolveClipping__P5095.info = {"start":25202,"length":2135,"line":688,"column":4,"endLine":759,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"canResolveClipping","argumentNames":["this","s","tm"]}

function ArcadePhysicsEngine_canResolveClipping__P5095_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_canResolveClipping__P5095, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  hbox___22773: undefined,
  sz___22776: undefined,
  maxMove___22781: undefined,
  origY___22783: undefined,
  origX___22786: undefined,
  l___22789: undefined,
  r___22794: undefined,
  t___22799: undefined,
  b___22804: undefined,
  offset___22809: undefined,
  offset___22834: undefined,
  offset___22865: undefined,
  offset___22890: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isStatic__P2394(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1096]) return breakpoint(s, 1, 1096, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.isStatic(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite_isStatic__P2394.info = {"start":9841,"length":57,"line":355,"column":4,"endLine":357,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isStatic","argumentNames":["this"]}

function Sprite_isStatic__P2394_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isStatic__P2394, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Hitbox_bottom__P2219(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[962]) return breakpoint(s, 1, 962, r0);
  case 1:
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["height"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = game_Hitbox_top__P2217_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 232; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 233; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 234; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_bottom__P2219.info = {"start":786,"length":139,"line":33,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"bottom","argumentNames":["this"]}
game_Hitbox_bottom__P2219.isGetter = true;

function game_Hitbox_bottom__P2219_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_bottom__P2219, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_Hitbox_top__P2217(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[960]) return breakpoint(s, 1, 960, r0);
  case 1:
    s.tmp_0 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["oy"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_y"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 228; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_top__P2217.info = {"start":555,"length":73,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"top","argumentNames":["this"]}
game_Hitbox_top__P2217.isGetter = true;

function game_Hitbox_top__P2217_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_top__P2217, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions__P5093(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___23036 = undefined;
    s.hbox___23061 = undefined;
    s.tileScale___23064 = undefined;
    s.tileSize___23067 = undefined;
    s.xDiff___23071 = undefined;
    s.yDiff___23078 = undefined;
    s.right___23094 = undefined;
    s.x0___23098 = undefined;
    s.collidedTiles___23113 = undefined;
    s.y___23115 = undefined;
    s.y0___23129 = undefined;
    s.obstacle___23145 = undefined;
    s.collisionDirection___23172 = undefined;
    s.tile___23198 = undefined;
    s.unnamed12676___U14 = undefined;
    s.unnamed12677___U15 = undefined;
    s.down___23289 = undefined;
    s.y0___23293 = undefined;
    s.collidedTiles___23308 = undefined;
    s.x___23310 = undefined;
    s.x0___23320 = undefined;
    s.obstacle___23334 = undefined;
    s.collisionDirection___23361 = undefined;
    s.tile___23387 = undefined;
    s.unnamed12678___U24 = undefined;
    s.unnamed12679___U25 = undefined;
    s.overlappedTiles___23481 = undefined;
    s.x___23483 = undefined;
    s.x0___23493 = undefined;
    s.y___23503 = undefined;
    s.y0___23513 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1500]) return breakpoint(s, 97, 1500, r0);
  case 97:
    r0 = s.arg1.fields["sprite"];
    s.s___23036 = (r0);
    s.lastBrkId = 1501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1501]) return breakpoint(s, 98, 1501, r0);
  case 98:
    r0 = s.s___23036.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1502]) return breakpoint(s, 99, 1502, r0);
  case 99:
    s.tmp_5 = tiles_TileMap_isOnWall__P2757_mk(s);
    s.tmp_5.arg0 = s.arg2;
    s.tmp_5.arg1 = s.s___23036;
    s.callLocIdx = 662; s.pc = 100; return s.tmp_5;
  case 100:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1503]) return breakpoint(s, 101, 1503, r0);
  case 101:
    s.tmp_6 = r0 = s.s___23036;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & -257);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 1504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1504]) return breakpoint(s, 102, 1504, r0);
  case 102:
    s.tmp_3 = Sprite_isStatic__P2394_mk(s);
    s.tmp_3.arg0 = s.s___23036;
    s.callLocIdx = 663; s.pc = 103; return s.tmp_3;
  case 103:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1505]) return breakpoint(s, 104, 1505, r0);
  case 104:
    s.tmp_4 = Sprite__C2340_v4_1_mk(s);
    s.tmp_4.arg0 = s.s___23036;
    if (!checkSubtype(s.tmp_4.arg0, Sprite__C2340_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.setHitbox;
    s.pc = 105; return s.tmp_4;
  case 105:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1506]) return breakpoint(s, 106, 1506, r0);
  case 106:
    r0 = s.s___23036.fields["_hitbox"];
    s.hbox___23061 = (r0);
    s.lastBrkId = 1507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1507]) return breakpoint(s, 107, 1507, r0);
  case 107:
    s.tmp_0 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_0.arg0 = s.arg2;
    s.callLocIdx = 664; s.pc = 108; return s.tmp_0;
  case 108:
    r0 = s.retval;
    s.tileScale___23064 = (r0);
    s.lastBrkId = 1508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1508]) return breakpoint(s, 109, 1508, r0);
  case 109:
    r0 = (1 << s.tileScale___23064);
    s.tileSize___23067 = (r0);
    s.lastBrkId = 1509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1509]) return breakpoint(s, 110, 1509, r0);
  case 110:
    s.tmp_0 = Fx_sub__P159_mk(s);
    r0 = s.s___23036.fields["_x"];
    s.tmp_0.arg0 = r0;
    r0 = s.s___23036.fields["_lastX"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 665; s.pc = 111; return s.tmp_0;
  case 111:
    r0 = s.retval;
    s.xDiff___23071 = (r0);
    s.lastBrkId = 1510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1510]) return breakpoint(s, 112, 1510, r0);
  case 112:
    s.tmp_0 = Fx_sub__P159_mk(s);
    r0 = s.s___23036.fields["_y"];
    s.tmp_0.arg0 = r0;
    r0 = s.s___23036.fields["_lastY"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 666; s.pc = 113; return s.tmp_0;
  case 113:
    r0 = s.retval;
    s.yDiff___23078 = (r0);
    s.lastBrkId = 1511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1511]) return breakpoint(s, 114, 1511, r0);
  case 114:
    r0 = s.s___23036.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 2818);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 83; continue; }
    s.lastBrkId = 1512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1512]) return breakpoint(s, 115, 1512, r0);
  case 115:
    r0 = (s.xDiff___23071 !== 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 43; continue; }
    s.lastBrkId = 1513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1513]) return breakpoint(s, 116, 1513, r0);
  case 116:
    r0 = (s.xDiff___23071 > 0);
    s.right___23094 = (r0);
    s.lastBrkId = 1514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1514]) return breakpoint(s, 117, 1514, r0);
  case 117:
    r0 = pxsim_numops_toBoolDecr(s.right___23094);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = game_Hitbox_right__P2218_mk(s);
    s.tmp_1.arg0 = s.hbox___23061;
    s.callLocIdx = 667; s.pc = 119; return s.tmp_1;
  case 119:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 668; s.pc = 118; return s.tmp_0;
  case 118:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    s.tmp_2 = Fx_sub__P159_mk(s);
    s.tmp_3 = game_Hitbox_left__P2216_mk(s);
    s.tmp_3.arg0 = s.hbox___23061;
    s.callLocIdx = 669; s.pc = 121; return s.tmp_3;
  case 121:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 256;
    s.callLocIdx = 670; s.pc = 120; return s.tmp_2;
  case 120:
    r0 = s.retval;
  case 8:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 671; s.pc = 123; return s.tmp_6;
  case 123:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___23064;
    s.callLocIdx = 672; s.pc = 122; return s.tmp_5;
  case 122:
    r0 = s.retval;
    s.x0___23098 = (r0);
    s.lastBrkId = 1515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1515]) return breakpoint(s, 124, 1515, r0);
  case 124:
    r0 = pxsim_Array__mk();
    s.collidedTiles___23113 = (r0);
    s.lastBrkId = 1516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1516]) return breakpoint(s, 125, 1516, r0);
  case 125:
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = game_Hitbox_top__P2217_mk(s);
    s.tmp_1.arg0 = s.hbox___23061;
    s.callLocIdx = 673; s.pc = 127; return s.tmp_1;
  case 127:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.yDiff___23078;
    s.callLocIdx = 674; s.pc = 126; return s.tmp_0;
  case 126:
    r0 = s.retval;
    s.y___23115 = (r0);
    s.lastBrkId = 1517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1517]) return breakpoint(s, 128, 1517, r0);
  case 128:
  case 9:
    s.lastBrkId = 1518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1518]) return breakpoint(s, 129, 1518, r0);
  case 129:
    s.tmp_1 = r0 = s.y___23115;
    s.tmp_3 = Fx_iadd__P158_mk(s);
    s.tmp_3.arg0 = s.tileSize___23067;
    s.tmp_4 = Fx_sub__P159_mk(s);
    s.tmp_5 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_5.arg0 = s.hbox___23061;
    s.callLocIdx = 675; s.pc = 132; return s.tmp_5;
  case 132:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.yDiff___23078;
    s.callLocIdx = 676; s.pc = 131; return s.tmp_4;
  case 131:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 677; s.pc = 130; return s.tmp_3;
  case 130:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1519]) return breakpoint(s, 133, 1519, r0);
  case 133:
    s.tmp_6 = Fx_toIntShifted__P156_mk(s);
    s.tmp_7 = Fx_add__P157_mk(s);
    s.tmp_8 = Fx_min__P166_mk(s);
    s.tmp_8.arg0 = s.y___23115;
    s.tmp_9 = Fx_sub__P159_mk(s);
    s.tmp_10 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_10.arg0 = s.hbox___23061;
    s.callLocIdx = 678; s.pc = 138; return s.tmp_10;
  case 138:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = s.yDiff___23078;
    s.callLocIdx = 679; s.pc = 137; return s.tmp_9;
  case 137:
    r0 = s.retval;
    s.tmp_8.arg1 = r0;
    s.callLocIdx = 680; s.pc = 136; return s.tmp_8;
  case 136:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = 128;
    s.callLocIdx = 681; s.pc = 135; return s.tmp_7;
  case 135:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tileScale___23064;
    s.callLocIdx = 682; s.pc = 134; return s.tmp_6;
  case 134:
    r0 = s.retval;
    s.y0___23129 = (r0);
    s.lastBrkId = 1520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1520]) return breakpoint(s, 139, 1520, r0);
  case 139:
    s.tmp_1 = tiles_TileMap_isObstacle__P2755_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___23098;
    s.tmp_1.arg2 = s.y0___23129;
    s.callLocIdx = 683; s.pc = 140; return s.tmp_1;
  case 140:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1521]) return breakpoint(s, 141, 1521, r0);
  case 141:
    s.tmp_2 = tiles_TileMap_getObstacle__P2756_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___23098;
    s.tmp_2.arg2 = s.y0___23129;
    s.callLocIdx = 684; s.pc = 142; return s.tmp_2;
  case 142:
    r0 = s.retval;
    s.obstacle___23145 = (r0);
    s.lastBrkId = 1522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1522]) return breakpoint(s, 143, 1522, r0);
  case 143:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapCollisions_inline__P23153);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___23145);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___23113;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 685; s.pc = 144; return s.tmp_4;
  case 144:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1523]) return breakpoint(s, 145, 1523, r0);
  case 145:
    r0 = pxsim_Array__push(s.collidedTiles___23113, s.obstacle___23145);
  case 10:
  case 11:
  case 12:
  case 13:
    s.lastBrkId = 1524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1524]) return breakpoint(s, 146, 1524, r0);
  case 146:
    s.tmp_0 = Fx_iadd__P158_mk(s);
    s.tmp_0.arg0 = s.tileSize___23067;
    s.tmp_0.arg1 = s.y___23115;
    s.callLocIdx = 686; s.pc = 147; return s.tmp_0;
  case 147:
    r0 = s.retval;
    s.y___23115 = (r0);
    { step = 9; continue; }
  case 14:
    s.lastBrkId = 1525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1525]) return breakpoint(s, 148, 1525, r0);
  case 148:
    r0 = pxsim_Array__length(s.collidedTiles___23113);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 41; continue; }
    s.lastBrkId = 1526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1526]) return breakpoint(s, 149, 1526, r0);
  case 149:
    r0 = pxsim_numops_toBoolDecr(s.right___23094);
    if (!r0) { step = 15; continue; }
    r0 = 2;
    { step = 16; continue; }
  case 15:
    r0 = 0;
  case 16:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___23172 = (s.tmp_1);
    s.lastBrkId = 1527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1527]) return breakpoint(s, 150, 1527, r0);
  case 150:
    r0 = pxsim_numops_toBoolDecr(s.right___23094);
    if (!r0) { step = 17; continue; }
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = Fx8__P149_mk(s);
    r0 = (s.x0___23098 << s.tileScale___23064);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 687; s.pc = 152; return s.tmp_1;
  case 152:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.hbox___23061.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 688; s.pc = 151; return s.tmp_0;
  case 151:
    r0 = s.retval;
    { step = 18; continue; }
  case 17:
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = (s.x0___23098 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << s.tileScale___23064);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 689; s.pc = 153; return s.tmp_2;
  case 153:
    r0 = s.retval;
  case 18:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.s___23036;
    s.tmp_7 = Fx_sub__P159_mk(s);
    s.tmp_7.arg0 = s.tmp_4;
    r0 = s.hbox___23061.fields["ox"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 690; s.pc = 154; return s.tmp_7;
  case 154:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_x"] = (s.tmp_6);
    s.lastBrkId = 1528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1528]) return breakpoint(s, 155, 1528, r0);
  case 155:
    s.tile___23198 = (undefined);
    s.unnamed12676___U14 = (s.collidedTiles___23113);
    s.unnamed12677___U15 = (0);
    s.lastBrkId = 1529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1529]) return breakpoint(s, 156, 1529, r0);
  case 156:
  case 19:
    s.tmp_0 = r0 = s.unnamed12677___U15;
    r0 = pxsim_Array__length(s.unnamed12676___U14);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 22; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12676___U14, s.unnamed12677___U15);
    s.tile___23198 = (r0);
    s.lastBrkId = 1530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1530]) return breakpoint(s, 157, 1530, r0);
  case 157:
    s.lastBrkId = 1531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1531]) return breakpoint(s, 158, 1531, r0);
  case 158:
    r0 = s.s___23036.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1532]) return breakpoint(s, 159, 1532, r0);
  case 159:
    s.tmp_6 = Sprite_registerObstacle__P2425_mk(s);
    s.tmp_6.arg0 = s.s___23036;
    s.tmp_6.arg1 = s.collisionDirection___23172;
    s.tmp_6.arg2 = s.tile___23198;
    s.tmp_6.arg3 = s.arg2;
    s.callLocIdx = 691; s.pc = 160; return s.tmp_6;
  case 160:
    r0 = s.retval;
  case 20:
  case 21:
    r0 = (s.unnamed12677___U15 + 1);
    s.unnamed12677___U15 = (r0);
    { step = 19; continue; }
  case 22:
    s.unnamed12676___U14 = (undefined);
    s.lastBrkId = 1533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1533]) return breakpoint(s, 161, 1533, r0);
  case 161:
    r0 = s.s___23036.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 1534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1534]) return breakpoint(s, 162, 1534, r0);
  case 162:
    s.tmp_2 = Sprite_destroy__P2427_mk(s);
    s.tmp_2.arg0 = s.s___23036;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 692; s.pc = 163; return s.tmp_2;
  case 163:
    r0 = s.retval;
    { step = 40; continue; }
  case 23:
    s.lastBrkId = 1535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1535]) return breakpoint(s, 164, 1535, r0);
  case 164:
    r0 = s.s___23036.fields["_vx"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 24; continue; }
    r0 = s.tmp_0;
    { step = 25; continue; }
  case 24:
    r0 = s.s___23036.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 25:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 36; continue; }
    s.lastBrkId = 1536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1536]) return breakpoint(s, 165, 1536, r0);
  case 165:
    r0 = s.s___23036.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & 32);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 34; continue; }
    s.lastBrkId = 1537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1537]) return breakpoint(s, 166, 1537, r0);
  case 166:
    r0 = pxsim_numops_toBoolDecr(s.right___23094);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (r0) { step = 26; continue; }
    r0 = s.tmp_9;
    { step = 27; continue; }
  case 26:
    s.tmp_12 = Sprite_vx__P2357_mk(s);
    s.tmp_12.arg0 = s.s___23036;
    s.callLocIdx = 693; s.pc = 167; return s.tmp_12;
  case 167:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 < 0);
  case 27:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBool(s.tmp_13);
    if (!r0) { step = 28; continue; }
    r0 = s.tmp_13;
    { step = 31; continue; }
  case 28:
    s.tmp_14 = r0 = s.right___23094;
    r0 = pxsim_numops_toBool(s.tmp_14);
    if (r0) { step = 29; continue; }
    r0 = s.tmp_14;
    { step = 30; continue; }
  case 29:
    s.tmp_16 = Sprite_vx__P2357_mk(s);
    s.tmp_16.arg0 = s.s___23036;
    s.callLocIdx = 694; s.pc = 168; return s.tmp_16;
  case 168:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_15 > 0);
  case 30:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
  case 31:
    // jmp value (already in r0)
    s.tmp_18 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_18);
    if (!r0) { step = 32; continue; }
    s.lastBrkId = 1538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1538]) return breakpoint(s, 169, 1538, r0);
  case 169:
    s.tmp_19 = r0 = s.s___23036;
    s.tmp_21 = Fx_neg__P155_mk(s);
    r0 = s.s___23036.fields["_vx"];
    s.tmp_21.arg0 = r0;
    s.callLocIdx = 695; s.pc = 170; return s.tmp_21;
  case 170:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = (s.tmp_19).fields["_vx"] = (s.tmp_20);
    s.lastBrkId = 1539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1539]) return breakpoint(s, 171, 1539, r0);
  case 171:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg1.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 696; s.pc = 172; return s.tmp_2;
  case 172:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
    s.lastBrkId = 1540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1540]) return breakpoint(s, 173, 1540, r0);
  case 173:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg1.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 697; s.pc = 174; return s.tmp_2;
  case 174:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
  case 32:
  case 33:
    { step = 35; continue; }
  case 34:
    s.lastBrkId = 1541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1541]) return breakpoint(s, 175, 1541, r0);
  case 175:
    r0 = (s.arg1).fields["dx"] = (0);
    s.lastBrkId = 1542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1542]) return breakpoint(s, 176, 1542, r0);
  case 176:
    r0 = (s.s___23036).fields["_vx"] = (0);
  case 35:
    { step = 39; continue; }
  case 36:
    s.lastBrkId = 1543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1543]) return breakpoint(s, 177, 1543, r0);
  case 177:
    s.tmp_2 = Math_sign__P129_mk(s);
    s.tmp_3 = Fx_toInt__P172_mk(s);
    r0 = s.s___23036.fields["_vx"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 698; s.pc = 179; return s.tmp_3;
  case 179:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 699; s.pc = 178; return s.tmp_2;
  case 178:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = Math_sign__P129_mk(s);
    s.tmp_6 = Fx_toInt__P172_mk(s);
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 700; s.pc = 181; return s.tmp_6;
  case 181:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 701; s.pc = 180; return s.tmp_5;
  case 180:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 37; continue; }
    s.lastBrkId = 1544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1544]) return breakpoint(s, 182, 1544, r0);
  case 182:
    r0 = (s.arg1).fields["dx"] = (0);
  case 37:
  case 38:
  case 39:
  case 40:
  case 41:
  case 42:
  case 43:
  case 44:
    s.lastBrkId = 1545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1545]) return breakpoint(s, 183, 1545, r0);
  case 183:
    r0 = (s.yDiff___23078 !== 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 81; continue; }
    s.lastBrkId = 1546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1546]) return breakpoint(s, 184, 1546, r0);
  case 184:
    r0 = (s.yDiff___23078 > 0);
    s.down___23289 = (r0);
    s.lastBrkId = 1547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1547]) return breakpoint(s, 185, 1547, r0);
  case 185:
    r0 = pxsim_numops_toBoolDecr(s.down___23289);
    if (!r0) { step = 45; continue; }
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_1.arg0 = s.hbox___23061;
    s.callLocIdx = 702; s.pc = 187; return s.tmp_1;
  case 187:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 703; s.pc = 186; return s.tmp_0;
  case 186:
    r0 = s.retval;
    { step = 46; continue; }
  case 45:
    s.tmp_2 = Fx_sub__P159_mk(s);
    s.tmp_3 = game_Hitbox_top__P2217_mk(s);
    s.tmp_3.arg0 = s.hbox___23061;
    s.callLocIdx = 704; s.pc = 189; return s.tmp_3;
  case 189:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 256;
    s.callLocIdx = 705; s.pc = 188; return s.tmp_2;
  case 188:
    r0 = s.retval;
  case 46:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 706; s.pc = 191; return s.tmp_6;
  case 191:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___23064;
    s.callLocIdx = 707; s.pc = 190; return s.tmp_5;
  case 190:
    r0 = s.retval;
    s.y0___23293 = (r0);
    s.lastBrkId = 1548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1548]) return breakpoint(s, 192, 1548, r0);
  case 192:
    r0 = pxsim_Array__mk();
    s.collidedTiles___23308 = (r0);
    s.lastBrkId = 1549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1549]) return breakpoint(s, 193, 1549, r0);
  case 193:
    s.tmp_0 = game_Hitbox_left__P2216_mk(s);
    s.tmp_0.arg0 = s.hbox___23061;
    s.callLocIdx = 708; s.pc = 194; return s.tmp_0;
  case 194:
    r0 = s.retval;
    s.x___23310 = (r0);
    s.lastBrkId = 1550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1550]) return breakpoint(s, 195, 1550, r0);
  case 195:
  case 47:
    s.lastBrkId = 1551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1551]) return breakpoint(s, 196, 1551, r0);
  case 196:
    s.tmp_1 = r0 = s.x___23310;
    s.tmp_3 = Fx_iadd__P158_mk(s);
    s.tmp_3.arg0 = s.tileSize___23067;
    s.tmp_4 = game_Hitbox_right__P2218_mk(s);
    s.tmp_4.arg0 = s.hbox___23061;
    s.callLocIdx = 709; s.pc = 198; return s.tmp_4;
  case 198:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 710; s.pc = 197; return s.tmp_3;
  case 197:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 52; continue; }
    s.lastBrkId = 1552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1552]) return breakpoint(s, 199, 1552, r0);
  case 199:
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_7 = Fx_min__P166_mk(s);
    s.tmp_7.arg0 = s.x___23310;
    s.tmp_8 = game_Hitbox_right__P2218_mk(s);
    s.tmp_8.arg0 = s.hbox___23061;
    s.callLocIdx = 711; s.pc = 203; return s.tmp_8;
  case 203:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 712; s.pc = 202; return s.tmp_7;
  case 202:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 713; s.pc = 201; return s.tmp_6;
  case 201:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___23064;
    s.callLocIdx = 714; s.pc = 200; return s.tmp_5;
  case 200:
    r0 = s.retval;
    s.x0___23320 = (r0);
    s.lastBrkId = 1553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1553]) return breakpoint(s, 204, 1553, r0);
  case 204:
    s.tmp_1 = tiles_TileMap_isObstacle__P2755_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___23320;
    s.tmp_1.arg2 = s.y0___23293;
    s.callLocIdx = 715; s.pc = 205; return s.tmp_1;
  case 205:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 50; continue; }
    s.lastBrkId = 1554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1554]) return breakpoint(s, 206, 1554, r0);
  case 206:
    s.tmp_2 = tiles_TileMap_getObstacle__P2756_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___23320;
    s.tmp_2.arg2 = s.y0___23293;
    s.callLocIdx = 716; s.pc = 207; return s.tmp_2;
  case 207:
    r0 = s.retval;
    s.obstacle___23334 = (r0);
    s.lastBrkId = 1555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1555]) return breakpoint(s, 208, 1555, r0);
  case 208:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapCollisions_inline__P23342);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___23334);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___23308;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 717; s.pc = 209; return s.tmp_4;
  case 209:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 48; continue; }
    s.lastBrkId = 1556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1556]) return breakpoint(s, 210, 1556, r0);
  case 210:
    r0 = pxsim_Array__push(s.collidedTiles___23308, s.obstacle___23334);
  case 48:
  case 49:
  case 50:
  case 51:
    s.lastBrkId = 1557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1557]) return breakpoint(s, 211, 1557, r0);
  case 211:
    s.tmp_0 = Fx_iadd__P158_mk(s);
    s.tmp_0.arg0 = s.tileSize___23067;
    s.tmp_0.arg1 = s.x___23310;
    s.callLocIdx = 718; s.pc = 212; return s.tmp_0;
  case 212:
    r0 = s.retval;
    s.x___23310 = (r0);
    { step = 47; continue; }
  case 52:
    s.lastBrkId = 1558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1558]) return breakpoint(s, 213, 1558, r0);
  case 213:
    r0 = pxsim_Array__length(s.collidedTiles___23308);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 79; continue; }
    s.lastBrkId = 1559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1559]) return breakpoint(s, 214, 1559, r0);
  case 214:
    r0 = pxsim_numops_toBoolDecr(s.down___23289);
    if (!r0) { step = 53; continue; }
    r0 = 3;
    { step = 54; continue; }
  case 53:
    r0 = 1;
  case 54:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___23361 = (s.tmp_1);
    s.lastBrkId = 1560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1560]) return breakpoint(s, 215, 1560, r0);
  case 215:
    r0 = pxsim_numops_toBoolDecr(s.down___23289);
    if (!r0) { step = 55; continue; }
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = Fx8__P149_mk(s);
    r0 = (s.y0___23293 << s.tileScale___23064);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 719; s.pc = 217; return s.tmp_1;
  case 217:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.hbox___23061.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 720; s.pc = 216; return s.tmp_0;
  case 216:
    r0 = s.retval;
    { step = 56; continue; }
  case 55:
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = (s.y0___23293 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << s.tileScale___23064);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 721; s.pc = 218; return s.tmp_2;
  case 218:
    r0 = s.retval;
  case 56:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.s___23036;
    s.tmp_7 = Fx_sub__P159_mk(s);
    s.tmp_7.arg0 = s.tmp_4;
    r0 = s.hbox___23061.fields["oy"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 722; s.pc = 219; return s.tmp_7;
  case 219:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    s.lastBrkId = 1561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1561]) return breakpoint(s, 220, 1561, r0);
  case 220:
    s.tile___23387 = (undefined);
    s.unnamed12678___U24 = (s.collidedTiles___23308);
    s.unnamed12679___U25 = (0);
    s.lastBrkId = 1562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1562]) return breakpoint(s, 221, 1562, r0);
  case 221:
  case 57:
    s.tmp_0 = r0 = s.unnamed12679___U25;
    r0 = pxsim_Array__length(s.unnamed12678___U24);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 60; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12678___U24, s.unnamed12679___U25);
    s.tile___23387 = (r0);
    s.lastBrkId = 1563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1563]) return breakpoint(s, 222, 1563, r0);
  case 222:
    s.lastBrkId = 1564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1564]) return breakpoint(s, 223, 1564, r0);
  case 223:
    r0 = s.s___23036.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 58; continue; }
    s.lastBrkId = 1565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1565]) return breakpoint(s, 224, 1565, r0);
  case 224:
    s.tmp_6 = Sprite_registerObstacle__P2425_mk(s);
    s.tmp_6.arg0 = s.s___23036;
    s.tmp_6.arg1 = s.collisionDirection___23361;
    s.tmp_6.arg2 = s.tile___23387;
    s.tmp_6.arg3 = s.arg2;
    s.callLocIdx = 723; s.pc = 225; return s.tmp_6;
  case 225:
    r0 = s.retval;
  case 58:
  case 59:
    r0 = (s.unnamed12679___U25 + 1);
    s.unnamed12679___U25 = (r0);
    { step = 57; continue; }
  case 60:
    s.unnamed12678___U24 = (undefined);
    s.lastBrkId = 1566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1566]) return breakpoint(s, 226, 1566, r0);
  case 226:
    r0 = s.s___23036.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 61; continue; }
    s.lastBrkId = 1567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1567]) return breakpoint(s, 227, 1567, r0);
  case 227:
    s.tmp_2 = Sprite_destroy__P2427_mk(s);
    s.tmp_2.arg0 = s.s___23036;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 724; s.pc = 228; return s.tmp_2;
  case 228:
    r0 = s.retval;
    { step = 78; continue; }
  case 61:
    s.lastBrkId = 1568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1568]) return breakpoint(s, 229, 1568, r0);
  case 229:
    r0 = s.s___23036.fields["_vy"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 62; continue; }
    r0 = s.tmp_0;
    { step = 63; continue; }
  case 62:
    r0 = s.s___23036.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 63:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 74; continue; }
    s.lastBrkId = 1569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1569]) return breakpoint(s, 230, 1569, r0);
  case 230:
    r0 = s.s___23036.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & 32);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 72; continue; }
    s.lastBrkId = 1570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1570]) return breakpoint(s, 231, 1570, r0);
  case 231:
    r0 = pxsim_numops_toBoolDecr(s.down___23289);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (r0) { step = 64; continue; }
    r0 = s.tmp_9;
    { step = 65; continue; }
  case 64:
    s.tmp_12 = Sprite_vy__P2359_mk(s);
    s.tmp_12.arg0 = s.s___23036;
    s.callLocIdx = 725; s.pc = 232; return s.tmp_12;
  case 232:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 < 0);
  case 65:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBool(s.tmp_13);
    if (!r0) { step = 66; continue; }
    r0 = s.tmp_13;
    { step = 69; continue; }
  case 66:
    s.tmp_14 = r0 = s.down___23289;
    r0 = pxsim_numops_toBool(s.tmp_14);
    if (r0) { step = 67; continue; }
    r0 = s.tmp_14;
    { step = 68; continue; }
  case 67:
    s.tmp_16 = Sprite_vy__P2359_mk(s);
    s.tmp_16.arg0 = s.s___23036;
    s.callLocIdx = 726; s.pc = 233; return s.tmp_16;
  case 233:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_15 > 0);
  case 68:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
  case 69:
    // jmp value (already in r0)
    s.tmp_18 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_18);
    if (!r0) { step = 70; continue; }
    s.lastBrkId = 1571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1571]) return breakpoint(s, 234, 1571, r0);
  case 234:
    s.tmp_19 = r0 = s.s___23036;
    s.tmp_21 = Fx_neg__P155_mk(s);
    r0 = s.s___23036.fields["_vy"];
    s.tmp_21.arg0 = r0;
    s.callLocIdx = 727; s.pc = 235; return s.tmp_21;
  case 235:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = (s.tmp_19).fields["_vy"] = (s.tmp_20);
    s.lastBrkId = 1572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1572]) return breakpoint(s, 236, 1572, r0);
  case 236:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg1.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 728; s.pc = 237; return s.tmp_2;
  case 237:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
    s.lastBrkId = 1573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1573]) return breakpoint(s, 238, 1573, r0);
  case 238:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg1.fields["dy"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 729; s.pc = 239; return s.tmp_2;
  case 239:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
  case 70:
  case 71:
    { step = 73; continue; }
  case 72:
    s.lastBrkId = 1574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1574]) return breakpoint(s, 240, 1574, r0);
  case 240:
    r0 = (s.arg1).fields["dy"] = (0);
    s.lastBrkId = 1575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1575]) return breakpoint(s, 241, 1575, r0);
  case 241:
    r0 = (s.s___23036).fields["_vy"] = (0);
  case 73:
    { step = 77; continue; }
  case 74:
    s.lastBrkId = 1576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1576]) return breakpoint(s, 242, 1576, r0);
  case 242:
    s.tmp_2 = Math_sign__P129_mk(s);
    s.tmp_3 = Fx_toInt__P172_mk(s);
    r0 = s.s___23036.fields["_vy"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 730; s.pc = 244; return s.tmp_3;
  case 244:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 731; s.pc = 243; return s.tmp_2;
  case 243:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = Math_sign__P129_mk(s);
    s.tmp_6 = Fx_toInt__P172_mk(s);
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 732; s.pc = 246; return s.tmp_6;
  case 246:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 733; s.pc = 245; return s.tmp_5;
  case 245:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 75; continue; }
    s.lastBrkId = 1577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1577]) return breakpoint(s, 247, 1577, r0);
  case 247:
    r0 = (s.arg1).fields["dy"] = (0);
  case 75:
  case 76:
  case 77:
  case 78:
  case 79:
  case 80:
  case 81:
  case 82:
  case 83:
  case 84:
    s.lastBrkId = 1578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1578]) return breakpoint(s, 248, 1578, r0);
  case 248:
    r0 = s.s___23036.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 1538);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 95; continue; }
    s.lastBrkId = 1579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1579]) return breakpoint(s, 249, 1579, r0);
  case 249:
    r0 = pxsim_Array__mk();
    s.overlappedTiles___23481 = (r0);
    s.lastBrkId = 1580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1580]) return breakpoint(s, 250, 1580, r0);
  case 250:
    s.tmp_0 = game_Hitbox_left__P2216_mk(s);
    s.tmp_0.arg0 = s.hbox___23061;
    s.callLocIdx = 734; s.pc = 251; return s.tmp_0;
  case 251:
    r0 = s.retval;
    s.x___23483 = (r0);
    s.lastBrkId = 1581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1581]) return breakpoint(s, 252, 1581, r0);
  case 252:
  case 85:
    s.lastBrkId = 1582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1582]) return breakpoint(s, 253, 1582, r0);
  case 253:
    s.tmp_1 = r0 = s.x___23483;
    s.tmp_3 = Fx_iadd__P158_mk(s);
    s.tmp_3.arg0 = s.tileSize___23067;
    s.tmp_4 = game_Hitbox_right__P2218_mk(s);
    s.tmp_4.arg0 = s.hbox___23061;
    s.callLocIdx = 735; s.pc = 255; return s.tmp_4;
  case 255:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 736; s.pc = 254; return s.tmp_3;
  case 254:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 92; continue; }
    s.lastBrkId = 1583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1583]) return breakpoint(s, 256, 1583, r0);
  case 256:
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_7 = Fx_min__P166_mk(s);
    s.tmp_7.arg0 = s.x___23483;
    s.tmp_8 = game_Hitbox_right__P2218_mk(s);
    s.tmp_8.arg0 = s.hbox___23061;
    s.callLocIdx = 737; s.pc = 260; return s.tmp_8;
  case 260:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 738; s.pc = 259; return s.tmp_7;
  case 259:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 739; s.pc = 258; return s.tmp_6;
  case 258:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___23064;
    s.callLocIdx = 740; s.pc = 257; return s.tmp_5;
  case 257:
    r0 = s.retval;
    s.x0___23493 = (r0);
    s.lastBrkId = 1584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1584]) return breakpoint(s, 261, 1584, r0);
  case 261:
    s.tmp_0 = game_Hitbox_top__P2217_mk(s);
    s.tmp_0.arg0 = s.hbox___23061;
    s.callLocIdx = 741; s.pc = 262; return s.tmp_0;
  case 262:
    r0 = s.retval;
    s.y___23503 = (r0);
    s.lastBrkId = 1585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1585]) return breakpoint(s, 263, 1585, r0);
  case 263:
  case 86:
    s.lastBrkId = 1586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1586]) return breakpoint(s, 264, 1586, r0);
  case 264:
    s.tmp_1 = r0 = s.y___23503;
    s.tmp_3 = Fx_iadd__P158_mk(s);
    s.tmp_3.arg0 = s.tileSize___23067;
    s.tmp_4 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_4.arg0 = s.hbox___23061;
    s.callLocIdx = 742; s.pc = 266; return s.tmp_4;
  case 266:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 743; s.pc = 265; return s.tmp_3;
  case 265:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 91; continue; }
    s.lastBrkId = 1587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1587]) return breakpoint(s, 267, 1587, r0);
  case 267:
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_7 = Fx_min__P166_mk(s);
    s.tmp_7.arg0 = s.y___23503;
    s.tmp_8 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_8.arg0 = s.hbox___23061;
    s.callLocIdx = 744; s.pc = 271; return s.tmp_8;
  case 271:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 745; s.pc = 270; return s.tmp_7;
  case 270:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 746; s.pc = 269; return s.tmp_6;
  case 269:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___23064;
    s.callLocIdx = 747; s.pc = 268; return s.tmp_5;
  case 268:
    r0 = s.retval;
    s.y0___23513 = (r0);
    s.lastBrkId = 1588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1588]) return breakpoint(s, 272, 1588, r0);
  case 272:
    s.tmp_3 = tiles_TileMap_isObstacle__P2755_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.x0___23493;
    s.tmp_3.arg2 = s.y0___23513;
    s.callLocIdx = 748; s.pc = 273; return s.tmp_3;
  case 273:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 87; continue; }
    r0 = s.tmp_0;
    { step = 88; continue; }
  case 87:
    r0 = s.s___23036.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & 2048);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 88:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 89; continue; }
    s.lastBrkId = 1589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1589]) return breakpoint(s, 274, 1589, r0);
  case 274:
    s.tmp_10 = r0 = s.overlappedTiles___23481;
    s.tmp_12 = tiles_TileMap_getTile__P2748_mk(s);
    s.tmp_12.arg0 = s.arg2;
    s.tmp_12.arg1 = s.x0___23493;
    s.tmp_12.arg2 = s.y0___23513;
    s.callLocIdx = 749; s.pc = 275; return s.tmp_12;
  case 275:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_Array__push(s.tmp_10, s.tmp_11);
  case 89:
  case 90:
    s.lastBrkId = 1590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1590]) return breakpoint(s, 276, 1590, r0);
  case 276:
    s.tmp_0 = Fx_iadd__P158_mk(s);
    s.tmp_0.arg0 = s.tileSize___23067;
    s.tmp_0.arg1 = s.y___23503;
    s.callLocIdx = 750; s.pc = 277; return s.tmp_0;
  case 277:
    r0 = s.retval;
    s.y___23503 = (r0);
    { step = 86; continue; }
  case 91:
    s.lastBrkId = 1591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1591]) return breakpoint(s, 278, 1591, r0);
  case 278:
    s.tmp_0 = Fx_iadd__P158_mk(s);
    s.tmp_0.arg0 = s.tileSize___23067;
    s.tmp_0.arg1 = s.x___23483;
    s.callLocIdx = 751; s.pc = 279; return s.tmp_0;
  case 279:
    r0 = s.retval;
    s.x___23483 = (r0);
    { step = 85; continue; }
  case 92:
    s.lastBrkId = 1592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1592]) return breakpoint(s, 280, 1592, r0);
  case 280:
    r0 = pxsim_Array__length(s.overlappedTiles___23481);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 93; continue; }
    s.lastBrkId = 1593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1593]) return breakpoint(s, 281, 1593, r0);
  case 281:
    s.tmp_1 = ArcadePhysicsEngine_tilemapOverlaps__P5094_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.s___23036;
    s.tmp_1.arg2 = s.overlappedTiles___23481;
    s.callLocIdx = 752; s.pc = 282; return s.tmp_1;
  case 282:
    r0 = s.retval;
  case 93:
  case 94:
  case 95:
  case 96:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions__P5093.info = {"start":12929,"length":9654,"line":379,"column":4,"endLine":618,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapCollisions","argumentNames":["this","movingSprite","tm"]}

function ArcadePhysicsEngine_tilemapCollisions__P5093_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions__P5093, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  s___23036: undefined,
  hbox___23061: undefined,
  tileScale___23064: undefined,
  tileSize___23067: undefined,
  xDiff___23071: undefined,
  yDiff___23078: undefined,
  right___23094: undefined,
  x0___23098: undefined,
  collidedTiles___23113: undefined,
  y___23115: undefined,
  y0___23129: undefined,
  obstacle___23145: undefined,
  collisionDirection___23172: undefined,
  tile___23198: undefined,
  unnamed12676___U14: undefined,
  unnamed12677___U15: undefined,
  down___23289: undefined,
  y0___23293: undefined,
  collidedTiles___23308: undefined,
  x___23310: undefined,
  x0___23320: undefined,
  obstacle___23334: undefined,
  collisionDirection___23361: undefined,
  tile___23387: undefined,
  unnamed12678___U24: undefined,
  unnamed12679___U25: undefined,
  overlappedTiles___23481: undefined,
  x___23483: undefined,
  x0___23493: undefined,
  y___23503: undefined,
  y0___23513: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions_inline__P23153(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions_inline__P23153.info = {"start":15147,"length":39,"line":441,"column":48,"endLine":441,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function ArcadePhysicsEngine_tilemapCollisions_inline__P23153_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions_inline__P23153, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions_inline__P23342(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions_inline__P23342.info = {"start":18668,"length":39,"line":522,"column":48,"endLine":522,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function ArcadePhysicsEngine_tilemapCollisions_inline__P23342_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions_inline__P23342, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps__P5094(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.alreadyHandled___23560 = undefined;
    s.tile___23563 = undefined;
    s.unnamed12680___U2 = undefined;
    s.unnamed12681___U3 = undefined;
    s.tileOverlapHandlers___23584 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1594]) return breakpoint(s, 8, 1594, r0);
  case 8:
    r0 = pxsim_Array__mk();
    s.alreadyHandled___23560 = (r0);
    s.lastBrkId = 1595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1595]) return breakpoint(s, 9, 1595, r0);
  case 9:
    s.tile___23563 = (undefined);
    s.unnamed12680___U2 = (s.arg2);
    s.unnamed12681___U3 = (0);
    s.lastBrkId = 1596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1596]) return breakpoint(s, 10, 1596, r0);
  case 10:
  case 1:
    s.tmp_0 = r0 = s.unnamed12681___U3;
    r0 = pxsim_Array__length(s.unnamed12680___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12680___U2, s.unnamed12681___U3);
    s.tile___23563 = (r0);
    s.lastBrkId = 1597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1597]) return breakpoint(s, 11, 1597, r0);
  case 11:
    s.lastBrkId = 1598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1598]) return breakpoint(s, 12, 1598, r0);
  case 12:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapOverlaps_inline__P23567);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.tile___23563);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.alreadyHandled___23560;
    s.tmp_4.arg1 = s.tmp_2;
    s.callLocIdx = 757; s.pc = 13; return s.tmp_4;
  case 13:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1599]) return breakpoint(s, 14, 1599, r0);
  case 14:
    { step = 6; continue; }
  case 2:
  case 3:
    s.lastBrkId = 1600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1600]) return breakpoint(s, 15, 1600, r0);
  case 15:
    r0 = pxsim_Array__push(s.alreadyHandled___23560, s.tile___23563);
    s.lastBrkId = 1601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1601]) return breakpoint(s, 16, 1601, r0);
  case 16:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 758; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = r0.fields["tileOverlapHandlers"];
    s.tileOverlapHandlers___23584 = (r0);
    s.lastBrkId = 1602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1602]) return breakpoint(s, 18, 1602, r0);
  case 18:
    r0 = pxsim_numops_toBoolDecr(s.tileOverlapHandlers___23584);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1603]) return breakpoint(s, 19, 1603, r0);
  case 19:
    r0 = pxsim_pxtcore_mkAction(2, forEach_inline__P23592);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.tile___23563);
    r0 = pxsim_pxtcore_mkAction(2, ArcadePhysicsEngine_tilemapOverlaps_inline__P23608);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 1, s.tile___23563);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3.arg0 = s.tileOverlapHandlers___23584;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 761; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 763; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = (s.unnamed12681___U3 + 1);
    s.unnamed12681___U3 = (r0);
    { step = 1; continue; }
  case 7:
    s.unnamed12680___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps__P5094.info = {"start":22860,"length":707,"line":626,"column":4,"endLine":642,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapOverlaps","argumentNames":["this","sprite","overlappedTiles"]}

function ArcadePhysicsEngine_tilemapOverlaps__P5094_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps__P5094, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  alreadyHandled___23560: undefined,
  tile___23563: undefined,
  unnamed12680___U2: undefined,
  unnamed12681___U3: undefined,
  tileOverlapHandlers___23584: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps_inline__P23567(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_2 = tiles_Location_column__P2695_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 753; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_Location_column__P2695_mk(s);
    s.tmp_4.arg0 = s.caps[0];
    s.callLocIdx = 754; s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 === s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = tiles_Location_row__P2696_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 755; s.pc = 5; return s.tmp_6;
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = tiles_Location_row__P2696_mk(s);
    s.tmp_8.arg0 = s.caps[0];
    s.callLocIdx = 756; s.pc = 6; return s.tmp_8;
  case 6:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 === s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps_inline__P23567.info = {"start":23075,"length":51,"line":630,"column":36,"endLine":630,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["l"]}

function ArcadePhysicsEngine_tilemapOverlaps_inline__P23567_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps_inline__P23567, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function forEach_inline__P23592(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_1 = r0;
    s.tmp_3 = Sprite_kind__P2406_mk(s);
    s.tmp_3.arg0 = s.caps[0];
    s.callLocIdx = 759; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["tileKind"];
    s.tmp_4 = r0;
    s.tmp_6 = tiles_getTileImage__P2767_mk(s);
    s.tmp_6.arg0 = s.caps[1];
    s.callLocIdx = 760; s.pc = 4; return s.tmp_6;
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.equals(s.tmp_4, s.tmp_5);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P23592.info = {"start":23395,"length":81,"line":638,"column":28,"endLine":638,"endColumn":109,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P23592_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P23592, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps_inline__P23608(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 762; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 762; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 762; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 762; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps_inline__P23608.info = {"start":23507,"length":28,"line":639,"column":29,"endLine":639,"endColumn":57,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function ArcadePhysicsEngine_tilemapOverlaps_inline__P23608_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps_inline__P23608, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_getTileImage__P2767(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___23616 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1862]) return breakpoint(s, 6, 1862, r0);
  case 6:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 894; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___23616 = (r0);
    s.lastBrkId = 1863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1863]) return breakpoint(s, 8, 1863, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___23616.fields["tileMap"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1864]) return breakpoint(s, 9, 1864, r0);
  case 9:
    r0 = pxsim.image.ofBuffer(_hex23626);
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1865]) return breakpoint(s, 10, 1865, r0);
  case 10:
    s.tmp_5 = tiles_TileMap_getTileImage__P2758_mk(s);
    r0 = s.scene___23616.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_6 = tiles_Location_tileSet__P2703_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 895; s.pc = 12; return s.tmp_6;
  case 12:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 896; s.pc = 11; return s.tmp_5;
  case 11:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_getTileImage__P2767.info = {"start":21871,"length":207,"line":673,"column":4,"endLine":677,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["loc"]}

function tiles_getTileImage__P2767_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_getTileImage__P2767, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___23616: undefined,
  arg0: undefined,
} }

const _hex23626 = pxsim.BufferMethods.createBufferFromHex("8704000000000000")




function tiles_TileMap_getTileImage__P2758(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1861]) return breakpoint(s, 1, 1861, r0);
  case 1:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2725_mk(s);
    s.tmp_1 = tiles_TileMap_data__P2739_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 892; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 893; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileImage__P2758.info = {"start":17510,"length":96,"line":553,"column":8,"endLine":555,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMap_getTileImage__P2758_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileImage__P2758, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_getTileImage__P2725(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.size___23681 = undefined;
    s.cachedImage___23685 = undefined;
    s.originalImage___23692 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1772]) return breakpoint(s, 9, 1772, r0);
  case 9:
    s.tmp_1 = tiles_TileMapData_scale__P2720_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 829; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.size___23681 = (r0);
    s.lastBrkId = 1773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1773]) return breakpoint(s, 11, 1773, r0);
  case 11:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg1);
    s.cachedImage___23685 = (r0);
    s.lastBrkId = 1774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1774]) return breakpoint(s, 12, 1774, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.cachedImage___23685);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1775]) return breakpoint(s, 13, 1775, r0);
  case 13:
    r0 = s.arg0.fields["tileset"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.arg1);
    s.originalImage___23692 = (r0);
    s.lastBrkId = 1776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1776]) return breakpoint(s, 14, 1776, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.originalImage___23692);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1777]) return breakpoint(s, 15, 1777, r0);
  case 15:
    r0 = pxsim_ImageMethods.width(s.originalImage___23692);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.size___23681);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_ImageMethods.height(s.originalImage___23692);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 <= s.size___23681);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1778]) return breakpoint(s, 16, 1778, r0);
  case 16:
    s.cachedImage___23685 = (s.originalImage___23692);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1779]) return breakpoint(s, 17, 1779, r0);
  case 17:
    r0 = pxsim.image.create(s.size___23681, s.size___23681);
    s.cachedImage___23685 = (r0);
    s.lastBrkId = 1780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1780]) return breakpoint(s, 18, 1780, r0);
  case 18:
    r0 = pxsim_ImageMethods.drawImage(s.cachedImage___23685, s.originalImage___23692, 0, 0);
  case 4:
    s.lastBrkId = 1781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1781]) return breakpoint(s, 19, 1781, r0);
  case 19:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.cachedImage___23685);
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 1782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1782]) return breakpoint(s, 20, 1782, r0);
  case 20:
    r0 = s.cachedImage___23685;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTileImage__P2725.info = {"start":7354,"length":717,"line":251,"column":8,"endLine":268,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMapData_getTileImage__P2725_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTileImage__P2725, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  size___23681: undefined,
  cachedImage___23685: undefined,
  originalImage___23692: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_scale__P2720(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1766]) return breakpoint(s, 1, 1766, r0);
  case 1:
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P2720.info = {"start":6564,"length":66,"line":222,"column":8,"endLine":224,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMapData_scale__P2720.isGetter = true;

function tiles_TileMapData_scale__P2720_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P2720, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_tileSet__P2703(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1757]) return breakpoint(s, 1, 1757, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_getTileIndex__P2749_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P2694_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 824; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_col"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["_row"];
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 825; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileSet__P2703.info = {"start":2323,"length":101,"line":86,"column":8,"endLine":88,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileSet","argumentNames":["this"]}
tiles_Location_tileSet__P2703.isGetter = true;

function tiles_Location_tileSet__P2703_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileSet__P2703, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function tiles_TileMap_getTileIndex__P2749(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1800]) return breakpoint(s, 1, 1800, r0);
  case 1:
    s.tmp_0 = tiles_TileMapData_getTile__P2722_mk(s);
    s.tmp_1 = tiles_TileMap_data__P2739_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 847; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 848; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileIndex__P2749.info = {"start":11191,"length":105,"line":384,"column":8,"endLine":386,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileIndex","argumentNames":["this","col","row"]}

function tiles_TileMap_getTileIndex__P2749_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileIndex__P2749, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_getTile__P2722(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1769]) return breakpoint(s, 4, 1769, r0);
  case 4:
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P2728_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 827; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1770]) return breakpoint(s, 6, 1770, r0);
  case 6:
    r0 = 0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1771]) return breakpoint(s, 7, 1771, r0);
  case 7:
    r0 = s.arg0.fields["data"];
    s.tmp_2 = r0;
    r0 = (s.arg1 | 0);
    s.tmp_5 = r0;
    r0 = (4 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.arg2 | 0);
    s.tmp_7 = r0;
    s.tmp_9 = tiles_TileMapData_width__P2718_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 828; s.pc = 8; return s.tmp_9;
  case 8:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 * s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.getUint8(s.tmp_2, s.tmp_3);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTile__P2722.info = {"start":6752,"length":200,"line":231,"column":8,"endLine":235,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMapData_getTile__P2722_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTile__P2722, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isOutsideMap__P2728(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1784]) return breakpoint(s, 7, 1784, r0);
  case 7:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = tiles_TileMapData_width__P2718_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 830; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 < 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_5;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = r0 = s.arg2;
    s.tmp_8 = tiles_TileMapData_height__P2719_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 831; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 >= s.tmp_7);
  case 6:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isOutsideMap__P2728.info = {"start":8335,"length":132,"line":278,"column":8,"endLine":280,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOutsideMap","argumentNames":["this","col","row"]}

function tiles_TileMapData_isOutsideMap__P2728_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isOutsideMap__P2728, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_tileMap__P2694(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1747]) return breakpoint(s, 1, 1747, r0);
  case 1:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 812; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileMap__P2694.info = {"start":491,"length":73,"line":24,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileMap","argumentNames":["this"]}
tiles_Location_tileMap__P2694.isGetter = true;

function tiles_Location_tileMap__P2694_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileMap__P2694, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_Location_row__P2696(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1749]) return breakpoint(s, 1, 1749, r0);
  case 1:
    r0 = s.arg0.fields["_row"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_row__P2696.info = {"start":877,"length":51,"line":38,"column":8,"endLine":40,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"row","argumentNames":["this"]}
tiles_Location_row__P2696.isGetter = true;

function tiles_Location_row__P2696_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_row__P2696, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_column__P2695(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1748]) return breakpoint(s, 1, 1748, r0);
  case 1:
    r0 = s.arg0.fields["_col"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_column__P2695.info = {"start":695,"length":54,"line":31,"column":8,"endLine":33,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"column","argumentNames":["this"]}
tiles_Location_column__P2695.isGetter = true;

function tiles_Location_column__P2695_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_column__P2695, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMap_getObstacle__P2756(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___23855 = undefined;
    s.tile___23867 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1842]) return breakpoint(s, 3, 1842, r0);
  case 3:
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P2728_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 872; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = tiles_TileMapData_getTile__P2722_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg1;
    s.tmp_2.arg2 = s.arg2;
    s.callLocIdx = 873; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.index___23855 = (s.tmp_3);
    s.lastBrkId = 1843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1843]) return breakpoint(s, 6, 1843, r0);
  case 6:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2725_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___23855;
    s.callLocIdx = 874; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tile___23867 = (r0);
    s.lastBrkId = 1844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1844]) return breakpoint(s, 8, 1844, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_StaticObstacle__C2497_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_StaticObstacle_constructor__P2503_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.tile___23867;
    s.tmp_2 = r0 = s.arg2;
    s.tmp_4 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 875; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1.arg2 = r0;
    s.tmp_5 = r0 = s.arg1;
    s.tmp_7 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 876; s.pc = 11; return s.tmp_7;
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 << s.tmp_6);
    s.tmp_1.arg3 = r0;
    s.tmp_8 = tiles_TileMap_layer__P2744_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 877; s.pc = 12; return s.tmp_8;
  case 12:
    r0 = s.retval;
    s.tmp_1.arg4 = r0;
    s.tmp_1.arg5 = s.index___23855;
    s.callLocIdx = 878; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getObstacle__P2756.info = {"start":16453,"length":410,"line":522,"column":8,"endLine":532,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_getObstacle__P2756_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getObstacle__P2756, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  index___23855: undefined,
  tile___23867: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_layer__P2744(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1797]) return breakpoint(s, 1, 1797, r0);
  case 1:
    r0 = s.arg0.fields["_layer"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_layer__P2744.info = {"start":9967,"length":63,"line":341,"column":8,"endLine":343,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"layer","argumentNames":["this"]}
tiles_TileMap_layer__P2744.isGetter = true;

function tiles_TileMap_layer__P2744_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_layer__P2744, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_StaticObstacle_constructor__P2503(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2497_VT)) failedCast(r0);
    s.lastBrkId = 1323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1323]) return breakpoint(s, 1, 1323, r0);
  case 1:
    r0 = (s.arg0).fields["image"] = (s.arg1);
    s.lastBrkId = 1324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1324]) return breakpoint(s, 2, 1324, r0);
  case 2:
    r0 = (s.arg0).fields["layer"] = (s.arg4);
    s.lastBrkId = 1325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1325]) return breakpoint(s, 3, 1325, r0);
  case 3:
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.lastBrkId = 1326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1326]) return breakpoint(s, 4, 1326, r0);
  case 4:
    r0 = (s.arg0).fields["left"] = (s.arg3);
    s.lastBrkId = 1327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1327]) return breakpoint(s, 5, 1327, r0);
  case 5:
    r0 = (s.arg0).fields["tileIndex"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_constructor__P2503.info = {"start":563,"length":261,"line":28,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"inline","argumentNames":["this","image","top","left","layer","tileIndex"]}

function sprites_StaticObstacle_constructor__P2503_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_constructor__P2503, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function tiles_TileMap_isObstacle__P2755(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1837]) return breakpoint(s, 6, 1837, r0);
  case 6:
    s.tmp_3 = tiles_TileMap_enabled__P2746_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 869; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1838]) return breakpoint(s, 8, 1838, r0);
  case 8:
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1839]) return breakpoint(s, 9, 1839, r0);
  case 9:
    s.tmp_5 = tiles_TileMapData_isOutsideMap__P2728_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg1;
    s.tmp_5.arg2 = s.arg2;
    s.callLocIdx = 870; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1840]) return breakpoint(s, 11, 1840, r0);
  case 11:
    r0 = true;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1841]) return breakpoint(s, 12, 1841, r0);
  case 12:
    s.tmp_6 = tiles_TileMapData_isWall__P2727_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg1;
    s.tmp_6.arg2 = s.arg2;
    s.callLocIdx = 871; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isObstacle__P2755.info = {"start":16232,"length":211,"line":515,"column":8,"endLine":520,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_isObstacle__P2755_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isObstacle__P2755, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isWall__P2727(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1783]) return breakpoint(s, 1, 1783, r0);
  case 1:
    r0 = s.arg0.fields["layers"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_1, s.arg1, s.arg2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 === 2);
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isWall__P2727.info = {"start":8218,"length":107,"line":274,"column":8,"endLine":276,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isWall","argumentNames":["this","col","row"]}

function tiles_TileMapData_isWall__P2727_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isWall__P2727, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_getTile__P2748(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1799]) return breakpoint(s, 1, 1799, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_Location__C2692_VT);
    s.tmp_0 = r0;
    s.tmp_1 = tiles_Location_constructor__P2693_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg0;
    s.callLocIdx = 846; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTile__P2748.info = {"start":11070,"length":111,"line":380,"column":8,"endLine":382,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMap_getTile__P2748_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTile__P2748, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_constructor__P2693(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1745]) return breakpoint(s, 1, 1745, r0);
  case 1:
    r0 = (s.arg0).fields["_col"] = (s.arg1);
    s.lastBrkId = 1746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1746]) return breakpoint(s, 2, 1746, r0);
  case 2:
    r0 = (s.arg0).fields["_row"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_Location_constructor__P2693.info = {"start":360,"length":121,"line":19,"column":8,"endLine":22,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","col","row","map"]}

function tiles_Location_constructor__P2693_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_constructor__P2693, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_registerObstacle__P2425(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.collisionHandlers___23768 = undefined;
    s.wallCollisionHandlers___23775 = undefined;
    s.wallHandlersToRun___23800 = undefined;
    s.asTileLocation___23813 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1175]) return breakpoint(s, 9, 1175, r0);
  case 9:
    r0 = s.arg0.fields["_obstacles"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.arg2);
    s.lastBrkId = 1176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1176]) return breakpoint(s, 10, 1176, r0);
  case 10:
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 427; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    r0 = r0.fields["collisionHandlers"];
    s.tmp_0 = r0;
    s.tmp_3 = if_tileIndex_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "tileIndex");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["tileIndex"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["tileIndex"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 428; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    s.collisionHandlers___23768 = (r0);
    s.lastBrkId = 1177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1177]) return breakpoint(s, 13, 1177, r0);
  case 13:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 429; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = r0.fields["wallCollisionHandlers"];
    s.wallCollisionHandlers___23775 = (r0);
    s.lastBrkId = 1178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1178]) return breakpoint(s, 15, 1178, r0);
  case 15:
    r0 = pxsim_numops_toBoolDecr(s.collisionHandlers___23768);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1179]) return breakpoint(s, 16, 1179, r0);
  case 16:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P23783);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, Sprite_registerObstacle_inline__P23789);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3.arg0 = s.collisionHandlers___23768;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 431; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 433; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1180]) return breakpoint(s, 19, 1180, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(s.wallCollisionHandlers___23775);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1181]) return breakpoint(s, 20, 1181, r0);
  case 20:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 434; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    s.lastBrkId = 1182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1182]) return breakpoint(s, 22, 1182, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(1, wallHandlersToRun_inline__P23802);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayFilter__P110_mk(s);
    s.tmp_1.arg0 = s.wallCollisionHandlers___23775;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 436; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.wallHandlersToRun___23800 = (r0);
    s.lastBrkId = 1183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1183]) return breakpoint(s, 24, 1183, r0);
  case 24:
    r0 = pxsim_Array__length(s.wallHandlersToRun___23800);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1184]) return breakpoint(s, 25, 1184, r0);
  case 25:
    s.tmp_1 = tiles_TileMap_getTile__P2748_mk(s);
    s.tmp_1.arg0 = s.arg3;
    s.tmp_3 = if_left_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "left");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["left"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["left"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 437; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_5.arg0 = s.arg3;
    s.callLocIdx = 438; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 >> s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = if_top_1_mk(s);
    s.tmp_7.arg0 = s.arg2;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "top");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["top"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["top"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 439; s.pc = 29; return s.tmp_7; }
    }
  case 29:
    r0 = s.retval;
    s.tmp_6 = r0;
    s.tmp_9 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_9.arg0 = s.arg3;
    s.callLocIdx = 440; s.pc = 30; return s.tmp_9;
  case 30:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_6 >> s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 441; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.asTileLocation___23813 = (r0);
    s.lastBrkId = 1185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1185]) return breakpoint(s, 31, 1185, r0);
  case 31:
    r0 = pxsim_pxtcore_mkAction(2, Sprite_registerObstacle_inline__P23829);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.asTileLocation___23813);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = s.wallHandlersToRun___23800;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 443; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle__P2425.info = {"start":24832,"length":965,"line":815,"column":4,"endLine":835,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"registerObstacle","argumentNames":["this","direction","other","tm"]}

function Sprite_registerObstacle__P2425_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle__P2425, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  collisionHandlers___23768: undefined,
  wallCollisionHandlers___23775: undefined,
  wallHandlersToRun___23800: undefined,
  asTileLocation___23813: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function forEach_inline__P23783(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2406_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 430; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P23783.info = {"start":25230,"length":26,"line":822,"column":24,"endLine":822,"endColumn":50,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P23783_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P23783, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite_registerObstacle_inline__P23789(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 432; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 432; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 432; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 432; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle_inline__P23789.info = {"start":25283,"length":20,"line":823,"column":25,"endLine":823,"endColumn":45,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite_registerObstacle_inline__P23789_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle_inline__P23789, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function wallHandlersToRun_inline__P23802(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2406_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 435; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
wallHandlersToRun_inline__P23802.info = {"start":25489,"length":32,"line":828,"column":24,"endLine":828,"endColumn":56,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function wallHandlersToRun_inline__P23802_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: wallHandlersToRun_inline__P23802, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite_registerObstacle_inline__P23829(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 442; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 442; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 442; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 442; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle_inline__P23829.info = {"start":25729,"length":36,"line":832,"column":29,"endLine":832,"endColumn":65,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite_registerObstacle_inline__P23829_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle_inline__P23829, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Math_sign__P129(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[203]) return breakpoint(s, 6, 203, r0);
  case 6:
    r0 = (s.arg0 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[204]) return breakpoint(s, 7, 204, r0);
  case 7:
    r0 = 0;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[205]) return breakpoint(s, 8, 205, r0);
  case 8:
    r0 = (s.arg0 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[206]) return breakpoint(s, 9, 206, r0);
  case 9:
    r0 = 1;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[207]) return breakpoint(s, 10, 207, r0);
  case 10:
    r0 = -1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_sign__P129.info = {"start":16355,"length":125,"line":547,"column":4,"endLine":551,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sign","argumentNames":["x"]}

function Math_sign__P129_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_sign__P129, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function helpers_arraySome__P107(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___23837 = undefined;
    s.i___23840 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 67;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[67]) return breakpoint(s, 6, 67, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___23837 = (r0);
    s.lastBrkId = 68;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[68]) return breakpoint(s, 7, 68, r0);
  case 7:
    s.i___23840 = (0);
    s.lastBrkId = 69;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[69]) return breakpoint(s, 8, 69, r0);
  case 8:
  case 1:
    s.lastBrkId = 70;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[70]) return breakpoint(s, 9, 70, r0);
  case 9:
    r0 = (s.i___23840 < s.len___23837);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 71;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[71]) return breakpoint(s, 10, 71, r0);
  case 10:
    s.tmp_2 = lambda_3_mk(s);
    s.tmp_2.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___23840);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.i___23840;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 4; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 72;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[72]) return breakpoint(s, 12, 72, r0);
  case 12:
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 73;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[73]) return breakpoint(s, 13, 73, r0);
  case 13:
    r0 = (s.i___23840 + 1);
    s.i___23840 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 74;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[74]) return breakpoint(s, 14, 74, r0);
  case 14:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySome__P107.info = {"start":6833,"length":296,"line":238,"column":4,"endLine":244,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySome","argumentNames":["arr","callbackfn"]}

function helpers_arraySome__P107_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySome__P107, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___23837: undefined,
  i___23840: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_isOnWall__P2757(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___22942 = undefined;
    s.left___22945 = undefined;
    s.right___22951 = undefined;
    s.top___22957 = undefined;
    s.bottom___22963 = undefined;
    s.col___22969 = undefined;
    s.row___22975 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1845]) return breakpoint(s, 8, 1845, r0);
  case 8:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___22942 = (r0);
    s.lastBrkId = 1846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1846]) return breakpoint(s, 9, 1846, r0);
  case 9:
    s.tmp_0 = Fx_toIntShifted__P156_mk(s);
    s.tmp_1 = game_Hitbox_left__P2216_mk(s);
    s.tmp_1.arg0 = s.hbox___22942;
    s.callLocIdx = 879; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 880; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 881; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.left___22945 = (r0);
    s.lastBrkId = 1847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1847]) return breakpoint(s, 13, 1847, r0);
  case 13:
    s.tmp_0 = Fx_toIntShifted__P156_mk(s);
    s.tmp_1 = game_Hitbox_right__P2218_mk(s);
    s.tmp_1.arg0 = s.hbox___22942;
    s.callLocIdx = 882; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 883; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 884; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.right___22951 = (r0);
    s.lastBrkId = 1848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1848]) return breakpoint(s, 17, 1848, r0);
  case 17:
    s.tmp_0 = Fx_toIntShifted__P156_mk(s);
    s.tmp_1 = game_Hitbox_top__P2217_mk(s);
    s.tmp_1.arg0 = s.hbox___22942;
    s.callLocIdx = 885; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 886; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 887; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.top___22957 = (r0);
    s.lastBrkId = 1849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1849]) return breakpoint(s, 21, 1849, r0);
  case 21:
    s.tmp_0 = Fx_toIntShifted__P156_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_1.arg0 = s.hbox___22942;
    s.callLocIdx = 888; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 889; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 890; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.bottom___22963 = (r0);
    s.lastBrkId = 1850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1850]) return breakpoint(s, 25, 1850, r0);
  case 25:
    s.col___22969 = (s.left___22945);
    s.lastBrkId = 1851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1851]) return breakpoint(s, 26, 1851, r0);
  case 26:
  case 1:
    s.lastBrkId = 1852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1852]) return breakpoint(s, 27, 1852, r0);
  case 27:
    r0 = (s.col___22969 <= s.right___22951);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1853]) return breakpoint(s, 28, 1853, r0);
  case 28:
    s.row___22975 = (s.top___22957);
    s.lastBrkId = 1854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1854]) return breakpoint(s, 29, 1854, r0);
  case 29:
  case 2:
    s.lastBrkId = 1855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1855]) return breakpoint(s, 30, 1855, r0);
  case 30:
    r0 = (s.row___22975 <= s.bottom___22963);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1856]) return breakpoint(s, 31, 1856, r0);
  case 31:
    s.tmp_2 = tiles_TileMap_isObstacle__P2755_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.col___22969;
    s.tmp_2.arg2 = s.row___22975;
    s.callLocIdx = 891; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1857]) return breakpoint(s, 33, 1857, r0);
  case 33:
    r0 = true;
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1858]) return breakpoint(s, 34, 1858, r0);
  case 34:
    r0 = (s.row___22975 + 1);
    s.row___22975 = (r0);
    { step = 2; continue; }
  case 5:
    s.lastBrkId = 1859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1859]) return breakpoint(s, 35, 1859, r0);
  case 35:
    r0 = (s.col___22969 + 1);
    s.col___22969 = (r0);
    { step = 1; continue; }
  case 6:
    s.lastBrkId = 1860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1860]) return breakpoint(s, 36, 1860, r0);
  case 36:
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isOnWall__P2757.info = {"start":16873,"length":627,"line":534,"column":8,"endLine":551,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOnWall","argumentNames":["this","s"]}

function tiles_TileMap_isOnWall__P2757_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isOnWall__P2757, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  hbox___22942: undefined,
  left___22945: undefined,
  right___22951: undefined,
  top___22957: undefined,
  bottom___22963: undefined,
  col___22969: undefined,
  row___22975: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function MovingSprite_constructor__P2525(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, MovingSprite__C2524_VT)) failedCast(r0);
    r0 = (s.arg0).fields["sprite"] = (s.arg1);
    r0 = (s.arg0).fields["cachedVx"] = (s.arg2);
    r0 = (s.arg0).fields["cachedVy"] = (s.arg3);
    r0 = (s.arg0).fields["dx"] = (s.arg4);
    r0 = (s.arg0).fields["dy"] = (s.arg5);
    r0 = (s.arg0).fields["xStep"] = (s.arg6);
    r0 = (s.arg0).fields["yStep"] = (s.arg7);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
MovingSprite_constructor__P2525.info = {"start":949,"length":313,"line":33,"column":4,"endLine":44,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","sprite","cachedVx","cachedVy","dx","dy","xStep","yStep"]}

function MovingSprite_constructor__P2525_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MovingSprite_constructor__P2525, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function ArcadePhysicsEngine_move__P2538(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtMs___23912 = undefined;
    s.dt2___23918 = undefined;
    s.scene___23922 = undefined;
    s.tileMap___23925 = undefined;
    s.movingSprites___23928 = undefined;
    s.MAX_STEP_COUNT___23959 = undefined;
    s.overlapHandlers___23971 = undefined;
    s.selected___23978 = undefined;
    s.buffers___23979 = undefined;
    s.count___23983 = undefined;
    s.currMovers___23993 = undefined;
    s.remainingMovers___24000 = undefined;
    s.ms___24005 = undefined;
    s.unnamed12670___U13 = undefined;
    s.unnamed12671___U14 = undefined;
    s.s___24007 = undefined;
    s.stepX___24100 = undefined;
    s.stepY___24114 = undefined;
    s.bounce___24177 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1353]) return breakpoint(s, 53, 1353, r0);
  case 53:
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_0.arg0 = 100;
    r0 = (s.arg1 * 1000);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 554; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.dtMs___23912 = (r0);
    s.lastBrkId = 1354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1354]) return breakpoint(s, 55, 1354, r0);
  case 55:
    r0 = pxsim.Math_.idiv(s.dtMs___23912, 2);
    s.dt2___23918 = (r0);
    s.lastBrkId = 1355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1355]) return breakpoint(s, 56, 1355, r0);
  case 56:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 555; s.pc = 57; return s.tmp_0;
  case 57:
    r0 = s.retval;
    s.scene___23922 = (r0);
    s.lastBrkId = 1356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1356]) return breakpoint(s, 58, 1356, r0);
  case 58:
    r0 = s.scene___23922.fields["tileMap"];
    s.tileMap___23925 = (r0);
    s.lastBrkId = 1357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1357]) return breakpoint(s, 59, 1357, r0);
  case 59:
    r0 = pxsim_pxtcore_mkAction(3, movingSprites_inline__P23930);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.dtMs___23912);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.dt2___23918);
    s.tmp_1 = helpers_arrayMap__P106_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 557; s.pc = 60; return s.tmp_1;
  case 60:
    r0 = s.retval;
    s.movingSprites___23928 = (r0);
    s.lastBrkId = 1358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1358]) return breakpoint(s, 61, 1358, r0);
  case 61:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = ArcadePhysicsEngine_move_inline__P23942;
    s.callLocIdx = 561; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
    s.lastBrkId = 1361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1361]) return breakpoint(s, 63, 1361, r0);
  case 63:
    s.tmp_0 = sprites_SpriteMap_clear__P2451_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 562; s.pc = 64; return s.tmp_0;
  case 64:
    r0 = s.retval;
    s.lastBrkId = 1362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1362]) return breakpoint(s, 65, 1362, r0);
  case 65:
    s.tmp_0 = sprites_SpriteMap_resizeBuckets__P2450_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 563; s.pc = 66; return s.tmp_0;
  case 66:
    r0 = s.retval;
    s.lastBrkId = 1363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1363]) return breakpoint(s, 67, 1363, r0);
  case 67:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = Fx_idiv__P163_mk(s);
    s.tmp_2 = Fx_imul__P161_mk(s);
    s.tmp_3 = Fx_div__P162_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 564; s.pc = 71; return s.tmp_3;
  case 71:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.dtMs___23912;
    s.callLocIdx = 565; s.pc = 70; return s.tmp_2;
  case 70:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 566; s.pc = 69; return s.tmp_1;
  case 69:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 567; s.pc = 68; return s.tmp_0;
  case 68:
    r0 = s.retval;
    s.MAX_STEP_COUNT___23959 = (r0);
    s.lastBrkId = 1364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1364]) return breakpoint(s, 72, 1364, r0);
  case 72:
    s.tmp_0 = helpers_arraySlice__P115_mk(s);
    r0 = s.scene___23922.fields["overlapHandlers"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 568; s.pc = 73; return s.tmp_0;
  case 73:
    r0 = s.retval;
    s.overlapHandlers___23971 = (r0);
    s.lastBrkId = 1365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1365]) return breakpoint(s, 74, 1365, r0);
  case 74:
    s.selected___23978 = (0);
    s.lastBrkId = 1366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1366]) return breakpoint(s, 75, 1366, r0);
  case 75:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.movingSprites___23928);
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.buffers___23979 = (s.tmp_0);
    s.lastBrkId = 1367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1367]) return breakpoint(s, 76, 1367, r0);
  case 76:
    s.count___23983 = (0);
    s.lastBrkId = 1368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1368]) return breakpoint(s, 77, 1368, r0);
  case 77:
  case 1:
    s.lastBrkId = 1369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1369]) return breakpoint(s, 78, 1369, r0);
  case 78:
    r0 = (s.count___23983 < s.MAX_STEP_COUNT___23959);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__getAt(s.buffers___23979, s.selected___23978);
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 52; continue; }
    s.lastBrkId = 1370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1370]) return breakpoint(s, 79, 1370, r0);
  case 79:
    r0 = pxsim_Array__getAt(s.buffers___23979, s.selected___23978);
    s.currMovers___23993 = (r0);
    s.lastBrkId = 1371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1371]) return breakpoint(s, 80, 1371, r0);
  case 80:
    r0 = (s.selected___23978 ^ 1);
    s.selected___23978 = (r0);
    s.lastBrkId = 1372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1372]) return breakpoint(s, 81, 1372, r0);
  case 81:
    r0 = pxsim_Array__getAt(s.buffers___23979, s.selected___23978);
    s.remainingMovers___24000 = (r0);
    s.lastBrkId = 1373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1373]) return breakpoint(s, 82, 1373, r0);
  case 82:
    s.ms___24005 = (undefined);
    s.unnamed12670___U13 = (s.currMovers___23993);
    s.unnamed12671___U14 = (0);
    s.lastBrkId = 1374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1374]) return breakpoint(s, 83, 1374, r0);
  case 83:
  case 4:
    s.tmp_0 = r0 = s.unnamed12671___U14;
    r0 = pxsim_Array__length(s.unnamed12670___U13);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 49; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12670___U13, s.unnamed12671___U14);
    s.ms___24005 = (r0);
    s.lastBrkId = 1375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1375]) return breakpoint(s, 84, 1375, r0);
  case 84:
    s.lastBrkId = 1376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1376]) return breakpoint(s, 85, 1376, r0);
  case 85:
    r0 = s.ms___24005.fields["sprite"];
    s.s___24007 = (r0);
    s.lastBrkId = 1377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1377]) return breakpoint(s, 86, 1377, r0);
  case 86:
    r0 = s.ms___24005.fields["cachedVx"];
    s.tmp_1 = r0;
    r0 = s.s___24007.fields["_vx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1378]) return breakpoint(s, 87, 1378, r0);
  case 87:
    r0 = s.s___24007.fields["_vx"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1379]) return breakpoint(s, 88, 1379, r0);
  case 88:
    r0 = (s.ms___24005).fields["dx"] = (0);
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 1380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1380]) return breakpoint(s, 89, 1380, r0);
  case 89:
    r0 = s.s___24007.fields["_vx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = s.ms___24005.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_3;
    { step = 11; continue; }
  case 8:
    r0 = s.s___24007.fields["_vx"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_4;
    { step = 10; continue; }
  case 9:
    r0 = s.ms___24005.fields["cachedVx"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 10:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 11:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1381]) return breakpoint(s, 90, 1381, r0);
  case 90:
    s.tmp_9 = r0 = s.ms___24005;
    s.tmp_11 = Fx_neg__P155_mk(s);
    r0 = s.ms___24005.fields["dx"];
    s.tmp_11.arg0 = r0;
    s.callLocIdx = 569; s.pc = 91; return s.tmp_11;
  case 91:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dx"] = (s.tmp_10);
    s.lastBrkId = 1382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1382]) return breakpoint(s, 92, 1382, r0);
  case 92:
    s.tmp_0 = r0 = s.ms___24005;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.ms___24005.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 570; s.pc = 93; return s.tmp_2;
  case 93:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 1383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1383]) return breakpoint(s, 94, 1383, r0);
  case 94:
    r0 = s.s___24007.fields["_vx"];
    s.tmp_0 = r0;
    r0 = (s.ms___24005).fields["cachedVx"] = (s.tmp_0);
  case 15:
  case 16:
    s.lastBrkId = 1384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1384]) return breakpoint(s, 95, 1384, r0);
  case 95:
    r0 = s.ms___24005.fields["cachedVy"];
    s.tmp_1 = r0;
    r0 = s.s___24007.fields["_vy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    s.lastBrkId = 1385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1385]) return breakpoint(s, 96, 1385, r0);
  case 96:
    r0 = s.s___24007.fields["_vy"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1386]) return breakpoint(s, 97, 1386, r0);
  case 97:
    r0 = (s.ms___24005).fields["dy"] = (0);
    { step = 26; continue; }
  case 17:
    s.lastBrkId = 1387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1387]) return breakpoint(s, 98, 1387, r0);
  case 98:
    r0 = s.s___24007.fields["_vy"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = s.ms___24005.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 19:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 20; continue; }
    r0 = s.tmp_3;
    { step = 23; continue; }
  case 20:
    r0 = s.s___24007.fields["_vy"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 21; continue; }
    r0 = s.tmp_4;
    { step = 22; continue; }
  case 21:
    r0 = s.ms___24005.fields["cachedVy"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 22:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 23:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1388]) return breakpoint(s, 99, 1388, r0);
  case 99:
    s.tmp_9 = r0 = s.ms___24005;
    s.tmp_11 = Fx_neg__P155_mk(s);
    r0 = s.ms___24005.fields["dy"];
    s.tmp_11.arg0 = r0;
    s.callLocIdx = 571; s.pc = 100; return s.tmp_11;
  case 100:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dy"] = (s.tmp_10);
    s.lastBrkId = 1389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1389]) return breakpoint(s, 101, 1389, r0);
  case 101:
    s.tmp_0 = r0 = s.ms___24005;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.ms___24005.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 572; s.pc = 102; return s.tmp_2;
  case 102:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
  case 24:
  case 25:
  case 26:
    s.lastBrkId = 1390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1390]) return breakpoint(s, 103, 1390, r0);
  case 103:
    r0 = s.s___24007.fields["_vy"];
    s.tmp_0 = r0;
    r0 = (s.ms___24005).fields["cachedVy"] = (s.tmp_0);
  case 27:
  case 28:
    s.lastBrkId = 1391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1391]) return breakpoint(s, 104, 1391, r0);
  case 104:
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___24005.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 573; s.pc = 105; return s.tmp_2;
  case 105:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___24005.fields["dx"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 574; s.pc = 106; return s.tmp_4;
  case 106:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 29; continue; }
    r0 = s.ms___24005.fields["dx"];
    { step = 30; continue; }
  case 29:
    r0 = s.ms___24005.fields["xStep"];
  case 30:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepX___24100 = (s.tmp_5);
    s.lastBrkId = 1392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1392]) return breakpoint(s, 107, 1392, r0);
  case 107:
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___24005.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 575; s.pc = 108; return s.tmp_2;
  case 108:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___24005.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 576; s.pc = 109; return s.tmp_4;
  case 109:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    r0 = s.ms___24005.fields["dy"];
    { step = 32; continue; }
  case 31:
    r0 = s.ms___24005.fields["yStep"];
  case 32:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepY___24114 = (s.tmp_5);
    s.lastBrkId = 1393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1393]) return breakpoint(s, 110, 1393, r0);
  case 110:
    s.tmp_0 = r0 = s.ms___24005;
    s.tmp_2 = Fx_sub__P159_mk(s);
    r0 = s.ms___24005.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepX___24100;
    s.callLocIdx = 577; s.pc = 111; return s.tmp_2;
  case 111:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
    s.lastBrkId = 1394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1394]) return breakpoint(s, 112, 1394, r0);
  case 112:
    s.tmp_0 = r0 = s.ms___24005;
    s.tmp_2 = Fx_sub__P159_mk(s);
    r0 = s.ms___24005.fields["dy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepY___24114;
    s.callLocIdx = 578; s.pc = 113; return s.tmp_2;
  case 113:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
    s.lastBrkId = 1395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1395]) return breakpoint(s, 114, 1395, r0);
  case 114:
    r0 = s.s___24007.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.s___24007).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1396]) return breakpoint(s, 115, 1396, r0);
  case 115:
    r0 = s.s___24007.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.s___24007).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1397]) return breakpoint(s, 116, 1397, r0);
  case 116:
    s.tmp_0 = r0 = s.s___24007;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.s___24007.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepX___24100;
    s.callLocIdx = 579; s.pc = 117; return s.tmp_2;
  case 117:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1398]) return breakpoint(s, 118, 1398, r0);
  case 118:
    s.tmp_0 = r0 = s.s___24007;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.s___24007.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepY___24114;
    s.callLocIdx = 580; s.pc = 119; return s.tmp_2;
  case 119:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1399]) return breakpoint(s, 120, 1399, r0);
  case 120:
    r0 = s.s___24007.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 1400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1400]) return breakpoint(s, 121, 1400, r0);
  case 121:
    s.tmp_4 = sprites_SpriteMap_insertAABB__P2452_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.s___24007;
    s.callLocIdx = 581; s.pc = 122; return s.tmp_4;
  case 122:
    r0 = s.retval;
  case 33:
  case 34:
    s.lastBrkId = 1401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1401]) return breakpoint(s, 123, 1401, r0);
  case 123:
    s.tmp_0 = r0 = s.tileMap___23925;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 35; continue; }
    r0 = s.tmp_0;
    { step = 36; continue; }
  case 35:
    s.tmp_1 = tiles_TileMap_enabled__P2746_mk(s);
    s.tmp_1.arg0 = s.tileMap___23925;
    s.callLocIdx = 582; s.pc = 124; return s.tmp_1;
  case 124:
    r0 = s.retval;
  case 36:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 37; continue; }
    s.lastBrkId = 1402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1402]) return breakpoint(s, 125, 1402, r0);
  case 125:
    s.tmp_3 = ArcadePhysicsEngine_tilemapCollisions__P5093_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.ms___24005;
    s.tmp_3.arg2 = s.tileMap___23925;
    s.callLocIdx = 583; s.pc = 126; return s.tmp_3;
  case 126:
    r0 = s.retval;
  case 37:
  case 38:
    s.lastBrkId = 1403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1403]) return breakpoint(s, 127, 1403, r0);
  case 127:
    r0 = s.s___24007.fields["flags"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & 32);
    s.bounce___24177 = (r0);
    s.lastBrkId = 1404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1404]) return breakpoint(s, 128, 1404, r0);
  case 128:
    r0 = s.s___24007.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 8);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = s.tmp_0;
    { step = 42; continue; }
  case 39:
    s.tmp_2 = r0 = s.bounce___24177;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 40; continue; }
    r0 = s.tmp_2;
    { step = 41; continue; }
  case 40:
    r0 = pxsim_numops_toBoolDecr(s.tileMap___23925);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 41:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 42:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 43; continue; }
    s.lastBrkId = 1405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1405]) return breakpoint(s, 129, 1405, r0);
  case 129:
    s.tmp_6 = ArcadePhysicsEngine_screenEdgeCollisions__P5092_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = s.ms___24005;
    s.tmp_6.arg2 = s.bounce___24177;
    r0 = s.scene___23922.fields["camera"];
    s.tmp_6.arg3 = r0;
    s.callLocIdx = 584; s.pc = 130; return s.tmp_6;
  case 130:
    r0 = s.retval;
  case 43:
  case 44:
    s.lastBrkId = 1406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1406]) return breakpoint(s, 131, 1406, r0);
  case 131:
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___24005.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 585; s.pc = 132; return s.tmp_2;
  case 132:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.MIN_MOVE_GAP___2520);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 45; continue; }
    r0 = s.tmp_0;
    { step = 46; continue; }
  case 45:
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___24005.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 586; s.pc = 133; return s.tmp_4;
  case 133:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > globals.MIN_MOVE_GAP___2520);
  case 46:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 47; continue; }
    s.lastBrkId = 1407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1407]) return breakpoint(s, 134, 1407, r0);
  case 134:
    r0 = pxsim_Array__push(s.remainingMovers___24000, s.ms___24005);
  case 47:
  case 48:
    r0 = (s.unnamed12671___U14 + 1);
    s.unnamed12671___U14 = (r0);
    { step = 4; continue; }
  case 49:
    s.unnamed12670___U13 = (undefined);
    s.lastBrkId = 1408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1408]) return breakpoint(s, 135, 1408, r0);
  case 135:
    s.tmp_0 = ArcadePhysicsEngine_spriteCollisions__P5091_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.currMovers___23993;
    s.tmp_0.arg2 = s.overlapHandlers___23971;
    s.callLocIdx = 587; s.pc = 136; return s.tmp_0;
  case 136:
    r0 = s.retval;
    s.lastBrkId = 1409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1409]) return breakpoint(s, 137, 1409, r0);
  case 137:
  case 50:
    s.lastBrkId = 1410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1410]) return breakpoint(s, 138, 1410, r0);
  case 138:
    r0 = pxsim_Array__length(s.currMovers___23993);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 51; continue; }
    s.lastBrkId = 1411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1411]) return breakpoint(s, 139, 1411, r0);
  case 139:
    r0 = pxsim_Array_.pop(s.currMovers___23993);
    { step = 50; continue; }
  case 51:
    s.lastBrkId = 1412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1412]) return breakpoint(s, 140, 1412, r0);
  case 140:
    r0 = (s.count___23983 + 1);
    s.count___23983 = (r0);
    { step = 1; continue; }
  case 52:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move__P2538.info = {"start":2822,"length":4105,"line":112,"column":4,"endLine":215,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function ArcadePhysicsEngine_move__P2538_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move__P2538, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  dtMs___23912: undefined,
  dt2___23918: undefined,
  scene___23922: undefined,
  tileMap___23925: undefined,
  movingSprites___23928: undefined,
  MAX_STEP_COUNT___23959: undefined,
  overlapHandlers___23971: undefined,
  selected___23978: undefined,
  buffers___23979: undefined,
  count___23983: undefined,
  currMovers___23993: undefined,
  remainingMovers___24000: undefined,
  ms___24005: undefined,
  unnamed12670___U13: undefined,
  unnamed12671___U14: undefined,
  s___24007: undefined,
  stepX___24100: undefined,
  stepY___24114: undefined,
  bounce___24177: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function movingSprites_inline__P23930(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = ArcadePhysicsEngine_createMovingSprite__P5090_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.caps[1];
    s.tmp_0.arg3 = s.caps[2];
    s.callLocIdx = 556; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
movingSprites_inline__P23930.info = {"start":3181,"length":52,"line":121,"column":17,"endLine":121,"endColumn":69,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["sprite"]}

function movingSprites_inline__P23930_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: movingSprites_inline__P23930, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_move_inline__P23942(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1359]) return breakpoint(s, 5, 1359, r0);
  case 5:
    s.tmp_1 = Sprite_vx__P2357_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 558; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Sprite_vy__P2359_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 559; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1360]) return breakpoint(s, 8, 1360, r0);
  case 8:
    s.tmp_4 = Sprite_clearObstacles__P2424_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 560; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move_inline__P23942.info = {"start":3316,"length":66,"line":124,"column":29,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["s"]}

function ArcadePhysicsEngine_move_inline__P23942_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move_inline__P23942, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_screenEdgeCollisions__P5092(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___24742 = undefined;
    s.offset___24757 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1478]) return breakpoint(s, 21, 1478, r0);
  case 21:
    r0 = s.arg1.fields["sprite"];
    s.s___24742 = (r0);
    s.lastBrkId = 1479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1479]) return breakpoint(s, 22, 1479, r0);
  case 22:
    s.tmp_3 = Sprite_isStatic__P2394_mk(s);
    s.tmp_3.arg0 = s.s___24742;
    s.callLocIdx = 631; s.pc = 23; return s.tmp_3;
  case 23:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1480]) return breakpoint(s, 24, 1480, r0);
  case 24:
    s.tmp_4 = Sprite__C2340_v4_1_mk(s);
    s.tmp_4.arg0 = s.s___24742;
    if (!checkSubtype(s.tmp_4.arg0, Sprite__C2340_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.setHitbox;
    s.pc = 25; return s.tmp_4;
  case 25:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1481]) return breakpoint(s, 26, 1481, r0);
  case 26:
    s.tmp_3 = scene_Camera_isUpdated__P2796_mk(s);
    s.tmp_3.arg0 = s.arg3;
    s.callLocIdx = 632; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1482]) return breakpoint(s, 28, 1482, r0);
  case 28:
    s.tmp_4 = scene_Camera_update__P2797_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 633; s.pc = 29; return s.tmp_4;
  case 29:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1483]) return breakpoint(s, 30, 1483, r0);
  case 30:
    s.tmp_1 = Fx_toFloat__P173_mk(s);
    s.tmp_2 = game_Hitbox_left__P2216_mk(s);
    r0 = s.s___24742.fields["_hitbox"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 634; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 635; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_4 = scene_Camera_offsetX__P2785_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 636; s.pc = 33; return s.tmp_4;
  case 33:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_0 - s.tmp_3);
    s.offset___24757 = (r0);
    s.lastBrkId = 1484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1484]) return breakpoint(s, 34, 1484, r0);
  case 34:
    r0 = (s.offset___24757 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1485]) return breakpoint(s, 35, 1485, r0);
  case 35:
    s.tmp_1 = Sprite_left__P2399_mk(s);
    s.tmp_2 = r0 = s.s___24742;
    s.tmp_1.arg0 = r0;
    s.tmp_4 = Sprite_left__P2398_mk(s);
    s.tmp_4.arg0 = s.tmp_2;
    s.callLocIdx = 637; s.pc = 37; return s.tmp_4;
  case 37:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.offset___24757);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 638; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 1486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1486]) return breakpoint(s, 38, 1486, r0);
  case 38:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1487]) return breakpoint(s, 39, 1487, r0);
  case 39:
    s.tmp_0 = Sprite_vx__P2358_mk(s);
    s.tmp_0.arg0 = s.s___24742;
    s.tmp_2 = Sprite_vx__P2357_mk(s);
    s.tmp_2.arg0 = s.s___24742;
    s.callLocIdx = 639; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 640; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 12; continue; }
  case 7:
    s.lastBrkId = 1488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1488]) return breakpoint(s, 42, 1488, r0);
  case 42:
    s.tmp_3 = Fx_toFloat__P173_mk(s);
    s.tmp_4 = game_Hitbox_right__P2218_mk(s);
    r0 = s.s___24742.fields["_hitbox"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 641; s.pc = 44; return s.tmp_4;
  case 44:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 642; s.pc = 43; return s.tmp_3;
  case 43:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = scene_Camera_offsetX__P2785_mk(s);
    s.tmp_6.arg0 = s.arg3;
    s.callLocIdx = 643; s.pc = 45; return s.tmp_6;
  case 45:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_7 = r0;
    r0 = (s.tmp_1 - s.tmp_7);
    s.tmp_0 = r0;
    s.offset___24757 = (r0);
    r0 = (s.tmp_0 > 0);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1489]) return breakpoint(s, 46, 1489, r0);
  case 46:
    s.tmp_9 = Sprite_right__P2401_mk(s);
    s.tmp_10 = r0 = s.s___24742;
    s.tmp_9.arg0 = r0;
    s.tmp_12 = Sprite_right__P2400_mk(s);
    s.tmp_12.arg0 = s.tmp_10;
    s.callLocIdx = 644; s.pc = 48; return s.tmp_12;
  case 48:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 - s.offset___24757);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 645; s.pc = 47; return s.tmp_9;
  case 47:
    r0 = s.retval;
    s.lastBrkId = 1490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1490]) return breakpoint(s, 49, 1490, r0);
  case 49:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1491]) return breakpoint(s, 50, 1491, r0);
  case 50:
    s.tmp_0 = Sprite_vx__P2358_mk(s);
    s.tmp_0.arg0 = s.s___24742;
    s.tmp_2 = Sprite_vx__P2357_mk(s);
    s.tmp_2.arg0 = s.s___24742;
    s.callLocIdx = 646; s.pc = 52; return s.tmp_2;
  case 52:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 647; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
  case 8:
  case 9:
  case 10:
  case 11:
  case 12:
    s.lastBrkId = 1492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1492]) return breakpoint(s, 53, 1492, r0);
  case 53:
    s.tmp_2 = Fx_toFloat__P173_mk(s);
    s.tmp_3 = game_Hitbox_top__P2217_mk(s);
    r0 = s.s___24742.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 648; s.pc = 55; return s.tmp_3;
  case 55:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 649; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = scene_Camera_offsetY__P2787_mk(s);
    s.tmp_5.arg0 = s.arg3;
    s.callLocIdx = 650; s.pc = 56; return s.tmp_5;
  case 56:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 - s.tmp_4);
    s.tmp_0 = r0;
    s.offset___24757 = (r0);
    r0 = (s.tmp_0 < 0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1493]) return breakpoint(s, 57, 1493, r0);
  case 57:
    s.tmp_7 = Sprite_top__P2403_mk(s);
    s.tmp_8 = r0 = s.s___24742;
    s.tmp_7.arg0 = r0;
    s.tmp_10 = Sprite_top__P2402_mk(s);
    s.tmp_10.arg0 = s.tmp_8;
    s.callLocIdx = 651; s.pc = 59; return s.tmp_10;
  case 59:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - s.offset___24757);
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 652; s.pc = 58; return s.tmp_7;
  case 58:
    r0 = s.retval;
    s.lastBrkId = 1494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1494]) return breakpoint(s, 60, 1494, r0);
  case 60:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1495]) return breakpoint(s, 61, 1495, r0);
  case 61:
    s.tmp_0 = Sprite_vy__P2360_mk(s);
    s.tmp_0.arg0 = s.s___24742;
    s.tmp_2 = Sprite_vy__P2359_mk(s);
    s.tmp_2.arg0 = s.s___24742;
    s.callLocIdx = 653; s.pc = 63; return s.tmp_2;
  case 63:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 654; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
  case 13:
  case 14:
    { step = 20; continue; }
  case 15:
    s.lastBrkId = 1496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1496]) return breakpoint(s, 64, 1496, r0);
  case 64:
    s.tmp_3 = Fx_toFloat__P173_mk(s);
    s.tmp_4 = game_Hitbox_bottom__P2219_mk(s);
    r0 = s.s___24742.fields["_hitbox"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 655; s.pc = 66; return s.tmp_4;
  case 66:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 656; s.pc = 65; return s.tmp_3;
  case 65:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = scene_Camera_offsetY__P2787_mk(s);
    s.tmp_6.arg0 = s.arg3;
    s.callLocIdx = 657; s.pc = 67; return s.tmp_6;
  case 67:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_7 = r0;
    r0 = (s.tmp_1 - s.tmp_7);
    s.tmp_0 = r0;
    s.offset___24757 = (r0);
    r0 = (s.tmp_0 > 0);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1497]) return breakpoint(s, 68, 1497, r0);
  case 68:
    s.tmp_9 = Sprite_bottom__P2405_mk(s);
    s.tmp_10 = r0 = s.s___24742;
    s.tmp_9.arg0 = r0;
    s.tmp_12 = Sprite_bottom__P2404_mk(s);
    s.tmp_12.arg0 = s.tmp_10;
    s.callLocIdx = 658; s.pc = 70; return s.tmp_12;
  case 70:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 - s.offset___24757);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 659; s.pc = 69; return s.tmp_9;
  case 69:
    r0 = s.retval;
    s.lastBrkId = 1498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1498]) return breakpoint(s, 71, 1498, r0);
  case 71:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 1499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1499]) return breakpoint(s, 72, 1499, r0);
  case 72:
    s.tmp_0 = Sprite_vy__P2360_mk(s);
    s.tmp_0.arg0 = s.s___24742;
    s.tmp_2 = Sprite_vy__P2359_mk(s);
    s.tmp_2.arg0 = s.s___24742;
    s.callLocIdx = 660; s.pc = 74; return s.tmp_2;
  case 74:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 661; s.pc = 73; return s.tmp_0;
  case 73:
    r0 = s.retval;
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_screenEdgeCollisions__P5092.info = {"start":12018,"length":905,"line":355,"column":4,"endLine":377,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"screenEdgeCollisions","argumentNames":["this","movingSprite","bounce","camera"]}

function ArcadePhysicsEngine_screenEdgeCollisions__P5092_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_screenEdgeCollisions__P5092, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  s___24742: undefined,
  offset___24757: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Camera_isUpdated__P2796(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1885]) return breakpoint(s, 5, 1885, r0);
  case 5:
    r0 = s.arg0.fields["sprite"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 1:
    s.tmp_5 = Sprite_x__P2353_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 908; s.pc = 6; return s.tmp_5;
  case 6:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = s.arg0.fields["_lastUpdatedSpriteX"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 === s.tmp_6);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_3;
    { step = 3; continue; }
  case 2:
    s.tmp_8 = Sprite_y__P2355_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 909; s.pc = 7; return s.tmp_8;
  case 7:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = s.arg0.fields["_lastUpdatedSpriteY"];
    s.tmp_9 = r0;
    r0 = (s.tmp_7 === s.tmp_9);
  case 3:
    // jmp value (already in r0)
    s.tmp_10 = r0;
    r0 = s.tmp_10;
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = s.tmp_11;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_isUpdated__P2796.info = {"start":2403,"length":150,"line":79,"column":8,"endLine":81,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"isUpdated","argumentNames":["this"]}

function scene_Camera_isUpdated__P2796_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_isUpdated__P2796, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  arg0: undefined,
} }





function Sprite_bottom__P2405(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1113]) return breakpoint(s, 1, 1113, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2403_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_height__P2397_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 373; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 374; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_bottom__P2405.info = {"start":12204,"length":73,"line":440,"column":4,"endLine":442,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this","value"]}

function Sprite_bottom__P2405_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P2405, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_bottom__P2404(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1112]) return breakpoint(s, 1, 1112, r0);
  case 1:
    s.tmp_1 = Sprite_top__P2402_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 371; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_height__P2397_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 372; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_bottom__P2404.info = {"start":12052,"length":59,"line":435,"column":4,"endLine":437,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this"]}
Sprite_bottom__P2404.isGetter = true;

function Sprite_bottom__P2404_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P2404, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions__P5091(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ms___24234 = undefined;
    s.unnamed12672___U1 = undefined;
    s.unnamed12673___U2 = undefined;
    s.sprite___24236 = undefined;
    s.overSprites___24243 = undefined;
    s.overlapper___24251 = undefined;
    s.unnamed12674___U6 = undefined;
    s.unnamed12675___U7 = undefined;
    s.thisKind___24257 = undefined;
    s.otherKind___24261 = undefined;
    s.higher___24274 = undefined;
    s.lower___24283 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1450]) return breakpoint(s, 22, 1450, r0);
  case 22:
    s.lastBrkId = 1451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1451]) return breakpoint(s, 23, 1451, r0);
  case 23:
    r0 = pxsim_Array__length(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1452]) return breakpoint(s, 24, 1452, r0);
  case 24:
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1453]) return breakpoint(s, 25, 1453, r0);
  case 25:
    s.ms___24234 = (undefined);
    s.unnamed12672___U1 = (s.arg1);
    s.unnamed12673___U2 = (0);
    s.lastBrkId = 1454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1454]) return breakpoint(s, 26, 1454, r0);
  case 26:
  case 3:
    s.tmp_0 = r0 = s.unnamed12673___U2;
    r0 = pxsim_Array__length(s.unnamed12672___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 20; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12672___U1, s.unnamed12673___U2);
    s.ms___24234 = (r0);
    s.lastBrkId = 1455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1455]) return breakpoint(s, 27, 1455, r0);
  case 27:
    s.lastBrkId = 1456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1456]) return breakpoint(s, 28, 1456, r0);
  case 28:
    r0 = s.ms___24234.fields["sprite"];
    s.sprite___24236 = (r0);
    s.lastBrkId = 1457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1457]) return breakpoint(s, 29, 1457, r0);
  case 29:
    r0 = s.sprite___24236.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4610);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1458]) return breakpoint(s, 30, 1458, r0);
  case 30:
    { step = 19; continue; }
  case 4:
  case 5:
    s.lastBrkId = 1459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1459]) return breakpoint(s, 31, 1459, r0);
  case 31:
    s.tmp_2 = sprites_SpriteMap_overlaps__P2448_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_2.arg0 = r0;
    r0 = s.ms___24234.fields["sprite"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 625; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.overSprites___24243 = (r0);
    s.lastBrkId = 1460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1460]) return breakpoint(s, 33, 1460, r0);
  case 33:
    s.overlapper___24251 = (undefined);
    s.unnamed12674___U6 = (s.overSprites___24243);
    s.unnamed12675___U7 = (0);
    s.lastBrkId = 1461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1461]) return breakpoint(s, 34, 1461, r0);
  case 34:
  case 6:
    s.tmp_0 = r0 = s.unnamed12675___U7;
    r0 = pxsim_Array__length(s.unnamed12674___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 18; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12674___U6, s.unnamed12675___U7);
    s.overlapper___24251 = (r0);
    s.lastBrkId = 1462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1462]) return breakpoint(s, 35, 1462, r0);
  case 35:
    s.lastBrkId = 1463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1463]) return breakpoint(s, 36, 1463, r0);
  case 36:
    r0 = s.overlapper___24251.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1464]) return breakpoint(s, 37, 1464, r0);
  case 37:
    { step = 17; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1465]) return breakpoint(s, 38, 1465, r0);
  case 38:
    s.tmp_4 = Sprite_kind__P2406_mk(s);
    s.tmp_4.arg0 = s.sprite___24236;
    s.callLocIdx = 626; s.pc = 39; return s.tmp_4;
  case 39:
    r0 = s.retval;
    s.thisKind___24257 = (r0);
    s.lastBrkId = 1466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1466]) return breakpoint(s, 40, 1466, r0);
  case 40:
    s.tmp_0 = Sprite_kind__P2406_mk(s);
    s.tmp_0.arg0 = s.overlapper___24251;
    s.callLocIdx = 627; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.otherKind___24261 = (r0);
    s.lastBrkId = 1467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1467]) return breakpoint(s, 42, 1467, r0);
  case 42:
    r0 = s.sprite___24236.fields["_kindsOverlappedWith"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.otherKind___24261, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1468]) return breakpoint(s, 43, 1468, r0);
  case 43:
    { step = 17; continue; }
  case 9:
  case 10:
    s.lastBrkId = 1469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1469]) return breakpoint(s, 44, 1469, r0);
  case 44:
    r0 = s.sprite___24236.fields["id"];
    s.tmp_4 = r0;
    r0 = s.overlapper___24251.fields["id"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 > s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    r0 = s.sprite___24236;
    { step = 12; continue; }
  case 11:
    r0 = s.overlapper___24251;
  case 12:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.higher___24274 = (s.tmp_6);
    s.lastBrkId = 1470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1470]) return breakpoint(s, 45, 1470, r0);
  case 45:
    r0 = (s.higher___24274 === s.sprite___24236);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = s.overlapper___24251;
    { step = 14; continue; }
  case 13:
    r0 = s.sprite___24236;
  case 14:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.lower___24283 = (s.tmp_1);
    s.lastBrkId = 1471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1471]) return breakpoint(s, 46, 1471, r0);
  case 46:
    r0 = s.higher___24274.fields["_overlappers"];
    s.tmp_2 = r0;
    r0 = s.lower___24283.fields["id"];
    s.tmp_3 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.tmp_3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1472]) return breakpoint(s, 47, 1472, r0);
  case 47:
    r0 = pxsim_pxtcore_mkAction(2, forEach_inline__P24303);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.thisKind___24257);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.otherKind___24261);
    r0 = pxsim_pxtcore_mkAction(5, ArcadePhysicsEngine_spriteCollisions_inline__P24327);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 0, s.higher___24274);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 1, s.lower___24283);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 2, s.sprite___24236);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 3, s.overlapper___24251);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 4, s.thisKind___24257);
    s.tmp_6 = helpers_arrayForEach__P109_mk(s);
    s.tmp_7 = helpers_arrayFilter__P110_mk(s);
    s.tmp_7.arg0 = s.arg2;
    s.tmp_7.arg1 = s.tmp_4;
    s.callLocIdx = 628; s.pc = 49; return s.tmp_7;
  case 49:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 630; s.pc = 48; return s.tmp_6;
  case 48:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = (s.unnamed12675___U7 + 1);
    s.unnamed12675___U7 = (r0);
    { step = 6; continue; }
  case 18:
    s.unnamed12674___U6 = (undefined);
  case 19:
    r0 = (s.unnamed12673___U2 + 1);
    s.unnamed12673___U2 = (r0);
    { step = 3; continue; }
  case 20:
    s.unnamed12672___U1 = (undefined);
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions__P5091.info = {"start":9744,"length":2268,"line":309,"column":4,"endLine":353,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"spriteCollisions","argumentNames":["this","movedSprites","handlers"]}

function ArcadePhysicsEngine_spriteCollisions__P5091_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions__P5091, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  ms___24234: undefined,
  unnamed12672___U1: undefined,
  unnamed12673___U2: undefined,
  sprite___24236: undefined,
  overSprites___24243: undefined,
  overlapper___24251: undefined,
  unnamed12674___U6: undefined,
  unnamed12675___U7: undefined,
  thisKind___24257: undefined,
  otherKind___24261: undefined,
  higher___24274: undefined,
  lower___24283: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function forEach_inline__P24303(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === s.caps[1]);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    r0 = s.arg0.fields["kind"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 === s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_4;
    { step = 5; continue; }
  case 4:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 === s.caps[0]);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.tmp_8;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P24303.info = {"start":11113,"length":137,"line":335,"column":32,"endLine":336,"endColumn":81,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P24303_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P24303, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions_inline__P24327(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1473]) return breakpoint(s, 1, 1473, r0);
  case 1:
    r0 = s.caps[0].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[1].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 1474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1474]) return breakpoint(s, 2, 1474, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(6, ArcadePhysicsEngine_spriteCollisions_inline__P24337);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.caps[2]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.caps[3]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.caps[4]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.caps[0]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.caps[1]);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions_inline__P24327.info = {"start":11310,"length":652,"line":338,"column":33,"endLine":349,"endColumn":25,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function ArcadePhysicsEngine_spriteCollisions_inline__P24327_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions_inline__P24327, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions_inline__P24337(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1475]) return breakpoint(s, 7, 1475, r0);
  case 7:
    r0 = s.caps[0].fields["flags"];
    s.tmp_4 = r0;
    r0 = s.caps[1].fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 | s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1476]) return breakpoint(s, 8, 1476, r0);
  case 8:
    r0 = s.caps[2].fields["kind"];
    s.tmp_7 = r0;
    r0 = (s.caps[3] === s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 1; continue; }
    r0 = s.caps[0];
    { step = 2; continue; }
  case 1:
    r0 = s.caps[1];
  case 2:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.caps[2].fields["kind"];
    s.tmp_10 = r0;
    r0 = (s.caps[3] === s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 3; continue; }
    r0 = s.caps[1];
    { step = 4; continue; }
  case 3:
    r0 = s.caps[0];
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    s.tmp_12 = if_handler_3_mk(s);
    s.tmp_12.arg0 = s.caps[2];
    s.tmp_12.arg1 = s.tmp_8;
    s.tmp_12.arg2 = s.tmp_11;
    if (!s.tmp_12.arg0.vtable.iface) {
      setupLambda(s.tmp_12, pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "handler"), 3);
      s.callLocIdx = 629; s.pc = 9; return s.tmp_12;
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["handler"];
      if (s.tmp_12.fn == null) { setupLambda(s.tmp_12, s.tmp_12.arg0.fields["handler"], 3); s.callLocIdx = 629; s.pc = 9; return s.tmp_12; }
      else if (s.tmp_12.fn.isGetter) { s.tmp_12.stage2Call = true; s.callLocIdx = 629; s.pc = 9; return s.tmp_12;; }
     else { s.callLocIdx = 629; s.pc = 9; return s.tmp_12; }
    }
  case 9:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1477]) return breakpoint(s, 10, 1477, r0);
  case 10:
    r0 = s.caps[4].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[5].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions_inline__P24337.info = {"start":11431,"length":503,"line":340,"column":50,"endLine":348,"endColumn":29,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":[]}

function ArcadePhysicsEngine_spriteCollisions_inline__P24337_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions_inline__P24337, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
} }





function sprites_SpriteMap_overlaps__P2448(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___24371 = undefined;
    s.o___24375 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1236]) return breakpoint(s, 1, 1236, r0);
  case 1:
    s.tmp_0 = sprites_SpriteMap_neighbors__P2447_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 500; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.n___24371 = (r0);
    s.lastBrkId = 1237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1237]) return breakpoint(s, 3, 1237, r0);
  case 3:
    r0 = pxsim_pxtcore_mkAction(1, o_inline__P24377);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayFilter__P110_mk(s);
    s.tmp_1.arg0 = s.n___24371;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 502; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.o___24375 = (r0);
    s.lastBrkId = 1238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1238]) return breakpoint(s, 5, 1238, r0);
  case 5:
    r0 = s.o___24375;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_overlaps__P2448.info = {"start":923,"length":189,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"overlaps","argumentNames":["this","sprite"]}

function sprites_SpriteMap_overlaps__P2448_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_overlaps__P2448, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  n___24371: undefined,
  o___24375: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function o_inline__P24377(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_overlapsWith__P2419_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 501; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
o_inline__P24377.info = {"start":1037,"length":41,"line":32,"column":31,"endLine":32,"endColumn":72,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["neighbor"]}

function o_inline__P24377_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: o_inline__P24377, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_neighbors__P2447(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___24628 = undefined;
    s.layer___24630 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1228]) return breakpoint(s, 1, 1228, r0);
  case 1:
    r0 = pxsim_Array__mk();
    s.n___24628 = (r0);
    s.lastBrkId = 1229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1229]) return breakpoint(s, 2, 1229, r0);
  case 2:
    r0 = s.arg1.fields["layer"];
    s.layer___24630 = (r0);
    s.lastBrkId = 1230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1230]) return breakpoint(s, 3, 1230, r0);
  case 3:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P5055_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P2398_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 488; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P2402_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 489; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___24630;
    s.tmp_0.arg4 = s.n___24628;
    s.callLocIdx = 490; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 1231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1231]) return breakpoint(s, 7, 1231, r0);
  case 7:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P5055_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P2398_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 491; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P2404_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 492; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___24630;
    s.tmp_0.arg4 = s.n___24628;
    s.callLocIdx = 493; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1232]) return breakpoint(s, 11, 1232, r0);
  case 11:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P5055_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P2400_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 494; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P2402_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 495; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___24630;
    s.tmp_0.arg4 = s.n___24628;
    s.callLocIdx = 496; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 1233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1233]) return breakpoint(s, 15, 1233, r0);
  case 15:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P5055_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P2400_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 497; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P2404_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 498; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___24630;
    s.tmp_0.arg4 = s.n___24628;
    s.callLocIdx = 499; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 1234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1234]) return breakpoint(s, 19, 1234, r0);
  case 19:
    r0 = pxsim_Array_.removeElement(s.n___24628, s.arg1);
    s.lastBrkId = 1235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1235]) return breakpoint(s, 20, 1235, r0);
  case 20:
    r0 = s.n___24628;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_neighbors__P2447.info = {"start":376,"length":442,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"neighbors","argumentNames":["this","sprite"]}

function sprites_SpriteMap_neighbors__P2447_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_neighbors__P2447, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  n___24628: undefined,
  layer___24630: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_mergeAtKey__P5055(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___24675 = undefined;
    s.bucket___24680 = undefined;
    s.sprite___24687 = undefined;
    s.unnamed12668___U3 = undefined;
    s.unnamed12669___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1292]) return breakpoint(s, 9, 1292, r0);
  case 9:
    s.tmp_0 = sprites_SpriteMap_key__P5053_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 526; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.k___24675 = (r0);
    s.lastBrkId = 1293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1293]) return breakpoint(s, 11, 1293, r0);
  case 11:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___24675);
    s.bucket___24680 = (r0);
    s.lastBrkId = 1294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1294]) return breakpoint(s, 12, 1294, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.bucket___24680);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1295]) return breakpoint(s, 13, 1295, r0);
  case 13:
    s.sprite___24687 = (undefined);
    s.unnamed12668___U3 = (s.bucket___24680);
    s.unnamed12669___U4 = (0);
    s.lastBrkId = 1296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1296]) return breakpoint(s, 14, 1296, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed12669___U4;
    r0 = pxsim_Array__length(s.unnamed12668___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12668___U3, s.unnamed12669___U4);
    s.sprite___24687 = (r0);
    s.lastBrkId = 1297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1297]) return breakpoint(s, 15, 1297, r0);
  case 15:
    s.lastBrkId = 1298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1298]) return breakpoint(s, 16, 1298, r0);
  case 16:
    r0 = s.sprite___24687.fields["layer"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & s.arg3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array_.indexOf(s.arg4, s.sprite___24687, undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1299]) return breakpoint(s, 17, 1299, r0);
  case 17:
    r0 = pxsim_Array__push(s.arg4, s.sprite___24687);
  case 4:
  case 5:
    r0 = (s.unnamed12669___U4 + 1);
    s.unnamed12669___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed12668___U3 = (undefined);
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_mergeAtKey__P5055.info = {"start":3715,"length":384,"line":101,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"mergeAtKey","argumentNames":["this","x","y","layer","n"]}

function sprites_SpriteMap_mergeAtKey__P5055_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_mergeAtKey__P5055, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  k___24675: undefined,
  bucket___24680: undefined,
  sprite___24687: undefined,
  unnamed12668___U3: undefined,
  unnamed12669___U4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function sprites_SpriteMap_key__P5053(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.xi___24708 = undefined;
    s.yi___24720 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1270]) return breakpoint(s, 1, 1270, r0);
  case 1:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg1, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 514; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.xi___24708 = (r0);
    s.lastBrkId = 1271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1271]) return breakpoint(s, 3, 1271, r0);
  case 3:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["rowCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg2, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 515; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.yi___24720 = (r0);
    s.lastBrkId = 1272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1272]) return breakpoint(s, 5, 1272, r0);
  case 5:
    s.tmp_0 = r0 = s.xi___24708;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_2 = r0;
    r0 = (s.yi___24720 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_key__P5053.info = {"start":2592,"length":270,"line":76,"column":8,"endLine":80,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"key","argumentNames":["this","x","y"]}

function sprites_SpriteMap_key__P5053_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_key__P5053, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  xi___24708: undefined,
  yi___24720: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_overlapsWith__P2419(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___24441 = undefined;
    s.B___24442 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1155]) return breakpoint(s, 24, 1155, r0);
  case 24:
    s.lastBrkId = 1156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1156]) return breakpoint(s, 25, 1156, r0);
  case 25:
    r0 = (s.arg1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1157]) return breakpoint(s, 26, 1157, r0);
  case 26:
    r0 = false;
    { step = 23; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1158]) return breakpoint(s, 27, 1158, r0);
  case 27:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 4610);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1159]) return breakpoint(s, 28, 1159, r0);
  case 28:
    r0 = false;
    { step = 23; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1160]) return breakpoint(s, 29, 1160, r0);
  case 29:
    r0 = s.arg1.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 4610);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1161]) return breakpoint(s, 30, 1161, r0);
  case 30:
    r0 = false;
    { step = 23; continue; }
  case 5:
  case 6:
    s.lastBrkId = 1162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1162]) return breakpoint(s, 31, 1162, r0);
  case 31:
    s.tmp_8 = game_Hitbox_overlapsWith__P2223_mk(s);
    r0 = s.arg1.fields["_hitbox"];
    s.tmp_8.arg0 = r0;
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_8.arg1 = r0;
    s.callLocIdx = 397; s.pc = 32; return s.tmp_8;
  case 32:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1163]) return breakpoint(s, 33, 1163, r0);
  case 33:
    r0 = false;
    { step = 23; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1164]) return breakpoint(s, 34, 1164, r0);
  case 34:
    s.tmp_12 = Sprite_isScaled__P5046_mk(s);
    s.tmp_12.arg0 = s.arg0;
    s.callLocIdx = 398; s.pc = 35; return s.tmp_12;
  case 35:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_11);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_9;
    { step = 10; continue; }
  case 9:
    s.tmp_15 = Sprite_isScaled__P5046_mk(s);
    s.tmp_15.arg0 = s.arg1;
    s.callLocIdx = 399; s.pc = 36; return s.tmp_15;
  case 36:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    s.tmp_13 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_13);
  case 10:
    // jmp value (already in r0)
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_16);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1165]) return breakpoint(s, 37, 1165, r0);
  case 37:
    r0 = s.arg1.fields["_image"];
    s.tmp_17 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_18 = r0;
    s.tmp_21 = Sprite_left__P2398_mk(s);
    s.tmp_21.arg0 = s.arg0;
    s.callLocIdx = 400; s.pc = 38; return s.tmp_21;
  case 38:
    r0 = s.retval;
    s.tmp_20 = r0;
    s.tmp_23 = Sprite_left__P2398_mk(s);
    s.tmp_23.arg0 = s.arg1;
    s.callLocIdx = 401; s.pc = 39; return s.tmp_23;
  case 39:
    r0 = s.retval;
    s.tmp_22 = r0;
    r0 = (s.tmp_20 - s.tmp_22);
    s.tmp_19 = r0;
    s.tmp_26 = Sprite_top__P2402_mk(s);
    s.tmp_26.arg0 = s.arg0;
    s.callLocIdx = 402; s.pc = 40; return s.tmp_26;
  case 40:
    r0 = s.retval;
    s.tmp_25 = r0;
    s.tmp_28 = Sprite_top__P2402_mk(s);
    s.tmp_28.arg0 = s.arg1;
    s.callLocIdx = 403; s.pc = 41; return s.tmp_28;
  case 41:
    r0 = s.retval;
    s.tmp_27 = r0;
    r0 = (s.tmp_25 - s.tmp_27);
    s.tmp_24 = r0;
    r0 = pxsim_ImageMethods.overlapsWith(s.tmp_17, s.tmp_18, s.tmp_19, s.tmp_24);
    { step = 23; continue; }
    { step = 22; continue; }
  case 11:
    s.lastBrkId = 1166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1166]) return breakpoint(s, 42, 1166, r0);
  case 42:
    s.tmp_31 = Sprite_sx__P2369_mk(s);
    s.tmp_31.arg0 = s.arg0;
    s.callLocIdx = 404; s.pc = 43; return s.tmp_31;
  case 43:
    r0 = s.retval;
    s.tmp_30 = r0;
    r0 = (s.tmp_30 == 0);
    s.tmp_29 = r0;
    r0 = pxsim_numops_toBool(s.tmp_29);
    if (!r0) { step = 12; continue; }
    r0 = s.tmp_29;
    { step = 13; continue; }
  case 12:
    s.tmp_33 = Sprite_sy__P2371_mk(s);
    s.tmp_33.arg0 = s.arg0;
    s.callLocIdx = 405; s.pc = 44; return s.tmp_33;
  case 44:
    r0 = s.retval;
    s.tmp_32 = r0;
    r0 = (s.tmp_32 == 0);
  case 13:
    // jmp value (already in r0)
    s.tmp_34 = r0;
    r0 = pxsim_numops_toBool(s.tmp_34);
    if (!r0) { step = 14; continue; }
    r0 = s.tmp_34;
    { step = 15; continue; }
  case 14:
    s.tmp_36 = Sprite_sx__P2369_mk(s);
    s.tmp_36.arg0 = s.arg1;
    s.callLocIdx = 406; s.pc = 45; return s.tmp_36;
  case 45:
    r0 = s.retval;
    s.tmp_35 = r0;
    r0 = (s.tmp_35 == 0);
  case 15:
    // jmp value (already in r0)
    s.tmp_37 = r0;
    r0 = pxsim_numops_toBool(s.tmp_37);
    if (!r0) { step = 16; continue; }
    r0 = s.tmp_37;
    { step = 17; continue; }
  case 16:
    s.tmp_39 = Sprite_sy__P2371_mk(s);
    s.tmp_39.arg0 = s.arg1;
    s.callLocIdx = 407; s.pc = 46; return s.tmp_39;
  case 46:
    r0 = s.retval;
    s.tmp_38 = r0;
    r0 = (s.tmp_38 == 0);
  case 17:
    // jmp value (already in r0)
    s.tmp_40 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_40);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1167]) return breakpoint(s, 47, 1167, r0);
  case 47:
    r0 = false;
    { step = 23; continue; }
  case 18:
  case 19:
    s.lastBrkId = 1168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1168]) return breakpoint(s, 48, 1168, r0);
  case 48:
    s.tmp_44 = Sprite_sx__P2369_mk(s);
    s.tmp_44.arg0 = s.arg0;
    s.callLocIdx = 408; s.pc = 49; return s.tmp_44;
  case 49:
    r0 = s.retval;
    s.tmp_43 = r0;
    s.tmp_46 = Sprite_sy__P2371_mk(s);
    s.tmp_46.arg0 = s.arg0;
    s.callLocIdx = 409; s.pc = 50; return s.tmp_46;
  case 50:
    r0 = s.retval;
    s.tmp_45 = r0;
    r0 = (s.tmp_43 * s.tmp_45);
    s.tmp_42 = r0;
    s.tmp_49 = Sprite_sx__P2369_mk(s);
    s.tmp_49.arg0 = s.arg1;
    s.callLocIdx = 410; s.pc = 51; return s.tmp_49;
  case 51:
    r0 = s.retval;
    s.tmp_48 = r0;
    s.tmp_51 = Sprite_sy__P2371_mk(s);
    s.tmp_51.arg0 = s.arg1;
    s.callLocIdx = 411; s.pc = 52; return s.tmp_51;
  case 52:
    r0 = s.retval;
    s.tmp_50 = r0;
    r0 = (s.tmp_48 * s.tmp_50);
    s.tmp_47 = r0;
    r0 = (s.tmp_42 < s.tmp_47);
    s.tmp_41 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_41);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1169]) return breakpoint(s, 53, 1169, r0);
  case 53:
    s.A___24441 = (s.arg0);
    s.lastBrkId = 1170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1170]) return breakpoint(s, 54, 1170, r0);
  case 54:
    s.B___24442 = (s.arg1);
    { step = 21; continue; }
  case 20:
    s.lastBrkId = 1171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1171]) return breakpoint(s, 55, 1171, r0);
  case 55:
    s.A___24441 = (s.arg1);
    s.lastBrkId = 1172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1172]) return breakpoint(s, 56, 1172, r0);
  case 56:
    s.B___24442 = (s.arg0);
  case 21:
    s.lastBrkId = 1173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1173]) return breakpoint(s, 57, 1173, r0);
  case 57:
    s.tmp_0 = helpers_imageBlit__P1953_mk(s);
    s.tmp_1 = Sprite_image__P2389_mk(s);
    s.tmp_1.arg0 = s.A___24441;
    s.callLocIdx = 412; s.pc = 59; return s.tmp_1;
  case 59:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_4 = Sprite_left__P2398_mk(s);
    s.tmp_4.arg0 = s.B___24442;
    s.callLocIdx = 413; s.pc = 60; return s.tmp_4;
  case 60:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_left__P2398_mk(s);
    s.tmp_6.arg0 = s.A___24441;
    s.callLocIdx = 414; s.pc = 61; return s.tmp_6;
  case 61:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2 = r0;
    s.tmp_8 = Sprite_sx__P2369_mk(s);
    s.tmp_8.arg0 = s.A___24441;
    s.callLocIdx = 415; s.pc = 62; return s.tmp_8;
  case 62:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_2 / s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_11 = Sprite_top__P2402_mk(s);
    s.tmp_11.arg0 = s.B___24442;
    s.callLocIdx = 416; s.pc = 63; return s.tmp_11;
  case 63:
    r0 = s.retval;
    s.tmp_10 = r0;
    s.tmp_13 = Sprite_top__P2402_mk(s);
    s.tmp_13.arg0 = s.A___24441;
    s.callLocIdx = 417; s.pc = 64; return s.tmp_13;
  case 64:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = (s.tmp_10 - s.tmp_12);
    s.tmp_9 = r0;
    s.tmp_15 = Sprite_sy__P2371_mk(s);
    s.tmp_15.arg0 = s.A___24441;
    s.callLocIdx = 418; s.pc = 65; return s.tmp_15;
  case 65:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = (s.tmp_9 / s.tmp_14);
    s.tmp_0.arg2 = r0;
    s.tmp_17 = Sprite_width__P2396_mk(s);
    s.tmp_17.arg0 = s.B___24442;
    s.callLocIdx = 419; s.pc = 66; return s.tmp_17;
  case 66:
    r0 = s.retval;
    s.tmp_16 = r0;
    s.tmp_19 = Sprite_sx__P2369_mk(s);
    s.tmp_19.arg0 = s.A___24441;
    s.callLocIdx = 420; s.pc = 67; return s.tmp_19;
  case 67:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = (s.tmp_16 / s.tmp_18);
    s.tmp_0.arg3 = r0;
    s.tmp_21 = Sprite_height__P2397_mk(s);
    s.tmp_21.arg0 = s.B___24442;
    s.callLocIdx = 421; s.pc = 68; return s.tmp_21;
  case 68:
    r0 = s.retval;
    s.tmp_20 = r0;
    s.tmp_23 = Sprite_sy__P2371_mk(s);
    s.tmp_23.arg0 = s.A___24441;
    s.callLocIdx = 422; s.pc = 69; return s.tmp_23;
  case 69:
    r0 = s.retval;
    s.tmp_22 = r0;
    r0 = (s.tmp_20 / s.tmp_22);
    s.tmp_0.arg4 = r0;
    s.tmp_24 = Sprite_image__P2389_mk(s);
    s.tmp_24.arg0 = s.B___24442;
    s.callLocIdx = 423; s.pc = 70; return s.tmp_24;
  case 70:
    r0 = s.retval;
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 0;
    s.tmp_0.arg7 = 0;
    s.tmp_26 = Sprite_image__P2389_mk(s);
    s.tmp_26.arg0 = s.B___24442;
    s.callLocIdx = 424; s.pc = 71; return s.tmp_26;
  case 71:
    r0 = s.retval;
    s.tmp_25 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_25);
    s.tmp_0.arg8 = r0;
    s.tmp_28 = Sprite_image__P2389_mk(s);
    s.tmp_28.arg0 = s.B___24442;
    s.callLocIdx = 425; s.pc = 72; return s.tmp_28;
  case 72:
    r0 = s.retval;
    s.tmp_27 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_27);
    s.tmp_0.arg9 = r0;
    s.tmp_0.arg10 = true;
    s.tmp_0.arg11 = true;
    s.callLocIdx = 426; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    { step = 23; continue; }
  case 22:
    r0 = undefined;
  case 23:
    return leave(s, r0)
  default: oops()
} } }
Sprite_overlapsWith__P2419.info = {"start":20623,"length":1575,"line":689,"column":4,"endLine":736,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function Sprite_overlapsWith__P2419_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_overlapsWith__P2419, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  tmp_32: undefined,
  tmp_33: undefined,
  tmp_34: undefined,
  tmp_35: undefined,
  tmp_36: undefined,
  tmp_37: undefined,
  tmp_38: undefined,
  tmp_39: undefined,
  tmp_40: undefined,
  tmp_41: undefined,
  tmp_42: undefined,
  tmp_43: undefined,
  tmp_44: undefined,
  tmp_45: undefined,
  tmp_46: undefined,
  tmp_47: undefined,
  tmp_48: undefined,
  tmp_49: undefined,
  tmp_50: undefined,
  tmp_51: undefined,
  A___24441: undefined,
  B___24442: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_isScaled__P5046(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1101]) return breakpoint(s, 3, 1101, r0);
  case 3:
    r0 = s.arg0.fields["_sx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_sy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== 256);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isScaled__P5046.info = {"start":10166,"length":100,"line":369,"column":4,"endLine":371,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isScaled","argumentNames":["this"]}

function Sprite_isScaled__P5046_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isScaled__P5046, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_Hitbox_overlapsWith__P2223(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[985]) return breakpoint(s, 18, 985, r0);
  case 18:
    s.tmp_0 = game_Hitbox_updateIfInvalid__P2222_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 256; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[986]) return breakpoint(s, 20, 986, r0);
  case 20:
    s.tmp_0 = game_Hitbox_updateIfInvalid__P2222_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 257; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[987]) return breakpoint(s, 22, 987, r0);
  case 22:
    s.tmp_1 = game_Hitbox_contains__P2221_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = game_Hitbox_left__P2216_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 258; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.tmp_3 = game_Hitbox_top__P2217_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 259; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 260; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[988]) return breakpoint(s, 26, 988, r0);
  case 26:
    r0 = true;
    { step = 17; continue; }
  case 1:
  case 2:
    s.lastBrkId = 989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[989]) return breakpoint(s, 27, 989, r0);
  case 27:
    s.tmp_5 = game_Hitbox_contains__P2221_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_6 = game_Hitbox_left__P2216_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 261; s.pc = 29; return s.tmp_6;
  case 29:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.tmp_7 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.callLocIdx = 262; s.pc = 30; return s.tmp_7;
  case 30:
    r0 = s.retval;
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 263; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[990]) return breakpoint(s, 31, 990, r0);
  case 31:
    r0 = true;
    { step = 17; continue; }
  case 3:
  case 4:
    s.lastBrkId = 991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[991]) return breakpoint(s, 32, 991, r0);
  case 32:
    s.tmp_9 = game_Hitbox_contains__P2221_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.tmp_10 = game_Hitbox_right__P2218_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 264; s.pc = 34; return s.tmp_10;
  case 34:
    r0 = s.retval;
    s.tmp_9.arg1 = r0;
    s.tmp_11 = game_Hitbox_top__P2217_mk(s);
    s.tmp_11.arg0 = s.arg1;
    s.callLocIdx = 265; s.pc = 35; return s.tmp_11;
  case 35:
    r0 = s.retval;
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 266; s.pc = 33; return s.tmp_9;
  case 33:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[992]) return breakpoint(s, 36, 992, r0);
  case 36:
    r0 = true;
    { step = 17; continue; }
  case 5:
  case 6:
    s.lastBrkId = 993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[993]) return breakpoint(s, 37, 993, r0);
  case 37:
    s.tmp_13 = game_Hitbox_contains__P2221_mk(s);
    s.tmp_13.arg0 = s.arg0;
    s.tmp_14 = game_Hitbox_right__P2218_mk(s);
    s.tmp_14.arg0 = s.arg1;
    s.callLocIdx = 267; s.pc = 39; return s.tmp_14;
  case 39:
    r0 = s.retval;
    s.tmp_13.arg1 = r0;
    s.tmp_15 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_15.arg0 = s.arg1;
    s.callLocIdx = 268; s.pc = 40; return s.tmp_15;
  case 40:
    r0 = s.retval;
    s.tmp_13.arg2 = r0;
    s.callLocIdx = 269; s.pc = 38; return s.tmp_13;
  case 38:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[994]) return breakpoint(s, 41, 994, r0);
  case 41:
    r0 = true;
    { step = 17; continue; }
  case 7:
  case 8:
    s.lastBrkId = 995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[995]) return breakpoint(s, 42, 995, r0);
  case 42:
    s.tmp_17 = game_Hitbox_contains__P2221_mk(s);
    s.tmp_17.arg0 = s.arg1;
    s.tmp_18 = game_Hitbox_left__P2216_mk(s);
    s.tmp_18.arg0 = s.arg0;
    s.callLocIdx = 270; s.pc = 44; return s.tmp_18;
  case 44:
    r0 = s.retval;
    s.tmp_17.arg1 = r0;
    s.tmp_19 = game_Hitbox_top__P2217_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.callLocIdx = 271; s.pc = 45; return s.tmp_19;
  case 45:
    r0 = s.retval;
    s.tmp_17.arg2 = r0;
    s.callLocIdx = 272; s.pc = 43; return s.tmp_17;
  case 43:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_16);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[996]) return breakpoint(s, 46, 996, r0);
  case 46:
    r0 = true;
    { step = 17; continue; }
  case 9:
  case 10:
    s.lastBrkId = 997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[997]) return breakpoint(s, 47, 997, r0);
  case 47:
    s.tmp_21 = game_Hitbox_contains__P2221_mk(s);
    s.tmp_21.arg0 = s.arg1;
    s.tmp_22 = game_Hitbox_left__P2216_mk(s);
    s.tmp_22.arg0 = s.arg0;
    s.callLocIdx = 273; s.pc = 49; return s.tmp_22;
  case 49:
    r0 = s.retval;
    s.tmp_21.arg1 = r0;
    s.tmp_23 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 274; s.pc = 50; return s.tmp_23;
  case 50:
    r0 = s.retval;
    s.tmp_21.arg2 = r0;
    s.callLocIdx = 275; s.pc = 48; return s.tmp_21;
  case 48:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_20);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[998]) return breakpoint(s, 51, 998, r0);
  case 51:
    r0 = true;
    { step = 17; continue; }
  case 11:
  case 12:
    s.lastBrkId = 999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[999]) return breakpoint(s, 52, 999, r0);
  case 52:
    s.tmp_25 = game_Hitbox_contains__P2221_mk(s);
    s.tmp_25.arg0 = s.arg1;
    s.tmp_26 = game_Hitbox_right__P2218_mk(s);
    s.tmp_26.arg0 = s.arg0;
    s.callLocIdx = 276; s.pc = 54; return s.tmp_26;
  case 54:
    r0 = s.retval;
    s.tmp_25.arg1 = r0;
    s.tmp_27 = game_Hitbox_top__P2217_mk(s);
    s.tmp_27.arg0 = s.arg0;
    s.callLocIdx = 277; s.pc = 55; return s.tmp_27;
  case 55:
    r0 = s.retval;
    s.tmp_25.arg2 = r0;
    s.callLocIdx = 278; s.pc = 53; return s.tmp_25;
  case 53:
    r0 = s.retval;
    s.tmp_24 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_24);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1000]) return breakpoint(s, 56, 1000, r0);
  case 56:
    r0 = true;
    { step = 17; continue; }
  case 13:
  case 14:
    s.lastBrkId = 1001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1001]) return breakpoint(s, 57, 1001, r0);
  case 57:
    s.tmp_29 = game_Hitbox_contains__P2221_mk(s);
    s.tmp_29.arg0 = s.arg1;
    s.tmp_30 = game_Hitbox_right__P2218_mk(s);
    s.tmp_30.arg0 = s.arg0;
    s.callLocIdx = 279; s.pc = 59; return s.tmp_30;
  case 59:
    r0 = s.retval;
    s.tmp_29.arg1 = r0;
    s.tmp_31 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_31.arg0 = s.arg0;
    s.callLocIdx = 280; s.pc = 60; return s.tmp_31;
  case 60:
    r0 = s.retval;
    s.tmp_29.arg2 = r0;
    s.callLocIdx = 281; s.pc = 58; return s.tmp_29;
  case 58:
    r0 = s.retval;
    s.tmp_28 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_28);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1002]) return breakpoint(s, 61, 1002, r0);
  case 61:
    r0 = true;
    { step = 17; continue; }
  case 15:
  case 16:
    s.lastBrkId = 1003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1003]) return breakpoint(s, 62, 1003, r0);
  case 62:
    r0 = false;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_overlapsWith__P2223.info = {"start":2515,"length":695,"line":87,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function game_Hitbox_overlapsWith__P2223_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_overlapsWith__P2223, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_contains__P2221(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[964]) return breakpoint(s, 7, 964, r0);
  case 7:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = game_Hitbox_left__P2216_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 236; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = game_Hitbox_right__P2218_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 237; s.pc = 9; return s.tmp_6;
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 <= s.tmp_5);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_7;
    { step = 4; continue; }
  case 3:
    s.tmp_8 = r0 = s.arg2;
    s.tmp_10 = game_Hitbox_top__P2217_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 238; s.pc = 10; return s.tmp_10;
  case 10:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_8 >= s.tmp_9);
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBool(s.tmp_11);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_11;
    { step = 6; continue; }
  case 5:
    s.tmp_12 = r0 = s.arg2;
    s.tmp_14 = game_Hitbox_bottom__P2219_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 239; s.pc = 11; return s.tmp_14;
  case 11:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 <= s.tmp_13);
  case 6:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = s.tmp_15;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_contains__P2221.info = {"start":1034,"length":144,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"contains","argumentNames":["this","x","y"]}

function game_Hitbox_contains__P2221_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_contains__P2221, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_imageBlit__P1953(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.arg10 = (s.lambdaArgs[10]);
      s.arg11 = (s.lambdaArgs[11]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[552]) return breakpoint(s, 7, 552, r0);
  case 7:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    globals._blitArgs___4875 = (s.tmp_1);
    s.lastBrkId = 553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[553]) return breakpoint(s, 8, 553, r0);
  case 8:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = (s.arg1 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 0, s.tmp_1);
    s.lastBrkId = 554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[554]) return breakpoint(s, 9, 554, r0);
  case 9:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = (s.arg2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 1, s.tmp_1);
    s.lastBrkId = 555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[555]) return breakpoint(s, 10, 555, r0);
  case 10:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = (s.arg3 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 2, s.tmp_1);
    s.lastBrkId = 556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[556]) return breakpoint(s, 11, 556, r0);
  case 11:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = (s.arg4 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 3, s.tmp_1);
    s.lastBrkId = 557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[557]) return breakpoint(s, 12, 557, r0);
  case 12:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = (s.arg6 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 4, s.tmp_1);
    s.lastBrkId = 558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[558]) return breakpoint(s, 13, 558, r0);
  case 13:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = (s.arg7 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 5, s.tmp_1);
    s.lastBrkId = 559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[559]) return breakpoint(s, 14, 559, r0);
  case 14:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = (s.arg8 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 6, s.tmp_1);
    s.lastBrkId = 560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[560]) return breakpoint(s, 15, 560, r0);
  case 15:
    s.tmp_0 = r0 = globals._blitArgs___4875;
    r0 = (s.arg9 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 7, s.tmp_1);
    s.lastBrkId = 561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[561]) return breakpoint(s, 16, 561, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg10);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(globals._blitArgs___4875, 8, s.tmp_0);
    s.lastBrkId = 562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[562]) return breakpoint(s, 17, 562, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.arg11);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(globals._blitArgs___4875, 9, s.tmp_0);
    s.lastBrkId = 563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[563]) return breakpoint(s, 18, 563, r0);
  case 18:
    r0 = pxsim_ImageMethods._blit(s.arg0, s.arg5, globals._blitArgs___4875);
    return leave(s, r0)
  default: oops()
} } }
helpers_imageBlit__P1953.info = {"start":4459,"length":642,"line":154,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageBlit","argumentNames":["img","xDst","yDst","wDst","hDst","src","xSrc","ySrc","wSrc","hSrc","transparent","check"]}

function helpers_imageBlit__P1953_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageBlit__P1953, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
  arg10: undefined,
  arg11: undefined,
} }





function ArcadePhysicsEngine_createMovingSprite__P5090(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ovx___25057 = undefined;
    s.ovy___25062 = undefined;
    s.fx___25089 = undefined;
    s.c___25096 = undefined;
    s.fy___25139 = undefined;
    s.c___25146 = undefined;
    s.dx___25185 = undefined;
    s.dy___25198 = undefined;
    s.xStep___25211 = undefined;
    s.yStep___25213 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1413]) return breakpoint(s, 25, 1413, r0);
  case 25:
    s.tmp_0 = ArcadePhysicsEngine_constrain__P5096_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 588; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.ovx___25057 = (r0);
    s.lastBrkId = 1414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1414]) return breakpoint(s, 27, 1414, r0);
  case 27:
    s.tmp_0 = ArcadePhysicsEngine_constrain__P5096_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 589; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.ovy___25062 = (r0);
    s.lastBrkId = 1415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1415]) return breakpoint(s, 29, 1415, r0);
  case 29:
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1416]) return breakpoint(s, 30, 1416, r0);
  case 30:
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1417]) return breakpoint(s, 31, 1417, r0);
  case 31:
    r0 = s.arg1.fields["_ax"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1418]) return breakpoint(s, 32, 1418, r0);
  case 32:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx_idiv__P163_mk(s);
    s.tmp_5 = Fx_imul__P161_mk(s);
    r0 = s.arg1.fields["_ax"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg2;
    s.callLocIdx = 590; s.pc = 35; return s.tmp_5;
  case 35:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 1000;
    s.callLocIdx = 591; s.pc = 34; return s.tmp_4;
  case 34:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 592; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 1419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1419]) return breakpoint(s, 36, 1419, r0);
  case 36:
    r0 = s.arg1.fields["_fx"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1420]) return breakpoint(s, 37, 1420, r0);
  case 37:
    s.tmp_1 = Fx_idiv__P163_mk(s);
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = s.arg1.fields["_fx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 593; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 594; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.fx___25089 = (r0);
    s.lastBrkId = 1421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1421]) return breakpoint(s, 40, 1421, r0);
  case 40:
    s.tmp_0 = Fx_compare__P164_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.fx___25089;
    s.callLocIdx = 595; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.c___25096 = (r0);
    s.lastBrkId = 1422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1422]) return breakpoint(s, 42, 1422, r0);
  case 42:
    r0 = (s.c___25096 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1423]) return breakpoint(s, 43, 1423, r0);
  case 43:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P166_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fx___25089;
    s.callLocIdx = 596; s.pc = 45; return s.tmp_4;
  case 45:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 597; s.pc = 44; return s.tmp_3;
  case 44:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 5; continue; }
  case 2:
    s.lastBrkId = 1424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1424]) return breakpoint(s, 46, 1424, r0);
  case 46:
    r0 = (s.c___25096 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1425]) return breakpoint(s, 47, 1425, r0);
  case 47:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P167_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fx___25089;
    s.callLocIdx = 598; s.pc = 49; return s.tmp_4;
  case 49:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 599; s.pc = 48; return s.tmp_3;
  case 48:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1426]) return breakpoint(s, 50, 1426, r0);
  case 50:
    r0 = (s.arg1).fields["_vx"] = (0);
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 1427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1427]) return breakpoint(s, 51, 1427, r0);
  case 51:
    r0 = s.arg1.fields["_ay"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1428]) return breakpoint(s, 52, 1428, r0);
  case 52:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx_idiv__P163_mk(s);
    s.tmp_5 = Fx_imul__P161_mk(s);
    r0 = s.arg1.fields["_ay"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg2;
    s.callLocIdx = 600; s.pc = 55; return s.tmp_5;
  case 55:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 1000;
    s.callLocIdx = 601; s.pc = 54; return s.tmp_4;
  case 54:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 602; s.pc = 53; return s.tmp_3;
  case 53:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 16; continue; }
  case 9:
    s.lastBrkId = 1429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1429]) return breakpoint(s, 56, 1429, r0);
  case 56:
    r0 = s.arg1.fields["_fy"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1430]) return breakpoint(s, 57, 1430, r0);
  case 57:
    s.tmp_1 = Fx_idiv__P163_mk(s);
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = s.arg1.fields["_fy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 603; s.pc = 59; return s.tmp_2;
  case 59:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 604; s.pc = 58; return s.tmp_1;
  case 58:
    r0 = s.retval;
    s.fy___25139 = (r0);
    s.lastBrkId = 1431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1431]) return breakpoint(s, 60, 1431, r0);
  case 60:
    s.tmp_0 = Fx_compare__P164_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.fy___25139;
    s.callLocIdx = 605; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.c___25146 = (r0);
    s.lastBrkId = 1432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1432]) return breakpoint(s, 62, 1432, r0);
  case 62:
    r0 = (s.c___25146 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1433]) return breakpoint(s, 63, 1433, r0);
  case 63:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P166_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fy___25139;
    s.callLocIdx = 606; s.pc = 65; return s.tmp_4;
  case 65:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 607; s.pc = 64; return s.tmp_3;
  case 64:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 13; continue; }
  case 10:
    s.lastBrkId = 1434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1434]) return breakpoint(s, 66, 1434, r0);
  case 66:
    r0 = (s.c___25146 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1435]) return breakpoint(s, 67, 1435, r0);
  case 67:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P167_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fy___25139;
    s.callLocIdx = 608; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 609; s.pc = 68; return s.tmp_3;
  case 68:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 1436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1436]) return breakpoint(s, 70, 1436, r0);
  case 70:
    r0 = (s.arg1).fields["_vy"] = (0);
  case 12:
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 1437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1437]) return breakpoint(s, 71, 1437, r0);
  case 71:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P5096_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 610; s.pc = 72; return s.tmp_2;
  case 72:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    s.lastBrkId = 1438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1438]) return breakpoint(s, 73, 1438, r0);
  case 73:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P5096_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 611; s.pc = 74; return s.tmp_2;
  case 74:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    s.lastBrkId = 1439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1439]) return breakpoint(s, 75, 1439, r0);
  case 75:
    s.tmp_0 = Fx8__P149_mk(s);
    s.tmp_3 = Fx_toFloat__P173_mk(s);
    s.tmp_4 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.ovx___25057;
    s.callLocIdx = 612; s.pc = 78; return s.tmp_4;
  case 78:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 613; s.pc = 77; return s.tmp_3;
  case 77:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 614; s.pc = 76; return s.tmp_0;
  case 76:
    r0 = s.retval;
    s.dx___25185 = (r0);
    s.lastBrkId = 1440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1440]) return breakpoint(s, 79, 1440, r0);
  case 79:
    s.tmp_0 = Fx8__P149_mk(s);
    s.tmp_3 = Fx_toFloat__P173_mk(s);
    s.tmp_4 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.ovy___25062;
    s.callLocIdx = 615; s.pc = 82; return s.tmp_4;
  case 82:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 616; s.pc = 81; return s.tmp_3;
  case 81:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 617; s.pc = 80; return s.tmp_0;
  case 80:
    r0 = s.retval;
    s.dy___25198 = (r0);
    s.lastBrkId = 1441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1441]) return breakpoint(s, 83, 1441, r0);
  case 83:
    s.xStep___25211 = (s.dx___25185);
    s.lastBrkId = 1442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1442]) return breakpoint(s, 84, 1442, r0);
  case 84:
    s.yStep___25213 = (s.dy___25198);
    s.lastBrkId = 1443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1443]) return breakpoint(s, 85, 1443, r0);
  case 85:
  case 17:
    s.lastBrkId = 1444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1444]) return breakpoint(s, 86, 1444, r0);
  case 86:
    s.tmp_2 = Fx_abs__P165_mk(s);
    s.tmp_2.arg0 = s.xStep___25211;
    s.callLocIdx = 618; s.pc = 87; return s.tmp_2;
  case 87:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    s.tmp_5 = Fx_abs__P165_mk(s);
    s.tmp_5.arg0 = s.yStep___25213;
    s.callLocIdx = 619; s.pc = 88; return s.tmp_5;
  case 88:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 19:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1445]) return breakpoint(s, 89, 1445, r0);
  case 89:
    s.tmp_10 = Fx_abs__P165_mk(s);
    s.tmp_10.arg0 = s.xStep___25211;
    s.callLocIdx = 620; s.pc = 90; return s.tmp_10;
  case 90:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_11 = r0;
    r0 = (s.tmp_9 > s.tmp_11);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1446]) return breakpoint(s, 91, 1446, r0);
  case 91:
    s.tmp_12 = Fx_idiv__P163_mk(s);
    s.tmp_12.arg0 = s.xStep___25211;
    s.tmp_12.arg1 = 2;
    s.callLocIdx = 621; s.pc = 92; return s.tmp_12;
  case 92:
    r0 = s.retval;
    s.xStep___25211 = (r0);
  case 20:
  case 21:
    s.lastBrkId = 1447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1447]) return breakpoint(s, 93, 1447, r0);
  case 93:
    s.tmp_2 = Fx_abs__P165_mk(s);
    s.tmp_2.arg0 = s.yStep___25213;
    s.callLocIdx = 622; s.pc = 94; return s.tmp_2;
  case 94:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 1448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1448]) return breakpoint(s, 95, 1448, r0);
  case 95:
    s.tmp_4 = Fx_idiv__P163_mk(s);
    s.tmp_4.arg0 = s.yStep___25213;
    s.tmp_4.arg1 = 2;
    s.callLocIdx = 623; s.pc = 96; return s.tmp_4;
  case 96:
    r0 = s.retval;
    s.yStep___25213 = (r0);
  case 22:
  case 23:
    { step = 17; continue; }
  case 24:
    s.lastBrkId = 1449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1449]) return breakpoint(s, 97, 1449, r0);
  case 97:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C2524_VT);
    s.tmp_0 = r0;
    s.tmp_1 = MovingSprite_constructor__P2525_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_1.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.dx___25185;
    s.tmp_1.arg5 = s.dy___25198;
    s.tmp_1.arg6 = s.xStep___25211;
    s.tmp_1.arg7 = s.yStep___25213;
    s.callLocIdx = 624; s.pc = 98; return s.tmp_1;
  case 98:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_createMovingSprite__P5090.info = {"start":6933,"length":2805,"line":217,"column":4,"endLine":307,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"createMovingSprite","argumentNames":["this","sprite","dtMs","dt2"]}

function ArcadePhysicsEngine_createMovingSprite__P5090_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_createMovingSprite__P5090, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  ovx___25057: undefined,
  ovy___25062: undefined,
  fx___25089: undefined,
  c___25096: undefined,
  fy___25139: undefined,
  c___25146: undefined,
  dx___25185: undefined,
  dy___25198: undefined,
  xStep___25211: undefined,
  yStep___25213: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_constrain__P5096(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1653]) return breakpoint(s, 1, 1653, r0);
  case 1:
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_1 = Fx_min__P166_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 800; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxNegativeVelocity"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 801; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constrain__P5096.info = {"start":27343,"length":193,"line":761,"column":4,"endLine":769,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"constrain","argumentNames":["this","v"]}

function ArcadePhysicsEngine_constrain__P5096_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constrain__P5096, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_compare__P164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[224]) return breakpoint(s, 1, 224, r0);
  case 1:
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_compare__P164.info = {"start":1395,"length":106,"line":41,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"compare","argumentNames":["a","b"]}

function Fx_compare__P164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_compare__P164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAABB__P2452(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.left___24877 = undefined;
    s.top___24880 = undefined;
    s.xn___24883 = undefined;
    s.yn___24894 = undefined;
    s.x___24905 = undefined;
    s.y___24910 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1279]) return breakpoint(s, 5, 1279, r0);
  case 5:
    s.tmp_0 = Sprite_left__P2398_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 517; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.left___24877 = (r0);
    s.lastBrkId = 1280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1280]) return breakpoint(s, 7, 1280, r0);
  case 7:
    s.tmp_0 = Sprite_top__P2402_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 518; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.top___24880 = (r0);
    s.lastBrkId = 1281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1281]) return breakpoint(s, 9, 1281, r0);
  case 9:
    s.tmp_3 = Sprite_width__P2396_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 519; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.xn___24883 = (r0);
    s.lastBrkId = 1282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1282]) return breakpoint(s, 11, 1282, r0);
  case 11:
    s.tmp_3 = Sprite_height__P2397_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 520; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.yn___24894 = (r0);
    s.lastBrkId = 1283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1283]) return breakpoint(s, 13, 1283, r0);
  case 13:
    s.x___24905 = (0);
    s.lastBrkId = 1284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1284]) return breakpoint(s, 14, 1284, r0);
  case 14:
  case 1:
    s.lastBrkId = 1285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1285]) return breakpoint(s, 15, 1285, r0);
  case 15:
    r0 = (s.x___24905 <= s.xn___24883);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1286]) return breakpoint(s, 16, 1286, r0);
  case 16:
    s.y___24910 = (0);
    s.lastBrkId = 1287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1287]) return breakpoint(s, 17, 1287, r0);
  case 17:
  case 2:
    s.lastBrkId = 1288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1288]) return breakpoint(s, 18, 1288, r0);
  case 18:
    r0 = (s.y___24910 <= s.yn___24894);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1289]) return breakpoint(s, 19, 1289, r0);
  case 19:
    s.tmp_1 = sprites_SpriteMap_insertAtKey__P5054_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = r0 = s.left___24877;
    s.tmp_4 = Math_min__P131_mk(s);
    s.tmp_5 = Sprite_width__P2396_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 521; s.pc = 22; return s.tmp_5;
  case 22:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_6 = r0;
    r0 = (s.x___24905 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 522; s.pc = 21; return s.tmp_4;
  case 21:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = r0 = s.top___24880;
    s.tmp_9 = Math_min__P131_mk(s);
    s.tmp_10 = Sprite_height__P2397_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 523; s.pc = 24; return s.tmp_10;
  case 24:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_11 = r0;
    r0 = (s.y___24910 * s.tmp_11);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 524; s.pc = 23; return s.tmp_9;
  case 23:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.tmp_1.arg3 = s.arg1;
    s.callLocIdx = 525; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1290]) return breakpoint(s, 25, 1290, r0);
  case 25:
    r0 = (s.y___24910 + 1);
    s.y___24910 = (r0);
    { step = 2; continue; }
  case 3:
    s.lastBrkId = 1291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1291]) return breakpoint(s, 26, 1291, r0);
  case 26:
    r0 = (s.x___24905 + 1);
    s.x___24905 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAABB__P2452.info = {"start":3184,"length":521,"line":91,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAABB","argumentNames":["this","sprite"]}

function sprites_SpriteMap_insertAABB__P2452_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAABB__P2452, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  left___24877: undefined,
  top___24880: undefined,
  xn___24883: undefined,
  yn___24894: undefined,
  x___24905: undefined,
  y___24910: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAtKey__P5054(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___24945 = undefined;
    s.bucket___24950 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1273]) return breakpoint(s, 5, 1273, r0);
  case 5:
    s.tmp_0 = sprites_SpriteMap_key__P5053_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 516; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.k___24945 = (r0);
    s.lastBrkId = 1274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1274]) return breakpoint(s, 7, 1274, r0);
  case 7:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___24945);
    s.bucket___24950 = (r0);
    s.lastBrkId = 1275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1275]) return breakpoint(s, 8, 1275, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.bucket___24950);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1276]) return breakpoint(s, 9, 1276, r0);
  case 9:
    r0 = s.arg0.fields["buckets"];
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.k___24945;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_2, s.tmp_3, s.tmp_4);
    s.bucket___24950 = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1277]) return breakpoint(s, 10, 1277, r0);
  case 10:
    r0 = pxsim_Array_.indexOf(s.bucket___24950, s.arg3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1278]) return breakpoint(s, 11, 1278, r0);
  case 11:
    r0 = pxsim_Array__push(s.bucket___24950, s.arg3);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAtKey__P5054.info = {"start":2872,"length":302,"line":82,"column":8,"endLine":89,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAtKey","argumentNames":["this","x","y","sprite"]}

function sprites_SpriteMap_insertAtKey__P5054_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAtKey__P5054, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  k___24945: undefined,
  bucket___24950: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_SpriteMap_clear__P2451(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1269]) return breakpoint(s, 1, 1269, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_clear__P2451.info = {"start":2532,"length":50,"line":72,"column":8,"endLine":74,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"clear","argumentNames":["this"]}

function sprites_SpriteMap_clear__P2451_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_clear__P2451, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_resizeBuckets__P2450(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.maxWidth___24980 = undefined;
    s.maxHeight___24981 = undefined;
    s.sprite___24983 = undefined;
    s.unnamed12666___U3 = undefined;
    s.unnamed12667___U4 = undefined;
    s.tMap___24999 = undefined;
    s.areaWidth___25003 = undefined;
    s.areaHeight___25010 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1253]) return breakpoint(s, 11, 1253, r0);
  case 11:
    s.maxWidth___24980 = (0);
    s.lastBrkId = 1254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1254]) return breakpoint(s, 12, 1254, r0);
  case 12:
    s.maxHeight___24981 = (0);
    s.lastBrkId = 1255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1255]) return breakpoint(s, 13, 1255, r0);
  case 13:
    s.sprite___24983 = (undefined);
    s.unnamed12666___U3 = (s.arg1);
    s.unnamed12667___U4 = (0);
    s.lastBrkId = 1256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1256]) return breakpoint(s, 14, 1256, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed12667___U4;
    r0 = pxsim_Array__length(s.unnamed12666___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12666___U3, s.unnamed12667___U4);
    s.sprite___24983 = (r0);
    s.lastBrkId = 1257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1257]) return breakpoint(s, 15, 1257, r0);
  case 15:
    s.lastBrkId = 1258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1258]) return breakpoint(s, 16, 1258, r0);
  case 16:
    s.tmp_4 = Sprite_width__P2396_mk(s);
    s.tmp_4.arg0 = s.sprite___24983;
    s.callLocIdx = 505; s.pc = 17; return s.tmp_4;
  case 17:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > s.maxWidth___24980);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1259]) return breakpoint(s, 18, 1259, r0);
  case 18:
    s.tmp_5 = Sprite_width__P2396_mk(s);
    s.tmp_5.arg0 = s.sprite___24983;
    s.callLocIdx = 506; s.pc = 19; return s.tmp_5;
  case 19:
    r0 = s.retval;
    s.maxWidth___24980 = (r0);
  case 2:
  case 3:
    s.lastBrkId = 1260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1260]) return breakpoint(s, 20, 1260, r0);
  case 20:
    s.tmp_2 = Sprite_height__P2397_mk(s);
    s.tmp_2.arg0 = s.sprite___24983;
    s.callLocIdx = 507; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.maxHeight___24981);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1261]) return breakpoint(s, 22, 1261, r0);
  case 22:
    s.tmp_3 = Sprite_height__P2397_mk(s);
    s.tmp_3.arg0 = s.sprite___24983;
    s.callLocIdx = 508; s.pc = 23; return s.tmp_3;
  case 23:
    r0 = s.retval;
    s.maxHeight___24981 = (r0);
  case 4:
  case 5:
    r0 = (s.unnamed12667___U4 + 1);
    s.unnamed12667___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed12666___U3 = (undefined);
    s.lastBrkId = 1262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1262]) return breakpoint(s, 24, 1262, r0);
  case 24:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 509; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tMap___24999 = (r0);
    s.lastBrkId = 1263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1263]) return breakpoint(s, 26, 1263, r0);
  case 26:
    r0 = pxsim_numops_toBoolDecr(s.tMap___24999);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = tiles_TileMap_areaWidth__P2742_mk(s);
    s.tmp_0.arg0 = s.tMap___24999;
    s.callLocIdx = 510; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaWidth___25003 = (s.tmp_1);
    s.lastBrkId = 1264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1264]) return breakpoint(s, 28, 1264, r0);
  case 28:
    r0 = pxsim_numops_toBoolDecr(s.tMap___24999);
    if (!r0) { step = 9; continue; }
    s.tmp_0 = tiles_TileMap_areaHeight__P2743_mk(s);
    s.tmp_0.arg0 = s.tMap___24999;
    s.callLocIdx = 511; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaHeight___25010 = (s.tmp_1);
    s.lastBrkId = 1265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1265]) return breakpoint(s, 30, 1265, r0);
  case 30:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaWidth___25003 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxWidth___24980 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 512; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellWidth"] = (s.tmp_1);
    s.lastBrkId = 1266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1266]) return breakpoint(s, 32, 1266, r0);
  case 32:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaHeight___25010 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxHeight___24981 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 513; s.pc = 33; return s.tmp_2;
  case 33:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellHeight"] = (s.tmp_1);
    s.lastBrkId = 1267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1267]) return breakpoint(s, 34, 1267, r0);
  case 34:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaHeight___25010, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rowCount"] = (s.tmp_1);
    s.lastBrkId = 1268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1268]) return breakpoint(s, 35, 1268, r0);
  case 35:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaWidth___25003, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["columnCount"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_resizeBuckets__P2450.info = {"start":1696,"length":826,"line":52,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"resizeBuckets","argumentNames":["this","sprites"]}

function sprites_SpriteMap_resizeBuckets__P2450_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_resizeBuckets__P2450, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  maxWidth___24980: undefined,
  maxHeight___24981: undefined,
  sprite___24983: undefined,
  unnamed12666___U3: undefined,
  unnamed12667___U4: undefined,
  tMap___24999: undefined,
  areaWidth___25003: undefined,
  areaHeight___25010: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_clearObstacles__P2424(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1174]) return breakpoint(s, 1, 1174, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_clearObstacles__P2424.info = {"start":24772,"length":54,"line":811,"column":4,"endLine":813,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"clearObstacles","argumentNames":["this"]}

function Sprite_clearObstacles__P2424_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_clearObstacles__P2424, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx_idiv__P163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[223]) return breakpoint(s, 1, 223, r0);
  case 1:
    r0 = pxsim.Math_.idiv(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_idiv__P163.info = {"start":1279,"length":111,"line":38,"column":4,"endLine":40,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"idiv","argumentNames":["a","b"]}

function Fx_idiv__P163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_idiv__P163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_draw__P2537(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1352]) return breakpoint(s, 1, 1352, r0);
  case 1:
    s.tmp_0 = sprites_SpriteMap_draw__P2449_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 553; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_draw__P2537.info = {"start":2777,"length":39,"line":108,"column":4,"endLine":110,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function ArcadePhysicsEngine_draw__P2537_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_draw__P2537, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_draw__P2449(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___25278 = undefined;
    s.y___25284 = undefined;
    s.left___25290 = undefined;
    s.top___25295 = undefined;
    s.k___25300 = undefined;
    s.b___25305 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2445_VT)) failedCast(r0);
    s.lastBrkId = 1239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1239]) return breakpoint(s, 9, 1239, r0);
  case 9:
    s.x___25278 = (0);
    s.lastBrkId = 1240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1240]) return breakpoint(s, 10, 1240, r0);
  case 10:
  case 1:
    s.lastBrkId = 1241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1241]) return breakpoint(s, 11, 1241, r0);
  case 11:
    r0 = s.arg0.fields["columnCount"];
    s.tmp_1 = r0;
    r0 = (s.x___25278 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1242]) return breakpoint(s, 12, 1242, r0);
  case 12:
    s.y___25284 = (0);
    s.lastBrkId = 1243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1243]) return breakpoint(s, 13, 1243, r0);
  case 13:
  case 2:
    s.lastBrkId = 1244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1244]) return breakpoint(s, 14, 1244, r0);
  case 14:
    r0 = s.arg0.fields["rowCount"];
    s.tmp_1 = r0;
    r0 = (s.y___25284 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1245]) return breakpoint(s, 15, 1245, r0);
  case 15:
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = (s.x___25278 * s.tmp_2);
    s.left___25290 = (r0);
    s.lastBrkId = 1246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1246]) return breakpoint(s, 16, 1246, r0);
  case 16:
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_0 = r0;
    r0 = (s.y___25284 * s.tmp_0);
    s.top___25295 = (r0);
    s.lastBrkId = 1247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1247]) return breakpoint(s, 17, 1247, r0);
  case 17:
    s.tmp_0 = sprites_SpriteMap_key__P5053_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.left___25290;
    s.tmp_0.arg2 = s.top___25295;
    s.callLocIdx = 503; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.k___25300 = (r0);
    s.lastBrkId = 1248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1248]) return breakpoint(s, 19, 1248, r0);
  case 19:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___25300);
    s.b___25305 = (r0);
    s.lastBrkId = 1249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1249]) return breakpoint(s, 20, 1249, r0);
  case 20:
    s.tmp_0 = r0 = s.b___25305;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__length(s.b___25305);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1250]) return breakpoint(s, 21, 1250, r0);
  case 21:
    s.tmp_2 = helpers_imageDrawRect__P1959_mk(s);
    s.tmp_2.arg0 = globals.screen___2032;
    s.tmp_2.arg1 = s.left___25290;
    s.tmp_2.arg2 = s.top___25295;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2.arg3 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2.arg4 = r0;
    s.tmp_2.arg5 = 5;
    s.callLocIdx = 504; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1251]) return breakpoint(s, 23, 1251, r0);
  case 23:
    r0 = (s.y___25284 + 1);
    s.y___25284 = (r0);
    { step = 2; continue; }
  case 7:
    s.lastBrkId = 1252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1252]) return breakpoint(s, 24, 1252, r0);
  case 24:
    r0 = (s.x___25278 + 1);
    s.x___25278 = (r0);
    { step = 1; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_draw__P2449.info = {"start":1122,"length":496,"line":36,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"draw","argumentNames":["this"]}

function sprites_SpriteMap_draw__P2449_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_draw__P2449, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  x___25278: undefined,
  y___25284: undefined,
  left___25290: undefined,
  top___25295: undefined,
  k___25300: undefined,
  b___25305: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_removeSprite__P2536(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1351]) return breakpoint(s, 1, 1351, r0);
  case 1:
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_removeSprite__P2536.info = {"start":2691,"length":80,"line":104,"column":4,"endLine":106,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_removeSprite__P2536_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_removeSprite__P2536, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_addSprite__P2535(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___25342 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2526_VT)) failedCast(r0);
    s.lastBrkId = 1347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1347]) return breakpoint(s, 5, 1347, r0);
  case 5:
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 1348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1348]) return breakpoint(s, 6, 1348, r0);
  case 6:
    s.tmp_0 = game_currentScene__P2998_mk(s);
    s.callLocIdx = 551; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___25342 = (r0);
    s.lastBrkId = 1349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1349]) return breakpoint(s, 8, 1349, r0);
  case 8:
    s.tmp_0 = r0 = s.tm___25342;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_isOnWall__P2757_mk(s);
    s.tmp_1.arg0 = s.tm___25342;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 552; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1350]) return breakpoint(s, 10, 1350, r0);
  case 10:
    s.tmp_3 = r0 = s.arg1;
    r0 = s.tmp_3.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["flags"] = (s.tmp_4);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_addSprite__P2535.info = {"start":2465,"length":220,"line":96,"column":4,"endLine":102,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_addSprite__P2535_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_addSprite__P2535, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tm___25342: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_constructor__P2717(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1758]) return breakpoint(s, 1, 1758, r0);
  case 1:
    r0 = (s.arg0).fields["data"] = (s.arg1);
    s.lastBrkId = 1759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1759]) return breakpoint(s, 2, 1759, r0);
  case 2:
    r0 = (s.arg0).fields["layers"] = (s.arg2);
    s.lastBrkId = 1760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1760]) return breakpoint(s, 3, 1760, r0);
  case 3:
    r0 = (s.arg0).fields["tileset"] = (s.arg3);
    s.lastBrkId = 1761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1761]) return breakpoint(s, 4, 1761, r0);
  case 4:
    s.tmp_0 = tiles_TileMapData_scale__P2721_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg4;
    s.callLocIdx = 826; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 1762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1762]) return breakpoint(s, 6, 1762, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.lastBrkId = 1763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1763]) return breakpoint(s, 7, 1763, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_constructor__P2717.info = {"start":6048,"length":358,"line":204,"column":8,"endLine":212,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","data","layers","tileset","scale"]}

function tiles_TileMapData_constructor__P2717_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_constructor__P2717, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function tiles_TileMapData_scale__P2721(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2716_VT)) failedCast(r0);
    s.lastBrkId = 1767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1767]) return breakpoint(s, 1, 1767, r0);
  case 1:
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.lastBrkId = 1768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1768]) return breakpoint(s, 2, 1768, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cachedTileView"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P2721.info = {"start":6640,"length":102,"line":226,"column":8,"endLine":229,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMapData_scale__P2721_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P2721, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_constructor__P2736(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1785]) return breakpoint(s, 1, 1785, r0);
  case 1:
    r0 = (s.arg0).fields["_layer"] = (1);
    s.lastBrkId = 1786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1786]) return breakpoint(s, 2, 1786, r0);
  case 2:
    s.tmp_0 = tiles_TileMap_scale__P2738_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 832; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 1787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1787]) return breakpoint(s, 4, 1787, r0);
  case 4:
    r0 = pxsim_pxtcore_mkAction(1, tiles_TileMap_inline__P25403);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = scene_createRenderable__P2804_mk(s);
    s.tmp_3.arg0 = -1;
    s.tmp_3.arg1 = s.tmp_0;
    s.tmp_3.arg2 = undefined;
    s.callLocIdx = 834; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["renderable"] = (s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_constructor__P2736.info = {"start":8927,"length":268,"line":300,"column":8,"endLine":308,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","scale"]}

function tiles_TileMap_constructor__P2736_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_constructor__P2736, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_inline__P25403(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = tiles_TileMap_draw__P5166_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 833; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_inline__P25403.info = {"start":9145,"length":25,"line":306,"column":16,"endLine":306,"endColumn":41,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["t","c"]}

function tiles_TileMap_inline__P25403_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_inline__P25403, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_draw__P5166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bitmask___25414 = undefined;
    s.offsetX___25420 = undefined;
    s.offsetY___25425 = undefined;
    s.x0___25430 = undefined;
    s.xn___25437 = undefined;
    s.y0___25454 = undefined;
    s.yn___25461 = undefined;
    s.x___25478 = undefined;
    s.y___25484 = undefined;
    s.index___25490 = undefined;
    s.tile___25497 = undefined;
    s.x___25533 = undefined;
    s.xLine___25539 = undefined;
    s.y___25565 = undefined;
    s.yLine___25571 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1801]) return breakpoint(s, 24, 1801, r0);
  case 24:
    s.tmp_3 = tiles_TileMap_enabled__P2746_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 849; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1802]) return breakpoint(s, 26, 1802, r0);
  case 26:
    { step = 23; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1803]) return breakpoint(s, 27, 1803, r0);
  case 27:
    s.tmp_6 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 850; s.pc = 28; return s.tmp_6;
  case 28:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (1 << s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.bitmask___25414 = (r0);
    s.lastBrkId = 1804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1804]) return breakpoint(s, 29, 1804, r0);
  case 29:
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___25414);
    s.offsetX___25420 = (r0);
    s.lastBrkId = 1805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1805]) return breakpoint(s, 30, 1805, r0);
  case 30:
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___25414);
    s.offsetY___25425 = (r0);
    s.lastBrkId = 1806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1806]) return breakpoint(s, 31, 1806, r0);
  case 31:
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_1 = r0;
    s.tmp_3 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 851; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 852; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.x0___25430 = (r0);
    s.lastBrkId = 1807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1807]) return breakpoint(s, 34, 1807, r0);
  case 34:
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_1 = tiles_TileMapData_width__P2718_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 853; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_7 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 854; s.pc = 37; return s.tmp_7;
  case 37:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 855; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.xn___25437 = (r0);
    s.lastBrkId = 1808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1808]) return breakpoint(s, 38, 1808, r0);
  case 38:
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_1 = r0;
    s.tmp_3 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 856; s.pc = 40; return s.tmp_3;
  case 40:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 857; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.y0___25454 = (r0);
    s.lastBrkId = 1809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1809]) return breakpoint(s, 41, 1809, r0);
  case 41:
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_1 = tiles_TileMapData_height__P2719_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 858; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_7 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 859; s.pc = 44; return s.tmp_7;
  case 44:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 860; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.yn___25461 = (r0);
    s.lastBrkId = 1810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1810]) return breakpoint(s, 45, 1810, r0);
  case 45:
    s.x___25478 = (s.x0___25430);
    s.lastBrkId = 1811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1811]) return breakpoint(s, 46, 1811, r0);
  case 46:
  case 3:
    s.lastBrkId = 1812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1812]) return breakpoint(s, 47, 1812, r0);
  case 47:
    r0 = (s.x___25478 <= s.xn___25437);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1813]) return breakpoint(s, 48, 1813, r0);
  case 48:
    s.y___25484 = (s.y0___25454);
    s.lastBrkId = 1814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1814]) return breakpoint(s, 49, 1814, r0);
  case 49:
  case 4:
    s.lastBrkId = 1815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1815]) return breakpoint(s, 50, 1815, r0);
  case 50:
    r0 = (s.y___25484 <= s.yn___25461);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1816]) return breakpoint(s, 51, 1816, r0);
  case 51:
    s.tmp_1 = tiles_TileMapData_getTile__P2722_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.x___25478;
    s.tmp_1.arg2 = s.y___25484;
    s.callLocIdx = 861; s.pc = 52; return s.tmp_1;
  case 52:
    r0 = s.retval;
    s.index___25490 = (r0);
    s.lastBrkId = 1817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1817]) return breakpoint(s, 53, 1817, r0);
  case 53:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2725_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___25490;
    s.callLocIdx = 862; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.tile___25497 = (r0);
    s.lastBrkId = 1818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1818]) return breakpoint(s, 55, 1818, r0);
  case 55:
    r0 = pxsim_numops_toBoolDecr(s.tile___25497);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1819]) return breakpoint(s, 56, 1819, r0);
  case 56:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_1 = r0 = s.tile___25497;
    r0 = (s.x___25478 - s.x0___25430);
    s.tmp_4 = r0;
    s.tmp_6 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 863; s.pc = 57; return s.tmp_6;
  case 57:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 << s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.offsetX___25420);
    s.tmp_2 = r0;
    r0 = (s.y___25484 - s.y0___25454);
    s.tmp_9 = r0;
    s.tmp_11 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 864; s.pc = 58; return s.tmp_11;
  case 58:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9 << s.tmp_10);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.offsetY___25425);
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_7);
  case 5:
  case 6:
    s.lastBrkId = 1820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1820]) return breakpoint(s, 59, 1820, r0);
  case 59:
    r0 = (s.y___25484 + 1);
    s.y___25484 = (r0);
    { step = 4; continue; }
  case 7:
    s.lastBrkId = 1821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1821]) return breakpoint(s, 60, 1821, r0);
  case 60:
    r0 = (s.x___25478 + 1);
    s.x___25478 = (r0);
    { step = 3; continue; }
  case 8:
    s.lastBrkId = 1822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1822]) return breakpoint(s, 61, 1822, r0);
  case 61:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2966);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 1823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1823]) return breakpoint(s, 62, 1823, r0);
  case 62:
    s.x___25533 = (s.x0___25430);
    s.lastBrkId = 1824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1824]) return breakpoint(s, 63, 1824, r0);
  case 63:
  case 9:
    s.lastBrkId = 1825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1825]) return breakpoint(s, 64, 1825, r0);
  case 64:
    r0 = (s.x___25533 <= s.xn___25437);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1826]) return breakpoint(s, 65, 1826, r0);
  case 65:
    r0 = (s.x___25533 - s.x0___25430);
    s.tmp_2 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 865; s.pc = 66; return s.tmp_4;
  case 66:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetX___25420);
    s.xLine___25539 = (r0);
    s.lastBrkId = 1827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1827]) return breakpoint(s, 67, 1827, r0);
  case 67:
    r0 = (s.xLine___25539 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.xLine___25539;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1828]) return breakpoint(s, 68, 1828, r0);
  case 68:
    s.tmp_4 = helpers_imageDrawLine__P1958_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = s.xLine___25539;
    s.tmp_4.arg2 = 0;
    s.tmp_4.arg3 = s.xLine___25539;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_4.arg4 = r0;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 866; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
  case 12:
  case 13:
    s.lastBrkId = 1829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1829]) return breakpoint(s, 70, 1829, r0);
  case 70:
    r0 = (s.x___25533 + 1);
    s.x___25533 = (r0);
    { step = 9; continue; }
  case 14:
    s.lastBrkId = 1830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1830]) return breakpoint(s, 71, 1830, r0);
  case 71:
    s.y___25565 = (s.y0___25454);
    s.lastBrkId = 1831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1831]) return breakpoint(s, 72, 1831, r0);
  case 72:
  case 15:
    s.lastBrkId = 1832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1832]) return breakpoint(s, 73, 1832, r0);
  case 73:
    r0 = (s.y___25565 <= s.yn___25461);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1833]) return breakpoint(s, 74, 1833, r0);
  case 74:
    r0 = (s.y___25565 - s.y0___25454);
    s.tmp_2 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 867; s.pc = 75; return s.tmp_4;
  case 75:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetY___25425);
    s.yLine___25571 = (r0);
    s.lastBrkId = 1834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1834]) return breakpoint(s, 76, 1834, r0);
  case 76:
    r0 = (s.yLine___25571 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    s.tmp_1 = r0 = s.yLine___25571;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 17:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1835]) return breakpoint(s, 77, 1835, r0);
  case 77:
    s.tmp_4 = helpers_imageDrawLine__P1958_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = 0;
    s.tmp_4.arg2 = s.yLine___25571;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_4.arg3 = r0;
    s.tmp_4.arg4 = s.yLine___25571;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 868; s.pc = 78; return s.tmp_4;
  case 78:
    r0 = s.retval;
  case 18:
  case 19:
    s.lastBrkId = 1836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1836]) return breakpoint(s, 79, 1836, r0);
  case 79:
    r0 = (s.y___25565 + 1);
    s.y___25565 = (r0);
    { step = 15; continue; }
  case 20:
  case 21:
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_draw__P5166.info = {"start":13998,"length":2224,"line":458,"column":8,"endLine":513,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"draw","argumentNames":["this","target","camera"]}

function tiles_TileMap_draw__P5166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_draw__P5166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  bitmask___25414: undefined,
  offsetX___25420: undefined,
  offsetY___25425: undefined,
  x0___25430: undefined,
  xn___25437: undefined,
  y0___25454: undefined,
  yn___25461: undefined,
  x___25478: undefined,
  y___25484: undefined,
  index___25490: undefined,
  tile___25497: undefined,
  x___25533: undefined,
  xLine___25539: undefined,
  y___25565: undefined,
  yLine___25571: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_scale__P2738(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1789]) return breakpoint(s, 3, 1789, r0);
  case 3:
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.lastBrkId = 1790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1790]) return breakpoint(s, 4, 1790, r0);
  case 4:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1791]) return breakpoint(s, 5, 1791, r0);
  case 5:
    s.tmp_1 = tiles_TileMapData_scale__P2721_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 835; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P2738.info = {"start":9270,"length":144,"line":314,"column":8,"endLine":319,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMap_scale__P2738_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P2738, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_data__P2739(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2734_VT)) failedCast(r0);
    s.lastBrkId = 1792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1792]) return breakpoint(s, 1, 1792, r0);
  case 1:
    r0 = s.arg0.fields["_map"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_data__P2739.info = {"start":9424,"length":65,"line":321,"column":8,"endLine":323,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"data","argumentNames":["this"]}
tiles_TileMap_data__P2739.isGetter = true;

function tiles_TileMap_data__P2739_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_data__P2739, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_BackgroundLayer_constructor__P2685(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C2678_VT)) failedCast(r0);
    s.lastBrkId = 1684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1684]) return breakpoint(s, 7, 1684, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 809; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["distance"] = (s.tmp_1);
    s.lastBrkId = 1685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1685]) return breakpoint(s, 9, 1685, r0);
  case 9:
    r0 = (s.arg0).fields["img"] = (s.arg3);
    s.lastBrkId = 1686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1686]) return breakpoint(s, 10, 1686, r0);
  case 10:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    s.lastBrkId = 1687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1687]) return breakpoint(s, 11, 1687, r0);
  case 11:
    r0 = (s.arg0).fields["repeatX"] = (true);
    s.lastBrkId = 1688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1688]) return breakpoint(s, 12, 1688, r0);
  case 12:
    r0 = (s.arg0).fields["repeatY"] = (true);
    s.lastBrkId = 1689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1689]) return breakpoint(s, 13, 1689, r0);
  case 13:
    r0 = (s.arg0).fields["alignX"] = (5);
    s.lastBrkId = 1690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1690]) return breakpoint(s, 14, 1690, r0);
  case 14:
    r0 = (s.arg0).fields["alignY"] = (5);
    s.lastBrkId = 1691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1691]) return breakpoint(s, 15, 1691, r0);
  case 15:
    { step = 6; continue; }
  case 2:
  case 3:
    s.lastBrkId = 1692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1692]) return breakpoint(s, 16, 1692, r0);
  case 16:
    r0 = (s.arg0).fields["repeatX"] = (false);
    s.lastBrkId = 1693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1693]) return breakpoint(s, 17, 1693, r0);
  case 17:
    r0 = (s.arg0).fields["repeatY"] = (true);
    s.lastBrkId = 1694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1694]) return breakpoint(s, 18, 1694, r0);
  case 18:
    r0 = (s.arg0).fields["alignX"] = (s.arg2);
    s.lastBrkId = 1695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1695]) return breakpoint(s, 19, 1695, r0);
  case 19:
    r0 = (s.arg0).fields["alignY"] = (5);
    s.lastBrkId = 1696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1696]) return breakpoint(s, 20, 1696, r0);
  case 20:
    { step = 6; continue; }
  case 4:
  case 5:
    s.lastBrkId = 1697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1697]) return breakpoint(s, 21, 1697, r0);
  case 21:
    r0 = (s.arg0).fields["repeatX"] = (true);
    s.lastBrkId = 1698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1698]) return breakpoint(s, 22, 1698, r0);
  case 22:
    r0 = (s.arg0).fields["repeatY"] = (false);
    s.lastBrkId = 1699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1699]) return breakpoint(s, 23, 1699, r0);
  case 23:
    r0 = (s.arg0).fields["alignX"] = (5);
    s.lastBrkId = 1700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1700]) return breakpoint(s, 24, 1700, r0);
  case 24:
    r0 = (s.arg0).fields["alignY"] = (s.arg2);
    s.lastBrkId = 1701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1701]) return breakpoint(s, 25, 1701, r0);
  case 25:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_constructor__P2685.info = {"start":1936,"length":1117,"line":72,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","distance","alignment","img"]}

function scene_BackgroundLayer_constructor__P2685_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_constructor__P2685, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Camera_right__P2792(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1883]) return breakpoint(s, 1, 1883, r0);
  case 1:
    s.tmp_1 = scene_Camera_offsetX__P2785_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 906; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_right__P2792.info = {"start":1684,"length":71,"line":57,"column":8,"endLine":59,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"right","argumentNames":["this"]}
scene_Camera_right__P2792.isGetter = true;

function scene_Camera_right__P2792_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_right__P2792, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Camera_left__P2791(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1882]) return breakpoint(s, 1, 1882, r0);
  case 1:
    s.tmp_0 = scene_Camera_offsetX__P2785_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 905; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_left__P2791.info = {"start":1620,"length":55,"line":54,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"left","argumentNames":["this"]}
scene_Camera_left__P2791.isGetter = true;

function scene_Camera_left__P2791_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_left__P2791, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Camera_y__P2790(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1881]) return breakpoint(s, 1, 1881, r0);
  case 1:
    s.tmp_1 = scene_Camera_offsetY__P2787_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 904; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_y__P2790.info = {"start":1536,"length":75,"line":51,"column":8,"endLine":53,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"y","argumentNames":["this"]}
scene_Camera_y__P2790.isGetter = true;

function scene_Camera_y__P2790_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_y__P2790, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function scene_Camera_x__P2789(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1880]) return breakpoint(s, 1, 1880, r0);
  case 1:
    s.tmp_1 = scene_Camera_offsetX__P2785_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 903; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_x__P2789.info = {"start":1453,"length":74,"line":48,"column":8,"endLine":50,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"x","argumentNames":["this"]}
scene_Camera_x__P2789.isGetter = true;

function scene_Camera_x__P2789_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_x__P2789, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_factory__P3168(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2707]) return breakpoint(s, 1, 2707, r0);
  case 1:
    r0 = s.arg0.fields["_factory"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
particles_ParticleSource_factory__P3168.info = {"start":7951,"length":76,"line":264,"column":8,"endLine":266,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"factory","argumentNames":["this"]}
particles_ParticleSource_factory__P3168.isGetter = true;

function particles_ParticleSource_factory__P3168_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_factory__P3168, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ParticleSource___draw__P3156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___25685 = undefined;
    s.left___25688 = undefined;
    s.top___25698 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2635]) return breakpoint(s, 9, 2635, r0);
  case 9:
    r0 = s.arg0.fields["head"];
    s.current___25685 = (r0);
    s.lastBrkId = 2636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2636]) return breakpoint(s, 10, 2636, r0);
  case 10:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = s.arg1.fields["drawOffsetX"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1294; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.left___25688 = (s.tmp_3);
    s.lastBrkId = 2637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2637]) return breakpoint(s, 12, 2637, r0);
  case 12:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = s.arg1.fields["drawOffsetY"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1295; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.top___25698 = (s.tmp_3);
    s.lastBrkId = 2638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2638]) return breakpoint(s, 14, 2638, r0);
  case 14:
  case 5:
    s.lastBrkId = 2639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2639]) return breakpoint(s, 15, 2639, r0);
  case 15:
    r0 = pxsim_numops_toBoolDecr(s.current___25685);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2640]) return breakpoint(s, 16, 2640, r0);
  case 16:
    r0 = s.current___25685.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2641]) return breakpoint(s, 17, 2641, r0);
  case 17:
    s.tmp_2 = particles_ParticleSource_drawParticle__P5579_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.current___25685;
    s.tmp_2.arg2 = s.left___25688;
    s.tmp_2.arg3 = s.top___25698;
    s.callLocIdx = 1296; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
  case 6:
  case 7:
    s.lastBrkId = 2642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2642]) return breakpoint(s, 19, 2642, r0);
  case 19:
    r0 = s.current___25685.fields["next"];
    s.current___25685 = (r0);
    { step = 5; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource___draw__P3156.info = {"start":3216,"length":468,"line":112,"column":8,"endLine":122,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"__draw","argumentNames":["this","camera"]}

function particles_ParticleSource___draw__P3156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource___draw__P3156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  current___25685: undefined,
  left___25688: undefined,
  top___25698: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_drawParticle__P5579(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3150_VT)) failedCast(r0);
    s.lastBrkId = 2715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2715]) return breakpoint(s, 1, 2715, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory__C3186_v1_4_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_1 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 1318; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_2 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg3;
    s.callLocIdx = 1319; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C3186_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawParticle;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_drawParticle__P5579.info = {"start":8615,"length":174,"line":287,"column":8,"endLine":289,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"drawParticle","argumentNames":["this","p","screenLeft","screenTop"]}

function particles_ParticleSource_drawParticle__P5579_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_drawParticle__P5579, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_ParticleFactory_drawParticle__P3189(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C3186_VT)) failedCast(r0);
    s.lastBrkId = 2786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2786]) return breakpoint(s, 1, 2786, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___2032;
    s.tmp_2 = Fx_toInt__P172_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1355; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P172_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1356; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_drawParticle__P3189.info = {"start":2265,"length":118,"line":85,"column":8,"endLine":87,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_ParticleFactory_drawParticle__P3189_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_drawParticle__P3189, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function game_SplashDialog_drawTextCore__P2941(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scrollMax___25748 = undefined;
    s.left___25791 = undefined;
    s.ysub___25836 = undefined;
    s.left___25847 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2931_VT)) failedCast(r0);
    s.lastBrkId = 2132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2132]) return breakpoint(s, 15, 2132, r0);
  case 15:
    s.tmp_0 = Math_max__P130_mk(s);
    r0 = s.arg0.fields["maxOffset"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxSubOffset"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1023; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.scrollMax___25748 = (r0);
    s.lastBrkId = 2133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2133]) return breakpoint(s, 17, 2133, r0);
  case 17:
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2134]) return breakpoint(s, 18, 2134, r0);
  case 18:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["timer"];
    s.tmp_4 = r0;
    s.tmp_6 = control_EventContext_deltaTime__P400_mk(s);
    s.tmp_7 = game_eventContext__P3001_mk(s);
    s.callLocIdx = 1024; s.pc = 20; return s.tmp_7;
  case 20:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1025; s.pc = 19; return s.tmp_6;
  case 19:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["timer"] = (s.tmp_3);
    s.lastBrkId = 2135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2135]) return breakpoint(s, 21, 2135, r0);
  case 21:
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2136]) return breakpoint(s, 22, 2136, r0);
  case 22:
    r0 = s.arg0.fields["offset"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2137]) return breakpoint(s, 23, 2137, r0);
  case 23:
    r0 = (s.arg0).fields["offset"] = (0);
    s.lastBrkId = 2138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2138]) return breakpoint(s, 24, 2138, r0);
  case 24:
    r0 = (s.arg0).fields["timer"] = (2);
  case 1:
  case 2:
  case 3:
  case 4:
    { step = 8; continue; }
  case 5:
    s.lastBrkId = 2139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2139]) return breakpoint(s, 25, 2139, r0);
  case 25:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["offset"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["offset"] = (s.tmp_1);
    s.lastBrkId = 2140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2140]) return breakpoint(s, 26, 2140, r0);
  case 26:
    r0 = s.arg0.fields["offset"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= s.scrollMax___25748);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2141]) return breakpoint(s, 27, 2141, r0);
  case 27:
    r0 = (s.arg0).fields["offset"] = (s.scrollMax___25748);
    s.lastBrkId = 2142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2142]) return breakpoint(s, 28, 2142, r0);
  case 28:
    r0 = (s.arg0).fields["timer"] = (2);
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 2143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2143]) return breakpoint(s, 29, 2143, r0);
  case 29:
    r0 = s.arg0.fields["maxOffset"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 2144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2144]) return breakpoint(s, 30, 2144, r0);
  case 30:
    r0 = s.arg0.fields["image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["text"];
    s.tmp_8 = r0;
    r0 = pxsim_String_.length(s.tmp_8);
    s.tmp_7 = r0;
    s.tmp_10 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "charWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["charWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["charWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 1026; s.pc = 31; return s.tmp_10; }
    }
  case 31:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_7 * s.tmp_9);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.left___25791 = (r0);
    s.lastBrkId = 2145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2145]) return breakpoint(s, 32, 2145, r0);
  case 32:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["text"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.left___25791;
    s.tmp_0.arg3 = 10;
    r0 = s.arg0.fields["textColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1027; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 2146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2146]) return breakpoint(s, 34, 2146, r0);
  case 34:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["text"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["offset"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 10;
    r0 = s.arg0.fields["textColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1028; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
  case 10:
    s.lastBrkId = 2147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2147]) return breakpoint(s, 36, 2147, r0);
  case 36:
    r0 = s.arg0.fields["subtext"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 2148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2148]) return breakpoint(s, 37, 2148, r0);
  case 37:
    s.tmp_3 = if_charHeight_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1029; s.pc = 38; return s.tmp_3; }
    }
  case 38:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (10 + s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 2);
    s.ysub___25836 = (r0);
    s.lastBrkId = 2149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2149]) return breakpoint(s, 39, 2149, r0);
  case 39:
    r0 = s.arg0.fields["maxSubOffset"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 2150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2150]) return breakpoint(s, 40, 2150, r0);
  case 40:
    r0 = s.arg0.fields["image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["subtext"];
    s.tmp_8 = r0;
    r0 = pxsim_String_.length(s.tmp_8);
    s.tmp_7 = r0;
    s.tmp_10 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "charWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["charWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["charWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 1030; s.pc = 41; return s.tmp_10; }
    }
  case 41:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_7 * s.tmp_9);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.left___25847 = (r0);
    s.lastBrkId = 2151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2151]) return breakpoint(s, 42, 2151, r0);
  case 42:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["subtext"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.left___25847;
    s.tmp_0.arg3 = s.ysub___25836;
    r0 = s.arg0.fields["textColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1031; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 2152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2152]) return breakpoint(s, 44, 2152, r0);
  case 44:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["subtext"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    s.tmp_3 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["offset"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["maxSubOffset"];
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 1032; s.pc = 46; return s.tmp_3;
  case 46:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.ysub___25836;
    r0 = s.arg0.fields["textColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1033; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 2153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2153]) return breakpoint(s, 47, 2153, r0);
  case 47:
    s.tmp_0 = game_BaseDialog_drawBorder__P5199_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1034; s.pc = 48; return s.tmp_0;
  case 48:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_drawTextCore__P2941.info = {"start":9958,"length":1616,"line":306,"column":8,"endLine":344,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawTextCore","argumentNames":["this"]}

function game_SplashDialog_drawTextCore__P2941_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_drawTextCore__P2941, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  scrollMax___25748: undefined,
  left___25791: undefined,
  ysub___25836: undefined,
  left___25847: undefined,
  arg0: undefined,
} }





function game_BaseDialog_setText__P2917(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2902_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_setText__P2917.info = {"start":2302,"length":77,"line":80,"column":8,"endLine":82,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setText","argumentNames":["this","rawString"]}

function game_BaseDialog_setText__P2917_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_setText__P2917, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_toString__P2473(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2462_VT)) failedCast(r0);
    s.lastBrkId = 1316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1316]) return breakpoint(s, 1, 1316, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    s.tmp_4 = sprites_SpriteSet_length__P2465_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 531; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " sprites");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_toString__P2473.info = {"start":2586,"length":66,"line":97,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteSet_toString__P2473_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_toString__P2473, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_length__P2465(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2462_VT)) failedCast(r0);
    s.lastBrkId = 1302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1302]) return breakpoint(s, 1, 1302, r0);
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_SpriteSet_length__P2465.info = {"start":625,"length":65,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"length","argumentNames":["this"]}
sprites_SpriteSet_length__P2465.isGetter = true;

function sprites_SpriteSet_length__P2465_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_length__P2465, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Hitbox_right__P2218(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[961]) return breakpoint(s, 1, 961, r0);
  case 1:
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["width"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = game_Hitbox_left__P2216_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 229; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 230; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 231; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_right__P2218.info = {"start":638,"length":138,"line":26,"column":8,"endLine":31,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"right","argumentNames":["this"]}
game_Hitbox_right__P2218.isGetter = true;

function game_Hitbox_right__P2218_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_right__P2218, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_Hitbox_left__P2216(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2208_VT)) failedCast(r0);
    s.lastBrkId = 959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[959]) return breakpoint(s, 1, 959, r0);
  case 1:
    s.tmp_0 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["ox"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_x"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 227; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_left__P2216.info = {"start":471,"length":74,"line":18,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"left","argumentNames":["this"]}
game_Hitbox_left__P2216.isGetter = true;

function game_Hitbox_left__P2216_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_left__P2216, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_toString__P2433(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1201]) return breakpoint(s, 1, 1201, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_9 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_11 = r0;
    if ((s.tmp_11) && (s.tmp_11).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_11);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_11) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, "(");
    s.tmp_7 = r0;
    s.tmp_14 = Sprite_x__P2353_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 456; s.pc = 3; return s.tmp_14;
  case 3:
    r0 = s.retval;
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_12);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, ",");
    s.tmp_5 = r0;
    s.tmp_17 = Sprite_y__P2355_mk(s);
    s.tmp_17.arg0 = s.arg0;
    s.callLocIdx = 457; s.pc = 5; return s.tmp_17;
  case 5:
    r0 = s.retval;
    s.tmp_16 = r0;
    if ((s.tmp_16) && (s.tmp_16).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_16);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_16) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_15);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ")->(");
    s.tmp_3 = r0;
    s.tmp_20 = Sprite_vx__P2357_mk(s);
    s.tmp_20.arg0 = s.arg0;
    s.callLocIdx = 458; s.pc = 7; return s.tmp_20;
  case 7:
    r0 = s.retval;
    s.tmp_19 = r0;
    if ((s.tmp_19) && (s.tmp_19).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_19);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_19) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_18);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_23 = Sprite_vy__P2359_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 459; s.pc = 9; return s.tmp_23;
  case 9:
    r0 = s.retval;
    s.tmp_22 = r0;
    if ((s.tmp_22) && (s.tmp_22).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_22);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_22) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_21 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_21);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
Sprite_toString__P2433.info = {"start":33951,"length":93,"line":1064,"column":4,"endLine":1066,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"toString","argumentNames":["this"]}

function Sprite_toString__P2433_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_toString__P2433, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  arg0: undefined,
} }





function Sprite___update__P2415(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1143]) return breakpoint(s, 11, 1143, r0);
  case 11:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1144]) return breakpoint(s, 12, 1144, r0);
  case 12:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.arg2 * 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 1145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1145]) return breakpoint(s, 13, 1145, r0);
  case 13:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1146]) return breakpoint(s, 14, 1146, r0);
  case 14:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 1147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1147]) return breakpoint(s, 15, 1147, r0);
  case 15:
    s.tmp_0 = Sprite__destroyCore__P2428_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 394; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 1148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1148]) return breakpoint(s, 17, 1148, r0);
  case 17:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_2 = Sprite_isOutOfScreen__P2413_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 395; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1149]) return breakpoint(s, 19, 1149, r0);
  case 19:
    s.tmp_4 = Sprite_destroy__P2427_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = undefined;
    s.tmp_4.arg2 = undefined;
    s.callLocIdx = 396; s.pc = 20; return s.tmp_4;
  case 20:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1150]) return breakpoint(s, 21, 1150, r0);
  case 21:
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1151]) return breakpoint(s, 22, 1151, r0);
  case 22:
    s.tmp_1 = sprites_BaseSpriteSayRenderer__C2259_v1_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSpriteSayRenderer__C2259_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.update;
    s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___update__P2415.info = {"start":18662,"length":483,"line":628,"column":4,"endLine":642,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function Sprite___update__P2415_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___update__P2415, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isOutOfScreen__P2413(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___25969 = undefined;
    s.oy___25977 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1131]) return breakpoint(s, 11, 1131, r0);
  case 11:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1.fields["drawOffsetX"];
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.ox___25969 = (s.tmp_2);
    s.lastBrkId = 1132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1132]) return breakpoint(s, 12, 1132, r0);
  case 12:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetY"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___25977 = (s.tmp_2);
    s.lastBrkId = 1133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1133]) return breakpoint(s, 13, 1133, r0);
  case 13:
    s.tmp_3 = Sprite_right__P2400_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 385; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.ox___25969);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = Sprite_bottom__P2404_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 386; s.pc = 15; return s.tmp_6;
  case 15:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.oy___25977);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_7;
    { step = 8; continue; }
  case 7:
    s.tmp_10 = Sprite_left__P2398_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 387; s.pc = 16; return s.tmp_10;
  case 16:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - s.ox___25969);
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2032);
    s.tmp_11 = r0;
    r0 = (s.tmp_8 > s.tmp_11);
  case 8:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBool(s.tmp_12);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_12;
    { step = 10; continue; }
  case 9:
    s.tmp_15 = Sprite_top__P2402_mk(s);
    s.tmp_15.arg0 = s.arg0;
    s.callLocIdx = 388; s.pc = 17; return s.tmp_15;
  case 17:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = (s.tmp_14 - s.oy___25977);
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2032);
    s.tmp_16 = r0;
    r0 = (s.tmp_13 > s.tmp_16);
  case 10:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isOutOfScreen__P2413.info = {"start":17830,"length":358,"line":607,"column":4,"endLine":611,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isOutOfScreen","argumentNames":["this","camera"]}

function Sprite_isOutOfScreen__P2413_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isOutOfScreen__P2413, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  ox___25969: undefined,
  oy___25977: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSpriteSayRenderer_update__P2262(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2259_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_update__P2262.info = {"start":250,"length":68,"line":9,"column":8,"endLine":11,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"update","argumentNames":["this","dt","camera","owner"]}

function sprites_BaseSpriteSayRenderer_update__P2262_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_update__P2262, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_right__P2401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1108]) return breakpoint(s, 1, 1108, r0);
  case 1:
    s.tmp_0 = Sprite_left__P2399_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_width__P2396_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 365; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 366; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_right__P2401.info = {"start":11367,"length":71,"line":410,"column":4,"endLine":412,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this","value"]}

function Sprite_right__P2401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P2401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_right__P2400(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1107]) return breakpoint(s, 1, 1107, r0);
  case 1:
    s.tmp_1 = Sprite_left__P2398_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 363; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_width__P2396_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 364; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_right__P2400.info = {"start":11218,"length":57,"line":405,"column":4,"endLine":407,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this"]}
Sprite_right__P2400.isGetter = true;

function Sprite_right__P2400_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P2400, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_data__P2376(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1064]) return breakpoint(s, 1, 1064, r0);
  case 1:
    r0 = (s.arg0).fields["_data"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_data__P2376.info = {"start":6536,"length":56,"line":241,"column":4,"endLine":243,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this","value"]}

function Sprite_data__P2376_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P2376, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_data__P2375(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1061]) return breakpoint(s, 3, 1061, r0);
  case 3:
    r0 = s.arg0.fields["_data"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1062]) return breakpoint(s, 4, 1062, r0);
  case 4:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_data"] = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1063]) return breakpoint(s, 5, 1063, r0);
  case 5:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_data__P2375.info = {"start":6438,"length":92,"line":236,"column":4,"endLine":239,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this"]}
Sprite_data__P2375.isGetter = true;

function Sprite_data__P2375_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P2375, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_BaseSprite___update__P2102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2094_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___update__P2102.info = {"start":1027,"length":46,"line":45,"column":8,"endLine":45,"endColumn":54,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function sprites_BaseSprite___update__P2102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___update__P2102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_BaseSprite___draw__P2100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2094_VT)) failedCast(r0);
    s.lastBrkId = 739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[739]) return breakpoint(s, 3, 739, r0);
  case 3:
    s.tmp_1 = sprites_BaseSprite__C2094_v0_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSprite__C2094_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.__visible;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[740]) return breakpoint(s, 5, 740, r0);
  case 5:
    s.tmp_2 = sprites_BaseSprite__C2094_v2_2_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    if (!checkSubtype(s.tmp_2.arg0, sprites_BaseSprite__C2094_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.__drawCore;
    s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___draw__P2100.info = {"start":840,"length":131,"line":37,"column":8,"endLine":41,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__draw","argumentNames":["this","camera"]}

function sprites_BaseSprite___draw__P2100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___draw__P2100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___drawCore__P2101(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2094_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___drawCore__P2101.info = {"start":981,"length":36,"line":43,"column":8,"endLine":43,"endColumn":44,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function sprites_BaseSprite___drawCore__P2101_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___drawCore__P2101, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___visible__P2097(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2094_VT)) failedCast(r0);
    s.lastBrkId = 734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[734]) return breakpoint(s, 1, 734, r0);
  case 1:
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___visible__P2097.info = {"start":524,"length":57,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__visible","argumentNames":["this"]}

function sprites_BaseSprite___visible__P2097_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___visible__P2097, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function RotatingScreens_backImage__P4431(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3440]) return breakpoint(s, 1, 3440, r0);
  case 1:
    r0 = (s.arg0).fields["_backImage"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
RotatingScreens_backImage__P4431.info = {"start":15367,"length":74,"line":539,"column":4,"endLine":541,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"backImage","argumentNames":["this","value"]}

function RotatingScreens_backImage__P4431_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_backImage__P4431, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function RotatingScreens_backImage__P4430(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, RotatingScreens__C4428_VT)) failedCast(r0);
    s.lastBrkId = 3439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3439]) return breakpoint(s, 1, 3439, r0);
  case 1:
    r0 = s.arg0.fields["_backImage"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
RotatingScreens_backImage__P4430.info = {"start":15016,"length":68,"line":528,"column":4,"endLine":530,"endColumn":5,"fileName":"pxt_modules/pxt-arcade-info-screens/info-screens.ts","functionName":"backImage","argumentNames":["this"]}
RotatingScreens_backImage__P4430.isGetter = true;

function RotatingScreens_backImage__P4430_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: RotatingScreens_backImage__P4430, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_AnyButton_isPressed__P5027(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctrl___26224 = undefined;
    s.b___26228 = undefined;
    s.unnamed12658___U2 = undefined;
    s.unnamed12659___U3 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_AnyButton__C5019_VT)) failedCast(r0);
    s.lastBrkId = 860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[860]) return breakpoint(s, 6, 860, r0);
  case 6:
    s.tmp_0 = controller__player1__P2128_mk(s);
    s.callLocIdx = 203; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.ctrl___26224 = (r0);
    s.lastBrkId = 861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[861]) return breakpoint(s, 8, 861, r0);
  case 8:
    s.b___26228 = (undefined);
    r0 = s.ctrl___26224.fields["buttons"];
    s.unnamed12658___U2 = (r0);
    s.unnamed12659___U3 = (0);
    s.lastBrkId = 862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[862]) return breakpoint(s, 9, 862, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed12659___U3;
    r0 = pxsim_Array__length(s.unnamed12658___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed12658___U2, s.unnamed12659___U3);
    s.b___26228 = (r0);
    s.lastBrkId = 863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[863]) return breakpoint(s, 10, 863, r0);
  case 10:
    s.lastBrkId = 864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[864]) return breakpoint(s, 11, 864, r0);
  case 11:
    s.tmp_3 = controller_Button__C2189_v0_1_mk(s);
    s.tmp_3.arg0 = s.b___26228;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C2189_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[865]) return breakpoint(s, 13, 865, r0);
  case 13:
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed12659___U3 + 1);
    s.unnamed12659___U3 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed12658___U2 = (undefined);
    s.lastBrkId = 866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[866]) return breakpoint(s, 14, 866, r0);
  case 14:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_AnyButton_isPressed__P5027.info = {"start":15724,"length":202,"line":469,"column":8,"endLine":476,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_AnyButton_isPressed__P5027_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_AnyButton_isPressed__P5027, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ctrl___26224: undefined,
  b___26228: undefined,
  unnamed12658___U2: undefined,
  unnamed12659___U3: undefined,
  arg0: undefined,
} }





function controller_Button_toString__P2194(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2189_VT)) failedCast(r0);
    s.lastBrkId = 878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[878]) return breakpoint(s, 3, 878, r0);
  case 3:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "down";
    { step = 2; continue; }
  case 1:
    r0 = "up";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("btn ", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, " ");
    s.tmp_2 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_6);
    return leave(s, r0)
  default: oops()
} } }
controller_Button_toString__P2194.info = {"start":1894,"length":100,"line":73,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"toString","argumentNames":["this"]}

function controller_Button_toString__P2194_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_toString__P2194, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function sprites_BaseSpriteSayRenderer_constructor__P2260(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2259_VT)) failedCast(r0);
    r0 = (s.arg0).fields["text"] = (s.arg1);
    r0 = (s.arg0).fields["fgColor"] = (s.arg2);
    r0 = (s.arg0).fields["bgColor"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_constructor__P2260.info = {"start":69,"length":92,"line":2,"column":8,"endLine":3,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"inline","argumentNames":["this","text","fgColor","bgColor"]}

function sprites_BaseSpriteSayRenderer_constructor__P2260_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_constructor__P2260, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_StaticObstacle_right__P2509(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2497_VT)) failedCast(r0);
    s.lastBrkId = 1332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1332]) return breakpoint(s, 1, 1332, r0);
  case 1:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    s.tmp_2 = sprites_StaticObstacle_width__P2507_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 537; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_right__P2509.info = {"start":1251,"length":74,"line":56,"column":8,"endLine":58,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"right","argumentNames":["this"]}
sprites_StaticObstacle_right__P2509.isGetter = true;

function sprites_StaticObstacle_right__P2509_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_right__P2509, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_width__P2507(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2497_VT)) failedCast(r0);
    s.lastBrkId = 1331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1331]) return breakpoint(s, 1, 1331, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_width__P2507.info = {"start":1088,"length":68,"line":48,"column":8,"endLine":50,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"width","argumentNames":["this"]}
sprites_StaticObstacle_width__P2507.isGetter = true;

function sprites_StaticObstacle_width__P2507_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_width__P2507, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_height__P2506(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2497_VT)) failedCast(r0);
    s.lastBrkId = 1330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1330]) return breakpoint(s, 1, 1330, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_height__P2506.info = {"start":1008,"length":70,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"height","argumentNames":["this"]}
sprites_StaticObstacle_height__P2506.isGetter = true;

function sprites_StaticObstacle_height__P2506_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_height__P2506, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_y__P2505(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2497_VT)) failedCast(r0);
    s.lastBrkId = 1329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1329]) return breakpoint(s, 1, 1329, r0);
  case 1:
    r0 = s.arg0.fields["top"];
    s.tmp_0 = r0;
    s.tmp_3 = sprites_StaticObstacle_height__P2506_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 536; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_y__P2505.info = {"start":921,"length":77,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"y","argumentNames":["this"]}
sprites_StaticObstacle_y__P2505.isGetter = true;

function sprites_StaticObstacle_y__P2505_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_y__P2505, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_x__P2504(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2497_VT)) failedCast(r0);
    s.lastBrkId = 1328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1328]) return breakpoint(s, 1, 1328, r0);
  case 1:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    s.tmp_3 = sprites_StaticObstacle_width__P2507_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 535; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_x__P2504.info = {"start":834,"length":77,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"x","argumentNames":["this"]}
sprites_StaticObstacle_x__P2504.isGetter = true;

function sprites_StaticObstacle_x__P2504_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_x__P2504, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_right__P2701(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1756]) return breakpoint(s, 1, 1756, r0);
  case 1:
    s.tmp_1 = tiles_Location_left__P2699_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 821; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_5 = tiles_Location_tileMap__P2694_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 822; s.pc = 4; return s.tmp_5;
  case 4:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 823; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_right__P2701.info = {"start":2004,"length":89,"line":75,"column":8,"endLine":77,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"right","argumentNames":["this"]}
tiles_Location_right__P2701.isGetter = true;

function tiles_Location_right__P2701_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_right__P2701, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function tiles_Location_top__P2700(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1755]) return breakpoint(s, 1, 1755, r0);
  case 1:
    r0 = s.arg0.fields["_row"];
    s.tmp_0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_3 = tiles_Location_tileMap__P2694_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 819; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 820; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 << s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_top__P2700.info = {"start":1791,"length":83,"line":68,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"top","argumentNames":["this"]}
tiles_Location_top__P2700.isGetter = true;

function tiles_Location_top__P2700_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_top__P2700, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_left__P2699(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1754]) return breakpoint(s, 1, 1754, r0);
  case 1:
    r0 = s.arg0.fields["_col"];
    s.tmp_0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_3 = tiles_Location_tileMap__P2694_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 817; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 818; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 << s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_left__P2699.info = {"start":1579,"length":84,"line":61,"column":8,"endLine":63,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"left","argumentNames":["this"]}
tiles_Location_left__P2699.isGetter = true;

function tiles_Location_left__P2699_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_left__P2699, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_y__P2698(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___26297 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1752]) return breakpoint(s, 1, 1752, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P2694_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 815; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 816; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scale___26297 = (r0);
    s.lastBrkId = 1753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1753]) return breakpoint(s, 4, 1753, r0);
  case 4:
    r0 = s.arg0.fields["_row"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___26297);
    s.tmp_0 = r0;
    r0 = (s.scale___26297 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_y__P2698.info = {"start":1315,"length":135,"line":53,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"y","argumentNames":["this"]}
tiles_Location_y__P2698.isGetter = true;

function tiles_Location_y__P2698_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_y__P2698, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___26297: undefined,
  arg0: undefined,
} }





function tiles_Location_x__P2697(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___26313 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2692_VT)) failedCast(r0);
    s.lastBrkId = 1750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1750]) return breakpoint(s, 1, 1750, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_scale__P2737_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P2694_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 813; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 814; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scale___26313 = (r0);
    s.lastBrkId = 1751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1751]) return breakpoint(s, 4, 1751, r0);
  case 4:
    r0 = s.arg0.fields["_col"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___26313);
    s.tmp_0 = r0;
    r0 = (s.scale___26313 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_x__P2697.info = {"start":1054,"length":135,"line":45,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"x","argumentNames":["this"]}
tiles_Location_x__P2697.isGetter = true;

function tiles_Location_x__P2697_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_x__P2697, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___26313: undefined,
  arg0: undefined,
} }





function animation_Path_constructor__P3348(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, animation_Path__C3346_VT)) failedCast(r0);
    r0 = (s.arg0).fields["path"] = (s.arg1);
    s.lastBrkId = 2901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2901]) return breakpoint(s, 5, 2901, r0);
  case 5:
    r0 = (s.arg0).fields["strIndex"] = (0);
    s.lastBrkId = 2902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2902]) return breakpoint(s, 6, 2902, r0);
  case 6:
    r0 = (s.arg0).fields["length"] = (0);
    s.lastBrkId = 2903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2903]) return breakpoint(s, 7, 2903, r0);
  case 7:
  case 1:
    s.lastBrkId = 2904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2904]) return breakpoint(s, 8, 2904, r0);
  case 8:
    r0 = s.arg0.fields["strIndex"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["path"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2905]) return breakpoint(s, 9, 2905, r0);
  case 9:
    s.tmp_4 = animation_Path_readNextCommand__P5659_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 1425; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2906]) return breakpoint(s, 11, 2906, r0);
  case 11:
    r0 = s.arg0.fields["currentCommand"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2907]) return breakpoint(s, 12, 2907, r0);
  case 12:
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["length"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["length"] = (s.tmp_2);
  case 2:
  case 3:
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 2908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2908]) return breakpoint(s, 13, 2908, r0);
  case 13:
    s.tmp_0 = animation_Path_reset__P3349_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1426; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
animation_Path_constructor__P3348.info = {"start":1081,"length":380,"line":46,"column":8,"endLine":57,"endColumn":9,"fileName":"pxt_modules/game/animation.ts","functionName":"inline","argumentNames":["this","path"]}

function animation_Path_constructor__P3348_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: animation_Path_constructor__P3348, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ShapeFactory_drawParticle__P3215(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pImage___26351 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C3212_VT)) failedCast(r0);
    s.lastBrkId = 2819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2819]) return breakpoint(s, 1, 2819, r0);
  case 1:
    s.tmp_1 = Math_FastRandom_pickRandom__P3063_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["sources"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1385; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.pImage___26351 = (r0);
    s.lastBrkId = 2820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2820]) return breakpoint(s, 3, 2820, r0);
  case 3:
    r0 = s.arg1.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.pImage___26351, 15, s.tmp_0);
    s.lastBrkId = 2821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2821]) return breakpoint(s, 4, 2821, r0);
  case 4:
    s.tmp_0 = r0 = globals.screen___2032;
    s.tmp_1 = r0 = s.pImage___26351;
    s.tmp_3 = Fx_toInt__P172_mk(s);
    s.tmp_4 = Fx_sub__P159_mk(s);
    s.tmp_4.arg0 = s.arg2;
    r0 = s.arg0.fields["ox"];
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1386; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1387; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = Fx_toInt__P172_mk(s);
    s.tmp_7 = Fx_sub__P159_mk(s);
    s.tmp_7.arg0 = s.arg3;
    r0 = s.arg0.fields["oy"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 1388; s.pc = 8; return s.tmp_7;
  case 8:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1389; s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_drawParticle__P3215.info = {"start":7172,"length":323,"line":229,"column":8,"endLine":237,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_ShapeFactory_drawParticle__P3215_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_drawParticle__P3215, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  pImage___26351: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Math_FastRandom_pickRandom__P3063(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C3058_VT)) failedCast(r0);
    s.lastBrkId = 2379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2379]) return breakpoint(s, 6, 2379, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2380]) return breakpoint(s, 7, 2380, r0);
  case 7:
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2381]) return breakpoint(s, 8, 2381, r0);
  case 8:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = Math_FastRandom_randomRange__P3062_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = 0;
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.tmp_6.arg2 = r0;
    s.callLocIdx = 1114; s.pc = 9; return s.tmp_6;
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_pickRandom__P3063.info = {"start":2358,"length":192,"line":70,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"pickRandom","argumentNames":["this","list"]}

function Math_FastRandom_pickRandom__P3063_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_pickRandom__P3063, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_drawParticle__P3203(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.col___26397 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C3196_VT)) failedCast(r0);
    s.lastBrkId = 2811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2811]) return breakpoint(s, 5, 2811, r0);
  case 5:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 500);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 4;
    { step = 4; continue; }
  case 1:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 250);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = 5;
    { step = 3; continue; }
  case 2:
    r0 = 1;
  case 3:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.col___26397 = (s.tmp_5);
    s.lastBrkId = 2812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2812]) return breakpoint(s, 6, 2812, r0);
  case 6:
    s.tmp_0 = r0 = globals.screen___2032;
    s.tmp_2 = Fx_toInt__P172_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1380; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P172_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1381; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, s.col___26397);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_drawParticle__P3203.info = {"start":4770,"length":222,"line":158,"column":8,"endLine":163,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_AreaFactory_drawParticle__P3203_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_drawParticle__P3203, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  col___26397: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_SprayFactory_drawParticle__P3193(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3190_VT)) failedCast(r0);
    s.lastBrkId = 2796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2796]) return breakpoint(s, 1, 2796, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___2032;
    s.tmp_2 = Fx_toInt__P172_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1365; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P172_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1366; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_drawParticle__P3193.info = {"start":3194,"length":118,"line":115,"column":8,"endLine":117,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_SprayFactory_drawParticle__P3193_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_drawParticle__P3193, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Renderable___drawCore__P2802(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2799_VT)) failedCast(r0);
    s.lastBrkId = 1908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1908]) return breakpoint(s, 1, 1908, r0);
  case 1:
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.screen___2032;
    s.tmp_0.arg2 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 921; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 921; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 921; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 921; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___drawCore__P2802.info = {"start":390,"length":86,"line":14,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function scene_Renderable___drawCore__P2802_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___drawCore__P2802, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Renderable___visible__P2801(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2799_VT)) failedCast(r0);
    s.lastBrkId = 1907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1907]) return breakpoint(s, 1, 1907, r0);
  case 1:
    s.tmp_0 = if_shouldBeVisible_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "shouldBeVisible"), 1);
      s.callLocIdx = 920; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["shouldBeVisible"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["shouldBeVisible"], 1); s.callLocIdx = 920; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 920; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 920; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___visible__P2801.info = {"start":305,"length":75,"line":10,"column":8,"endLine":12,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__visible","argumentNames":["this"]}

function scene_Renderable___visible__P2801_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___visible__P2801, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Camera_top__P2793(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2780_VT)) failedCast(r0);
    s.lastBrkId = 1884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1884]) return breakpoint(s, 1, 1884, r0);
  case 1:
    s.tmp_0 = scene_Camera_offsetY__P2787_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 907; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_top__P2793.info = {"start":1764,"length":54,"line":60,"column":8,"endLine":62,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"top","argumentNames":["this"]}
scene_Camera_top__P2793.isGetter = true;

function scene_Camera_top__P2793_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_top__P2793, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite___drawCore__P2414(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___26439 = undefined;
    s.oy___26447 = undefined;
    s.l___26455 = undefined;
    s.t___26461 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1134]) return breakpoint(s, 8, 1134, r0);
  case 8:
    s.tmp_0 = Sprite_drawSay__P5047_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 389; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 1135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1135]) return breakpoint(s, 10, 1135, r0);
  case 10:
    s.tmp_1 = Sprite_isOutOfScreen__P2413_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 390; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1136]) return breakpoint(s, 12, 1136, r0);
  case 12:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1137]) return breakpoint(s, 13, 1137, r0);
  case 13:
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 512);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetX"];
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.ox___26439 = (s.tmp_4);
    s.lastBrkId = 1138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1138]) return breakpoint(s, 14, 1138, r0);
  case 14:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = 0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg1.fields["drawOffsetY"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___26447 = (s.tmp_2);
    s.lastBrkId = 1139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1139]) return breakpoint(s, 15, 1139, r0);
  case 15:
    s.tmp_2 = Sprite_left__P2398_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 391; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.ox___26439);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.l___26455 = (r0);
    s.lastBrkId = 1140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1140]) return breakpoint(s, 17, 1140, r0);
  case 17:
    s.tmp_2 = Sprite_top__P2402_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 392; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.oy___26447);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.t___26461 = (r0);
    s.lastBrkId = 1141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1141]) return breakpoint(s, 19, 1141, r0);
  case 19:
    s.tmp_0 = Sprite__C2340_v6_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.l___26455;
    s.tmp_0.arg2 = s.t___26461;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2340_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawSprite;
    s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1142]) return breakpoint(s, 21, 1142, r0);
  case 21:
    s.tmp_0 = Sprite_drawDebug__P5048_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.l___26455;
    s.tmp_0.arg2 = s.t___26461;
    s.tmp_0.arg3 = s.ox___26439;
    s.tmp_0.arg4 = s.oy___26447;
    s.callLocIdx = 393; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___drawCore__P2414.info = {"start":18194,"length":462,"line":613,"column":4,"endLine":626,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function Sprite___drawCore__P2414_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___drawCore__P2414, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  ox___26439: undefined,
  oy___26447: undefined,
  l___26455: undefined,
  t___26461: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_drawSprite__P5049(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1224]) return breakpoint(s, 3, 1224, r0);
  case 3:
    s.tmp_3 = Sprite_isScaled__P5046_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 484; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1225]) return breakpoint(s, 5, 1225, r0);
  case 5:
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___2032, s.tmp_4, s.arg1, s.arg2);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1226]) return breakpoint(s, 6, 1226, r0);
  case 6:
    s.tmp_0 = helpers_imageBlit__P1953_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_1 = Sprite_width__P2396_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 485; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_2 = Sprite_height__P2397_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 486; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 0;
    s.tmp_0.arg7 = 0;
    r0 = s.arg0.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_0.arg8 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_0.arg9 = r0;
    s.tmp_0.arg10 = true;
    s.tmp_0.arg11 = false;
    s.callLocIdx = 487; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawSprite__P5049.info = {"start":35728,"length":514,"line":1116,"column":4,"endLine":1130,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawSprite","argumentNames":["this","drawLeft","drawTop"]}

function Sprite_drawSprite__P5049_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawSprite__P5049, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_drawDebug__P5048(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.font___26485 = undefined;
    s.tx___26489 = undefined;
    s.ty___26491 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1210]) return breakpoint(s, 13, 1210, r0);
  case 13:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 64);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1211]) return breakpoint(s, 14, 1211, r0);
  case 14:
    s.font___26485 = (globals.font5___1980);
    s.lastBrkId = 1212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1212]) return breakpoint(s, 15, 1212, r0);
  case 15:
    s.tx___26489 = (s.arg1);
    s.lastBrkId = 1213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1213]) return breakpoint(s, 16, 1213, r0);
  case 16:
    s.tmp_1 = r0 = s.arg2;
    s.tmp_3 = Sprite_height__P2397_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 460; s.pc = 17; return s.tmp_3;
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 2);
    s.ty___26491 = (r0);
    s.lastBrkId = 1214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1214]) return breakpoint(s, 18, 1214, r0);
  case 18:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    s.tmp_7 = Sprite_x__P2353_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 461; s.pc = 20; return s.tmp_7;
  case 20:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 0);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 21);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 21:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_11 = Sprite_y__P2355_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 462; s.pc = 22; return s.tmp_11;
  case 22:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 >> 0);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_8);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___26489;
    s.tmp_0.arg3 = s.ty___26491;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___26485;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 463; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 1215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1215]) return breakpoint(s, 24, 1215, r0);
  case 24:
    s.tmp_0 = r0 = s.tx___26489;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___26485;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 464; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.tx___26489 = (r0);
    s.lastBrkId = 1216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1216]) return breakpoint(s, 26, 1216, r0);
  case 26:
    s.tmp_1 = Sprite_vx__P2357_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 465; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Sprite_vy__P2359_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 466; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1217]) return breakpoint(s, 29, 1217, r0);
  case 29:
    s.tmp_4 = r0 = s.ty___26491;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___26485;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 467; s.pc = 30; return s.tmp_7; }
    }
  case 30:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___26491 = (r0);
    s.lastBrkId = 1218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1218]) return breakpoint(s, 31, 1218, r0);
  case 31:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_6 = Sprite_vx__P2357_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 468; s.pc = 33; return s.tmp_6;
  case 33:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 34);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 34:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("v", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_vy__P2359_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 469; s.pc = 35; return s.tmp_10;
  case 35:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___26489;
    s.tmp_0.arg3 = s.ty___26491;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___26485;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 470; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1219]) return breakpoint(s, 37, 1219, r0);
  case 37:
    s.tmp_1 = Sprite_ax__P2361_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 471; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_2 = Sprite_ay__P2363_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 472; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1220]) return breakpoint(s, 40, 1220, r0);
  case 40:
    s.tmp_4 = r0 = s.ty___26491;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___26485;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 473; s.pc = 41; return s.tmp_7; }
    }
  case 41:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___26491 = (r0);
    s.lastBrkId = 1221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1221]) return breakpoint(s, 42, 1221, r0);
  case 42:
    s.tmp_0 = helpers_imagePrint__P1990_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_6 = Sprite_ax__P2361_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 474; s.pc = 44; return s.tmp_6;
  case 44:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 45);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 45:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("a", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_ay__P2363_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 475; s.pc = 46; return s.tmp_10;
  case 46:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 47);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 47:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___26489;
    s.tmp_0.arg3 = s.ty___26491;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___26485;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 476; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 1222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1222]) return breakpoint(s, 48, 1222, r0);
  case 48:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2966);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1223]) return breakpoint(s, 49, 1223, r0);
  case 49:
    s.tmp_0 = helpers_imageDrawRect__P1959_mk(s);
    s.tmp_0.arg0 = globals.screen___2032;
    s.tmp_2 = Fx_toInt__P172_mk(s);
    s.tmp_3 = game_Hitbox_left__P2216_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 477; s.pc = 52; return s.tmp_3;
  case 52:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 478; s.pc = 51; return s.tmp_2;
  case 51:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.arg3);
    s.tmp_0.arg1 = r0;
    s.tmp_5 = Fx_toInt__P172_mk(s);
    s.tmp_6 = game_Hitbox_top__P2217_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 479; s.pc = 54; return s.tmp_6;
  case 54:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 480; s.pc = 53; return s.tmp_5;
  case 53:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg4);
    s.tmp_0.arg2 = r0;
    s.tmp_7 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["width"];
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 481; s.pc = 55; return s.tmp_7;
  case 55:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_8 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["height"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 482; s.pc = 56; return s.tmp_8;
  case 56:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 483; s.pc = 50; return s.tmp_0;
  case 50:
    r0 = s.retval;
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawDebug__P5048.info = {"start":34630,"length":1092,"line":1086,"column":4,"endLine":1114,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawDebug","argumentNames":["this","left","top","offsetX","offsetY"]}

function Sprite_drawDebug__P5048_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawDebug__P5048, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  font___26485: undefined,
  tx___26489: undefined,
  ty___26491: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function Sprite_drawSay__P5047(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1202]) return breakpoint(s, 7, 1202, r0);
  case 7:
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1203]) return breakpoint(s, 8, 1203, r0);
  case 8:
    r0 = s.arg0.fields["sayEndTime"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1204]) return breakpoint(s, 9, 1204, r0);
  case 9:
    r0 = pxsim.control.millis();
    s.tmp_4 = r0;
    r0 = s.arg0.fields["sayEndTime"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 < s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1205]) return breakpoint(s, 10, 1205, r0);
  case 10:
    s.tmp_6 = sprites_BaseSpriteSayRenderer__C2259_v0_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = globals.screen___2032;
    s.tmp_6.arg2 = s.arg1;
    s.tmp_6.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_6.arg0, sprites_BaseSpriteSayRenderer__C2259_VT)) failedCast(s.tmp_6.arg0);
    s.tmp_6.fn = s.tmp_6.arg0.vtable.methods.draw;
    s.pc = 11; return s.tmp_6;
  case 11:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1206]) return breakpoint(s, 12, 1206, r0);
  case 12:
    s.tmp_0 = sprites_BaseSpriteSayRenderer__C2259_v2_1_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, sprites_BaseSpriteSayRenderer__C2259_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.destroy;
    s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 1207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1207]) return breakpoint(s, 14, 1207, r0);
  case 14:
    r0 = (s.arg0).fields["sayRenderer"] = (undefined);
    s.lastBrkId = 1208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1208]) return breakpoint(s, 15, 1208, r0);
  case 15:
    r0 = (s.arg0).fields["sayEndTime"] = (undefined);
  case 2:
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1209]) return breakpoint(s, 16, 1209, r0);
  case 16:
    s.tmp_0 = sprites_BaseSpriteSayRenderer__C2259_v0_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.screen___2032;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, sprites_BaseSpriteSayRenderer__C2259_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawSay__P5047.info = {"start":34050,"length":574,"line":1068,"column":4,"endLine":1084,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawSay","argumentNames":["this","camera"]}

function Sprite_drawSay__P5047_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawSay__P5047, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSpriteSayRenderer_destroy__P2263(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2259_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_destroy__P2263.info = {"start":328,"length":22,"line":13,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"destroy","argumentNames":["this"]}

function sprites_BaseSpriteSayRenderer_destroy__P2263_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_destroy__P2263, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_BaseSpriteSayRenderer_draw__P2261(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2259_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_draw__P2261.info = {"start":171,"length":69,"line":5,"column":8,"endLine":7,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"draw","argumentNames":["this","screen","camera","owner"]}

function sprites_BaseSpriteSayRenderer_draw__P2261_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_draw__P2261, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite___visible__P2395(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2340_VT)) failedCast(r0);
    s.lastBrkId = 1097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1097]) return breakpoint(s, 1, 1097, r0);
  case 1:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 128);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite___visible__P2395.info = {"start":9904,"length":72,"line":359,"column":4,"endLine":361,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__visible","argumentNames":["this"]}

function Sprite___visible__P2395_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___visible__P2395, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }




function PhysicsEngine__C2510_v2_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function PhysicsEngine__C2510_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_charWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_charHeight_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_data_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_multiplier_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function lambda_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function Sprite__C2340_v5_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function Sprite__C2340_v4_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_xOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_yOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_handler_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_kind_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_factory_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function game_SplashDialog__C2931_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function game_BaseDialog__C2902_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function controller_Button__C2189_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_handler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function PhysicsEngine__C2510_v4_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if___update_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function PhysicsEngine__C2510_v3_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if___draw_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_z_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_s_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vx_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vy_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function game_BaseDialog__C2902_v2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_condition_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function RotatingScreens__C4428_v1_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_effect_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_sourceFactory_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function PhysicsEngine__C2510_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_destroyHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_animations_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_animations_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function animation_SpriteAnimation__C3351_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_isInFooter_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_currGroup_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_currGroup_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_color_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_currOption_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function OptionScreenCollection__C4488_v4_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function OptionScreen__C4464_v1_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_mode_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_img_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_x_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_y_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_imgs_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_speed_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_dir_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function RotatingScreens__C4428_v2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_y_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_currOption_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_isInFooter_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_colorInput_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_colorInputText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_colorCursor_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_colorBottomBackground_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_colorInputHighlighted_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_callback_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_z_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_colorPrompt_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_colorInput_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_colorBottomBackground_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_colorCursor_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function game_Dialog__C2920_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_generator_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_padding_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsPerRow_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardSpacing_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_getText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_basicCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_selectedCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_activeCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_flags_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C3186_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function particles_ParticleSource__C3150_v4_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_height_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_handler_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_tileIndex_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_left_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_top_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C3186_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2259_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSprite__C2094_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSprite__C2094_v2_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_shouldBeVisible_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function Sprite__C2340_v6_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2259_v0_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2259_v2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_scene_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_state_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_frontImage_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_currPlayer_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_rightAnim_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_leftAnim_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_rightImage_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_leftImage_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_selectedAvatar_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_selectedAvatar_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_front_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_right_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function OptionScreenCollection__C4488_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_backImage_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function OptionScreenCollection__C4488_v3_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_currPlayer_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_header_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_footer1_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_footer2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_header_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_footer1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_footer2_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_left_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_front_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_right_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_rightImage_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_width_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }

const controller_Controller__C2134_VT = mkVTable({
  name: "Controller",
  numFields: 5,
  classNo: 16,
  lastSubtypeNo: 16,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "playerIndex": null,
    "set/playerIndex": null,
    "buttons": null,
    "set/buttons": null,
    "analog": null,
    "set/analog": null,
    "_id": null,
    "set/_id": null,
    "_connected": null,
    "set/_connected": null,
    "_controlledSprites": controller_Controller__controlledSprites__P2139,
    "set/_controlledSprites": controller_Controller__controlledSprites__P2140,
    "id": controller_Controller_id__P2141,
    "left": controller_Controller_left__P2143,
    "right": controller_Controller_right__P2144,
    "up": controller_Controller_up__P2145,
    "down": controller_Controller_down__P2146,
    "A": controller_Controller_A__P2147,
    "B": controller_Controller_B__P2148,
    "button": controller_Controller_button__P5018,
    "onButtonEvent": controller_Controller_onButtonEvent__P2153,
    "connected": controller_Controller_connected__P2155,
    "set/connected": controller_Controller_connected__P2156,
    "__preUpdate": controller_Controller___preUpdate__P2162,
    "__update": controller_Controller___update__P2163,
  },
});
const controller_Button__C2189_VT = mkVTable({
  name: "Button",
  numFields: 7,
  classNo: 17,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_Button_isPressed__P2200,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "handlerState": controller_Button_handlerState__P5021,
    "toString": controller_Button_toString__P2194,
    "raiseButtonUp": controller_Button_raiseButtonUp__P5022,
    "raiseButtonDown": controller_Button_raiseButtonDown__P5023,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P5024,
    "onEvent": controller_Button_onEvent__P2196,
    "isPressed": controller_Button_isPressed__P2200,
    "pressureLevel": controller_Button_pressureLevel__P2201,
    "setPressed": controller_Button_setPressed__P2202,
    "__update": controller_Button___update__P2203,
    "runButtonEvents": controller_Button_runButtonEvents__P5025,
    "getOrCreateHandlerForEvent": controller_Button_getOrCreateHandlerForEvent__P5026,
  },
  toStringMethod: controller_Button_toString__P2194,
});
const controller_AnyButton__C5019_VT = mkVTable({
  name: "AnyButton",
  numFields: 7,
  classNo: 18,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_AnyButton_isPressed__P5027,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "isPressed": controller_AnyButton_isPressed__P5027,
    "handlerState": controller_Button_handlerState__P5021,
    "toString": controller_Button_toString__P2194,
    "raiseButtonUp": controller_Button_raiseButtonUp__P5022,
    "raiseButtonDown": controller_Button_raiseButtonDown__P5023,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P5024,
    "onEvent": controller_Button_onEvent__P2196,
    "pressureLevel": controller_Button_pressureLevel__P2201,
    "setPressed": controller_Button_setPressed__P2202,
    "__update": controller_Button___update__P2203,
    "runButtonEvents": controller_Button_runButtonEvents__P5025,
    "getOrCreateHandlerForEvent": controller_Button_getOrCreateHandlerForEvent__P5026,
  },
});
const game_GameOverConfig__C2972_VT = mkVTable({
  name: "GameOverConfig",
  numFields: 14,
  classNo: 19,
  lastSubtypeNo: 19,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "scoringType": null,
    "set/scoringType": null,
    "winEffect": null,
    "set/winEffect": null,
    "loseEffect": null,
    "set/loseEffect": null,
    "loseSound": null,
    "set/loseSound": null,
    "winSound": null,
    "set/winSound": null,
    "loseSoundLooping": null,
    "set/loseSoundLooping": null,
    "winSoundLooping": null,
    "set/winSoundLooping": null,
    "winMessage": null,
    "set/winMessage": null,
    "winMessageMultiplayer": null,
    "set/winMessageMultiplayer": null,
    "loseMessage": null,
    "set/loseMessage": null,
    "effectSetByUser": null,
    "set/effectSetByUser": null,
    "soundSetByUser": null,
    "set/soundSetByUser": null,
    "messageSetByUser": null,
    "set/messageSetByUser": null,
    "scoringTypeSetByUser": null,
    "set/scoringTypeSetByUser": null,
    "init": game_GameOverConfig_init__P2988,
  },
});
const Math_FastRandom__C3058_VT = mkVTable({
  name: "FastRandom",
  numFields: 2,
  classNo: 20,
  lastSubtypeNo: 20,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "lfsr": null,
    "set/lfsr": null,
    "seed": null,
    "set/seed": null,
    "next": Math_FastRandom_next__P3061,
    "randomRange": Math_FastRandom_randomRange__P3062,
    "pickRandom": Math_FastRandom_pickRandom__P3063,
  },
});
const RotatingScreens__C4428_VT = mkVTable({
  name: "RotatingScreens",
  numFields: 13,
  classNo: 21,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
    "build": RotatingScreens_build__P4450,
    "refresh": RotatingScreens_refresh__P4454,
    "createBase": RotatingScreens_createBase__P7309,
  },
  iface: {
    "_backColor": null,
    "set/_backColor": null,
    "_backImage": null,
    "set/_backImage": null,
    "_currScreen": null,
    "set/_currScreen": null,
    "_currSprite": null,
    "set/_currSprite": null,
    "_footer": null,
    "set/_footer": null,
    "_headlines": null,
    "set/_headlines": null,
    "_midText": null,
    "set/_midText": null,
    "_titles": null,
    "set/_titles": null,
    "_movingSprites": null,
    "set/_movingSprites": null,
    "_movingSpritesSequential": null,
    "set/_movingSpritesSequential": null,
    "_interval": null,
    "set/_interval": null,
    "_next": null,
    "set/_next": null,
    "_staticSprites": null,
    "set/_staticSprites": null,
    "backImage": RotatingScreens_backImage__P4430,
    "set/backImage": RotatingScreens_backImage__P4431,
    "footer": RotatingScreens_footer__P4434,
    "headlines": RotatingScreens_headlines__P4435,
    "nextTime": RotatingScreens_nextTime__P4441,
    "titles": RotatingScreens_titles__P4444,
    "build": RotatingScreens_build__P4450,
    "destroySprites": RotatingScreens_destroySprites__P4452,
    "rebuild": RotatingScreens_rebuild__P4453,
    "refresh": RotatingScreens_refresh__P4454,
    "release": RotatingScreens_release__P4455,
    "rotate": RotatingScreens_rotate__P4456,
    "showScrollingSprite": RotatingScreens_showScrollingSprite__P4458,
    "addAllMovingSprites": RotatingScreens_addAllMovingSprites__P7307,
    "addStaticSprites": RotatingScreens_addStaticSprites__P7308,
    "createBase": RotatingScreens_createBase__P7309,
  },
});
const Player__C143754_VT = mkVTable({
  name: "Player",
  numFields: 11,
  classNo: 24,
  lastSubtypeNo: 24,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "avatar": null,
    "set/avatar": null,
    "bank": null,
    "set/bank": null,
    "controllerId": null,
    "set/controllerId": null,
    "currSpace": null,
    "set/currSpace": null,
    "dice": null,
    "set/dice": null,
    "isInJail": null,
    "set/isInJail": null,
    "location": null,
    "set/location": null,
    "name": null,
    "set/name": null,
    "sprite": null,
    "set/sprite": null,
    "statsSprite": null,
    "set/statsSprite": null,
    "turnsInJail": null,
    "set/turnsInJail": null,
    "Avatar": Player_Avatar__P143735,
    "set/Avatar": Player_Avatar__P143736,
    "Dice": Player_Dice__P143757,
    "Name": Player_Name__P143750,
    "set/Name": Player_Name__P143758,
    "moveSprite": Player_moveSprite__P143761,
    "promptForName": Player_promptForName__P143762,
    "showSprite": Player_showSprite__P143763,
  },
});
const Dice__C32621_VT = mkVTable({
  name: "Dice",
  numFields: 12,
  classNo: 25,
  lastSubtypeNo: 25,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "areRolling": null,
    "set/areRolling": null,
    "deltaX": null,
    "set/deltaX": null,
    "deltaY": null,
    "set/deltaY": null,
    "movesSinceLastRotate": null,
    "set/movesSinceLastRotate": null,
    "orientation": null,
    "set/orientation": null,
    "skin": null,
    "set/skin": null,
    "sprites": null,
    "set/sprites": null,
    "startX": null,
    "set/startX": null,
    "startY": null,
    "set/startY": null,
    "stopX": null,
    "set/stopX": null,
    "stopY": null,
    "set/stopY": null,
    "values": null,
    "set/values": null,
    "AreDoubles": Dice_AreDoubles__P32622,
    "AreRolling": Dice_AreRolling__P32623,
    "Count": Dice_Count__P32624,
    "set/Count": Dice_Count__P32625,
    "Orientation": Dice_Orientation__P32592,
    "set/Orientation": Dice_Orientation__P32593,
    "Roll": Dice_Roll__P32626,
    "Skin": Dice_Skin__P32589,
    "set/Skin": Dice_Skin__P32590,
    "Visible": Dice_Visible__P32627,
    "hide": Dice_hide__P32628,
    "move": Dice_move__P32629,
    "setLocationChange": Dice_setLocationChange__P32596,
    "setStartLocation": Dice_setStartLocation__P32594,
    "setStopLocation": Dice_setStopLocation__P32595,
    "show": Dice_show__P32597,
    "startRoll": Dice_startRoll__P32586,
    "randomize": Dice_randomize__P32630,
    "resetSprites": Dice_resetSprites__P32631,
    "updateSprites": Dice_updateSprites__P32632,
  },
});
const sprites_BaseSprite__C2094_VT = mkVTable({
  name: "BaseSprite",
  numFields: 2,
  classNo: 26,
  lastSubtypeNo: 30,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P2097,
    "__draw": sprites_BaseSprite___draw__P2100,
    "__drawCore": sprites_BaseSprite___drawCore__P2101,
    "__update": sprites_BaseSprite___update__P2102,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "__visible": sprites_BaseSprite___visible__P2097,
    "z": sprites_BaseSprite_z__P2098,
    "set/z": sprites_BaseSprite_z__P2099,
    "__draw": sprites_BaseSprite___draw__P2100,
    "__drawCore": sprites_BaseSprite___drawCore__P2101,
    "__update": sprites_BaseSprite___update__P2102,
  },
});
const Sprite__C2340_VT = mkVTable({
  name: "Sprite",
  numFields: 30,
  classNo: 27,
  lastSubtypeNo: 28,
  maxBgInstances: null,
  methods: {
    "__visible": Sprite___visible__P2395,
    "__draw": sprites_BaseSprite___draw__P2100,
    "__drawCore": Sprite___drawCore__P2414,
    "__update": Sprite___update__P2415,
    "setHitbox": Sprite_setHitbox__P2393,
    "recalcSize": Sprite_recalcSize__P5045,
    "drawSprite": Sprite_drawSprite__P5049,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "_vx": null,
    "set/_vx": null,
    "_vy": null,
    "set/_vy": null,
    "_ax": null,
    "set/_ax": null,
    "_ay": null,
    "set/_ay": null,
    "_fx": null,
    "set/_fx": null,
    "_fy": null,
    "set/_fy": null,
    "_sx": null,
    "set/_sx": null,
    "_sy": null,
    "set/_sy": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "_data": null,
    "set/_data": null,
    "_kind": null,
    "set/_kind": null,
    "layer": null,
    "set/layer": null,
    "_lastX": null,
    "set/_lastX": null,
    "_lastY": null,
    "set/_lastY": null,
    "_action": null,
    "set/_action": null,
    "lifespan": null,
    "set/lifespan": null,
    "_image": null,
    "set/_image": null,
    "_obstacles": null,
    "set/_obstacles": null,
    "sayEndTime": null,
    "set/sayEndTime": null,
    "sayRenderer": null,
    "set/sayRenderer": null,
    "_hitbox": null,
    "set/_hitbox": null,
    "_overlappers": null,
    "set/_overlappers": null,
    "_kindsOverlappedWith": null,
    "set/_kindsOverlappedWith": null,
    "flags": null,
    "set/flags": null,
    "destroyHandler": null,
    "set/destroyHandler": null,
    "x": Sprite_x__P2353,
    "set/x": Sprite_x__P2354,
    "y": Sprite_y__P2355,
    "set/y": Sprite_y__P2356,
    "vx": Sprite_vx__P2357,
    "set/vx": Sprite_vx__P2358,
    "vy": Sprite_vy__P2359,
    "set/vy": Sprite_vy__P2360,
    "ax": Sprite_ax__P2361,
    "set/ax": Sprite_ax__P2362,
    "ay": Sprite_ay__P2363,
    "set/ay": Sprite_ay__P2364,
    "fx": Sprite_fx__P2365,
    "set/fx": Sprite_fx__P2366,
    "fy": Sprite_fy__P2367,
    "set/fy": Sprite_fy__P2368,
    "sx": Sprite_sx__P2369,
    "sy": Sprite_sy__P2371,
    "data": Sprite_data__P2375,
    "set/data": Sprite_data__P2376,
    "image": Sprite_image__P2389,
    "setImage": Sprite_setImage__P2390,
    "calcDimensionalHash": Sprite_calcDimensionalHash__P2391,
    "resetHitbox": Sprite_resetHitbox__P2392,
    "setHitbox": Sprite_setHitbox__P2393,
    "isStatic": Sprite_isStatic__P2394,
    "__visible": Sprite___visible__P2395,
    "recalcSize": Sprite_recalcSize__P5045,
    "isScaled": Sprite_isScaled__P5046,
    "width": Sprite_width__P2396,
    "height": Sprite_height__P2397,
    "left": Sprite_left__P2398,
    "set/left": Sprite_left__P2399,
    "right": Sprite_right__P2400,
    "set/right": Sprite_right__P2401,
    "top": Sprite_top__P2402,
    "set/top": Sprite_top__P2403,
    "bottom": Sprite_bottom__P2404,
    "set/bottom": Sprite_bottom__P2405,
    "kind": Sprite_kind__P2406,
    "setKind": Sprite_setKind__P2407,
    "setPosition": Sprite_setPosition__P2408,
    "isOutOfScreen": Sprite_isOutOfScreen__P2413,
    "__drawCore": Sprite___drawCore__P2414,
    "__update": Sprite___update__P2415,
    "setFlag": Sprite_setFlag__P2418,
    "overlapsWith": Sprite_overlapsWith__P2419,
    "clearObstacles": Sprite_clearObstacles__P2424,
    "registerObstacle": Sprite_registerObstacle__P2425,
    "destroy": Sprite_destroy__P2427,
    "_destroyCore": Sprite__destroyCore__P2428,
    "toString": Sprite_toString__P2433,
    "drawSay": Sprite_drawSay__P5047,
    "drawDebug": Sprite_drawDebug__P5048,
    "drawSprite": Sprite_drawSprite__P5049,
    "z": sprites_BaseSprite_z__P2098,
    "set/z": sprites_BaseSprite_z__P2099,
    "__draw": sprites_BaseSprite___draw__P2100,
  },
  toStringMethod: Sprite_toString__P2433,
});
const PhysicsEngine__C2510_VT = mkVTable({
  name: "PhysicsEngine",
  numFields: 0,
  classNo: 31,
  lastSubtypeNo: 32,
  maxBgInstances: null,
  methods: {
    "addSprite": PhysicsEngine_addSprite__P2512,
    "removeSprite": PhysicsEngine_removeSprite__P2513,
    "moveSprite": PhysicsEngine_moveSprite__P2514,
    "draw": PhysicsEngine_draw__P2515,
    "move": PhysicsEngine_move__P2516,
  },
  iface: {
    "addSprite": PhysicsEngine_addSprite__P2512,
    "removeSprite": PhysicsEngine_removeSprite__P2513,
    "moveSprite": PhysicsEngine_moveSprite__P2514,
    "draw": PhysicsEngine_draw__P2515,
    "move": PhysicsEngine_move__P2516,
  },
});
const TextSprite__C4332_VT = mkVTable({
  name: "TextSprite",
  numFields: 40,
  classNo: 28,
  lastSubtypeNo: 28,
  maxBgInstances: null,
  methods: {
    "__visible": Sprite___visible__P2395,
    "__draw": sprites_BaseSprite___draw__P2100,
    "__drawCore": Sprite___drawCore__P2414,
    "__update": Sprite___update__P2415,
    "setHitbox": Sprite_setHitbox__P2393,
    "recalcSize": Sprite_recalcSize__P5045,
    "drawSprite": Sprite_drawSprite__P5049,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "_vx": null,
    "set/_vx": null,
    "_vy": null,
    "set/_vy": null,
    "_ax": null,
    "set/_ax": null,
    "_ay": null,
    "set/_ay": null,
    "_fx": null,
    "set/_fx": null,
    "_fy": null,
    "set/_fy": null,
    "_sx": null,
    "set/_sx": null,
    "_sy": null,
    "set/_sy": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "_data": null,
    "set/_data": null,
    "_kind": null,
    "set/_kind": null,
    "layer": null,
    "set/layer": null,
    "_lastX": null,
    "set/_lastX": null,
    "_lastY": null,
    "set/_lastY": null,
    "_action": null,
    "set/_action": null,
    "lifespan": null,
    "set/lifespan": null,
    "_image": null,
    "set/_image": null,
    "_obstacles": null,
    "set/_obstacles": null,
    "sayEndTime": null,
    "set/sayEndTime": null,
    "sayRenderer": null,
    "set/sayRenderer": null,
    "_hitbox": null,
    "set/_hitbox": null,
    "_overlappers": null,
    "set/_overlappers": null,
    "_kindsOverlappedWith": null,
    "set/_kindsOverlappedWith": null,
    "flags": null,
    "set/flags": null,
    "destroyHandler": null,
    "set/destroyHandler": null,
    "text": null,
    "set/text": null,
    "bg": null,
    "set/bg": null,
    "fg": null,
    "set/fg": null,
    "maxFontHeight": null,
    "set/maxFontHeight": null,
    "borderWidth": null,
    "set/borderWidth": null,
    "borderColor": null,
    "set/borderColor": null,
    "padding": null,
    "set/padding": null,
    "outlineWidth": null,
    "set/outlineWidth": null,
    "outlineColor": null,
    "set/outlineColor": null,
    "icon": null,
    "set/icon": null,
    "update": TextSprite_update__P4334,
    "setMaxFontHeight": TextSprite_setMaxFontHeight__P4335,
    "setText": TextSprite_setText__P4337,
    "setBorder": TextSprite_setBorder__P4338,
    "x": Sprite_x__P2353,
    "set/x": Sprite_x__P2354,
    "y": Sprite_y__P2355,
    "set/y": Sprite_y__P2356,
    "vx": Sprite_vx__P2357,
    "set/vx": Sprite_vx__P2358,
    "vy": Sprite_vy__P2359,
    "set/vy": Sprite_vy__P2360,
    "ax": Sprite_ax__P2361,
    "set/ax": Sprite_ax__P2362,
    "ay": Sprite_ay__P2363,
    "set/ay": Sprite_ay__P2364,
    "fx": Sprite_fx__P2365,
    "set/fx": Sprite_fx__P2366,
    "fy": Sprite_fy__P2367,
    "set/fy": Sprite_fy__P2368,
    "sx": Sprite_sx__P2369,
    "sy": Sprite_sy__P2371,
    "data": Sprite_data__P2375,
    "set/data": Sprite_data__P2376,
    "image": Sprite_image__P2389,
    "setImage": Sprite_setImage__P2390,
    "calcDimensionalHash": Sprite_calcDimensionalHash__P2391,
    "resetHitbox": Sprite_resetHitbox__P2392,
    "setHitbox": Sprite_setHitbox__P2393,
    "isStatic": Sprite_isStatic__P2394,
    "__visible": Sprite___visible__P2395,
    "recalcSize": Sprite_recalcSize__P5045,
    "isScaled": Sprite_isScaled__P5046,
    "width": Sprite_width__P2396,
    "height": Sprite_height__P2397,
    "left": Sprite_left__P2398,
    "set/left": Sprite_left__P2399,
    "right": Sprite_right__P2400,
    "set/right": Sprite_right__P2401,
    "top": Sprite_top__P2402,
    "set/top": Sprite_top__P2403,
    "bottom": Sprite_bottom__P2404,
    "set/bottom": Sprite_bottom__P2405,
    "kind": Sprite_kind__P2406,
    "setKind": Sprite_setKind__P2407,
    "setPosition": Sprite_setPosition__P2408,
    "isOutOfScreen": Sprite_isOutOfScreen__P2413,
    "__drawCore": Sprite___drawCore__P2414,
    "__update": Sprite___update__P2415,
    "setFlag": Sprite_setFlag__P2418,
    "overlapsWith": Sprite_overlapsWith__P2419,
    "clearObstacles": Sprite_clearObstacles__P2424,
    "registerObstacle": Sprite_registerObstacle__P2425,
    "destroy": Sprite_destroy__P2427,
    "_destroyCore": Sprite__destroyCore__P2428,
    "toString": Sprite_toString__P2433,
    "drawSay": Sprite_drawSay__P5047,
    "drawDebug": Sprite_drawDebug__P5048,
    "drawSprite": Sprite_drawSprite__P5049,
    "z": sprites_BaseSprite_z__P2098,
    "set/z": sprites_BaseSprite_z__P2099,
    "__draw": sprites_BaseSprite___draw__P2100,
  },
});
const game_Hitbox__C2208_VT = mkVTable({
  name: "Hitbox",
  numFields: 6,
  classNo: 33,
  lastSubtypeNo: 33,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "hash": null,
    "set/hash": null,
    "parent": null,
    "set/parent": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "width": null,
    "set/width": null,
    "height": null,
    "set/height": null,
    "left": game_Hitbox_left__P2216,
    "top": game_Hitbox_top__P2217,
    "right": game_Hitbox_right__P2218,
    "bottom": game_Hitbox_bottom__P2219,
    "isValid": game_Hitbox_isValid__P2220,
    "contains": game_Hitbox_contains__P2221,
    "updateIfInvalid": game_Hitbox_updateIfInvalid__P2222,
    "overlapsWith": game_Hitbox_overlapsWith__P2223,
  },
});
const sprites_SpriteSet__C2462_VT = mkVTable({
  name: "SpriteSet",
  numFields: 1,
  classNo: 34,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_sprites": null,
    "set/_sprites": null,
    "length": sprites_SpriteSet_length__P2465,
    "sprites": sprites_SpriteSet_sprites__P2466,
    "add": sprites_SpriteSet_add__P2467,
    "remove": sprites_SpriteSet_remove__P2469,
    "contains": sprites_SpriteSet_contains__P2470,
    "toString": sprites_SpriteSet_toString__P2473,
  },
  toStringMethod: sprites_SpriteSet_toString__P2473,
});
const scene_Scene__C2842_VT = mkVTable({
  name: "Scene",
  numFields: 25,
  classNo: 35,
  lastSubtypeNo: 35,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eventContext": null,
    "set/eventContext": null,
    "background": null,
    "set/background": null,
    "tileMap": null,
    "set/tileMap": null,
    "allSprites": null,
    "set/allSprites": null,
    "spriteNextId": null,
    "set/spriteNextId": null,
    "spritesByKind": null,
    "set/spritesByKind": null,
    "physicsEngine": null,
    "set/physicsEngine": null,
    "camera": null,
    "set/camera": null,
    "flags": null,
    "set/flags": null,
    "destroyedHandlers": null,
    "set/destroyedHandlers": null,
    "createdHandlers": null,
    "set/createdHandlers": null,
    "overlapHandlers": null,
    "set/overlapHandlers": null,
    "overlapMap": null,
    "set/overlapMap": null,
    "tileOverlapHandlers": null,
    "set/tileOverlapHandlers": null,
    "collisionHandlers": null,
    "set/collisionHandlers": null,
    "wallCollisionHandlers": null,
    "set/wallCollisionHandlers": null,
    "gameForeverHandlers": null,
    "set/gameForeverHandlers": null,
    "particleSources": null,
    "set/particleSources": null,
    "controlledSprites": null,
    "set/controlledSprites": null,
    "controllerConnectionState": null,
    "set/controllerConnectionState": null,
    "followingSprites": null,
    "set/followingSprites": null,
    "buttonEventHandlers": null,
    "set/buttonEventHandlers": null,
    "_millis": null,
    "set/_millis": null,
    "_data": null,
    "set/_data": null,
    "previousScene": null,
    "set/previousScene": null,
    "init": scene_Scene_init__P2866,
    "data": scene_Scene_data__P2867,
    "millis": scene_Scene_millis__P2868,
    "addSprite": scene_Scene_addSprite__P2869,
    "render": scene_Scene_render__P2871,
  },
});
const scene_Background__C2668_VT = mkVTable({
  name: "Background",
  numFields: 4,
  classNo: 36,
  lastSubtypeNo: 36,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "color": null,
    "set/color": null,
    "_image": null,
    "set/_image": null,
    "camera": null,
    "set/camera": null,
    "_layers": null,
    "set/_layers": null,
    "image": scene_Background_image__P2674,
    "set/image": scene_Background_image__P2675,
    "draw": scene_Background_draw__P2677,
  },
});
const game_BaseDialog__C2902_VT = mkVTable({
  name: "BaseDialog",
  numFields: 11,
  classNo: 37,
  lastSubtypeNo: 39,
  maxBgInstances: null,
  methods: {
    "update": game_BaseDialog_update__P2916,
    "setText": game_BaseDialog_setText__P2917,
    "drawTextCore": game_BaseDialog_drawTextCore__P2918,
  },
  iface: {
    "image": null,
    "set/image": null,
    "frame": null,
    "set/frame": null,
    "cursor": null,
    "set/cursor": null,
    "columns": null,
    "set/columns": null,
    "rows": null,
    "set/rows": null,
    "unit": null,
    "set/unit": null,
    "innerLeft": null,
    "set/innerLeft": null,
    "innerTop": null,
    "set/innerTop": null,
    "cursorCount": null,
    "set/cursorCount": null,
    "font": null,
    "set/font": null,
    "textColor": null,
    "set/textColor": null,
    "resize": game_BaseDialog_resize__P2915,
    "update": game_BaseDialog_update__P2916,
    "setText": game_BaseDialog_setText__P2917,
    "drawTextCore": game_BaseDialog_drawTextCore__P2918,
    "drawCursorRow": game_BaseDialog_drawCursorRow__P2919,
    "drawBorder": game_BaseDialog_drawBorder__P5199,
    "fastFill": game_BaseDialog_fastFill__P5200,
    "clearInterior": game_BaseDialog_clearInterior__P5201,
    "drawPartial": game_BaseDialog_drawPartial__P5202,
    "cursorRowHeight": game_BaseDialog_cursorRowHeight__P5203,
    "rowHeight": game_BaseDialog_rowHeight__P5204,
    "textAreaWidth": game_BaseDialog_textAreaWidth__P5205,
    "textAreaHeight": game_BaseDialog_textAreaHeight__P5206,
    "setFont": game_BaseDialog_setFont__P5207,
  },
});
const game_SplashDialog__C2931_VT = mkVTable({
  name: "SplashDialog",
  numFields: 17,
  classNo: 38,
  lastSubtypeNo: 38,
  maxBgInstances: null,
  methods: {
    "update": game_BaseDialog_update__P2916,
    "setText": game_SplashDialog_setText__P2939,
    "drawTextCore": game_SplashDialog_drawTextCore__P2941,
  },
  iface: {
    "image": null,
    "set/image": null,
    "frame": null,
    "set/frame": null,
    "cursor": null,
    "set/cursor": null,
    "columns": null,
    "set/columns": null,
    "rows": null,
    "set/rows": null,
    "unit": null,
    "set/unit": null,
    "innerLeft": null,
    "set/innerLeft": null,
    "innerTop": null,
    "set/innerTop": null,
    "cursorCount": null,
    "set/cursorCount": null,
    "font": null,
    "set/font": null,
    "textColor": null,
    "set/textColor": null,
    "text": null,
    "set/text": null,
    "subtext": null,
    "set/subtext": null,
    "timer": null,
    "set/timer": null,
    "offset": null,
    "set/offset": null,
    "maxOffset": null,
    "set/maxOffset": null,
    "maxSubOffset": null,
    "set/maxSubOffset": null,
    "updateFont": game_SplashDialog_updateFont__P5210,
    "setText": game_SplashDialog_setText__P2939,
    "setSubtext": game_SplashDialog_setSubtext__P2940,
    "drawTextCore": game_SplashDialog_drawTextCore__P2941,
    "resize": game_BaseDialog_resize__P2915,
    "update": game_BaseDialog_update__P2916,
    "drawCursorRow": game_BaseDialog_drawCursorRow__P2919,
    "drawBorder": game_BaseDialog_drawBorder__P5199,
    "fastFill": game_BaseDialog_fastFill__P5200,
    "clearInterior": game_BaseDialog_clearInterior__P5201,
    "drawPartial": game_BaseDialog_drawPartial__P5202,
    "cursorRowHeight": game_BaseDialog_cursorRowHeight__P5203,
    "rowHeight": game_BaseDialog_rowHeight__P5204,
    "textAreaWidth": game_BaseDialog_textAreaWidth__P5205,
    "textAreaHeight": game_BaseDialog_textAreaHeight__P5206,
    "setFont": game_BaseDialog_setFont__P5207,
  },
});
const particles_ParticleSource__C3150_VT = mkVTable({
  name: "ParticleSource",
  numFields: 13,
  classNo: 29,
  lastSubtypeNo: 29,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P2097,
    "__draw": particles_ParticleSource___draw__P3156,
    "__drawCore": sprites_BaseSprite___drawCore__P2101,
    "__update": sprites_BaseSprite___update__P2102,
    "updateParticle": particles_ParticleSource_updateParticle__P5578,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "priority": null,
    "set/priority": null,
    "_dt": null,
    "set/_dt": null,
    "anchor": null,
    "set/anchor": null,
    "lifespan": null,
    "set/lifespan": null,
    "pFlags": null,
    "set/pFlags": null,
    "head": null,
    "set/head": null,
    "timer": null,
    "set/timer": null,
    "period": null,
    "set/period": null,
    "_factory": null,
    "set/_factory": null,
    "ax": null,
    "set/ax": null,
    "ay": null,
    "set/ay": null,
    "__draw": particles_ParticleSource___draw__P3156,
    "_update": particles_ParticleSource__update__P3157,
    "_prune": particles_ParticleSource__prune__P3158,
    "setAcceleration": particles_ParticleSource_setAcceleration__P3159,
    "setRelativeToCamera": particles_ParticleSource_setRelativeToCamera__P3161,
    "enabled": particles_ParticleSource_enabled__P3162,
    "set/enabled": particles_ParticleSource_enabled__P3163,
    "destroy": particles_ParticleSource_destroy__P3164,
    "clear": particles_ParticleSource_clear__P3165,
    "setAnchor": particles_ParticleSource_setAnchor__P3166,
    "setRate": particles_ParticleSource_setRate__P3167,
    "factory": particles_ParticleSource_factory__P3168,
    "setFactory": particles_ParticleSource_setFactory__P3169,
    "updateParticle": particles_ParticleSource_updateParticle__P5578,
    "drawParticle": particles_ParticleSource_drawParticle__P5579,
    "__visible": sprites_BaseSprite___visible__P2097,
    "z": sprites_BaseSprite_z__P2098,
    "set/z": sprites_BaseSprite_z__P2099,
    "__drawCore": sprites_BaseSprite___drawCore__P2101,
    "__update": sprites_BaseSprite___update__P2102,
  },
});
const control_EventContext__C395_VT = mkVTable({
  name: "EventContext",
  numFields: 10,
  classNo: 40,
  lastSubtypeNo: 40,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "frameCallbacks": null,
    "set/frameCallbacks": null,
    "frameWorker": null,
    "set/frameWorker": null,
    "framesInSample": null,
    "set/framesInSample": null,
    "timeInSample": null,
    "set/timeInSample": null,
    "lastPerfDump": null,
    "set/lastPerfDump": null,
    "deltaTimeMillis": null,
    "set/deltaTimeMillis": null,
    "prevTimeMillis": null,
    "set/prevTimeMillis": null,
    "idleCallbacks": null,
    "set/idleCallbacks": null,
    "runningCallbacks": null,
    "set/runningCallbacks": null,
    "deltaTime": control_EventContext_deltaTime__P400,
    "runCallbacks": control_EventContext_runCallbacks__P4734,
    "registerFrameCallbacks": control_EventContext_registerFrameCallbacks__P4735,
    "register": control_EventContext_register__P401,
    "unregister": control_EventContext_unregister__P402,
    "registerFrameHandler": control_EventContext_registerFrameHandler__P403,
    "registerHandler": control_EventContext_registerHandler__P405,
  },
});
const control_EventHandler__C4729_VT = mkVTable({
  name: "EventHandler",
  numFields: 4,
  classNo: 41,
  lastSubtypeNo: 41,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "src": null,
    "set/src": null,
    "value": null,
    "set/value": null,
    "handler": null,
    "set/handler": null,
    "flags": null,
    "set/flags": null,
    "register": control_EventHandler_register__P4730,
    "unregister": control_EventHandler_unregister__P4731,
  },
});
const scene_Camera__C2780_VT = mkVTable({
  name: "Camera",
  numFields: 10,
  classNo: 42,
  lastSubtypeNo: 42,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_offsetX": null,
    "set/_offsetX": null,
    "_offsetY": null,
    "set/_offsetY": null,
    "drawOffsetX": null,
    "set/drawOffsetX": null,
    "drawOffsetY": null,
    "set/drawOffsetY": null,
    "sprite": null,
    "set/sprite": null,
    "_lastUpdatedSpriteX": null,
    "set/_lastUpdatedSpriteX": null,
    "_lastUpdatedSpriteY": null,
    "set/_lastUpdatedSpriteY": null,
    "shakeStartTime": null,
    "set/shakeStartTime": null,
    "shakeDuration": null,
    "set/shakeDuration": null,
    "shakeAmplitude": null,
    "set/shakeAmplitude": null,
    "offsetX": scene_Camera_offsetX__P2785,
    "set/offsetX": scene_Camera_offsetX__P2786,
    "offsetY": scene_Camera_offsetY__P2787,
    "set/offsetY": scene_Camera_offsetY__P2788,
    "x": scene_Camera_x__P2789,
    "y": scene_Camera_y__P2790,
    "left": scene_Camera_left__P2791,
    "right": scene_Camera_right__P2792,
    "top": scene_Camera_top__P2793,
    "isUpdated": scene_Camera_isUpdated__P2796,
    "update": scene_Camera_update__P2797,
  },
});
const scene_BackgroundLayer__C2678_VT = mkVTable({
  name: "BackgroundLayer",
  numFields: 6,
  classNo: 43,
  lastSubtypeNo: 43,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "distance": null,
    "set/distance": null,
    "img": null,
    "set/img": null,
    "repeatX": null,
    "set/repeatX": null,
    "repeatY": null,
    "set/repeatY": null,
    "alignX": null,
    "set/alignX": null,
    "alignY": null,
    "set/alignY": null,
    "draw": scene_BackgroundLayer_draw__P2686,
  },
});
const tiles_TileMap__C2734_VT = mkVTable({
  name: "TileMap",
  numFields: 5,
  classNo: 44,
  lastSubtypeNo: 44,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_scale": null,
    "set/_scale": null,
    "_layer": null,
    "set/_layer": null,
    "_map": null,
    "set/_map": null,
    "renderable": null,
    "set/renderable": null,
    "handlerState": null,
    "set/handlerState": null,
    "scale": tiles_TileMap_scale__P2737,
    "set/scale": tiles_TileMap_scale__P2738,
    "data": tiles_TileMap_data__P2739,
    "offsetX": tiles_TileMap_offsetX__P2740,
    "offsetY": tiles_TileMap_offsetY__P2741,
    "areaWidth": tiles_TileMap_areaWidth__P2742,
    "areaHeight": tiles_TileMap_areaHeight__P2743,
    "layer": tiles_TileMap_layer__P2744,
    "enabled": tiles_TileMap_enabled__P2746,
    "getTile": tiles_TileMap_getTile__P2748,
    "getTileIndex": tiles_TileMap_getTileIndex__P2749,
    "draw": tiles_TileMap_draw__P5166,
    "isObstacle": tiles_TileMap_isObstacle__P2755,
    "getObstacle": tiles_TileMap_getObstacle__P2756,
    "isOnWall": tiles_TileMap_isOnWall__P2757,
    "getTileImage": tiles_TileMap_getTileImage__P2758,
  },
});
const tiles_TileMapData__C2716_VT = mkVTable({
  name: "TileMapData",
  numFields: 7,
  classNo: 45,
  lastSubtypeNo: 45,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "data": null,
    "set/data": null,
    "layers": null,
    "set/layers": null,
    "tileset": null,
    "set/tileset": null,
    "cachedTileView": null,
    "set/cachedTileView": null,
    "_scale": null,
    "set/_scale": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "width": tiles_TileMapData_width__P2718,
    "height": tiles_TileMapData_height__P2719,
    "scale": tiles_TileMapData_scale__P2720,
    "set/scale": tiles_TileMapData_scale__P2721,
    "getTile": tiles_TileMapData_getTile__P2722,
    "getTileImage": tiles_TileMapData_getTileImage__P2725,
    "isWall": tiles_TileMapData_isWall__P2727,
    "isOutsideMap": tiles_TileMapData_isOutsideMap__P2728,
  },
});
const control_FrameCallback__C392_VT = mkVTable({
  name: "FrameCallback",
  numFields: 2,
  classNo: 46,
  lastSubtypeNo: 46,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "order": null,
    "set/order": null,
    "handler": null,
    "set/handler": null,
  },
});
const ArcadePhysicsEngine__C2526_VT = mkVTable({
  name: "ArcadePhysicsEngine",
  numFields: 6,
  classNo: 32,
  lastSubtypeNo: 32,
  maxBgInstances: null,
  methods: {
    "addSprite": ArcadePhysicsEngine_addSprite__P2535,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P2536,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P2540,
    "draw": ArcadePhysicsEngine_draw__P2537,
    "move": ArcadePhysicsEngine_move__P2538,
  },
  iface: {
    "sprites": null,
    "set/sprites": null,
    "map": null,
    "set/map": null,
    "maxVelocity": null,
    "set/maxVelocity": null,
    "maxNegativeVelocity": null,
    "set/maxNegativeVelocity": null,
    "minSingleStep": null,
    "set/minSingleStep": null,
    "maxSingleStep": null,
    "set/maxSingleStep": null,
    "maxSpeed": ArcadePhysicsEngine_maxSpeed__P2528,
    "set/maxSpeed": ArcadePhysicsEngine_maxSpeed__P2529,
    "minStep": ArcadePhysicsEngine_minStep__P2530,
    "set/minStep": ArcadePhysicsEngine_minStep__P2531,
    "maxStep": ArcadePhysicsEngine_maxStep__P2532,
    "set/maxStep": ArcadePhysicsEngine_maxStep__P2533,
    "addSprite": ArcadePhysicsEngine_addSprite__P2535,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P2536,
    "draw": ArcadePhysicsEngine_draw__P2537,
    "move": ArcadePhysicsEngine_move__P2538,
    "createMovingSprite": ArcadePhysicsEngine_createMovingSprite__P5090,
    "spriteCollisions": ArcadePhysicsEngine_spriteCollisions__P5091,
    "screenEdgeCollisions": ArcadePhysicsEngine_screenEdgeCollisions__P5092,
    "tilemapCollisions": ArcadePhysicsEngine_tilemapCollisions__P5093,
    "tilemapOverlaps": ArcadePhysicsEngine_tilemapOverlaps__P5094,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P2540,
    "canResolveClipping": ArcadePhysicsEngine_canResolveClipping__P5095,
    "constrain": ArcadePhysicsEngine_constrain__P5096,
  },
});
const sprites_SpriteMap__C2445_VT = mkVTable({
  name: "SpriteMap",
  numFields: 5,
  classNo: 47,
  lastSubtypeNo: 47,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "cellWidth": null,
    "set/cellWidth": null,
    "cellHeight": null,
    "set/cellHeight": null,
    "rowCount": null,
    "set/rowCount": null,
    "columnCount": null,
    "set/columnCount": null,
    "buckets": null,
    "set/buckets": null,
    "neighbors": sprites_SpriteMap_neighbors__P2447,
    "overlaps": sprites_SpriteMap_overlaps__P2448,
    "draw": sprites_SpriteMap_draw__P2449,
    "resizeBuckets": sprites_SpriteMap_resizeBuckets__P2450,
    "clear": sprites_SpriteMap_clear__P2451,
    "key": sprites_SpriteMap_key__P5053,
    "insertAtKey": sprites_SpriteMap_insertAtKey__P5054,
    "insertAABB": sprites_SpriteMap_insertAABB__P2452,
    "mergeAtKey": sprites_SpriteMap_mergeAtKey__P5055,
    "toString": sprites_SpriteMap_toString__P2453,
  },
  toStringMethod: sprites_SpriteMap_toString__P2453,
});
const control_PollEvent__C4708_VT = mkVTable({
  name: "PollEvent",
  numFields: 6,
  classNo: 48,
  lastSubtypeNo: 48,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eid": null,
    "set/eid": null,
    "vid": null,
    "set/vid": null,
    "start": null,
    "set/start": null,
    "timeOut": null,
    "set/timeOut": null,
    "condition": null,
    "set/condition": null,
    "once": null,
    "set/once": null,
  },
});
const TextSpriteFactory__C4397_VT = mkVTable({
  name: "TextSpriteFactory",
  numFields: 6,
  classNo: 49,
  lastSubtypeNo: 52,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "borderWidth": null,
    "set/borderWidth": null,
    "color": null,
    "set/color": null,
    "fontSize": null,
    "set/fontSize": null,
    "padding": null,
    "set/padding": null,
    "spacing": null,
    "set/spacing": null,
    "y": null,
    "set/y": null,
  },
});
const String2dArrayTextSpriteFactory__C4420_VT = mkVTable({
  name: "String2dArrayTextSpriteFactory",
  numFields: 8,
  classNo: 50,
  lastSubtypeNo: 50,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "borderWidth": null,
    "set/borderWidth": null,
    "color": null,
    "set/color": null,
    "fontSize": null,
    "set/fontSize": null,
    "padding": null,
    "set/padding": null,
    "spacing": null,
    "set/spacing": null,
    "y": null,
    "set/y": null,
    "data": null,
    "set/data": null,
    "_sprites": null,
    "set/_sprites": null,
    "DrawCenter": String2dArrayTextSpriteFactory_DrawCenter__P4423,
    "DrawLeft": String2dArrayTextSpriteFactory_DrawLeft__P4424,
    "Redraw": String2dArrayTextSpriteFactory_Redraw__P4426,
    "SetBorder": String2dArrayTextSpriteFactory_SetBorder__P4427,
    "CreateSprites": String2dArrayTextSpriteFactory_CreateSprites__P7306,
  },
});
const effects_ParticleEffect__C3261_VT = mkVTable({
  name: "ParticleEffect",
  numFields: 3,
  classNo: 53,
  lastSubtypeNo: 54,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "start": effects_ParticleEffect_start__P3263,
    "destroy": effects_ParticleEffect_destroy__P3264,
  },
});
const effects_ImageEffect__C3289_VT = mkVTable({
  name: "ImageEffect",
  numFields: 4,
  classNo: 55,
  lastSubtypeNo: 55,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "preferredDelay": null,
    "set/preferredDelay": null,
    "effect": null,
    "set/effect": null,
    "fastRandom": null,
    "set/fastRandom": null,
    "times": null,
    "set/times": null,
    "applyTo": effects_ImageEffect_applyTo__P3291,
    "change": effects_ImageEffect_change__P3292,
  },
});
const OptionScreen__C4464_VT = mkVTable({
  name: "OptionScreen",
  numFields: 21,
  classNo: 22,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
    "build": OptionScreen_build__P4479,
    "refresh": OptionScreen_refresh__P4485,
    "createBase": OptionScreen_createBase__P7313,
    "select": OptionScreen_select__P4486,
    "setSelection": OptionScreen_setSelection__P4487,
  },
  iface: {
    "_backColor": null,
    "set/_backColor": null,
    "_backImage": null,
    "set/_backImage": null,
    "_currScreen": null,
    "set/_currScreen": null,
    "_currSprite": null,
    "set/_currSprite": null,
    "_footer": null,
    "set/_footer": null,
    "_headlines": null,
    "set/_headlines": null,
    "_midText": null,
    "set/_midText": null,
    "_titles": null,
    "set/_titles": null,
    "_movingSprites": null,
    "set/_movingSprites": null,
    "_movingSpritesSequential": null,
    "set/_movingSpritesSequential": null,
    "_interval": null,
    "set/_interval": null,
    "_next": null,
    "set/_next": null,
    "_staticSprites": null,
    "set/_staticSprites": null,
    "_cursor": null,
    "set/_cursor": null,
    "_hasHeaders": null,
    "set/_hasHeaders": null,
    "_isDone": null,
    "set/_isDone": null,
    "_nextSprite": null,
    "set/_nextSprite": null,
    "_prevSprite": null,
    "set/_prevSprite": null,
    "_selectedOptions": null,
    "set/_selectedOptions": null,
    "_showNext": null,
    "set/_showNext": null,
    "_showPrevious": null,
    "set/_showPrevious": null,
    "done": OptionScreen_done__P4467,
    "set/done": OptionScreen_done__P4468,
    "doneText": OptionScreen_doneText__P4469,
    "set/doneText": OptionScreen_doneText__P4470,
    "options": OptionScreen_options__P4471,
    "set/options": OptionScreen_options__P4472,
    "build": OptionScreen_build__P4479,
    "moveCursorDown": OptionScreen_moveCursorDown__P4481,
    "moveCursorLeft": OptionScreen_moveCursorLeft__P4482,
    "moveCursorRight": OptionScreen_moveCursorRight__P4483,
    "moveCursorUp": OptionScreen_moveCursorUp__P4484,
    "refresh": OptionScreen_refresh__P4485,
    "select": OptionScreen_select__P4486,
    "setSelection": OptionScreen_setSelection__P4487,
    "buildSelectedOptions": OptionScreen_buildSelectedOptions__P7312,
    "createBase": OptionScreen_createBase__P7313,
    "createCursor": OptionScreen_createCursor__P7314,
    "drawSelection": OptionScreen_drawSelection__P7315,
    "moveOutOfFooter": OptionScreen_moveOutOfFooter__P7316,
    "moveToFooter": OptionScreen_moveToFooter__P7317,
    "refreshSelections": OptionScreen_refreshSelections__P7318,
    "updateCursor": OptionScreen_updateCursor__P7319,
    "backImage": RotatingScreens_backImage__P4430,
    "set/backImage": RotatingScreens_backImage__P4431,
    "footer": RotatingScreens_footer__P4434,
    "headlines": RotatingScreens_headlines__P4435,
    "nextTime": RotatingScreens_nextTime__P4441,
    "titles": RotatingScreens_titles__P4444,
    "destroySprites": RotatingScreens_destroySprites__P4452,
    "rebuild": RotatingScreens_rebuild__P4453,
    "release": RotatingScreens_release__P4455,
    "rotate": RotatingScreens_rotate__P4456,
    "showScrollingSprite": RotatingScreens_showScrollingSprite__P4458,
    "addAllMovingSprites": RotatingScreens_addAllMovingSprites__P7307,
    "addStaticSprites": RotatingScreens_addStaticSprites__P7308,
  },
});
const animation_SpriteAnimation__C3351_VT = mkVTable({
  name: "SpriteAnimation",
  numFields: 3,
  classNo: 56,
  lastSubtypeNo: 58,
  maxBgInstances: null,
  methods: {
    "update": animation_SpriteAnimation_update__P3354,
  },
  iface: {
    "elapsedTime": null,
    "set/elapsedTime": null,
    "sprite": null,
    "set/sprite": null,
    "loop": null,
    "set/loop": null,
    "init": animation_SpriteAnimation_init__P3353,
    "update": animation_SpriteAnimation_update__P3354,
  },
});
const animation_ImageAnimation__C3355_VT = mkVTable({
  name: "ImageAnimation",
  numFields: 6,
  classNo: 57,
  lastSubtypeNo: 57,
  maxBgInstances: null,
  methods: {
    "update": animation_ImageAnimation_update__P3357,
  },
  iface: {
    "elapsedTime": null,
    "set/elapsedTime": null,
    "sprite": null,
    "set/sprite": null,
    "loop": null,
    "set/loop": null,
    "lastFrame": null,
    "set/lastFrame": null,
    "frames": null,
    "set/frames": null,
    "frameInterval": null,
    "set/frameInterval": null,
    "update": animation_ImageAnimation_update__P3357,
    "init": animation_SpriteAnimation_init__P3353,
  },
});
const animation_MovementAnimation__C3358_VT = mkVTable({
  name: "MovementAnimation",
  numFields: 7,
  classNo: 58,
  lastSubtypeNo: 58,
  maxBgInstances: null,
  methods: {
    "update": animation_MovementAnimation_update__P3360,
  },
  iface: {
    "elapsedTime": null,
    "set/elapsedTime": null,
    "sprite": null,
    "set/sprite": null,
    "loop": null,
    "set/loop": null,
    "startX": null,
    "set/startX": null,
    "startY": null,
    "set/startY": null,
    "path": null,
    "set/path": null,
    "nodeInterval": null,
    "set/nodeInterval": null,
    "update": animation_MovementAnimation_update__P3360,
    "init": animation_SpriteAnimation_init__P3353,
  },
});
const StringTextSpriteFactory__C4405_VT = mkVTable({
  name: "StringTextSpriteFactory",
  numFields: 8,
  classNo: 51,
  lastSubtypeNo: 51,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "borderWidth": null,
    "set/borderWidth": null,
    "color": null,
    "set/color": null,
    "fontSize": null,
    "set/fontSize": null,
    "padding": null,
    "set/padding": null,
    "spacing": null,
    "set/spacing": null,
    "y": null,
    "set/y": null,
    "data": null,
    "set/data": null,
    "_sprite": null,
    "set/_sprite": null,
    "sprite": StringTextSpriteFactory_sprite__P4408,
    "DrawCenter": StringTextSpriteFactory_DrawCenter__P4409,
    "CreateSprite": StringTextSpriteFactory_CreateSprite__P7302,
  },
});
const OptionScreenCollection__C4488_VT = mkVTable({
  name: "OptionScreenCollection",
  numFields: 26,
  classNo: 23,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
    "build": OptionScreenCollection_build__P4496,
    "refresh": OptionScreen_refresh__P4485,
    "createBase": OptionScreenCollection_createBase__P7322,
    "select": OptionScreenCollection_select__P4499,
    "setSelection": OptionScreenCollection_setSelection__P4500,
  },
  iface: {
    "_backColor": null,
    "set/_backColor": null,
    "_backImage": null,
    "set/_backImage": null,
    "_currScreen": null,
    "set/_currScreen": null,
    "_currSprite": null,
    "set/_currSprite": null,
    "_footer": null,
    "set/_footer": null,
    "_headlines": null,
    "set/_headlines": null,
    "_midText": null,
    "set/_midText": null,
    "_titles": null,
    "set/_titles": null,
    "_movingSprites": null,
    "set/_movingSprites": null,
    "_movingSpritesSequential": null,
    "set/_movingSpritesSequential": null,
    "_interval": null,
    "set/_interval": null,
    "_next": null,
    "set/_next": null,
    "_staticSprites": null,
    "set/_staticSprites": null,
    "_cursor": null,
    "set/_cursor": null,
    "_hasHeaders": null,
    "set/_hasHeaders": null,
    "_isDone": null,
    "set/_isDone": null,
    "_nextSprite": null,
    "set/_nextSprite": null,
    "_prevSprite": null,
    "set/_prevSprite": null,
    "_selectedOptions": null,
    "set/_selectedOptions": null,
    "_showNext": null,
    "set/_showNext": null,
    "_showPrevious": null,
    "set/_showPrevious": null,
    "_currOptScreen": null,
    "set/_currOptScreen": null,
    "_optionSetHasHeaders": null,
    "set/_optionSetHasHeaders": null,
    "_optionSets": null,
    "set/_optionSets": null,
    "_selectedOptionsColl": null,
    "set/_selectedOptionsColl": null,
    "_tabs": null,
    "set/_tabs": null,
    "addScreen": OptionScreenCollection_addScreen__P4495,
    "build": OptionScreenCollection_build__P4496,
    "getSelectionForScreen": OptionScreenCollection_getSelectionForScreen__P4498,
    "select": OptionScreenCollection_select__P4499,
    "setSelection": OptionScreenCollection_setSelection__P4500,
    "setSelectionForScreen": OptionScreenCollection_setSelectionForScreen__P4501,
    "changeScreen": OptionScreenCollection_changeScreen__P7321,
    "createBase": OptionScreenCollection_createBase__P7322,
    "drawTabs": OptionScreenCollection_drawTabs__P7323,
    "saveSelections": OptionScreenCollection_saveSelections__P7324,
    "setBase": OptionScreenCollection_setBase__P7325,
    "done": OptionScreen_done__P4467,
    "set/done": OptionScreen_done__P4468,
    "doneText": OptionScreen_doneText__P4469,
    "set/doneText": OptionScreen_doneText__P4470,
    "options": OptionScreen_options__P4471,
    "set/options": OptionScreen_options__P4472,
    "moveCursorDown": OptionScreen_moveCursorDown__P4481,
    "moveCursorLeft": OptionScreen_moveCursorLeft__P4482,
    "moveCursorRight": OptionScreen_moveCursorRight__P4483,
    "moveCursorUp": OptionScreen_moveCursorUp__P4484,
    "refresh": OptionScreen_refresh__P4485,
    "buildSelectedOptions": OptionScreen_buildSelectedOptions__P7312,
    "createCursor": OptionScreen_createCursor__P7314,
    "drawSelection": OptionScreen_drawSelection__P7315,
    "moveOutOfFooter": OptionScreen_moveOutOfFooter__P7316,
    "moveToFooter": OptionScreen_moveToFooter__P7317,
    "refreshSelections": OptionScreen_refreshSelections__P7318,
    "updateCursor": OptionScreen_updateCursor__P7319,
    "backImage": RotatingScreens_backImage__P4430,
    "set/backImage": RotatingScreens_backImage__P4431,
    "footer": RotatingScreens_footer__P4434,
    "headlines": RotatingScreens_headlines__P4435,
    "nextTime": RotatingScreens_nextTime__P4441,
    "titles": RotatingScreens_titles__P4444,
    "destroySprites": RotatingScreens_destroySprites__P4452,
    "rebuild": RotatingScreens_rebuild__P4453,
    "release": RotatingScreens_release__P4455,
    "rotate": RotatingScreens_rotate__P4456,
    "showScrollingSprite": RotatingScreens_showScrollingSprite__P4458,
    "addAllMovingSprites": RotatingScreens_addAllMovingSprites__P7307,
    "addStaticSprites": RotatingScreens_addStaticSprites__P7308,
  },
});
const StringArrayTextSpriteFactory__C4412_VT = mkVTable({
  name: "StringArrayTextSpriteFactory",
  numFields: 8,
  classNo: 52,
  lastSubtypeNo: 52,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "borderWidth": null,
    "set/borderWidth": null,
    "color": null,
    "set/color": null,
    "fontSize": null,
    "set/fontSize": null,
    "padding": null,
    "set/padding": null,
    "spacing": null,
    "set/spacing": null,
    "y": null,
    "set/y": null,
    "data": null,
    "set/data": null,
    "_sprites": null,
    "set/_sprites": null,
    "DrawCenter": StringArrayTextSpriteFactory_DrawCenter__P4415,
    "DrawHorizontal": StringArrayTextSpriteFactory_DrawHorizontal__P4416,
    "Redraw": StringArrayTextSpriteFactory_Redraw__P4419,
    "CreateSprites": StringArrayTextSpriteFactory_CreateSprites__P7304,
  },
});
const game_Prompt__C3037_VT = mkVTable({
  name: "Prompt",
  numFields: 16,
  classNo: 59,
  lastSubtypeNo: 59,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "theme": null,
    "set/theme": null,
    "message": null,
    "set/message": null,
    "answerLength": null,
    "set/answerLength": null,
    "result": null,
    "set/result": null,
    "cursor": null,
    "set/cursor": null,
    "shiftButton": null,
    "set/shiftButton": null,
    "confirmButton": null,
    "set/confirmButton": null,
    "letters": null,
    "set/letters": null,
    "inputs": null,
    "set/inputs": null,
    "confirmPressed": null,
    "set/confirmPressed": null,
    "cursorRow": null,
    "set/cursorRow": null,
    "cursorColumn": null,
    "set/cursorColumn": null,
    "upper": null,
    "set/upper": null,
    "inputIndex": null,
    "set/inputIndex": null,
    "blink": null,
    "set/blink": null,
    "frameCount": null,
    "set/frameCount": null,
    "show": game_Prompt_show__P3043,
    "draw": game_Prompt_draw__P5354,
    "drawPromptText": game_Prompt_drawPromptText__P5355,
    "drawInputarea": game_Prompt_drawInputarea__P5356,
    "drawKeyboard": game_Prompt_drawKeyboard__P5357,
    "drawBottomBar": game_Prompt_drawBottomBar__P5358,
    "updateButtons": game_Prompt_updateButtons__P5359,
    "updateCursor": game_Prompt_updateCursor__P5360,
    "updateSelectedInput": game_Prompt_updateSelectedInput__P5361,
    "updateKeyboard": game_Prompt_updateKeyboard__P5362,
    "drawInput": game_Prompt_drawInput__P5363,
    "registerHandlers": game_Prompt_registerHandlers__P5364,
    "moveVertical": game_Prompt_moveVertical__P5365,
    "moveHorizontal": game_Prompt_moveHorizontal__P5366,
    "confirm": game_Prompt_confirm__P5367,
    "delete": game_Prompt_delete__P5368,
    "changeInputIndex": game_Prompt_changeInputIndex__P5369,
  },
});
const controller_ButtonHandler__C2183_VT = mkVTable({
  name: "ButtonHandler",
  numFields: 2,
  classNo: 60,
  lastSubtypeNo: 60,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "event": null,
    "set/event": null,
    "callback": null,
    "set/callback": null,
  },
});
const controller_ButtonEventHandlerState__C2185_VT = mkVTable({
  name: "ButtonEventHandlerState",
  numFields: 3,
  classNo: 61,
  lastSubtypeNo: 61,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "user": null,
    "set/user": null,
    "system": null,
    "set/system": null,
  },
});
const game_MultiplayerPrompt__C4506_VT = mkVTable({
  name: "MultiplayerPrompt",
  numFields: 17,
  classNo: 62,
  lastSubtypeNo: 62,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "theme": null,
    "set/theme": null,
    "message": null,
    "set/message": null,
    "answerLength": null,
    "set/answerLength": null,
    "result": null,
    "set/result": null,
    "player": null,
    "set/player": null,
    "cursor": null,
    "set/cursor": null,
    "shiftButton": null,
    "set/shiftButton": null,
    "confirmButton": null,
    "set/confirmButton": null,
    "letters": null,
    "set/letters": null,
    "inputs": null,
    "set/inputs": null,
    "confirmPressed": null,
    "set/confirmPressed": null,
    "cursorRow": null,
    "set/cursorRow": null,
    "cursorColumn": null,
    "set/cursorColumn": null,
    "upper": null,
    "set/upper": null,
    "inputIndex": null,
    "set/inputIndex": null,
    "blink": null,
    "set/blink": null,
    "frameCount": null,
    "set/frameCount": null,
    "show": game_MultiplayerPrompt_show__P4512,
    "draw": game_MultiplayerPrompt_draw__P7430,
    "drawPromptText": game_MultiplayerPrompt_drawPromptText__P7431,
    "drawInputarea": game_MultiplayerPrompt_drawInputarea__P7432,
    "drawKeyboard": game_MultiplayerPrompt_drawKeyboard__P7433,
    "drawBottomBar": game_MultiplayerPrompt_drawBottomBar__P7434,
    "updateButtons": game_MultiplayerPrompt_updateButtons__P7435,
    "updateCursor": game_MultiplayerPrompt_updateCursor__P7436,
    "updateSelectedInput": game_MultiplayerPrompt_updateSelectedInput__P7437,
    "updateKeyboard": game_MultiplayerPrompt_updateKeyboard__P7438,
    "drawInput": game_MultiplayerPrompt_drawInput__P7439,
    "registerHandlers": game_MultiplayerPrompt_registerHandlers__P7440,
    "moveVertical": game_MultiplayerPrompt_moveVertical__P7441,
    "moveHorizontal": game_MultiplayerPrompt_moveHorizontal__P7442,
    "confirm": game_MultiplayerPrompt_confirm__P7443,
    "delete": game_MultiplayerPrompt_delete__P7444,
    "changeInputIndex": game_MultiplayerPrompt_changeInputIndex__P7445,
  },
});
const game_Dialog__C2920_VT = mkVTable({
  name: "Dialog",
  numFields: 13,
  classNo: 39,
  lastSubtypeNo: 39,
  maxBgInstances: null,
  methods: {
    "update": game_BaseDialog_update__P2916,
    "setText": game_Dialog_setText__P2929,
    "drawTextCore": game_Dialog_drawTextCore__P2930,
  },
  iface: {
    "image": null,
    "set/image": null,
    "frame": null,
    "set/frame": null,
    "cursor": null,
    "set/cursor": null,
    "columns": null,
    "set/columns": null,
    "rows": null,
    "set/rows": null,
    "unit": null,
    "set/unit": null,
    "innerLeft": null,
    "set/innerLeft": null,
    "innerTop": null,
    "set/innerTop": null,
    "cursorCount": null,
    "set/cursorCount": null,
    "font": null,
    "set/font": null,
    "textColor": null,
    "set/textColor": null,
    "chunks": null,
    "set/chunks": null,
    "chunkIndex": null,
    "set/chunkIndex": null,
    "hasNext": game_Dialog_hasNext__P2924,
    "hasPrev": game_Dialog_hasPrev__P2925,
    "nextPage": game_Dialog_nextPage__P2926,
    "prevPage": game_Dialog_prevPage__P2927,
    "chunkText": game_Dialog_chunkText__P2928,
    "setText": game_Dialog_setText__P2929,
    "drawTextCore": game_Dialog_drawTextCore__P2930,
    "resize": game_BaseDialog_resize__P2915,
    "update": game_BaseDialog_update__P2916,
    "drawCursorRow": game_BaseDialog_drawCursorRow__P2919,
    "drawBorder": game_BaseDialog_drawBorder__P5199,
    "fastFill": game_BaseDialog_fastFill__P5200,
    "clearInterior": game_BaseDialog_clearInterior__P5201,
    "drawPartial": game_BaseDialog_drawPartial__P5202,
    "cursorRowHeight": game_BaseDialog_cursorRowHeight__P5203,
    "rowHeight": game_BaseDialog_rowHeight__P5204,
    "textAreaWidth": game_BaseDialog_textAreaWidth__P5205,
    "textAreaHeight": game_BaseDialog_textAreaHeight__P5206,
    "setFont": game_BaseDialog_setFont__P5207,
  },
});
const scene_systemMenu_PauseMenu__C3094_VT = mkVTable({
  name: "PauseMenu",
  numFields: 7,
  classNo: 63,
  lastSubtypeNo: 63,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "options": null,
    "set/options": null,
    "theme": null,
    "set/theme": null,
    "selection": null,
    "set/selection": null,
    "scrollRow": null,
    "set/scrollRow": null,
    "scrollTarget": null,
    "set/scrollTarget": null,
    "scrollOffset": null,
    "set/scrollOffset": null,
    "generator": null,
    "set/generator": null,
    "show": scene_systemMenu_PauseMenu_show__P3096,
    "onUpdate": scene_systemMenu_PauseMenu_onUpdate__P3097,
    "setSelection": scene_systemMenu_PauseMenu_setSelection__P3098,
    "drawText": scene_systemMenu_PauseMenu_drawText__P3099,
    "dispose": scene_systemMenu_PauseMenu_dispose__P3100,
    "updateScrollTarget": scene_systemMenu_PauseMenu_updateScrollTarget__P5493,
  },
});
const scene_systemMenu_MenuOption__C3086_VT = mkVTable({
  name: "MenuOption",
  numFields: 8,
  classNo: 64,
  lastSubtypeNo: 64,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "card": null,
    "set/card": null,
    "icon": null,
    "set/icon": null,
    "top": null,
    "set/top": null,
    "state": null,
    "set/state": null,
    "theme": null,
    "set/theme": null,
    "iconImage": null,
    "set/iconImage": null,
    "getText": null,
    "set/getText": null,
    "action": null,
    "set/action": null,
    "show": scene_systemMenu_MenuOption_show__P3088,
    "position": scene_systemMenu_MenuOption_position__P3089,
    "setOffset": scene_systemMenu_MenuOption_setOffset__P3090,
    "setTheme": scene_systemMenu_MenuOption_setTheme__P3091,
    "setState": scene_systemMenu_MenuOption_setState__P3092,
    "dispose": scene_systemMenu_MenuOption_dispose__P3093,
    "updateCard": scene_systemMenu_MenuOption_updateCard__P5492,
  },
});
const scene_Renderable__C2799_VT = mkVTable({
  name: "Renderable",
  numFields: 4,
  classNo: 30,
  lastSubtypeNo: 30,
  maxBgInstances: null,
  methods: {
    "__visible": scene_Renderable___visible__P2801,
    "__draw": sprites_BaseSprite___draw__P2100,
    "__drawCore": scene_Renderable___drawCore__P2802,
    "__update": sprites_BaseSprite___update__P2102,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "handler": null,
    "set/handler": null,
    "shouldBeVisible": null,
    "set/shouldBeVisible": null,
    "__visible": scene_Renderable___visible__P2801,
    "__drawCore": scene_Renderable___drawCore__P2802,
    "z": sprites_BaseSprite_z__P2098,
    "set/z": sprites_BaseSprite_z__P2099,
    "__draw": sprites_BaseSprite___draw__P2100,
    "__update": sprites_BaseSprite___update__P2102,
  },
});
const effects_ScreenEffect__C3265_VT = mkVTable({
  name: "ScreenEffect",
  numFields: 5,
  classNo: 54,
  lastSubtypeNo: 54,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "source": null,
    "set/source": null,
    "sceneDefaultRate": null,
    "set/sceneDefaultRate": null,
    "start": effects_ParticleEffect_start__P3263,
    "destroy": effects_ParticleEffect_destroy__P3264,
  },
});
const particles_ParticleFactory__C3186_VT = mkVTable({
  name: "ParticleFactory",
  numFields: 0,
  classNo: 65,
  lastSubtypeNo: 69,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ParticleFactory_createParticle__P3188,
    "drawParticle": particles_ParticleFactory_drawParticle__P3189,
  },
  iface: {
    "createParticle": particles_ParticleFactory_createParticle__P3188,
    "drawParticle": particles_ParticleFactory_drawParticle__P3189,
  },
});
const particles_SprayFactory__C3190_VT = mkVTable({
  name: "SprayFactory",
  numFields: 3,
  classNo: 66,
  lastSubtypeNo: 69,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_SprayFactory_createParticle__P3192,
    "drawParticle": particles_SprayFactory_drawParticle__P3193,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "createParticle": particles_SprayFactory_createParticle__P3192,
    "drawParticle": particles_SprayFactory_drawParticle__P3193,
    "setSpeed": particles_SprayFactory_setSpeed__P3194,
    "setDirection": particles_SprayFactory_setDirection__P3195,
  },
});
const particles_AreaFactory__C3196_VT = mkVTable({
  name: "AreaFactory",
  numFields: 8,
  classNo: 67,
  lastSubtypeNo: 69,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_AreaFactory_createParticle__P3202,
    "drawParticle": particles_AreaFactory_drawParticle__P3203,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "createParticle": particles_AreaFactory_createParticle__P3202,
    "drawParticle": particles_AreaFactory_drawParticle__P3203,
    "setSpeed": particles_SprayFactory_setSpeed__P3194,
    "setDirection": particles_SprayFactory_setDirection__P3195,
  },
});
const particles_ShapeFactory__C3212_VT = mkVTable({
  name: "ShapeFactory",
  numFields: 11,
  classNo: 68,
  lastSubtypeNo: 69,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P3216,
    "drawParticle": particles_ShapeFactory_drawParticle__P3215,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P3214,
    "drawParticle": particles_ShapeFactory_drawParticle__P3215,
    "createParticle": particles_ShapeFactory_createParticle__P3216,
    "setSpeed": particles_SprayFactory_setSpeed__P3194,
    "setDirection": particles_SprayFactory_setDirection__P3195,
  },
});
const particles_ConfettiFactory__C3217_VT = mkVTable({
  name: "ConfettiFactory",
  numFields: 11,
  classNo: 69,
  lastSubtypeNo: 69,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P3216,
    "drawParticle": particles_ShapeFactory_drawParticle__P3215,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P3214,
    "drawParticle": particles_ShapeFactory_drawParticle__P3215,
    "createParticle": particles_ShapeFactory_createParticle__P3216,
    "setSpeed": particles_SprayFactory_setSpeed__P3194,
    "setDirection": particles_SprayFactory_setDirection__P3195,
  },
});
const particles_Particle__C3131_VT = mkVTable({
  name: "Particle",
  numFields: 8,
  classNo: 70,
  lastSubtypeNo: 70,
  maxBgInstances: 200,
  methods: {
  },
  iface: {
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "vx": null,
    "set/vx": null,
    "vy": null,
    "set/vy": null,
    "lifespan": null,
    "set/lifespan": null,
    "next": null,
    "set/next": null,
    "data": null,
    "set/data": null,
    "color": null,
    "set/color": null,
  },
});
const music_Playable__C1911_VT = mkVTable({
  name: "Playable",
  numFields: 1,
  classNo: 71,
  lastSubtypeNo: 72,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "stopped": null,
    "set/stopped": null,
  },
});
const music_MelodyPlayable__C1916_VT = mkVTable({
  name: "MelodyPlayable",
  numFields: 2,
  classNo: 72,
  lastSubtypeNo: 72,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "stopped": null,
    "set/stopped": null,
    "melody": null,
    "set/melody": null,
  },
});
const music_Melody__C1626_VT = mkVTable({
  name: "Melody",
  numFields: 2,
  classNo: 73,
  lastSubtypeNo: 73,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_text": null,
    "set/_text": null,
    "_player": null,
    "set/_player": null,
    "toString": music_Melody_toString__P1635,
  },
  toStringMethod: music_Melody_toString__P1635,
});
const animation_Path__C3346_VT = mkVTable({
  name: "Path",
  numFields: 12,
  classNo: 74,
  lastSubtypeNo: 74,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "length": null,
    "set/length": null,
    "args": null,
    "set/args": null,
    "currentCommand": null,
    "set/currentCommand": null,
    "lastControlX": null,
    "set/lastControlX": null,
    "lastControlY": null,
    "set/lastControlY": null,
    "startX": null,
    "set/startX": null,
    "startY": null,
    "set/startY": null,
    "lastX": null,
    "set/lastX": null,
    "lastY": null,
    "set/lastY": null,
    "strIndex": null,
    "set/strIndex": null,
    "commandIndex": null,
    "set/commandIndex": null,
    "path": null,
    "set/path": null,
    "readNextCommand": animation_Path_readNextCommand__P5659,
    "reset": animation_Path_reset__P3349,
    "readNextToken": animation_Path_readNextToken__P5660,
    "commandToArgCount": animation_Path_commandToArgCount__P5661,
    "run": animation_Path_run__P3350,
    "runCurrentCommand": animation_Path_runCurrentCommand__P5662,
    "ensureControlPoint": animation_Path_ensureControlPoint__P5663,
  },
});
const MovingSprite__C2524_VT = mkVTable({
  name: "MovingSprite",
  numFields: 7,
  classNo: 75,
  lastSubtypeNo: 75,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sprite": null,
    "set/sprite": null,
    "cachedVx": null,
    "set/cachedVx": null,
    "cachedVy": null,
    "set/cachedVy": null,
    "dx": null,
    "set/dx": null,
    "dy": null,
    "set/dy": null,
    "xStep": null,
    "set/xStep": null,
    "yStep": null,
    "set/yStep": null,
  },
});
const tiles_Location__C2692_VT = mkVTable({
  name: "Location",
  numFields: 2,
  classNo: 76,
  lastSubtypeNo: 76,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_row": null,
    "set/_row": null,
    "_col": null,
    "set/_col": null,
    "tileMap": tiles_Location_tileMap__P2694,
    "column": tiles_Location_column__P2695,
    "row": tiles_Location_row__P2696,
    "x": tiles_Location_x__P2697,
    "y": tiles_Location_y__P2698,
    "left": tiles_Location_left__P2699,
    "top": tiles_Location_top__P2700,
    "right": tiles_Location_right__P2701,
    "tileSet": tiles_Location_tileSet__P2703,
  },
});
const sprites_StaticObstacle__C2497_VT = mkVTable({
  name: "StaticObstacle",
  numFields: 5,
  classNo: 77,
  lastSubtypeNo: 77,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "layer": null,
    "set/layer": null,
    "image": null,
    "set/image": null,
    "tileIndex": null,
    "set/tileIndex": null,
    "top": null,
    "set/top": null,
    "left": null,
    "set/left": null,
    "x": sprites_StaticObstacle_x__P2504,
    "y": sprites_StaticObstacle_y__P2505,
    "height": sprites_StaticObstacle_height__P2506,
    "width": sprites_StaticObstacle_width__P2507,
    "right": sprites_StaticObstacle_right__P2509,
  },
});
const sprites_BaseSpriteSayRenderer__C2259_VT = mkVTable({
  name: "BaseSpriteSayRenderer",
  numFields: 3,
  classNo: 78,
  lastSubtypeNo: 78,
  maxBgInstances: null,
  methods: {
    "draw": sprites_BaseSpriteSayRenderer_draw__P2261,
    "update": sprites_BaseSpriteSayRenderer_update__P2262,
    "destroy": sprites_BaseSpriteSayRenderer_destroy__P2263,
  },
  iface: {
    "text": null,
    "set/text": null,
    "fgColor": null,
    "set/fgColor": null,
    "bgColor": null,
    "set/bgColor": null,
    "draw": sprites_BaseSpriteSayRenderer_draw__P2261,
    "update": sprites_BaseSpriteSayRenderer_update__P2262,
    "destroy": sprites_BaseSpriteSayRenderer_destroy__P2263,
  },
});

const breakpoints = setupDebugger(1, ["Avatar___149752","AVATARS___149757","selection___149739","Dice___32647","D6_IMAGES___32650","HARDWARE___175561","gameMode___158120","splashScreen___4565","settingsScreens___158123","players___158156","firstPlayer___173401","diceTest___32587","numPlayers___158155","PLAYER_NAMES___173599","PLAYER_AVATARS___173605","firstRollStarted___173398","test___150167","animate___150171","index___150169","TEXT_SETTINGS_HEADLINES___158134","TEXT_HEADLINES___4563","TEXT_TITLES___4564","TEXT_DONE___158128","TEXT_SETTINGS_PLAYERS_TAB___158136","TEXT_SETTINGS_PLAYERS___158138","TEXT_SETTINGS_MULTIPLAYER_TAB___158141","TEXT_SETTINGS_MULTIPLAYER___158143","controllers___158150","TEXT_HARDWARE_CONTROLLER___158130","TEXT_ONE_PLAYER___158132"])

return _main___P176059
})
